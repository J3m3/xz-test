	.text
	.file	"lz_encoder_mf.c"
	.file	0 "/home/yjs/workspace/xz-test/src" "liblzma/lz/lz_encoder_mf.c" md5 0x5d460b327ab3f2eae21e0870eafddd6d
	.file	1 "liblzma/api/lzma" "base.h" md5 0x81a3070447cc5b61b56cfbed076853db
	.file	2 "/usr/include/x86_64-linux-gnu/bits" "types.h" md5 0xd108b5f93a74c50510d7d9bc0ab36df9
	.file	3 "/usr/include/x86_64-linux-gnu/bits" "stdint-uintn.h" md5 0x2bf2ae53c58c01b1a1b9383b5195125c
	.globl	lzma_mf_find                    # -- Begin function lzma_mf_find
	.p2align	4, 0x90
	.type	lzma_mf_find,@function
lzma_mf_find:                           # @lzma_mf_find
.Lfunc_begin0:
	.loc	0 23 0                          # liblzma/lz/lz_encoder_mf.c:23:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: lzma_mf_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_find:count_ptr <- $rsi
	#DEBUG_VALUE: lzma_mf_find:matches <- $rdx
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdx, %r15
	movq	%rsi, %r14
	movq	%rdi, %rbx
.Ltmp0:
	.loc	0 27 25 prologue_end            # liblzma/lz/lz_encoder_mf.c:27:25
	movq	%rdx, %rsi
.Ltmp1:
	#DEBUG_VALUE: lzma_mf_find:count_ptr <- $r14
	callq	*48(%rdi)
.Ltmp2:
	#DEBUG_VALUE: lzma_mf_find:matches <- $r15
	#DEBUG_VALUE: lzma_mf_find:mf <- $rbx
	#DEBUG_VALUE: lzma_mf_find:count <- $eax
	#DEBUG_VALUE: lzma_mf_find:len_best <- 0
	.loc	0 33 12                         # liblzma/lz/lz_encoder_mf.c:33:12
	testl	%eax, %eax
.Ltmp3:
	.loc	0 33 6 is_stmt 0                # liblzma/lz/lz_encoder_mf.c:33:6
	je	.LBB0_1
.Ltmp4:
# %bb.2:                                # %if.then
	#DEBUG_VALUE: lzma_mf_find:mf <- $rbx
	#DEBUG_VALUE: lzma_mf_find:count_ptr <- $r14
	#DEBUG_VALUE: lzma_mf_find:matches <- $r15
	#DEBUG_VALUE: lzma_mf_find:count <- $eax
	#DEBUG_VALUE: lzma_mf_find:len_best <- 0
	.loc	0 47 28 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:47:28
	movl	%eax, %edi
	decl	%edi
	.loc	0 47 33 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:47:33
	movl	(%r15,%rdi,8), %ecx
.Ltmp5:
	#DEBUG_VALUE: lzma_mf_find:len_best <- $ecx
	.loc	0 51 16 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:51:16
	cmpl	96(%rbx), %ecx
.Ltmp6:
	.loc	0 51 7 is_stmt 0                # liblzma/lz/lz_encoder_mf.c:51:7
	jne	.LBB0_8
.Ltmp7:
# %bb.3:                                # %if.then2
	#DEBUG_VALUE: lzma_mf_find:mf <- $rbx
	#DEBUG_VALUE: lzma_mf_find:count_ptr <- $r14
	#DEBUG_VALUE: lzma_mf_find:matches <- $r15
	#DEBUG_VALUE: lzma_mf_find:count <- $eax
	#DEBUG_VALUE: lzma_mf_find:len_best <- $ecx
	.loc	0 56 21 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:56:21
	movl	24(%rbx), %edx
	movl	36(%rbx), %esi
	.loc	0 56 34 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:56:34
	subl	%edx, %esi
	incl	%esi
.Ltmp8:
	#DEBUG_VALUE: limit <- $esi
	.loc	0 57 20 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:57:20
	movl	100(%rbx), %r8d
.Ltmp9:
	.loc	0 57 8 is_stmt 0                # liblzma/lz/lz_encoder_mf.c:57:8
	cmpl	%r8d, %esi
	cmovael	%r8d, %esi
.Ltmp10:
	#DEBUG_VALUE: limit <- $esi
	#DEBUG_VALUE: mf_ptr:mf <- undef
	#DEBUG_VALUE: p1 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef, undef
	#DEBUG_VALUE: p2 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 3, DW_OP_plus, DW_OP_constu 1, DW_OP_minus, DW_OP_LLVM_arg 1, DW_OP_LLVM_arg 2, DW_OP_minus, DW_OP_plus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef, undef, undef, undef
	#DEBUG_VALUE: lzma_mf_find:len_best <- $ecx
	.loc	0 68 20 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:68:20
	cmpl	%esi, %ecx
	.loc	0 69 6                          # liblzma/lz/lz_encoder_mf.c:69:6
	jae	.LBB0_8
.Ltmp11:
# %bb.4:                                # %land.rhs.preheader
	#DEBUG_VALUE: lzma_mf_find:mf <- $rbx
	#DEBUG_VALUE: lzma_mf_find:count_ptr <- $r14
	#DEBUG_VALUE: lzma_mf_find:matches <- $r15
	#DEBUG_VALUE: lzma_mf_find:count <- $eax
	#DEBUG_VALUE: lzma_mf_find:len_best <- $ecx
	#DEBUG_VALUE: limit <- $esi
	.loc	0 0 6 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:6
	movl	4(%r15,%rdi,8), %r8d
	movq	$-2, %rdi
	.loc	0 68 4 is_stmt 1                # liblzma/lz/lz_encoder_mf.c:68:4
	subq	%r8, %rdi
	addq	%rcx, %rdx
	addq	(%rbx), %rdx
.Ltmp12:
	.p2align	4, 0x90
.LBB0_5:                                # %land.rhs
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: lzma_mf_find:mf <- $rbx
	#DEBUG_VALUE: lzma_mf_find:count_ptr <- $r14
	#DEBUG_VALUE: lzma_mf_find:matches <- $r15
	#DEBUG_VALUE: lzma_mf_find:count <- $eax
	#DEBUG_VALUE: limit <- $esi
	#DEBUG_VALUE: lzma_mf_find:len_best <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_minus, DW_OP_LLVM_arg 1, DW_OP_LLVM_convert 64 7, DW_OP_plus, DW_OP_stack_value] undef, undef
	.loc	0 69 9                          # liblzma/lz/lz_encoder_mf.c:69:9
	movzbl	-1(%rdx), %r8d
	.loc	0 69 22 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:69:22
	cmpb	(%rdx,%rdi), %r8b
	.loc	0 68 4 is_stmt 1                # liblzma/lz/lz_encoder_mf.c:68:4
	jne	.LBB0_8
.Ltmp13:
# %bb.6:                                # %while.body
                                        #   in Loop: Header=BB0_5 Depth=1
	#DEBUG_VALUE: lzma_mf_find:mf <- $rbx
	#DEBUG_VALUE: lzma_mf_find:count_ptr <- $r14
	#DEBUG_VALUE: lzma_mf_find:matches <- $r15
	#DEBUG_VALUE: lzma_mf_find:count <- $eax
	#DEBUG_VALUE: limit <- $esi
	#DEBUG_VALUE: lzma_mf_find:len_best <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_minus, DW_OP_consts 1, DW_OP_LLVM_arg 1, DW_OP_LLVM_convert 64 7, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef, undef
	.loc	0 68 20 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:68:20
	incl	%ecx
	incq	%rdx
	cmpl	%ecx, %esi
	.loc	0 69 6 is_stmt 1                # liblzma/lz/lz_encoder_mf.c:69:6
	jne	.LBB0_5
.Ltmp14:
# %bb.7:
	#DEBUG_VALUE: lzma_mf_find:mf <- $rbx
	#DEBUG_VALUE: lzma_mf_find:count_ptr <- $r14
	#DEBUG_VALUE: lzma_mf_find:matches <- $r15
	#DEBUG_VALUE: lzma_mf_find:count <- $eax
	#DEBUG_VALUE: limit <- $esi
	.loc	0 0 6 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:6
	movl	%esi, %ecx
	jmp	.LBB0_8
.Ltmp15:
.LBB0_1:
	#DEBUG_VALUE: lzma_mf_find:mf <- $rbx
	#DEBUG_VALUE: lzma_mf_find:count_ptr <- $r14
	#DEBUG_VALUE: lzma_mf_find:matches <- $r15
	#DEBUG_VALUE: lzma_mf_find:count <- $eax
	#DEBUG_VALUE: lzma_mf_find:len_best <- 0
	xorl	%ecx, %ecx
.Ltmp16:
.LBB0_8:                                # %if.end22
	#DEBUG_VALUE: lzma_mf_find:mf <- $rbx
	#DEBUG_VALUE: lzma_mf_find:count_ptr <- $r14
	#DEBUG_VALUE: lzma_mf_find:matches <- $r15
	#DEBUG_VALUE: lzma_mf_find:count <- $eax
	#DEBUG_VALUE: lzma_mf_find:len_best <- $ecx
	.loc	0 74 13 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:74:13
	movl	%eax, (%r14)
	.loc	0 78 2                          # liblzma/lz/lz_encoder_mf.c:78:2
	incl	28(%rbx)
	.loc	0 80 2                          # liblzma/lz/lz_encoder_mf.c:80:2
	movl	%ecx, %eax
.Ltmp17:
	.loc	0 80 2 epilogue_begin is_stmt 0 # liblzma/lz/lz_encoder_mf.c:80:2
	popq	%rbx
.Ltmp18:
	#DEBUG_VALUE: lzma_mf_find:mf <- [DW_OP_LLVM_entry_value 1] $rdi
	.cfi_def_cfa_offset 24
	popq	%r14
.Ltmp19:
	#DEBUG_VALUE: lzma_mf_find:count_ptr <- [DW_OP_LLVM_entry_value 1] $rsi
	.cfi_def_cfa_offset 16
	popq	%r15
.Ltmp20:
	#DEBUG_VALUE: lzma_mf_find:matches <- [DW_OP_LLVM_entry_value 1] $rdx
	.cfi_def_cfa_offset 8
	retq
.Ltmp21:
.Lfunc_end0:
	.size	lzma_mf_find, .Lfunc_end0-lzma_mf_find
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4, 0x0                          # -- Begin function lzma_mf_hc3_find
.LCPI1_0:
	.long	2147483648                      # 0x80000000
	.long	2147483648                      # 0x80000000
	.long	2147483648                      # 0x80000000
	.long	2147483648                      # 0x80000000
	.text
	.globl	lzma_mf_hc3_find
	.p2align	4, 0x90
	.type	lzma_mf_hc3_find,@function
lzma_mf_hc3_find:                       # @lzma_mf_hc3_find
.Lfunc_begin1:
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: lzma_mf_hc3_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc3_find:matches <- $rsi
	.loc	0 308 2 prologue_end is_stmt 1  # liblzma/lz/lz_encoder_mf.c:308:2
	movl	24(%rdi), %eax
	movl	36(%rdi), %ecx
.Ltmp22:
	.file	4 "liblzma/lz" "lz_encoder.h" md5 0x780f78e6e21a3ca52f57df68bfdc6f53
	.loc	4 232 23                        # liblzma/lz/lz_encoder.h:232:23
	subl	%eax, %ecx
.Ltmp23:
	#DEBUG_VALUE: lzma_mf_hc3_find:len_limit <- $ecx
	.loc	0 308 2                         # liblzma/lz/lz_encoder_mf.c:308:2
	movl	96(%rdi), %r8d
	cmpl	%ecx, %r8d
.Ltmp24:
	.loc	0 308 2 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:308:2
	jbe	.LBB1_3
.Ltmp25:
# %bb.1:                                # %if.else
	#DEBUG_VALUE: lzma_mf_hc3_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc3_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_hc3_find:len_limit <- $ecx
	.loc	0 0 2                           # liblzma/lz/lz_encoder_mf.c:0:2
	movl	%ecx, %r8d
.Ltmp26:
	.loc	0 308 2                         # liblzma/lz/lz_encoder_mf.c:308:2
	cmpl	$2, %ecx
.Ltmp27:
	.loc	0 308 2                         # liblzma/lz/lz_encoder_mf.c:308:2
	ja	.LBB1_3
.Ltmp28:
# %bb.2:                                # %if.then3
	#DEBUG_VALUE: lzma_mf_hc3_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc3_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_hc3_find:len_limit <- $ecx
	#DEBUG_VALUE: move_pending:mf <- $rdi
	.loc	0 178 2 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:178:2
	incl	%eax
	movl	%eax, 24(%rdi)
	.loc	0 180 2                         # liblzma/lz/lz_encoder_mf.c:180:2
	incl	40(%rdi)
	xorl	%eax, %eax
.Ltmp29:
                                        # kill: def $eax killed $eax killed $rax
	.loc	0 336 1                         # liblzma/lz/lz_encoder_mf.c:336:1
	retq
.Ltmp30:
.LBB1_3:                                # %if.end4
	#DEBUG_VALUE: lzma_mf_hc3_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc3_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_hc3_find:len_limit <- $ecx
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
.Ltmp31:
	#DEBUG_VALUE: lzma_mf_hc3_find:len_limit <- $r8d
	.loc	0 308 2                         # liblzma/lz/lz_encoder_mf.c:308:2
	movq	(%rdi), %rdx
	.loc	0 312 36                        # liblzma/lz/lz_encoder_mf.c:312:36
	movq	64(%rdi), %r9
.Ltmp32:
	#DEBUG_VALUE: mf_ptr:mf <- undef
	.loc	4 224 20                        # liblzma/lz/lz_encoder.h:224:20
	leaq	(%rdx,%rax), %rcx
.Ltmp33:
	#DEBUG_VALUE: lzma_mf_hc3_find:cur <- $rcx
	.loc	4 0 20 is_stmt 0                # liblzma/lz/lz_encoder.h:0:20
	movl	20(%rdi), %r14d
.Ltmp34:
	.loc	0 308 2 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:308:2
	addl	%eax, %r14d
.Ltmp35:
	#DEBUG_VALUE: lzma_mf_hc3_find:pos <- undef
	#DEBUG_VALUE: lzma_mf_hc3_find:matches_count <- 0
	.loc	0 310 2                         # liblzma/lz/lz_encoder_mf.c:310:2
	movzbl	(%rdx,%rax), %r10d
	movq	lzma_crc32_table@GOTPCREL(%rip), %r11
	movzbl	1(%rdx,%rax), %ebx
	xorl	(%r11,%r10,4), %ebx
	movzbl	2(%rdx,%rax), %edx
	shll	$8, %edx
	xorl	%ebx, %edx
.Ltmp36:
	#DEBUG_VALUE: lzma_mf_hc3_find:temp <- $ebx
	#DEBUG_VALUE: lzma_mf_hc3_find:hash_2_value <- undef
	andl	88(%rdi), %edx
.Ltmp37:
	#DEBUG_VALUE: lzma_mf_hc3_find:hash_value <- $edx
	andl	$1023, %ebx                     # imm = 0x3FF
.Ltmp38:
	#DEBUG_VALUE: lzma_mf_hc3_find:hash_2_value <- $ebx
	.loc	0 312 30                        # liblzma/lz/lz_encoder_mf.c:312:30
	movl	%r14d, %eax
	subl	(%r9,%rbx,4), %eax
.Ltmp39:
	#DEBUG_VALUE: lzma_mf_hc3_find:delta2 <- $eax
	.loc	0 313 54                        # liblzma/lz/lz_encoder_mf.c:313:54
	addl	$1024, %edx                     # imm = 0x400
.Ltmp40:
	.loc	0 313 29 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:313:29
	movl	(%r9,%rdx,4), %ebp
.Ltmp41:
	#DEBUG_VALUE: lzma_mf_hc3_find:cur_match <- $ebp
	.loc	0 315 25 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:315:25
	movl	%r14d, (%r9,%rbx,4)
	.loc	0 316 6                         # liblzma/lz/lz_encoder_mf.c:316:6
	movq	64(%rdi), %r9
	movl	%r14d, -20(%rsp)                # 4-byte Spill
	.loc	0 316 41 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:316:41
	movl	%r14d, (%r9,%rdx,4)
.Ltmp42:
	#DEBUG_VALUE: lzma_mf_hc3_find:len_best <- 2
	.loc	0 320 19 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:320:19
	movl	84(%rdi), %r9d
	movl	$2, %r10d
	.loc	0 320 13 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:320:13
	cmpl	%r9d, %eax
	.loc	0 320 31                        # liblzma/lz/lz_encoder_mf.c:320:31
	jae	.LBB1_14
.Ltmp43:
# %bb.4:                                # %land.lhs.true
	#DEBUG_VALUE: lzma_mf_hc3_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc3_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_hc3_find:len_limit <- $r8d
	#DEBUG_VALUE: lzma_mf_hc3_find:cur <- $rcx
	#DEBUG_VALUE: lzma_mf_hc3_find:matches_count <- 0
	#DEBUG_VALUE: lzma_mf_hc3_find:hash_2_value <- $ebx
	#DEBUG_VALUE: lzma_mf_hc3_find:delta2 <- $eax
	#DEBUG_VALUE: lzma_mf_hc3_find:cur_match <- $ebp
	#DEBUG_VALUE: lzma_mf_hc3_find:len_best <- 2
	.loc	0 320 40                        # liblzma/lz/lz_encoder_mf.c:320:40
	movl	%eax, %edx
	movq	%rcx, %r11
	subq	%rdx, %r11
	.loc	0 320 34                        # liblzma/lz/lz_encoder_mf.c:320:34
	movzbl	(%r11), %r11d
	.loc	0 320 50                        # liblzma/lz/lz_encoder_mf.c:320:50
	cmpb	(%rcx), %r11b
.Ltmp44:
	.loc	0 320 6                         # liblzma/lz/lz_encoder_mf.c:320:6
	jne	.LBB1_14
.Ltmp45:
# %bb.5:                                # %for.cond.preheader
	#DEBUG_VALUE: lzma_mf_hc3_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc3_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_hc3_find:len_limit <- $r8d
	#DEBUG_VALUE: lzma_mf_hc3_find:cur <- $rcx
	#DEBUG_VALUE: lzma_mf_hc3_find:matches_count <- 0
	#DEBUG_VALUE: lzma_mf_hc3_find:hash_2_value <- $ebx
	#DEBUG_VALUE: lzma_mf_hc3_find:delta2 <- $eax
	#DEBUG_VALUE: lzma_mf_hc3_find:cur_match <- $ebp
	#DEBUG_VALUE: lzma_mf_hc3_find:len_best <- 2
	#DEBUG_VALUE: lzma_mf_hc3_find:len_best <- 2
	.loc	0 321 20 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:321:20
	cmpl	$2, %r8d
.Ltmp46:
	.loc	0 321 3 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:321:3
	je	.LBB1_9
.Ltmp47:
# %bb.6:                                # %for.body.preheader
	#DEBUG_VALUE: lzma_mf_hc3_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc3_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_hc3_find:len_limit <- $r8d
	#DEBUG_VALUE: lzma_mf_hc3_find:cur <- $rcx
	#DEBUG_VALUE: lzma_mf_hc3_find:matches_count <- 0
	#DEBUG_VALUE: lzma_mf_hc3_find:hash_2_value <- $ebx
	#DEBUG_VALUE: lzma_mf_hc3_find:delta2 <- $eax
	#DEBUG_VALUE: lzma_mf_hc3_find:cur_match <- $ebp
	#DEBUG_VALUE: lzma_mf_hc3_find:len_best <- 2
	.loc	0 0 3                           # liblzma/lz/lz_encoder_mf.c:0:3
	negq	%rdx
.Ltmp48:
	.p2align	4, 0x90
.LBB1_7:                                # %for.body
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: lzma_mf_hc3_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc3_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_hc3_find:len_limit <- $r8d
	#DEBUG_VALUE: lzma_mf_hc3_find:cur <- $rcx
	#DEBUG_VALUE: lzma_mf_hc3_find:matches_count <- 0
	#DEBUG_VALUE: lzma_mf_hc3_find:hash_2_value <- $ebx
	#DEBUG_VALUE: lzma_mf_hc3_find:delta2 <- $eax
	#DEBUG_VALUE: lzma_mf_hc3_find:cur_match <- $ebp
	#DEBUG_VALUE: lzma_mf_hc3_find:len_best <- $r10d
	.loc	0 322 14 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:322:14
	movl	%r10d, %r9d
	leaq	(%rcx,%r9), %r11
	.loc	0 322 8 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:322:8
	movzbl	(%rdx,%r11), %r11d
	.loc	0 322 35                        # liblzma/lz/lz_encoder_mf.c:322:35
	cmpb	(%rcx,%r9), %r11b
.Ltmp49:
	.loc	0 322 8                         # liblzma/lz/lz_encoder_mf.c:322:8
	jne	.LBB1_15
.Ltmp50:
# %bb.8:                                # %for.inc
                                        #   in Loop: Header=BB1_7 Depth=1
	#DEBUG_VALUE: lzma_mf_hc3_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc3_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_hc3_find:len_limit <- $r8d
	#DEBUG_VALUE: lzma_mf_hc3_find:cur <- $rcx
	#DEBUG_VALUE: lzma_mf_hc3_find:matches_count <- 0
	#DEBUG_VALUE: lzma_mf_hc3_find:hash_2_value <- $ebx
	#DEBUG_VALUE: lzma_mf_hc3_find:delta2 <- $eax
	#DEBUG_VALUE: lzma_mf_hc3_find:cur_match <- $ebp
	#DEBUG_VALUE: lzma_mf_hc3_find:len_best <- $r9d
	.loc	0 321 34 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:321:34
	incl	%r10d
.Ltmp51:
	#DEBUG_VALUE: lzma_mf_hc3_find:len_best <- $r10d
	.loc	0 321 20 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:321:20
	cmpl	%r10d, %r8d
.Ltmp52:
	.loc	0 321 3                         # liblzma/lz/lz_encoder_mf.c:321:3
	jne	.LBB1_7
.Ltmp53:
.LBB1_9:                                # %do.body
	#DEBUG_VALUE: lzma_mf_hc3_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc3_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_hc3_find:len_limit <- $r8d
	#DEBUG_VALUE: lzma_mf_hc3_find:cur <- $rcx
	#DEBUG_VALUE: lzma_mf_hc3_find:matches_count <- 0
	#DEBUG_VALUE: lzma_mf_hc3_find:hash_2_value <- $ebx
	#DEBUG_VALUE: lzma_mf_hc3_find:delta2 <- $eax
	#DEBUG_VALUE: lzma_mf_hc3_find:cur_match <- $ebp
	.loc	0 325 18 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:325:18
	movl	%r8d, (%rsi)
	.loc	0 326 28                        # liblzma/lz/lz_encoder_mf.c:326:28
	decl	%eax
.Ltmp54:
	.loc	0 326 19 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:326:19
	movl	%eax, 4(%rsi)
.Ltmp55:
	#DEBUG_VALUE: lzma_mf_hc3_find:matches_count <- 1
	.loc	0 330 4 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:330:4
	movq	72(%rdi), %rax
	movl	80(%rdi), %ecx
.Ltmp56:
	movl	%ebp, (%rax,%rcx,4)
.Ltmp57:
	#DEBUG_VALUE: move_pos:mf <- $rdi
	.loc	0 150 6                         # liblzma/lz/lz_encoder_mf.c:150:6
	movl	80(%rdi), %eax
	incl	%eax
	.loc	0 150 30 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:150:30
	movl	84(%rdi), %ecx
	xorl	%edx, %edx
	.loc	0 150 23                        # liblzma/lz/lz_encoder_mf.c:150:23
	cmpl	%ecx, %eax
.Ltmp58:
	.loc	0 150 6                         # liblzma/lz/lz_encoder_mf.c:150:6
	cmovnel	%eax, %edx
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movl	%edx, 80(%rdi)
.Ltmp59:
	.loc	0 156 6 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:156:6
	movl	20(%rdi), %edx
.Ltmp60:
	.loc	0 153 2                         # liblzma/lz/lz_encoder_mf.c:153:2
	movl	24(%rdi), %eax
	leal	1(%rax), %esi
.Ltmp61:
	#DEBUG_VALUE: lzma_mf_hc3_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	movl	%esi, 24(%rdi)
.Ltmp62:
	.loc	0 156 6                         # liblzma/lz/lz_encoder_mf.c:156:6
	leal	(%rdx,%rax), %esi
	incl	%esi
	movl	$1, %eax
	cmpl	$-1, %esi
.Ltmp63:
	.loc	0 156 6 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:156:6
	jne	.LBB1_42
.Ltmp64:
# %bb.10:                               # %if.then5.i
	#DEBUG_VALUE: lzma_mf_hc3_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc3_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_hc3_find:len_limit <- $r8d
	#DEBUG_VALUE: lzma_mf_hc3_find:matches_count <- 1
	#DEBUG_VALUE: lzma_mf_hc3_find:hash_2_value <- $ebx
	#DEBUG_VALUE: lzma_mf_hc3_find:cur_match <- $ebp
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	.loc	0 116 26 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:116:26
	notl	%ecx
.Ltmp65:
	#DEBUG_VALUE: normalize:subvalue <- $ecx
	.loc	0 119 49                        # liblzma/lz/lz_encoder_mf.c:119:49
	movl	112(%rdi), %r9d
.Ltmp66:
	#DEBUG_VALUE: i <- 0
	.loc	0 122 25                        # liblzma/lz/lz_encoder_mf.c:122:25
	addl	108(%rdi), %r9d
.Ltmp67:
	#DEBUG_VALUE: normalize:count <- $r9d
	#DEBUG_VALUE: normalize:hash <- undef
	.loc	0 122 2 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:122:2
	je	.LBB1_48
.Ltmp68:
# %bb.11:                               # %for.body.preheader.i.i
	#DEBUG_VALUE: lzma_mf_hc3_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc3_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_hc3_find:len_limit <- $r8d
	#DEBUG_VALUE: lzma_mf_hc3_find:matches_count <- 1
	#DEBUG_VALUE: lzma_mf_hc3_find:hash_2_value <- $ebx
	#DEBUG_VALUE: lzma_mf_hc3_find:cur_match <- $ebp
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $ecx
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $r9d
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movq	64(%rdi), %rdx
.Ltmp69:
	#DEBUG_VALUE: normalize:hash <- $rdx
	.loc	0 122 25                        # liblzma/lz/lz_encoder_mf.c:122:25
	movl	%r9d, %esi
	xorl	%r8d, %r8d
.Ltmp70:
	.loc	0 122 2                         # liblzma/lz/lz_encoder_mf.c:122:2
	cmpl	$16, %r9d
	jae	.LBB1_43
.Ltmp71:
# %bb.12:
	#DEBUG_VALUE: lzma_mf_hc3_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc3_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_hc3_find:matches_count <- 1
	#DEBUG_VALUE: lzma_mf_hc3_find:hash_2_value <- $ebx
	#DEBUG_VALUE: lzma_mf_hc3_find:cur_match <- $ebp
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $ecx
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $r9d
	#DEBUG_VALUE: normalize:hash <- $rdx
	.loc	0 0 2                           # liblzma/lz/lz_encoder_mf.c:0:2
	xorl	%r9d, %r9d
.Ltmp72:
	#DEBUG_VALUE: normalize:count <- $esi
	.loc	0 122 2                         # liblzma/lz/lz_encoder_mf.c:122:2
	jmp	.LBB1_46
.Ltmp73:
.LBB1_14:
	#DEBUG_VALUE: lzma_mf_hc3_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc3_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_hc3_find:len_limit <- $r8d
	#DEBUG_VALUE: lzma_mf_hc3_find:cur <- $rcx
	#DEBUG_VALUE: lzma_mf_hc3_find:matches_count <- 0
	#DEBUG_VALUE: lzma_mf_hc3_find:hash_2_value <- $ebx
	#DEBUG_VALUE: lzma_mf_hc3_find:delta2 <- $eax
	#DEBUG_VALUE: lzma_mf_hc3_find:cur_match <- $ebp
	#DEBUG_VALUE: lzma_mf_hc3_find:len_best <- 2
	.loc	0 0 2                           # liblzma/lz/lz_encoder_mf.c:0:2
	xorl	%eax, %eax
.Ltmp74:
.LBB1_16:                               # %do.body57
	#DEBUG_VALUE: lzma_mf_hc3_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc3_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_hc3_find:len_limit <- $r8d
	#DEBUG_VALUE: lzma_mf_hc3_find:cur <- $rcx
	#DEBUG_VALUE: lzma_mf_hc3_find:hash_2_value <- $ebx
	#DEBUG_VALUE: lzma_mf_hc3_find:cur_match <- $ebp
	#DEBUG_VALUE: lzma_mf_hc3_find:len_best <- $r10d
	#DEBUG_VALUE: lzma_mf_hc3_find:matches_count <- $rax
	.loc	0 335 2 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:335:2
	movl	92(%rdi), %r11d
	movq	72(%rdi), %rbx
.Ltmp75:
	.loc	0 0 2 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:2
	movq	%rdi, -8(%rsp)                  # 8-byte Spill
.Ltmp76:
	#DEBUG_VALUE: lzma_mf_hc3_find:mf <- [DW_OP_constu 8, DW_OP_minus] [$rsp+0]
	.loc	0 335 2                         # liblzma/lz/lz_encoder_mf.c:335:2
	movl	80(%rdi), %r14d
.Ltmp77:
	#DEBUG_VALUE: hc_find_func:cyclic_pos <- $r14d
	leaq	(%rsi,%rax,8), %rax
.Ltmp78:
	#DEBUG_VALUE: hc_find_func:matches <- $rax
	#DEBUG_VALUE: hc_find_func:len_limit <- $r8d
	#DEBUG_VALUE: hc_find_func:pos <- undef
	#DEBUG_VALUE: hc_find_func:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cur_match <- $ebp
	#DEBUG_VALUE: hc_find_func:depth <- $r11d
	#DEBUG_VALUE: hc_find_func:son <- $rbx
	#DEBUG_VALUE: hc_find_func:cyclic_size <- $r9d
	#DEBUG_VALUE: hc_find_func:len_best <- $r10d
	.loc	0 260 18 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:260:18
	movl	%ebp, (%rbx,%r14,4)
.Ltmp79:
	.loc	0 264 15                        # liblzma/lz/lz_encoder_mf.c:264:15
	testl	%r11d, %r11d
	movq	%rsi, -16(%rsp)                 # 8-byte Spill
.Ltmp80:
	#DEBUG_VALUE: lzma_mf_hc3_find:matches <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	.loc	0 264 20 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:264:20
	je	.LBB1_32
.Ltmp81:
# %bb.17:                               # %do.body57
	#DEBUG_VALUE: lzma_mf_hc3_find:mf <- [DW_OP_constu 8, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc3_find:matches <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc3_find:len_limit <- $r8d
	#DEBUG_VALUE: lzma_mf_hc3_find:cur <- $rcx
	#DEBUG_VALUE: lzma_mf_hc3_find:cur_match <- $ebp
	#DEBUG_VALUE: lzma_mf_hc3_find:len_best <- $r10d
	#DEBUG_VALUE: hc_find_func:cyclic_pos <- $r14d
	#DEBUG_VALUE: hc_find_func:matches <- $rax
	#DEBUG_VALUE: hc_find_func:len_limit <- $r8d
	#DEBUG_VALUE: hc_find_func:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cur_match <- $ebp
	#DEBUG_VALUE: hc_find_func:depth <- $r11d
	#DEBUG_VALUE: hc_find_func:son <- $rbx
	#DEBUG_VALUE: hc_find_func:cyclic_size <- $r9d
	#DEBUG_VALUE: hc_find_func:len_best <- $r10d
	.loc	0 0 20                          # liblzma/lz/lz_encoder_mf.c:0:20
	movl	-20(%rsp), %r12d                # 4-byte Reload
	subl	%ebp, %r12d
.Ltmp82:
	.loc	0 264 20                        # liblzma/lz/lz_encoder_mf.c:264:20
	cmpl	%r9d, %r12d
	jae	.LBB1_32
.Ltmp83:
# %bb.18:                               # %if.end.preheader.i
	#DEBUG_VALUE: lzma_mf_hc3_find:mf <- [DW_OP_constu 8, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc3_find:matches <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc3_find:len_limit <- $r8d
	#DEBUG_VALUE: lzma_mf_hc3_find:cur <- $rcx
	#DEBUG_VALUE: lzma_mf_hc3_find:cur_match <- $ebp
	#DEBUG_VALUE: lzma_mf_hc3_find:len_best <- $r10d
	#DEBUG_VALUE: hc_find_func:cyclic_pos <- $r14d
	#DEBUG_VALUE: hc_find_func:matches <- $rax
	#DEBUG_VALUE: hc_find_func:len_limit <- $r8d
	#DEBUG_VALUE: hc_find_func:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cur_match <- $ebp
	#DEBUG_VALUE: hc_find_func:depth <- $r11d
	#DEBUG_VALUE: hc_find_func:son <- $rbx
	#DEBUG_VALUE: hc_find_func:cyclic_size <- $r9d
	#DEBUG_VALUE: hc_find_func:len_best <- $r10d
	.loc	0 0 20                          # liblzma/lz/lz_encoder_mf.c:0:20
	movq	%r8, %rdi
.Ltmp84:
	.loc	0 271 37 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:271:37
	leal	-1(%r8), %r15d
	movl	-20(%rsp), %r8d                 # 4-byte Reload
.Ltmp85:
	.p2align	4, 0x90
.LBB1_19:                               # %if.end.i
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB1_22 Depth 2
	#DEBUG_VALUE: lzma_mf_hc3_find:mf <- [DW_OP_constu 8, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc3_find:matches <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc3_find:len_limit <- $edi
	#DEBUG_VALUE: lzma_mf_hc3_find:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cyclic_pos <- $r14d
	#DEBUG_VALUE: hc_find_func:matches <- $rax
	#DEBUG_VALUE: hc_find_func:len_limit <- $edi
	#DEBUG_VALUE: hc_find_func:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cur_match <- $ebp
	#DEBUG_VALUE: hc_find_func:son <- $rbx
	#DEBUG_VALUE: hc_find_func:cyclic_size <- $r9d
	#DEBUG_VALUE: hc_find_func:len_best <- $r10d
	#DEBUG_VALUE: hc_find_func:len_best <- $r10d
	#DEBUG_VALUE: hc_find_func:matches <- $rax
	.loc	0 267 33                        # liblzma/lz/lz_encoder_mf.c:267:33
	movl	%r12d, %r13d
	movq	%rcx, %rdx
	subq	%r13, %rdx
.Ltmp86:
	#DEBUG_VALUE: pb <- $rdx
	.loc	0 268 30                        # liblzma/lz/lz_encoder_mf.c:268:30
	movl	%r14d, %r13d
	subl	%r12d, %r13d
	.loc	0 269 8                         # liblzma/lz/lz_encoder_mf.c:269:8
	movl	$0, %ebp
.Ltmp87:
	cmovbl	%r9d, %ebp
	.loc	0 269 5 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:269:5
	addl	%ebp, %r13d
	.loc	0 268 15 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:268:15
	movl	(%rbx,%r13,4), %ebp
.Ltmp88:
	#DEBUG_VALUE: hc_find_func:cur_match <- $ebp
	.loc	0 271 7                         # liblzma/lz/lz_encoder_mf.c:271:7
	movl	%r10d, %r13d
	movzbl	(%rdx,%r13), %esi
	.loc	0 271 20 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:271:20
	cmpb	(%rcx,%r13), %sil
	.loc	0 271 37                        # liblzma/lz/lz_encoder_mf.c:271:37
	jne	.LBB1_26
.Ltmp89:
# %bb.20:                               # %land.lhs.true.i
                                        #   in Loop: Header=BB1_19 Depth=1
	#DEBUG_VALUE: lzma_mf_hc3_find:mf <- [DW_OP_constu 8, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc3_find:matches <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc3_find:len_limit <- $edi
	#DEBUG_VALUE: lzma_mf_hc3_find:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cyclic_pos <- $r14d
	#DEBUG_VALUE: hc_find_func:matches <- $rax
	#DEBUG_VALUE: hc_find_func:len_limit <- $edi
	#DEBUG_VALUE: hc_find_func:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cur_match <- $ebp
	#DEBUG_VALUE: hc_find_func:son <- $rbx
	#DEBUG_VALUE: hc_find_func:cyclic_size <- $r9d
	#DEBUG_VALUE: hc_find_func:len_best <- $r13d
	#DEBUG_VALUE: pb <- $rdx
	.loc	0 271 40                        # liblzma/lz/lz_encoder_mf.c:271:40
	movzbl	(%rdx), %esi
	.loc	0 271 46                        # liblzma/lz/lz_encoder_mf.c:271:46
	cmpb	(%rcx), %sil
.Ltmp90:
	.loc	0 271 7                         # liblzma/lz/lz_encoder_mf.c:271:7
	jne	.LBB1_27
.Ltmp91:
# %bb.21:                               # %while.cond20.i.preheader
                                        #   in Loop: Header=BB1_19 Depth=1
	#DEBUG_VALUE: lzma_mf_hc3_find:mf <- [DW_OP_constu 8, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc3_find:matches <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc3_find:len_limit <- $edi
	#DEBUG_VALUE: lzma_mf_hc3_find:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cyclic_pos <- $r14d
	#DEBUG_VALUE: hc_find_func:matches <- $rax
	#DEBUG_VALUE: hc_find_func:len_limit <- $edi
	#DEBUG_VALUE: hc_find_func:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cur_match <- $ebp
	#DEBUG_VALUE: hc_find_func:son <- $rbx
	#DEBUG_VALUE: hc_find_func:cyclic_size <- $r9d
	#DEBUG_VALUE: hc_find_func:len_best <- $r13d
	#DEBUG_VALUE: pb <- $rdx
	.loc	0 0 7                           # liblzma/lz/lz_encoder_mf.c:0:7
	xorl	%r13d, %r13d
.Ltmp92:
	#DEBUG_VALUE: hc_find_func:len_best <- $r10d
	.p2align	4, 0x90
.LBB1_22:                               # %while.cond20.i
                                        #   Parent Loop BB1_19 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: lzma_mf_hc3_find:mf <- [DW_OP_constu 8, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc3_find:matches <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc3_find:len_limit <- $edi
	#DEBUG_VALUE: lzma_mf_hc3_find:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cyclic_pos <- $r14d
	#DEBUG_VALUE: hc_find_func:matches <- $rax
	#DEBUG_VALUE: hc_find_func:len_limit <- $edi
	#DEBUG_VALUE: hc_find_func:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cur_match <- $ebp
	#DEBUG_VALUE: hc_find_func:son <- $rbx
	#DEBUG_VALUE: hc_find_func:cyclic_size <- $r9d
	#DEBUG_VALUE: hc_find_func:len_best <- $r10d
	#DEBUG_VALUE: pb <- $rdx
	#DEBUG_VALUE: len <- [DW_OP_plus_uconst 1, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r13
	.loc	0 273 17 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:273:17
	cmpq	%r13, %r15
	.loc	0 273 4 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:273:4
	je	.LBB1_30
.Ltmp93:
# %bb.23:                               # %while.body23.i
                                        #   in Loop: Header=BB1_22 Depth=2
	#DEBUG_VALUE: lzma_mf_hc3_find:mf <- [DW_OP_constu 8, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc3_find:matches <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc3_find:len_limit <- $edi
	#DEBUG_VALUE: lzma_mf_hc3_find:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cyclic_pos <- $r14d
	#DEBUG_VALUE: hc_find_func:matches <- $rax
	#DEBUG_VALUE: hc_find_func:len_limit <- $edi
	#DEBUG_VALUE: hc_find_func:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cur_match <- $ebp
	#DEBUG_VALUE: hc_find_func:son <- $rbx
	#DEBUG_VALUE: hc_find_func:cyclic_size <- $r9d
	#DEBUG_VALUE: hc_find_func:len_best <- $r10d
	#DEBUG_VALUE: pb <- $rdx
	#DEBUG_VALUE: len <- [DW_OP_plus_uconst 1, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r13
	.loc	0 273 11                        # liblzma/lz/lz_encoder_mf.c:273:11
	incq	%r13
.Ltmp94:
	#DEBUG_VALUE: len <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r13
	.loc	0 274 9 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:274:9
	movl	%r13d, %esi
	movzbl	(%rdx,%rsi), %r8d
	.loc	0 274 17 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:274:17
	cmpb	(%rcx,%rsi), %r8b
.Ltmp95:
	.loc	0 274 9                         # liblzma/lz/lz_encoder_mf.c:274:9
	je	.LBB1_22
.Ltmp96:
# %bb.24:                               # %while.end.split.loop.exit.i
                                        #   in Loop: Header=BB1_19 Depth=1
	#DEBUG_VALUE: lzma_mf_hc3_find:mf <- [DW_OP_constu 8, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc3_find:matches <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc3_find:len_limit <- $edi
	#DEBUG_VALUE: lzma_mf_hc3_find:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cyclic_pos <- $r14d
	#DEBUG_VALUE: hc_find_func:matches <- $rax
	#DEBUG_VALUE: hc_find_func:len_limit <- $edi
	#DEBUG_VALUE: hc_find_func:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cur_match <- $ebp
	#DEBUG_VALUE: hc_find_func:son <- $rbx
	#DEBUG_VALUE: hc_find_func:cyclic_size <- $r9d
	#DEBUG_VALUE: hc_find_func:len_best <- $r10d
	#DEBUG_VALUE: pb <- $rdx
	#DEBUG_VALUE: len <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r13
	.loc	0 0 9                           # liblzma/lz/lz_encoder_mf.c:0:9
	movl	-20(%rsp), %r8d                 # 4-byte Reload
.Ltmp97:
	.loc	0 277 17 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:277:17
	cmpl	%r13d, %r10d
.Ltmp98:
	.loc	0 277 8 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:277:8
	jae	.LBB1_26
.Ltmp99:
.LBB1_25:                               # %cleanup.i
                                        #   in Loop: Header=BB1_19 Depth=1
	#DEBUG_VALUE: lzma_mf_hc3_find:mf <- [DW_OP_constu 8, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc3_find:matches <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc3_find:len_limit <- $edi
	#DEBUG_VALUE: lzma_mf_hc3_find:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cyclic_pos <- $r14d
	#DEBUG_VALUE: hc_find_func:matches <- $rax
	#DEBUG_VALUE: hc_find_func:len_limit <- $edi
	#DEBUG_VALUE: hc_find_func:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cur_match <- $ebp
	#DEBUG_VALUE: hc_find_func:son <- $rbx
	#DEBUG_VALUE: hc_find_func:cyclic_size <- $r9d
	#DEBUG_VALUE: hc_find_func:len_best <- $r10d
	#DEBUG_VALUE: pb <- $rdx
	.loc	0 280 27 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:280:27
	decl	%r12d
.Ltmp100:
	#DEBUG_VALUE: hc_find_func:matches <- undef
	#DEBUG_VALUE: hc_find_func:len_best <- $r13d
	.loc	0 279 18                        # liblzma/lz/lz_encoder_mf.c:279:18
	movl	%r13d, (%rax)
	.loc	0 280 19                        # liblzma/lz/lz_encoder_mf.c:280:19
	movl	%r12d, 4(%rax)
	.loc	0 281 5                         # liblzma/lz/lz_encoder_mf.c:281:5
	addq	$8, %rax
.Ltmp101:
	#DEBUG_VALUE: hc_find_func:matches <- $rax
	.loc	0 0 5 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:5
	cmpl	%edi, %r13d
	jne	.LBB1_28
	jmp	.LBB1_32
.Ltmp102:
	.p2align	4, 0x90
.LBB1_27:                               #   in Loop: Header=BB1_19 Depth=1
	#DEBUG_VALUE: lzma_mf_hc3_find:mf <- [DW_OP_constu 8, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc3_find:matches <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc3_find:len_limit <- $edi
	#DEBUG_VALUE: lzma_mf_hc3_find:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cyclic_pos <- $r14d
	#DEBUG_VALUE: hc_find_func:matches <- $rax
	#DEBUG_VALUE: hc_find_func:len_limit <- $edi
	#DEBUG_VALUE: hc_find_func:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cur_match <- $ebp
	#DEBUG_VALUE: hc_find_func:son <- $rbx
	#DEBUG_VALUE: hc_find_func:cyclic_size <- $r9d
	#DEBUG_VALUE: hc_find_func:len_best <- $r13d
	#DEBUG_VALUE: pb <- $rdx
	movl	%r10d, %r13d
.Ltmp103:
	#DEBUG_VALUE: hc_find_func:len_best <- $r13d
.LBB1_28:                               # %cleanup46.i
                                        #   in Loop: Header=BB1_19 Depth=1
	#DEBUG_VALUE: lzma_mf_hc3_find:mf <- [DW_OP_constu 8, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc3_find:matches <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc3_find:len_limit <- $edi
	#DEBUG_VALUE: lzma_mf_hc3_find:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cyclic_pos <- $r14d
	#DEBUG_VALUE: hc_find_func:matches <- $rax
	#DEBUG_VALUE: hc_find_func:len_limit <- $edi
	#DEBUG_VALUE: hc_find_func:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cur_match <- $ebp
	#DEBUG_VALUE: hc_find_func:son <- $rbx
	#DEBUG_VALUE: hc_find_func:cyclic_size <- $r9d
	#DEBUG_VALUE: hc_find_func:len_best <- $r13d
	#DEBUG_VALUE: pb <- $rdx
	decl	%r11d
	#DEBUG_VALUE: hc_find_func:cur_match <- $ebp
	#DEBUG_VALUE: hc_find_func:len_best <- $r13d
	#DEBUG_VALUE: hc_find_func:matches <- $rax
.Ltmp104:
	#DEBUG_VALUE: hc_find_func:depth <- $r11d
	#DEBUG_VALUE: delta <- undef
	#DEBUG_VALUE: hc_find_func:depth <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r11d
	jne	.LBB1_29
	jmp	.LBB1_32
.Ltmp105:
.LBB1_30:                               #   in Loop: Header=BB1_19 Depth=1
	#DEBUG_VALUE: lzma_mf_hc3_find:mf <- [DW_OP_constu 8, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc3_find:matches <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc3_find:len_limit <- $edi
	#DEBUG_VALUE: lzma_mf_hc3_find:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cyclic_pos <- $r14d
	#DEBUG_VALUE: hc_find_func:matches <- $rax
	#DEBUG_VALUE: hc_find_func:len_limit <- $edi
	#DEBUG_VALUE: hc_find_func:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cur_match <- $ebp
	#DEBUG_VALUE: hc_find_func:son <- $rbx
	#DEBUG_VALUE: hc_find_func:cyclic_size <- $r9d
	#DEBUG_VALUE: hc_find_func:len_best <- $r10d
	#DEBUG_VALUE: pb <- $rdx
	#DEBUG_VALUE: len <- [DW_OP_plus_uconst 1, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r13
	movl	%edi, %r13d
	movl	-20(%rsp), %r8d                 # 4-byte Reload
.Ltmp106:
	.loc	0 277 17 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:277:17
	cmpl	%r13d, %r10d
.Ltmp107:
	.loc	0 277 8 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:277:8
	jb	.LBB1_25
.Ltmp108:
	.p2align	4, 0x90
.LBB1_26:                               #   in Loop: Header=BB1_19 Depth=1
	#DEBUG_VALUE: lzma_mf_hc3_find:mf <- [DW_OP_constu 8, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc3_find:matches <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc3_find:len_limit <- $edi
	#DEBUG_VALUE: lzma_mf_hc3_find:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cyclic_pos <- $r14d
	#DEBUG_VALUE: hc_find_func:matches <- $rax
	#DEBUG_VALUE: hc_find_func:len_limit <- $edi
	#DEBUG_VALUE: hc_find_func:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cur_match <- $ebp
	#DEBUG_VALUE: hc_find_func:son <- $rbx
	#DEBUG_VALUE: hc_find_func:cyclic_size <- $r9d
	#DEBUG_VALUE: hc_find_func:len_best <- $r10d
	#DEBUG_VALUE: pb <- $rdx
	.loc	0 0 8                           # liblzma/lz/lz_encoder_mf.c:0:8
	movl	%r10d, %r13d
.Ltmp109:
	#DEBUG_VALUE: hc_find_func:len_best <- $r13d
	decl	%r11d
	#DEBUG_VALUE: hc_find_func:cur_match <- $ebp
	#DEBUG_VALUE: hc_find_func:len_best <- $r13d
	#DEBUG_VALUE: hc_find_func:matches <- $rax
.Ltmp110:
	#DEBUG_VALUE: hc_find_func:depth <- undef
	#DEBUG_VALUE: delta <- undef
	#DEBUG_VALUE: hc_find_func:depth <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
	.loc	0 264 20 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:264:20
	je	.LBB1_32
.Ltmp111:
.LBB1_29:                               # %cleanup46.i
                                        #   in Loop: Header=BB1_19 Depth=1
	#DEBUG_VALUE: lzma_mf_hc3_find:mf <- [DW_OP_constu 8, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc3_find:matches <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc3_find:len_limit <- $edi
	#DEBUG_VALUE: lzma_mf_hc3_find:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cyclic_pos <- $r14d
	#DEBUG_VALUE: hc_find_func:matches <- $rax
	#DEBUG_VALUE: hc_find_func:len_limit <- $edi
	#DEBUG_VALUE: hc_find_func:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cur_match <- $ebp
	#DEBUG_VALUE: hc_find_func:son <- $rbx
	#DEBUG_VALUE: hc_find_func:cyclic_size <- $r9d
	#DEBUG_VALUE: hc_find_func:len_best <- $r13d
	#DEBUG_VALUE: pb <- $rdx
	.loc	0 0 0 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:0
	movl	%r8d, %r12d
	subl	%ebp, %r12d
.Ltmp112:
	#DEBUG_VALUE: delta <- $r12d
	movl	%r13d, %r10d
.Ltmp113:
	.loc	0 264 20                        # liblzma/lz/lz_encoder_mf.c:264:20
	cmpl	%r9d, %r12d
	jb	.LBB1_19
.Ltmp114:
.LBB1_32:                               # %hc_find_func.exit
	#DEBUG_VALUE: lzma_mf_hc3_find:mf <- [DW_OP_constu 8, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc3_find:matches <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc3_find:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cyclic_pos <- $r14d
	#DEBUG_VALUE: hc_find_func:matches <- $rax
	#DEBUG_VALUE: hc_find_func:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cur_match <- $ebp
	#DEBUG_VALUE: hc_find_func:son <- $rbx
	#DEBUG_VALUE: hc_find_func:cyclic_size <- $r9d
	#DEBUG_VALUE: hc_find_func:cur_match <- undef
	#DEBUG_VALUE: hc_find_func:len_best <- undef
	#DEBUG_VALUE: hc_find_func:matches <- undef
	.loc	0 335 2 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:335:2
	subq	-16(%rsp), %rax                 # 8-byte Folded Reload
	shrq	$3, %rax
.Ltmp115:
	#DEBUG_VALUE: lzma_mf_hc3_find:matches_count <- $eax
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 0 2 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:2
	movq	-8(%rsp), %r11                  # 8-byte Reload
.Ltmp116:
	.loc	0 150 6 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:150:6
	movl	80(%r11), %edx
	incl	%edx
	.loc	0 150 30 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:150:30
	movl	84(%r11), %ecx
.Ltmp117:
	.loc	0 0 30                          # liblzma/lz/lz_encoder_mf.c:0:30
	xorl	%esi, %esi
	.loc	0 150 23                        # liblzma/lz/lz_encoder_mf.c:150:23
	cmpl	%ecx, %edx
.Ltmp118:
	.loc	0 150 6                         # liblzma/lz/lz_encoder_mf.c:150:6
	cmovnel	%edx, %esi
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movl	%esi, 80(%r11)
.Ltmp119:
	.loc	0 156 6 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:156:6
	movl	20(%r11), %edx
.Ltmp120:
	.loc	0 153 2                         # liblzma/lz/lz_encoder_mf.c:153:2
	movl	24(%r11), %esi
	leal	1(%rsi), %edi
	movl	%edi, 24(%r11)
.Ltmp121:
	.loc	0 156 6                         # liblzma/lz/lz_encoder_mf.c:156:6
	addl	%edx, %esi
	incl	%esi
	cmpl	$-1, %esi
.Ltmp122:
	.loc	0 156 6 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:156:6
	jne	.LBB1_42
.Ltmp123:
# %bb.33:                               # %if.then5.i147
	#DEBUG_VALUE: lzma_mf_hc3_find:mf <- [DW_OP_constu 8, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc3_find:matches <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc3_find:matches_count <- $eax
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 116 26 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:116:26
	notl	%ecx
.Ltmp124:
	#DEBUG_VALUE: normalize:subvalue <- $ecx
	.loc	0 119 49                        # liblzma/lz/lz_encoder_mf.c:119:49
	movl	112(%r11), %r9d
.Ltmp125:
	#DEBUG_VALUE: i <- 0
	.loc	0 122 25                        # liblzma/lz/lz_encoder_mf.c:122:25
	addl	108(%r11), %r9d
.Ltmp126:
	#DEBUG_VALUE: normalize:count <- $r9d
	#DEBUG_VALUE: normalize:hash <- undef
	.loc	0 122 2 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:122:2
	je	.LBB1_41
.Ltmp127:
# %bb.34:                               # %for.body.preheader.i.i154
	#DEBUG_VALUE: lzma_mf_hc3_find:mf <- [DW_OP_constu 8, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc3_find:matches <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc3_find:matches_count <- $eax
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:subvalue <- $ecx
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $r9d
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movq	64(%r11), %rdx
.Ltmp128:
	#DEBUG_VALUE: normalize:hash <- $rdx
	.loc	0 122 25                        # liblzma/lz/lz_encoder_mf.c:122:25
	movl	%r9d, %esi
	xorl	%r8d, %r8d
.Ltmp129:
	.loc	0 122 2                         # liblzma/lz/lz_encoder_mf.c:122:2
	cmpl	$16, %r9d
	jae	.LBB1_36
.Ltmp130:
# %bb.35:
	#DEBUG_VALUE: lzma_mf_hc3_find:mf <- [DW_OP_constu 8, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc3_find:matches <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc3_find:matches_count <- $eax
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:subvalue <- $ecx
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $r9d
	#DEBUG_VALUE: normalize:hash <- $rdx
	.loc	0 0 2                           # liblzma/lz/lz_encoder_mf.c:0:2
	xorl	%r9d, %r9d
.Ltmp131:
	#DEBUG_VALUE: normalize:count <- $esi
	.loc	0 122 2                         # liblzma/lz/lz_encoder_mf.c:122:2
	jmp	.LBB1_39
.Ltmp132:
.LBB1_36:                               # %vector.ph
	#DEBUG_VALUE: lzma_mf_hc3_find:mf <- [DW_OP_constu 8, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc3_find:matches <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc3_find:matches_count <- $eax
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:subvalue <- $ecx
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $r9d
	#DEBUG_VALUE: normalize:hash <- $rdx
	movl	%esi, %r9d
.Ltmp133:
	#DEBUG_VALUE: normalize:count <- $esi
	andl	$-16, %r9d
	movd	%ecx, %xmm0
	pshufd	$0, %xmm0, %xmm0                # xmm0 = xmm0[0,0,0,0]
	xorl	%r10d, %r10d
	movdqa	.LCPI1_0(%rip), %xmm1           # xmm1 = [2147483648,2147483648,2147483648,2147483648]
	movdqa	%xmm0, %xmm2
	pxor	%xmm1, %xmm2
.Ltmp134:
	.p2align	4, 0x90
.LBB1_37:                               # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: lzma_mf_hc3_find:mf <- [DW_OP_constu 8, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc3_find:matches <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc3_find:matches_count <- $eax
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:subvalue <- $ecx
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $esi
	#DEBUG_VALUE: normalize:hash <- $rdx
	.loc	0 133 7 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:133:7
	movdqu	(%rdx,%r10,4), %xmm3
	movdqu	16(%rdx,%r10,4), %xmm4
	movdqu	32(%rdx,%r10,4), %xmm5
	movdqu	48(%rdx,%r10,4), %xmm6
.Ltmp135:
	.loc	0 133 7 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:133:7
	movdqa	%xmm3, %xmm7
	pxor	%xmm1, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm0, %xmm3
	pand	%xmm7, %xmm3
	movdqa	%xmm4, %xmm7
	pxor	%xmm1, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm0, %xmm4
	pand	%xmm7, %xmm4
	movdqa	%xmm5, %xmm7
	pxor	%xmm1, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm0, %xmm5
	pand	%xmm7, %xmm5
	movdqa	%xmm6, %xmm7
	pxor	%xmm1, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm0, %xmm6
	pand	%xmm7, %xmm6
.Ltmp136:
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movdqu	%xmm3, (%rdx,%r10,4)
	movdqu	%xmm4, 16(%rdx,%r10,4)
	movdqu	%xmm5, 32(%rdx,%r10,4)
	movdqu	%xmm6, 48(%rdx,%r10,4)
.Ltmp137:
	.loc	0 122 34 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:122:34
	addq	$16, %r10
	cmpq	%r10, %r9
	jne	.LBB1_37
.Ltmp138:
# %bb.38:                               # %middle.block
	#DEBUG_VALUE: lzma_mf_hc3_find:mf <- [DW_OP_constu 8, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc3_find:matches <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc3_find:matches_count <- $eax
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:subvalue <- $ecx
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $esi
	#DEBUG_VALUE: normalize:hash <- $rdx
	.loc	0 122 2 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:122:2
	cmpl	%esi, %r9d
	je	.LBB1_40
.Ltmp139:
	.p2align	4, 0x90
.LBB1_39:                               # %for.body.i.i156
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: lzma_mf_hc3_find:mf <- [DW_OP_constu 8, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc3_find:matches <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc3_find:matches_count <- $eax
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:subvalue <- $ecx
	#DEBUG_VALUE: normalize:count <- $esi
	#DEBUG_VALUE: normalize:hash <- $rdx
	#DEBUG_VALUE: i <- $r9
	.loc	0 133 7 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:133:7
	movl	(%rdx,%r9,4), %edi
.Ltmp140:
	.loc	0 133 7 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:133:7
	subl	%ecx, %edi
	cmovbl	%r8d, %edi
.Ltmp141:
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movl	%edi, (%rdx,%r9,4)
.Ltmp142:
	.loc	0 122 34 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:122:34
	incq	%r9
.Ltmp143:
	#DEBUG_VALUE: i <- $r9
	.loc	0 122 25 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:122:25
	cmpq	%r9, %rsi
.Ltmp144:
	.loc	0 122 2                         # liblzma/lz/lz_encoder_mf.c:122:2
	jne	.LBB1_39
.Ltmp145:
.LBB1_40:                               # %normalize.exit.loopexit.i162
	#DEBUG_VALUE: lzma_mf_hc3_find:mf <- [DW_OP_constu 8, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc3_find:matches <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc3_find:matches_count <- $eax
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:subvalue <- $ecx
	#DEBUG_VALUE: normalize:count <- $esi
	#DEBUG_VALUE: normalize:hash <- $rdx
	.loc	0 140 13 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:140:13
	movl	20(%r11), %edx
.Ltmp146:
.LBB1_41:                               # %normalize.exit.i164
	#DEBUG_VALUE: lzma_mf_hc3_find:mf <- [DW_OP_constu 8, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc3_find:matches <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc3_find:matches_count <- $eax
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:subvalue <- $ecx
	subl	%ecx, %edx
	movl	%edx, 20(%r11)
.Ltmp147:
.LBB1_42:
	#DEBUG_VALUE: lzma_mf_hc3_find:mf <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: lzma_mf_hc3_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	.loc	0 0 13 is_stmt 0                # liblzma/lz/lz_encoder_mf.c:0:13
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	.cfi_restore %rbx
	.cfi_restore %r12
	.cfi_restore %r13
	.cfi_restore %r14
	.cfi_restore %r15
	.cfi_restore %rbp
                                        # kill: def $eax killed $eax killed $rax
	.loc	0 336 1 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:336:1
	retq
.Ltmp148:
.LBB1_15:                               # %for.end
	.cfi_def_cfa_offset 56
	.cfi_offset %rbx, -56
	.cfi_offset %rbp, -16
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	#DEBUG_VALUE: lzma_mf_hc3_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc3_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_hc3_find:len_limit <- $r8d
	#DEBUG_VALUE: lzma_mf_hc3_find:cur <- $rcx
	#DEBUG_VALUE: lzma_mf_hc3_find:matches_count <- 0
	#DEBUG_VALUE: lzma_mf_hc3_find:hash_2_value <- $ebx
	#DEBUG_VALUE: lzma_mf_hc3_find:delta2 <- $eax
	#DEBUG_VALUE: lzma_mf_hc3_find:cur_match <- $ebp
	#DEBUG_VALUE: lzma_mf_hc3_find:len_best <- $r9d
	.loc	0 325 18                        # liblzma/lz/lz_encoder_mf.c:325:18
	movl	%r10d, (%rsi)
	.loc	0 326 28                        # liblzma/lz/lz_encoder_mf.c:326:28
	decl	%eax
.Ltmp149:
	.loc	0 326 19 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:326:19
	movl	%eax, 4(%rsi)
.Ltmp150:
	#DEBUG_VALUE: lzma_mf_hc3_find:matches_count <- 1
	.loc	0 335 2 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:335:2
	movl	84(%rdi), %r9d
.Ltmp151:
	#DEBUG_VALUE: lzma_mf_hc3_find:len_best <- $r10d
	.loc	0 0 2 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:2
	movl	$1, %eax
	jmp	.LBB1_16
.Ltmp152:
.LBB1_43:                               # %vector.ph184
	#DEBUG_VALUE: lzma_mf_hc3_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc3_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_hc3_find:matches_count <- 1
	#DEBUG_VALUE: lzma_mf_hc3_find:hash_2_value <- $ebx
	#DEBUG_VALUE: lzma_mf_hc3_find:cur_match <- $ebp
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $ecx
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $r9d
	#DEBUG_VALUE: normalize:hash <- $rdx
	.loc	0 122 2 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:122:2
	movl	%esi, %r9d
.Ltmp153:
	#DEBUG_VALUE: normalize:count <- $esi
	andl	$-16, %r9d
	movd	%ecx, %xmm0
	pshufd	$0, %xmm0, %xmm0                # xmm0 = xmm0[0,0,0,0]
	xorl	%r10d, %r10d
	movdqa	.LCPI1_0(%rip), %xmm1           # xmm1 = [2147483648,2147483648,2147483648,2147483648]
	movdqa	%xmm0, %xmm2
	pxor	%xmm1, %xmm2
.Ltmp154:
	.p2align	4, 0x90
.LBB1_44:                               # %vector.body188
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: lzma_mf_hc3_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc3_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_hc3_find:matches_count <- 1
	#DEBUG_VALUE: lzma_mf_hc3_find:hash_2_value <- $ebx
	#DEBUG_VALUE: lzma_mf_hc3_find:cur_match <- $ebp
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $ecx
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $esi
	#DEBUG_VALUE: normalize:hash <- $rdx
	.loc	0 133 7                         # liblzma/lz/lz_encoder_mf.c:133:7
	movdqu	(%rdx,%r10,4), %xmm3
	movdqu	16(%rdx,%r10,4), %xmm4
	movdqu	32(%rdx,%r10,4), %xmm5
	movdqu	48(%rdx,%r10,4), %xmm6
.Ltmp155:
	.loc	0 133 7 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:133:7
	movdqa	%xmm3, %xmm7
	pxor	%xmm1, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm0, %xmm3
	pand	%xmm7, %xmm3
	movdqa	%xmm4, %xmm7
	pxor	%xmm1, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm0, %xmm4
	pand	%xmm7, %xmm4
	movdqa	%xmm5, %xmm7
	pxor	%xmm1, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm0, %xmm5
	pand	%xmm7, %xmm5
	movdqa	%xmm6, %xmm7
	pxor	%xmm1, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm0, %xmm6
	pand	%xmm7, %xmm6
.Ltmp156:
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movdqu	%xmm3, (%rdx,%r10,4)
	movdqu	%xmm4, 16(%rdx,%r10,4)
	movdqu	%xmm5, 32(%rdx,%r10,4)
	movdqu	%xmm6, 48(%rdx,%r10,4)
.Ltmp157:
	.loc	0 122 34 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:122:34
	addq	$16, %r10
	cmpq	%r10, %r9
	jne	.LBB1_44
.Ltmp158:
# %bb.45:                               # %middle.block181
	#DEBUG_VALUE: lzma_mf_hc3_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc3_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_hc3_find:matches_count <- 1
	#DEBUG_VALUE: lzma_mf_hc3_find:hash_2_value <- $ebx
	#DEBUG_VALUE: lzma_mf_hc3_find:cur_match <- $ebp
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $ecx
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $esi
	#DEBUG_VALUE: normalize:hash <- $rdx
	.loc	0 122 2 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:122:2
	cmpl	%esi, %r9d
	je	.LBB1_47
.Ltmp159:
	.p2align	4, 0x90
.LBB1_46:                               # %for.body.i.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: lzma_mf_hc3_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc3_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_hc3_find:matches_count <- 1
	#DEBUG_VALUE: lzma_mf_hc3_find:hash_2_value <- $ebx
	#DEBUG_VALUE: lzma_mf_hc3_find:cur_match <- $ebp
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $ecx
	#DEBUG_VALUE: normalize:count <- $esi
	#DEBUG_VALUE: normalize:hash <- $rdx
	#DEBUG_VALUE: i <- $r9
	.loc	0 133 7 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:133:7
	movl	(%rdx,%r9,4), %r10d
.Ltmp160:
	.loc	0 133 7 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:133:7
	subl	%ecx, %r10d
	cmovbl	%r8d, %r10d
.Ltmp161:
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movl	%r10d, (%rdx,%r9,4)
.Ltmp162:
	.loc	0 122 34 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:122:34
	incq	%r9
.Ltmp163:
	#DEBUG_VALUE: i <- $r9
	.loc	0 122 25 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:122:25
	cmpq	%r9, %rsi
.Ltmp164:
	.loc	0 122 2                         # liblzma/lz/lz_encoder_mf.c:122:2
	jne	.LBB1_46
.Ltmp165:
.LBB1_47:                               # %normalize.exit.loopexit.i
	#DEBUG_VALUE: lzma_mf_hc3_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc3_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_hc3_find:matches_count <- 1
	#DEBUG_VALUE: lzma_mf_hc3_find:hash_2_value <- $ebx
	#DEBUG_VALUE: lzma_mf_hc3_find:cur_match <- $ebp
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $ecx
	#DEBUG_VALUE: normalize:count <- $esi
	#DEBUG_VALUE: normalize:hash <- $rdx
	.loc	0 140 13 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:140:13
	movl	20(%rdi), %edx
.Ltmp166:
.LBB1_48:                               # %normalize.exit.i
	#DEBUG_VALUE: lzma_mf_hc3_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc3_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_hc3_find:matches_count <- 1
	#DEBUG_VALUE: lzma_mf_hc3_find:hash_2_value <- $ebx
	#DEBUG_VALUE: lzma_mf_hc3_find:cur_match <- $ebp
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $ecx
	subl	%ecx, %edx
	movl	%edx, 20(%rdi)
.Ltmp167:
	.loc	0 157 3                         # liblzma/lz/lz_encoder_mf.c:157:3
	jmp	.LBB1_42
.Ltmp168:
.Lfunc_end1:
	.size	lzma_mf_hc3_find, .Lfunc_end1-lzma_mf_hc3_find
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4, 0x0                          # -- Begin function lzma_mf_hc3_skip
.LCPI2_0:
	.long	2147483648                      # 0x80000000
	.long	2147483648                      # 0x80000000
	.long	2147483648                      # 0x80000000
	.long	2147483648                      # 0x80000000
	.text
	.globl	lzma_mf_hc3_skip
	.p2align	4, 0x90
	.type	lzma_mf_hc3_skip,@function
lzma_mf_hc3_skip:                       # @lzma_mf_hc3_skip
.Lfunc_begin2:
	.loc	0 341 0                         # liblzma/lz/lz_encoder_mf.c:341:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: lzma_mf_hc3_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc3_skip:amount <- $esi
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	lzma_crc32_table@GOTPCREL(%rip), %rax
	xorl	%ecx, %ecx
	movdqa	.LCPI2_0(%rip), %xmm0           # xmm0 = [2147483648,2147483648,2147483648,2147483648]
	jmp	.LBB2_1
.Ltmp169:
	.p2align	4, 0x90
.LBB2_2:                                # %if.then
                                        #   in Loop: Header=BB2_1 Depth=1
	#DEBUG_VALUE: lzma_mf_hc3_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc3_skip:amount <- $esi
	#DEBUG_VALUE: move_pending:mf <- $rdi
	.loc	0 178 2 prologue_end            # liblzma/lz/lz_encoder_mf.c:178:2
	incl	%edx
	movl	%edx, 24(%rdi)
	.loc	0 180 2                         # liblzma/lz/lz_encoder_mf.c:180:2
	incl	40(%rdi)
.Ltmp170:
.LBB2_13:                               # %do.cond21
                                        #   in Loop: Header=BB2_1 Depth=1
	#DEBUG_VALUE: lzma_mf_hc3_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc3_skip:amount <- $esi
	.loc	0 361 20                        # liblzma/lz/lz_encoder_mf.c:361:20
	decl	%esi
.Ltmp171:
	#DEBUG_VALUE: lzma_mf_hc3_skip:amount <- $esi
	.loc	0 361 2 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:361:2
	je	.LBB2_14
.Ltmp172:
.LBB2_1:                                # %do.body
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB2_8 Depth 2
                                        #     Child Loop BB2_10 Depth 2
	#DEBUG_VALUE: lzma_mf_hc3_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc3_skip:amount <- $esi
	#DEBUG_VALUE: lzma_mf_hc3_skip:amount <- $esi
	.loc	0 343 7 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:343:7
	movl	24(%rdi), %edx
	movl	36(%rdi), %r8d
.Ltmp173:
	#DEBUG_VALUE: mf_avail:mf <- undef
	.loc	4 232 23                        # liblzma/lz/lz_encoder.h:232:23
	subl	%edx, %r8d
.Ltmp174:
	.loc	0 343 20                        # liblzma/lz/lz_encoder_mf.c:343:20
	cmpl	$2, %r8d
.Ltmp175:
	.loc	0 343 7 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:343:7
	jbe	.LBB2_2
.Ltmp176:
# %bb.3:                                # %if.end
                                        #   in Loop: Header=BB2_1 Depth=1
	#DEBUG_VALUE: lzma_mf_hc3_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc3_skip:amount <- $esi
	#DEBUG_VALUE: mf_ptr:mf <- undef
	#DEBUG_VALUE: cur <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] undef, undef
	.loc	0 0 7                           # liblzma/lz/lz_encoder_mf.c:0:7
	movl	20(%rdi), %r8d
	.loc	0 349 37 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:349:37
	addl	%edx, %r8d
.Ltmp177:
	#DEBUG_VALUE: pos <- undef
	.loc	0 348 24                        # liblzma/lz/lz_encoder_mf.c:348:24
	movq	(%rdi), %r9
.Ltmp178:
	#DEBUG_VALUE: cur <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r9, $edx
	.loc	0 354 11                        # liblzma/lz/lz_encoder_mf.c:354:11
	movq	64(%rdi), %r10
	.loc	0 351 3                         # liblzma/lz/lz_encoder_mf.c:351:3
	movzbl	(%r9,%rdx), %r11d
	movzbl	1(%r9,%rdx), %ebx
	xorl	(%rax,%r11,4), %ebx
	movzbl	2(%r9,%rdx), %edx
.Ltmp179:
	shll	$8, %edx
	xorl	%ebx, %edx
.Ltmp180:
	#DEBUG_VALUE: temp <- $ebx
	andl	$1023, %ebx                     # imm = 0x3FF
.Ltmp181:
	#DEBUG_VALUE: hash_2_value <- $ebx
	andl	88(%rdi), %edx
.Ltmp182:
	#DEBUG_VALUE: hash_value <- $edx
	.loc	0 354 32                        # liblzma/lz/lz_encoder_mf.c:354:32
	addl	$1024, %edx                     # imm = 0x400
.Ltmp183:
	.loc	0 354 7 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:354:7
	movl	(%r10,%rdx,4), %r9d
.Ltmp184:
	#DEBUG_VALUE: cur_match <- $r9d
	.loc	0 356 26 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:356:26
	movl	%r8d, (%r10,%rbx,4)
	.loc	0 357 7                         # liblzma/lz/lz_encoder_mf.c:357:7
	movq	64(%rdi), %r10
	.loc	0 357 42 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:357:42
	movl	%r8d, (%r10,%rdx,4)
.Ltmp185:
	.loc	0 359 3 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:359:3
	movq	72(%rdi), %rdx
	movl	80(%rdi), %r8d
	movl	%r9d, (%rdx,%r8,4)
.Ltmp186:
	#DEBUG_VALUE: move_pos:mf <- $rdi
	.loc	0 150 6                         # liblzma/lz/lz_encoder_mf.c:150:6
	movl	80(%rdi), %r8d
	incl	%r8d
	.loc	0 150 30 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:150:30
	movl	84(%rdi), %edx
	.loc	0 150 23                        # liblzma/lz/lz_encoder_mf.c:150:23
	cmpl	%edx, %r8d
.Ltmp187:
	.loc	0 150 6                         # liblzma/lz/lz_encoder_mf.c:150:6
	cmovel	%ecx, %r8d
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movl	%r8d, 80(%rdi)
.Ltmp188:
	.loc	0 156 6 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:156:6
	movl	20(%rdi), %r8d
.Ltmp189:
	.loc	0 153 2                         # liblzma/lz/lz_encoder_mf.c:153:2
	movl	24(%rdi), %r9d
.Ltmp190:
	leal	1(%r9), %r10d
	movl	%r10d, 24(%rdi)
.Ltmp191:
	.loc	0 156 6                         # liblzma/lz/lz_encoder_mf.c:156:6
	addl	%r8d, %r9d
	incl	%r9d
	cmpl	$-1, %r9d
.Ltmp192:
	.loc	0 156 6 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:156:6
	jne	.LBB2_13
.Ltmp193:
# %bb.4:                                # %if.then5.i
                                        #   in Loop: Header=BB2_1 Depth=1
	#DEBUG_VALUE: lzma_mf_hc3_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc3_skip:amount <- $esi
	#DEBUG_VALUE: hash_2_value <- $ebx
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	.loc	0 116 26 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:116:26
	notl	%edx
.Ltmp194:
	#DEBUG_VALUE: normalize:subvalue <- $edx
	.loc	0 119 49                        # liblzma/lz/lz_encoder_mf.c:119:49
	movl	112(%rdi), %r10d
.Ltmp195:
	#DEBUG_VALUE: i <- 0
	.loc	0 122 25                        # liblzma/lz/lz_encoder_mf.c:122:25
	addl	108(%rdi), %r10d
.Ltmp196:
	#DEBUG_VALUE: normalize:count <- $r10d
	#DEBUG_VALUE: normalize:hash <- undef
	.loc	0 122 2 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:122:2
	je	.LBB2_12
.Ltmp197:
# %bb.5:                                # %for.body.preheader.i.i
                                        #   in Loop: Header=BB2_1 Depth=1
	#DEBUG_VALUE: lzma_mf_hc3_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc3_skip:amount <- $esi
	#DEBUG_VALUE: hash_2_value <- $ebx
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $edx
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $r10d
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movq	64(%rdi), %r8
.Ltmp198:
	#DEBUG_VALUE: normalize:hash <- $r8
	.loc	0 122 25                        # liblzma/lz/lz_encoder_mf.c:122:25
	movl	%r10d, %r9d
.Ltmp199:
	.loc	0 122 2                         # liblzma/lz/lz_encoder_mf.c:122:2
	cmpl	$16, %r10d
	jae	.LBB2_7
.Ltmp200:
# %bb.6:                                #   in Loop: Header=BB2_1 Depth=1
	#DEBUG_VALUE: lzma_mf_hc3_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc3_skip:amount <- $esi
	#DEBUG_VALUE: hash_2_value <- $ebx
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $edx
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $r9d
	#DEBUG_VALUE: normalize:hash <- $r8
	.loc	0 0 2                           # liblzma/lz/lz_encoder_mf.c:0:2
	xorl	%r10d, %r10d
	.loc	0 122 2                         # liblzma/lz/lz_encoder_mf.c:122:2
	jmp	.LBB2_10
.Ltmp201:
.LBB2_7:                                # %vector.ph
                                        #   in Loop: Header=BB2_1 Depth=1
	#DEBUG_VALUE: lzma_mf_hc3_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc3_skip:amount <- $esi
	#DEBUG_VALUE: hash_2_value <- $ebx
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $edx
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $r9d
	#DEBUG_VALUE: normalize:hash <- $r8
	movl	%r9d, %r10d
	andl	$-16, %r10d
	movd	%edx, %xmm1
	pshufd	$0, %xmm1, %xmm1                # xmm1 = xmm1[0,0,0,0]
	movdqa	%xmm1, %xmm2
	pxor	%xmm0, %xmm2
	xorl	%r11d, %r11d
.Ltmp202:
	.p2align	4, 0x90
.LBB2_8:                                # %vector.body
                                        #   Parent Loop BB2_1 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: lzma_mf_hc3_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc3_skip:amount <- $esi
	#DEBUG_VALUE: hash_2_value <- $ebx
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $edx
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $r9d
	#DEBUG_VALUE: normalize:hash <- $r8
	.loc	0 133 7 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:133:7
	movdqu	(%r8,%r11,4), %xmm3
	movdqu	16(%r8,%r11,4), %xmm4
	movdqu	32(%r8,%r11,4), %xmm5
	movdqu	48(%r8,%r11,4), %xmm6
.Ltmp203:
	.loc	0 133 7 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:133:7
	movdqa	%xmm3, %xmm7
	pxor	%xmm0, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm1, %xmm3
	pand	%xmm7, %xmm3
	movdqa	%xmm4, %xmm7
	pxor	%xmm0, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm1, %xmm4
	pand	%xmm7, %xmm4
	movdqa	%xmm5, %xmm7
	pxor	%xmm0, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm1, %xmm5
	pand	%xmm7, %xmm5
	movdqa	%xmm6, %xmm7
	pxor	%xmm0, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm1, %xmm6
	pand	%xmm7, %xmm6
.Ltmp204:
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movdqu	%xmm3, (%r8,%r11,4)
	movdqu	%xmm4, 16(%r8,%r11,4)
	movdqu	%xmm5, 32(%r8,%r11,4)
	movdqu	%xmm6, 48(%r8,%r11,4)
.Ltmp205:
	.loc	0 122 34 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:122:34
	addq	$16, %r11
	cmpq	%r11, %r10
	jne	.LBB2_8
.Ltmp206:
# %bb.9:                                # %middle.block
                                        #   in Loop: Header=BB2_1 Depth=1
	#DEBUG_VALUE: lzma_mf_hc3_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc3_skip:amount <- $esi
	#DEBUG_VALUE: hash_2_value <- $ebx
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $edx
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $r9d
	#DEBUG_VALUE: normalize:hash <- $r8
	.loc	0 122 2 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:122:2
	cmpl	%r9d, %r10d
	je	.LBB2_11
.Ltmp207:
	.p2align	4, 0x90
.LBB2_10:                               # %for.body.i.i
                                        #   Parent Loop BB2_1 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: lzma_mf_hc3_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc3_skip:amount <- $esi
	#DEBUG_VALUE: hash_2_value <- $ebx
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $edx
	#DEBUG_VALUE: normalize:count <- $r9d
	#DEBUG_VALUE: normalize:hash <- $r8
	#DEBUG_VALUE: i <- $r10
	.loc	0 133 7 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:133:7
	movl	(%r8,%r10,4), %r11d
.Ltmp208:
	.loc	0 133 7 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:133:7
	subl	%edx, %r11d
	cmovbl	%ecx, %r11d
.Ltmp209:
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movl	%r11d, (%r8,%r10,4)
.Ltmp210:
	.loc	0 122 34 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:122:34
	incq	%r10
.Ltmp211:
	#DEBUG_VALUE: i <- $r10
	.loc	0 122 25 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:122:25
	cmpq	%r10, %r9
.Ltmp212:
	.loc	0 122 2                         # liblzma/lz/lz_encoder_mf.c:122:2
	jne	.LBB2_10
.Ltmp213:
.LBB2_11:                               # %normalize.exit.loopexit.i
                                        #   in Loop: Header=BB2_1 Depth=1
	#DEBUG_VALUE: lzma_mf_hc3_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc3_skip:amount <- $esi
	#DEBUG_VALUE: hash_2_value <- $ebx
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $edx
	#DEBUG_VALUE: normalize:count <- $r9d
	#DEBUG_VALUE: normalize:hash <- $r8
	.loc	0 140 13 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:140:13
	movl	20(%rdi), %r8d
.Ltmp214:
.LBB2_12:                               # %normalize.exit.i
                                        #   in Loop: Header=BB2_1 Depth=1
	#DEBUG_VALUE: lzma_mf_hc3_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc3_skip:amount <- $esi
	#DEBUG_VALUE: hash_2_value <- $ebx
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $edx
	subl	%edx, %r8d
	movl	%r8d, 20(%rdi)
	jmp	.LBB2_13
.Ltmp215:
.LBB2_14:                               # %do.end24
	#DEBUG_VALUE: lzma_mf_hc3_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc3_skip:amount <- $esi
	.loc	0 362 1 epilogue_begin          # liblzma/lz/lz_encoder_mf.c:362:1
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp216:
.Lfunc_end2:
	.size	lzma_mf_hc3_skip, .Lfunc_end2-lzma_mf_hc3_skip
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4, 0x0                          # -- Begin function lzma_mf_hc4_find
.LCPI3_0:
	.long	2147483648                      # 0x80000000
	.long	2147483648                      # 0x80000000
	.long	2147483648                      # 0x80000000
	.long	2147483648                      # 0x80000000
	.text
	.globl	lzma_mf_hc4_find
	.p2align	4, 0x90
	.type	lzma_mf_hc4_find,@function
lzma_mf_hc4_find:                       # @lzma_mf_hc4_find
.Lfunc_begin3:
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- $rsi
	.loc	0 370 2 prologue_end            # liblzma/lz/lz_encoder_mf.c:370:2
	movl	24(%rdi), %eax
	movl	36(%rdi), %ecx
.Ltmp217:
	.loc	4 232 23                        # liblzma/lz/lz_encoder.h:232:23
	subl	%eax, %ecx
.Ltmp218:
	#DEBUG_VALUE: lzma_mf_hc4_find:len_limit <- $ecx
	.loc	0 370 2                         # liblzma/lz/lz_encoder_mf.c:370:2
	movl	96(%rdi), %r8d
	cmpl	%ecx, %r8d
.Ltmp219:
	.loc	0 370 2 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:370:2
	jbe	.LBB3_3
.Ltmp220:
# %bb.1:                                # %if.else
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_hc4_find:len_limit <- $ecx
	.loc	0 0 2                           # liblzma/lz/lz_encoder_mf.c:0:2
	movl	%ecx, %r8d
.Ltmp221:
	.loc	0 370 2                         # liblzma/lz/lz_encoder_mf.c:370:2
	cmpl	$3, %ecx
.Ltmp222:
	.loc	0 370 2                         # liblzma/lz/lz_encoder_mf.c:370:2
	ja	.LBB3_3
.Ltmp223:
# %bb.2:                                # %if.then3
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_hc4_find:len_limit <- $ecx
	#DEBUG_VALUE: move_pending:mf <- $rdi
	.loc	0 178 2 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:178:2
	incl	%eax
	movl	%eax, 24(%rdi)
	.loc	0 180 2                         # liblzma/lz/lz_encoder_mf.c:180:2
	incl	40(%rdi)
	xorl	%eax, %eax
.Ltmp224:
                                        # kill: def $eax killed $eax killed $rax
	.loc	0 416 1                         # liblzma/lz/lz_encoder_mf.c:416:1
	retq
.Ltmp225:
.LBB3_3:                                # %if.end4
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_hc4_find:len_limit <- $ecx
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
.Ltmp226:
	#DEBUG_VALUE: lzma_mf_hc4_find:len_limit <- $r8d
	.loc	0 370 2                         # liblzma/lz/lz_encoder_mf.c:370:2
	movq	(%rdi), %r9
	.loc	0 374 30                        # liblzma/lz/lz_encoder_mf.c:374:30
	movq	64(%rdi), %r10
.Ltmp227:
	#DEBUG_VALUE: mf_ptr:mf <- undef
	.loc	4 224 20                        # liblzma/lz/lz_encoder.h:224:20
	leaq	(%r9,%rax), %rcx
.Ltmp228:
	#DEBUG_VALUE: lzma_mf_hc4_find:cur <- $rcx
	.loc	4 0 20 is_stmt 0                # liblzma/lz/lz_encoder.h:0:20
	movl	20(%rdi), %r15d
.Ltmp229:
	#DEBUG_VALUE: lzma_mf_hc4_find:pos <- undef
	#DEBUG_VALUE: lzma_mf_hc4_find:matches_count <- 0
	.loc	0 372 2 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:372:2
	movzbl	(%r9,%rax), %r11d
	movq	lzma_crc32_table@GOTPCREL(%rip), %rbx
	movzbl	1(%r9,%rax), %edx
	xorl	(%rbx,%r11,4), %edx
	.loc	0 370 2                         # liblzma/lz/lz_encoder_mf.c:370:2
	addl	%eax, %r15d
	.loc	0 372 2                         # liblzma/lz/lz_encoder_mf.c:372:2
	movzbl	2(%r9,%rax), %r11d
	shll	$8, %r11d
	xorl	%edx, %r11d
.Ltmp230:
	#DEBUG_VALUE: lzma_mf_hc4_find:temp <- $edx
	andl	$1023, %edx                     # imm = 0x3FF
.Ltmp231:
	#DEBUG_VALUE: lzma_mf_hc4_find:hash_2_value <- $edx
	movzwl	%r11w, %r14d
.Ltmp232:
	#DEBUG_VALUE: lzma_mf_hc4_find:hash_3_value <- $r14d
	movzbl	3(%r9,%rax), %eax
	movl	(%rbx,%rax,4), %eax
	shll	$5, %eax
	xorl	%r11d, %eax
	andl	88(%rdi), %eax
.Ltmp233:
	#DEBUG_VALUE: lzma_mf_hc4_find:hash_value <- $eax
	.loc	0 374 26                        # liblzma/lz/lz_encoder_mf.c:374:26
	movl	(%r10,%rdx,4), %ebp
	.loc	0 374 24 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:374:24
	movl	%r15d, %r11d
	subl	%ebp, %r11d
.Ltmp234:
	#DEBUG_VALUE: lzma_mf_hc4_find:delta2 <- $r11d
	.loc	0 376 12 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:376:12
	movl	4096(%r10,%r14,4), %ebx
.Ltmp235:
	#DEBUG_VALUE: lzma_mf_hc4_find:delta3 <- undef
	.loc	0 377 54                        # liblzma/lz/lz_encoder_mf.c:377:54
	addl	$66560, %eax                    # imm = 0x10400
.Ltmp236:
	.loc	0 377 29 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:377:29
	movl	(%r10,%rax,4), %r9d
.Ltmp237:
	#DEBUG_VALUE: lzma_mf_hc4_find:cur_match <- $r9d
	.loc	0 379 26 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:379:26
	movl	%r15d, (%r10,%rdx,4)
	.loc	0 380 6                         # liblzma/lz/lz_encoder_mf.c:380:6
	movq	64(%rdi), %rdx
.Ltmp238:
	.loc	0 380 43 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:380:43
	movl	%r15d, 4096(%rdx,%r14,4)
	.loc	0 381 6 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:381:6
	movq	64(%rdi), %rdx
	movl	%r15d, -20(%rsp)                # 4-byte Spill
	.loc	0 381 41 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:381:41
	movl	%r15d, (%rdx,%rax,4)
	movl	$1, %r10d
	xorl	%eax, %eax
	movb	$1, %r14b
.Ltmp239:
	#DEBUG_VALUE: lzma_mf_hc4_find:len_best <- 1
	.loc	0 385 13 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:385:13
	cmpl	84(%rdi), %r11d
	.loc	0 385 31 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:385:31
	jae	.LBB3_6
.Ltmp240:
# %bb.4:                                # %land.lhs.true
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_hc4_find:len_limit <- $r8d
	#DEBUG_VALUE: lzma_mf_hc4_find:cur <- $rcx
	#DEBUG_VALUE: lzma_mf_hc4_find:matches_count <- 0
	#DEBUG_VALUE: lzma_mf_hc4_find:delta2 <- $r11d
	#DEBUG_VALUE: lzma_mf_hc4_find:cur_match <- $r9d
	#DEBUG_VALUE: lzma_mf_hc4_find:len_best <- 1
	.loc	0 385 40                        # liblzma/lz/lz_encoder_mf.c:385:40
	movl	%r11d, %edx
	movq	%rcx, %r15
	subq	%rdx, %r15
	.loc	0 385 34                        # liblzma/lz/lz_encoder_mf.c:385:34
	movzbl	(%r15), %edx
	.loc	0 385 50                        # liblzma/lz/lz_encoder_mf.c:385:50
	cmpb	(%rcx), %dl
.Ltmp241:
	.loc	0 385 6                         # liblzma/lz/lz_encoder_mf.c:385:6
	jne	.LBB3_6
.Ltmp242:
# %bb.5:                                # %if.then50
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_hc4_find:len_limit <- $r8d
	#DEBUG_VALUE: lzma_mf_hc4_find:cur <- $rcx
	#DEBUG_VALUE: lzma_mf_hc4_find:matches_count <- 0
	#DEBUG_VALUE: lzma_mf_hc4_find:delta2 <- $r11d
	#DEBUG_VALUE: lzma_mf_hc4_find:cur_match <- $r9d
	#DEBUG_VALUE: lzma_mf_hc4_find:len_best <- 1
	#DEBUG_VALUE: lzma_mf_hc4_find:len_best <- 2
	.loc	0 387 18 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:387:18
	movl	$2, (%rsi)
	.loc	0 388 28                        # liblzma/lz/lz_encoder_mf.c:388:28
	leal	-1(%r11), %eax
	.loc	0 388 19 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:388:19
	movl	%eax, 4(%rsi)
	movl	$2, %r10d
	movl	$1, %eax
	xorl	%r14d, %r14d
.Ltmp243:
	#DEBUG_VALUE: lzma_mf_hc4_find:matches_count <- 1
.LBB3_6:                                # %if.end54
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_hc4_find:len_limit <- $r8d
	#DEBUG_VALUE: lzma_mf_hc4_find:cur <- $rcx
	#DEBUG_VALUE: lzma_mf_hc4_find:delta2 <- $r11d
	#DEBUG_VALUE: lzma_mf_hc4_find:cur_match <- $r9d
	#DEBUG_VALUE: lzma_mf_hc4_find:len_best <- $r10d
	#DEBUG_VALUE: lzma_mf_hc4_find:matches_count <- $eax
	.loc	0 392 13 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:392:13
	cmpl	%ebp, %ebx
	.loc	0 392 23 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:392:23
	je	.LBB3_10
.Ltmp244:
# %bb.7:                                # %land.lhs.true57
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_hc4_find:len_limit <- $r8d
	#DEBUG_VALUE: lzma_mf_hc4_find:cur <- $rcx
	#DEBUG_VALUE: lzma_mf_hc4_find:matches_count <- $eax
	#DEBUG_VALUE: lzma_mf_hc4_find:delta2 <- $r11d
	#DEBUG_VALUE: lzma_mf_hc4_find:cur_match <- $r9d
	#DEBUG_VALUE: lzma_mf_hc4_find:len_best <- $r10d
	.loc	0 0 23                          # liblzma/lz/lz_encoder_mf.c:0:23
	movl	-20(%rsp), %edx                 # 4-byte Reload
                                        # kill: def $edx killed $edx def $rdx
	subl	%ebx, %edx
.Ltmp245:
	#DEBUG_VALUE: lzma_mf_hc4_find:delta3 <- $edx
	.loc	0 392 33                        # liblzma/lz/lz_encoder_mf.c:392:33
	cmpl	84(%rdi), %edx
	.loc	0 393 4 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:393:4
	jae	.LBB3_10
.Ltmp246:
# %bb.8:                                # %land.lhs.true61
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_hc4_find:len_limit <- $r8d
	#DEBUG_VALUE: lzma_mf_hc4_find:cur <- $rcx
	#DEBUG_VALUE: lzma_mf_hc4_find:matches_count <- $eax
	#DEBUG_VALUE: lzma_mf_hc4_find:delta2 <- $r11d
	#DEBUG_VALUE: lzma_mf_hc4_find:delta3 <- $edx
	#DEBUG_VALUE: lzma_mf_hc4_find:cur_match <- $r9d
	#DEBUG_VALUE: lzma_mf_hc4_find:len_best <- $r10d
	.loc	0 393 13 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:393:13
	movl	%edx, %ebx
	movq	%rcx, %r15
	subq	%rbx, %r15
	.loc	0 393 7                         # liblzma/lz/lz_encoder_mf.c:393:7
	movzbl	(%r15), %ebx
	.loc	0 393 23                        # liblzma/lz/lz_encoder_mf.c:393:23
	cmpb	(%rcx), %bl
.Ltmp247:
	.loc	0 392 6 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:392:6
	jne	.LBB3_10
.Ltmp248:
# %bb.9:                                # %if.end74.thread
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_hc4_find:len_limit <- $r8d
	#DEBUG_VALUE: lzma_mf_hc4_find:cur <- $rcx
	#DEBUG_VALUE: lzma_mf_hc4_find:matches_count <- $eax
	#DEBUG_VALUE: lzma_mf_hc4_find:delta2 <- $r11d
	#DEBUG_VALUE: lzma_mf_hc4_find:delta3 <- $edx
	#DEBUG_VALUE: lzma_mf_hc4_find:cur_match <- $r9d
	#DEBUG_VALUE: lzma_mf_hc4_find:len_best <- $r10d
	#DEBUG_VALUE: lzma_mf_hc4_find:len_best <- 3
	.loc	0 395 42                        # liblzma/lz/lz_encoder_mf.c:395:42
	leal	-1(%rdx), %r10d
	.loc	0 395 28 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:395:28
	movl	%eax, %r11d
.Ltmp249:
	.loc	0 395 24                        # liblzma/lz/lz_encoder_mf.c:395:24
	incl	%eax
.Ltmp250:
	#DEBUG_VALUE: lzma_mf_hc4_find:matches_count <- $r11d
	#DEBUG_VALUE: lzma_mf_hc4_find:matches_count <- $eax
	.loc	0 395 33                        # liblzma/lz/lz_encoder_mf.c:395:33
	movl	%r10d, 4(%rsi,%r11,8)
	movl	$3, %r10d
.Ltmp251:
	#DEBUG_VALUE: lzma_mf_hc4_find:delta2 <- $edx
	#DEBUG_VALUE: lzma_mf_hc4_find:len_best <- $r10d
	.loc	0 400 20 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:400:20
	cmpl	%r8d, %r10d
.Ltmp252:
	.loc	0 400 3 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:400:3
	jne	.LBB3_13
	jmp	.LBB3_16
.Ltmp253:
.LBB3_10:                               # %if.end74
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_hc4_find:len_limit <- $r8d
	#DEBUG_VALUE: lzma_mf_hc4_find:cur <- $rcx
	#DEBUG_VALUE: lzma_mf_hc4_find:matches_count <- $eax
	#DEBUG_VALUE: lzma_mf_hc4_find:delta2 <- $r11d
	#DEBUG_VALUE: lzma_mf_hc4_find:cur_match <- $r9d
	#DEBUG_VALUE: lzma_mf_hc4_find:len_best <- $r10d
	#DEBUG_VALUE: lzma_mf_hc4_find:len_best <- $r10d
	#DEBUG_VALUE: lzma_mf_hc4_find:delta2 <- $r11d
	#DEBUG_VALUE: lzma_mf_hc4_find:matches_count <- $eax
	.loc	0 0 3                           # liblzma/lz/lz_encoder_mf.c:0:3
	movl	$1, %eax
.Ltmp254:
	.loc	0 399 6 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:399:6
	testb	%r14b, %r14b
	je	.LBB3_12
.Ltmp255:
# %bb.11:
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_hc4_find:len_limit <- $r8d
	#DEBUG_VALUE: lzma_mf_hc4_find:cur <- $rcx
	#DEBUG_VALUE: lzma_mf_hc4_find:delta2 <- $r11d
	#DEBUG_VALUE: lzma_mf_hc4_find:cur_match <- $r9d
	#DEBUG_VALUE: lzma_mf_hc4_find:len_best <- $r10d
	.loc	0 0 6 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:6
	xorl	%eax, %eax
	jmp	.LBB3_21
.Ltmp256:
.LBB3_12:
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_hc4_find:len_limit <- $r8d
	#DEBUG_VALUE: lzma_mf_hc4_find:cur <- $rcx
	#DEBUG_VALUE: lzma_mf_hc4_find:delta2 <- $r11d
	#DEBUG_VALUE: lzma_mf_hc4_find:cur_match <- $r9d
	#DEBUG_VALUE: lzma_mf_hc4_find:len_best <- $r10d
	movl	%r11d, %edx
	#DEBUG_VALUE: lzma_mf_hc4_find:len_best <- $r10d
.Ltmp257:
	.loc	0 400 20 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:400:20
	cmpl	%r8d, %r10d
.Ltmp258:
	.loc	0 400 3 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:400:3
	je	.LBB3_16
.Ltmp259:
.LBB3_13:                               # %for.body.lr.ph
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_hc4_find:len_limit <- $r8d
	#DEBUG_VALUE: lzma_mf_hc4_find:cur <- $rcx
	#DEBUG_VALUE: lzma_mf_hc4_find:delta2 <- $edx
	#DEBUG_VALUE: lzma_mf_hc4_find:cur_match <- $r9d
	#DEBUG_VALUE: lzma_mf_hc4_find:len_best <- $r10d
	.loc	0 0 3                           # liblzma/lz/lz_encoder_mf.c:0:3
	movl	%edx, %edx
.Ltmp260:
	negq	%rdx
.Ltmp261:
	.p2align	4, 0x90
.LBB3_14:                               # %for.body
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_hc4_find:len_limit <- $r8d
	#DEBUG_VALUE: lzma_mf_hc4_find:cur <- $rcx
	#DEBUG_VALUE: lzma_mf_hc4_find:cur_match <- $r9d
	#DEBUG_VALUE: lzma_mf_hc4_find:len_best <- $r10d
	#DEBUG_VALUE: lzma_mf_hc4_find:len_best <- $r10d
	.loc	0 401 14 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:401:14
	movl	%r10d, %r11d
	leaq	(%rcx,%r11), %rbx
	.loc	0 401 8 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:401:8
	movzbl	(%rdx,%rbx), %ebx
	.loc	0 401 35                        # liblzma/lz/lz_encoder_mf.c:401:35
	cmpb	(%rcx,%r11), %bl
.Ltmp262:
	.loc	0 401 8                         # liblzma/lz/lz_encoder_mf.c:401:8
	jne	.LBB3_20
.Ltmp263:
# %bb.15:                               # %for.inc
                                        #   in Loop: Header=BB3_14 Depth=1
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_hc4_find:len_limit <- $r8d
	#DEBUG_VALUE: lzma_mf_hc4_find:cur <- $rcx
	#DEBUG_VALUE: lzma_mf_hc4_find:cur_match <- $r9d
	#DEBUG_VALUE: lzma_mf_hc4_find:len_best <- $r10d
	.loc	0 400 34 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:400:34
	incl	%r10d
.Ltmp264:
	#DEBUG_VALUE: lzma_mf_hc4_find:len_best <- $r11d
	#DEBUG_VALUE: lzma_mf_hc4_find:len_best <- $r10d
	.loc	0 400 20 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:400:20
	cmpl	%r10d, %r8d
.Ltmp265:
	.loc	0 400 3                         # liblzma/lz/lz_encoder_mf.c:400:3
	jne	.LBB3_14
.Ltmp266:
.LBB3_16:                               # %do.body
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_hc4_find:len_limit <- $r8d
	#DEBUG_VALUE: lzma_mf_hc4_find:cur <- $rcx
	#DEBUG_VALUE: lzma_mf_hc4_find:cur_match <- $r9d
	#DEBUG_VALUE: lzma_mf_hc4_find:len_best <- $r10d
	.loc	0 404 25 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:404:25
	leal	-1(%rax), %ecx
.Ltmp267:
	.loc	0 404 34 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:404:34
	movl	%r8d, (%rsi,%rcx,8)
.Ltmp268:
	.loc	0 407 4 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:407:4
	movq	72(%rdi), %rcx
	movl	80(%rdi), %edx
	movl	%r9d, (%rcx,%rdx,4)
.Ltmp269:
	#DEBUG_VALUE: move_pos:mf <- $rdi
	.loc	0 150 6                         # liblzma/lz/lz_encoder_mf.c:150:6
	movl	80(%rdi), %edx
	incl	%edx
	.loc	0 150 30 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:150:30
	movl	84(%rdi), %ecx
	xorl	%esi, %esi
.Ltmp270:
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	.loc	0 150 23                        # liblzma/lz/lz_encoder_mf.c:150:23
	cmpl	%ecx, %edx
.Ltmp271:
	.loc	0 150 6                         # liblzma/lz/lz_encoder_mf.c:150:6
	cmovnel	%edx, %esi
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movl	%esi, 80(%rdi)
.Ltmp272:
	.loc	0 156 6 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:156:6
	movl	20(%rdi), %edx
.Ltmp273:
	.loc	0 153 2                         # liblzma/lz/lz_encoder_mf.c:153:2
	movl	24(%rdi), %esi
	leal	1(%rsi), %r8d
.Ltmp274:
	movl	%r8d, 24(%rdi)
.Ltmp275:
	.loc	0 156 6                         # liblzma/lz/lz_encoder_mf.c:156:6
	addl	%edx, %esi
	incl	%esi
	cmpl	$-1, %esi
.Ltmp276:
	.loc	0 156 6 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:156:6
	jne	.LBB3_53
.Ltmp277:
# %bb.17:                               # %if.then5.i
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_hc4_find:cur_match <- $r9d
	#DEBUG_VALUE: lzma_mf_hc4_find:len_best <- $r10d
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	.loc	0 116 26 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:116:26
	notl	%ecx
.Ltmp278:
	#DEBUG_VALUE: normalize:subvalue <- $ecx
	.loc	0 119 49                        # liblzma/lz/lz_encoder_mf.c:119:49
	movl	112(%rdi), %r9d
.Ltmp279:
	#DEBUG_VALUE: i <- 0
	.loc	0 122 25                        # liblzma/lz/lz_encoder_mf.c:122:25
	addl	108(%rdi), %r9d
.Ltmp280:
	#DEBUG_VALUE: normalize:count <- $r9d
	#DEBUG_VALUE: normalize:hash <- undef
	.loc	0 122 2 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:122:2
	je	.LBB3_52
.Ltmp281:
# %bb.18:                               # %for.body.preheader.i.i
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_hc4_find:len_best <- $r10d
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $ecx
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $r9d
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movq	64(%rdi), %rdx
.Ltmp282:
	#DEBUG_VALUE: normalize:hash <- $rdx
	.loc	0 122 25                        # liblzma/lz/lz_encoder_mf.c:122:25
	movl	%r9d, %esi
	xorl	%r8d, %r8d
.Ltmp283:
	.loc	0 122 2                         # liblzma/lz/lz_encoder_mf.c:122:2
	cmpl	$16, %r9d
	jae	.LBB3_47
.Ltmp284:
# %bb.19:
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_hc4_find:len_best <- $r10d
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $ecx
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $r9d
	#DEBUG_VALUE: normalize:hash <- $rdx
	.loc	0 0 2                           # liblzma/lz/lz_encoder_mf.c:0:2
	xorl	%r9d, %r9d
.Ltmp285:
	#DEBUG_VALUE: normalize:count <- $esi
	.loc	0 122 2                         # liblzma/lz/lz_encoder_mf.c:122:2
	jmp	.LBB3_50
.Ltmp286:
.LBB3_20:                               # %for.end
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_hc4_find:len_limit <- $r8d
	#DEBUG_VALUE: lzma_mf_hc4_find:cur <- $rcx
	#DEBUG_VALUE: lzma_mf_hc4_find:cur_match <- $r9d
	#DEBUG_VALUE: lzma_mf_hc4_find:len_best <- $r10d
	.loc	0 404 25 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:404:25
	leal	-1(%rax), %edx
	.loc	0 404 34 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:404:34
	movl	%r10d, (%rsi,%rdx,8)
.Ltmp287:
	.loc	0 415 2 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:415:2
	movl	%eax, %eax
.Ltmp288:
.LBB3_21:                               # %if.end104
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_hc4_find:len_limit <- $r8d
	#DEBUG_VALUE: lzma_mf_hc4_find:cur <- $rcx
	#DEBUG_VALUE: lzma_mf_hc4_find:cur_match <- $r9d
	#DEBUG_VALUE: lzma_mf_hc4_find:len_best <- $r10d
	#DEBUG_VALUE: lzma_mf_hc4_find:len_best <- undef
	movl	92(%rdi), %r11d
	movq	72(%rdi), %rbx
	movl	80(%rdi), %r14d
.Ltmp289:
	#DEBUG_VALUE: hc_find_func:cyclic_pos <- $r14d
	movl	84(%rdi), %ebp
	leaq	(%rsi,%rax,8), %rax
.Ltmp290:
	#DEBUG_VALUE: hc_find_func:matches <- $rax
	#DEBUG_VALUE: hc_find_func:len_limit <- $r8d
	#DEBUG_VALUE: hc_find_func:pos <- undef
	#DEBUG_VALUE: hc_find_func:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cur_match <- $r9d
	#DEBUG_VALUE: hc_find_func:depth <- $r11d
	#DEBUG_VALUE: hc_find_func:son <- $rbx
	#DEBUG_VALUE: hc_find_func:cyclic_size <- $ebp
	#DEBUG_VALUE: hc_find_func:len_best <- undef
	.loc	0 260 18                        # liblzma/lz/lz_encoder_mf.c:260:18
	movl	%r9d, (%rbx,%r14,4)
.Ltmp291:
	.loc	0 264 15                        # liblzma/lz/lz_encoder_mf.c:264:15
	testl	%r11d, %r11d
	movq	%rsi, -8(%rsp)                  # 8-byte Spill
.Ltmp292:
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- [DW_OP_constu 8, DW_OP_minus] [$rsp+0]
	.loc	0 0 15 is_stmt 0                # liblzma/lz/lz_encoder_mf.c:0:15
	movq	%rdi, -16(%rsp)                 # 8-byte Spill
.Ltmp293:
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	.loc	0 264 20                        # liblzma/lz/lz_encoder_mf.c:264:20
	je	.LBB3_37
.Ltmp294:
# %bb.22:                               # %if.end104
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- [DW_OP_constu 8, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc4_find:len_limit <- $r8d
	#DEBUG_VALUE: lzma_mf_hc4_find:cur <- $rcx
	#DEBUG_VALUE: lzma_mf_hc4_find:cur_match <- $r9d
	#DEBUG_VALUE: hc_find_func:cyclic_pos <- $r14d
	#DEBUG_VALUE: hc_find_func:matches <- $rax
	#DEBUG_VALUE: hc_find_func:len_limit <- $r8d
	#DEBUG_VALUE: hc_find_func:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cur_match <- $r9d
	#DEBUG_VALUE: hc_find_func:depth <- $r11d
	#DEBUG_VALUE: hc_find_func:son <- $rbx
	#DEBUG_VALUE: hc_find_func:cyclic_size <- $ebp
	.loc	0 0 20                          # liblzma/lz/lz_encoder_mf.c:0:20
	movl	-20(%rsp), %r15d                # 4-byte Reload
	subl	%r9d, %r15d
.Ltmp295:
	.loc	0 264 20                        # liblzma/lz/lz_encoder_mf.c:264:20
	cmpl	%ebp, %r15d
	jae	.LBB3_37
.Ltmp296:
# %bb.23:                               # %if.end.preheader.i
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- [DW_OP_constu 8, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc4_find:len_limit <- $r8d
	#DEBUG_VALUE: lzma_mf_hc4_find:cur <- $rcx
	#DEBUG_VALUE: lzma_mf_hc4_find:cur_match <- $r9d
	#DEBUG_VALUE: hc_find_func:cyclic_pos <- $r14d
	#DEBUG_VALUE: hc_find_func:matches <- $rax
	#DEBUG_VALUE: hc_find_func:len_limit <- $r8d
	#DEBUG_VALUE: hc_find_func:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cur_match <- $r9d
	#DEBUG_VALUE: hc_find_func:depth <- $r11d
	#DEBUG_VALUE: hc_find_func:son <- $rbx
	#DEBUG_VALUE: hc_find_func:cyclic_size <- $ebp
	.loc	0 412 6 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:412:6
	cmpl	$4, %r10d
	movl	$3, %r12d
	cmovael	%r10d, %r12d
.Ltmp297:
	#DEBUG_VALUE: lzma_mf_hc4_find:len_best <- $r12d
	#DEBUG_VALUE: hc_find_func:len_best <- $r12d
	.loc	0 0 6 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:6
	movq	%r8, %rdi
.Ltmp298:
	.loc	0 271 37 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:271:37
	leal	-1(%r8), %r9d
.Ltmp299:
	.loc	0 0 37 is_stmt 0                # liblzma/lz/lz_encoder_mf.c:0:37
	movl	-20(%rsp), %r8d                 # 4-byte Reload
.Ltmp300:
	.p2align	4, 0x90
.LBB3_24:                               # %if.end.i
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB3_27 Depth 2
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- [DW_OP_constu 8, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc4_find:len_limit <- $edi
	#DEBUG_VALUE: lzma_mf_hc4_find:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cyclic_pos <- $r14d
	#DEBUG_VALUE: hc_find_func:matches <- $rax
	#DEBUG_VALUE: hc_find_func:len_limit <- $edi
	#DEBUG_VALUE: hc_find_func:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:son <- $rbx
	#DEBUG_VALUE: hc_find_func:cyclic_size <- $ebp
	#DEBUG_VALUE: hc_find_func:len_best <- $r12d
	#DEBUG_VALUE: hc_find_func:len_best <- $r12d
	#DEBUG_VALUE: hc_find_func:matches <- $rax
	.loc	0 267 33 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:267:33
	movl	%r15d, %r10d
	movq	%rcx, %rdx
	subq	%r10, %rdx
.Ltmp301:
	#DEBUG_VALUE: pb <- $rdx
	.loc	0 268 30                        # liblzma/lz/lz_encoder_mf.c:268:30
	movl	%r14d, %r10d
	subl	%r15d, %r10d
	.loc	0 269 8                         # liblzma/lz/lz_encoder_mf.c:269:8
	movl	$0, %r13d
	cmovbl	%ebp, %r13d
	.loc	0 269 5 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:269:5
	addl	%r13d, %r10d
	.loc	0 268 15 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:268:15
	movl	(%rbx,%r10,4), %r10d
.Ltmp302:
	#DEBUG_VALUE: hc_find_func:cur_match <- $r10d
	.loc	0 271 7                         # liblzma/lz/lz_encoder_mf.c:271:7
	movl	%r12d, %r13d
	movzbl	(%rdx,%r13), %esi
	.loc	0 271 20 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:271:20
	cmpb	(%rcx,%r13), %sil
	.loc	0 271 37                        # liblzma/lz/lz_encoder_mf.c:271:37
	jne	.LBB3_31
.Ltmp303:
# %bb.25:                               # %land.lhs.true.i
                                        #   in Loop: Header=BB3_24 Depth=1
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- [DW_OP_constu 8, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc4_find:len_limit <- $edi
	#DEBUG_VALUE: lzma_mf_hc4_find:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cyclic_pos <- $r14d
	#DEBUG_VALUE: hc_find_func:matches <- $rax
	#DEBUG_VALUE: hc_find_func:len_limit <- $edi
	#DEBUG_VALUE: hc_find_func:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cur_match <- $r10d
	#DEBUG_VALUE: hc_find_func:son <- $rbx
	#DEBUG_VALUE: hc_find_func:cyclic_size <- $ebp
	#DEBUG_VALUE: hc_find_func:len_best <- $r12d
	#DEBUG_VALUE: pb <- $rdx
	.loc	0 271 40                        # liblzma/lz/lz_encoder_mf.c:271:40
	movzbl	(%rdx), %esi
	.loc	0 271 46                        # liblzma/lz/lz_encoder_mf.c:271:46
	cmpb	(%rcx), %sil
.Ltmp304:
	.loc	0 271 7                         # liblzma/lz/lz_encoder_mf.c:271:7
	jne	.LBB3_32
.Ltmp305:
# %bb.26:                               # %while.cond20.i.preheader
                                        #   in Loop: Header=BB3_24 Depth=1
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- [DW_OP_constu 8, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc4_find:len_limit <- $edi
	#DEBUG_VALUE: lzma_mf_hc4_find:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cyclic_pos <- $r14d
	#DEBUG_VALUE: hc_find_func:matches <- $rax
	#DEBUG_VALUE: hc_find_func:len_limit <- $edi
	#DEBUG_VALUE: hc_find_func:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cur_match <- $r10d
	#DEBUG_VALUE: hc_find_func:son <- $rbx
	#DEBUG_VALUE: hc_find_func:cyclic_size <- $ebp
	#DEBUG_VALUE: hc_find_func:len_best <- $r12d
	#DEBUG_VALUE: pb <- $rdx
	.loc	0 0 7                           # liblzma/lz/lz_encoder_mf.c:0:7
	xorl	%r13d, %r13d
.Ltmp306:
	.p2align	4, 0x90
.LBB3_27:                               # %while.cond20.i
                                        #   Parent Loop BB3_24 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- [DW_OP_constu 8, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc4_find:len_limit <- $edi
	#DEBUG_VALUE: lzma_mf_hc4_find:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cyclic_pos <- $r14d
	#DEBUG_VALUE: hc_find_func:matches <- $rax
	#DEBUG_VALUE: hc_find_func:len_limit <- $edi
	#DEBUG_VALUE: hc_find_func:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cur_match <- $r10d
	#DEBUG_VALUE: hc_find_func:son <- $rbx
	#DEBUG_VALUE: hc_find_func:cyclic_size <- $ebp
	#DEBUG_VALUE: hc_find_func:len_best <- $r12d
	#DEBUG_VALUE: pb <- $rdx
	#DEBUG_VALUE: len <- [DW_OP_plus_uconst 1, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r13
	.loc	0 273 17 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:273:17
	cmpq	%r13, %r9
	.loc	0 273 4 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:273:4
	je	.LBB3_35
.Ltmp307:
# %bb.28:                               # %while.body23.i
                                        #   in Loop: Header=BB3_27 Depth=2
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- [DW_OP_constu 8, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc4_find:len_limit <- $edi
	#DEBUG_VALUE: lzma_mf_hc4_find:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cyclic_pos <- $r14d
	#DEBUG_VALUE: hc_find_func:matches <- $rax
	#DEBUG_VALUE: hc_find_func:len_limit <- $edi
	#DEBUG_VALUE: hc_find_func:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cur_match <- $r10d
	#DEBUG_VALUE: hc_find_func:son <- $rbx
	#DEBUG_VALUE: hc_find_func:cyclic_size <- $ebp
	#DEBUG_VALUE: hc_find_func:len_best <- $r12d
	#DEBUG_VALUE: pb <- $rdx
	#DEBUG_VALUE: len <- [DW_OP_plus_uconst 1, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r13
	.loc	0 273 11                        # liblzma/lz/lz_encoder_mf.c:273:11
	incq	%r13
.Ltmp308:
	#DEBUG_VALUE: len <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r13
	.loc	0 274 9 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:274:9
	movl	%r13d, %esi
	movzbl	(%rdx,%rsi), %r8d
	.loc	0 274 17 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:274:17
	cmpb	(%rcx,%rsi), %r8b
.Ltmp309:
	.loc	0 274 9                         # liblzma/lz/lz_encoder_mf.c:274:9
	je	.LBB3_27
.Ltmp310:
# %bb.29:                               # %while.end.split.loop.exit.i
                                        #   in Loop: Header=BB3_24 Depth=1
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- [DW_OP_constu 8, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc4_find:len_limit <- $edi
	#DEBUG_VALUE: lzma_mf_hc4_find:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cyclic_pos <- $r14d
	#DEBUG_VALUE: hc_find_func:matches <- $rax
	#DEBUG_VALUE: hc_find_func:len_limit <- $edi
	#DEBUG_VALUE: hc_find_func:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cur_match <- $r10d
	#DEBUG_VALUE: hc_find_func:son <- $rbx
	#DEBUG_VALUE: hc_find_func:cyclic_size <- $ebp
	#DEBUG_VALUE: hc_find_func:len_best <- $r12d
	#DEBUG_VALUE: pb <- $rdx
	#DEBUG_VALUE: len <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r13
	.loc	0 0 9                           # liblzma/lz/lz_encoder_mf.c:0:9
	movl	-20(%rsp), %r8d                 # 4-byte Reload
.Ltmp311:
	.loc	0 277 17 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:277:17
	cmpl	%r13d, %r12d
.Ltmp312:
	.loc	0 277 8 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:277:8
	jae	.LBB3_31
.Ltmp313:
.LBB3_30:                               # %cleanup.i
                                        #   in Loop: Header=BB3_24 Depth=1
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- [DW_OP_constu 8, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc4_find:len_limit <- $edi
	#DEBUG_VALUE: lzma_mf_hc4_find:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cyclic_pos <- $r14d
	#DEBUG_VALUE: hc_find_func:matches <- $rax
	#DEBUG_VALUE: hc_find_func:len_limit <- $edi
	#DEBUG_VALUE: hc_find_func:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cur_match <- $r10d
	#DEBUG_VALUE: hc_find_func:son <- $rbx
	#DEBUG_VALUE: hc_find_func:cyclic_size <- $ebp
	#DEBUG_VALUE: hc_find_func:len_best <- $r12d
	#DEBUG_VALUE: pb <- $rdx
	.loc	0 280 27 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:280:27
	decl	%r15d
.Ltmp314:
	#DEBUG_VALUE: hc_find_func:matches <- undef
	#DEBUG_VALUE: hc_find_func:len_best <- $r13d
	.loc	0 279 18                        # liblzma/lz/lz_encoder_mf.c:279:18
	movl	%r13d, (%rax)
	.loc	0 280 19                        # liblzma/lz/lz_encoder_mf.c:280:19
	movl	%r15d, 4(%rax)
	.loc	0 281 5                         # liblzma/lz/lz_encoder_mf.c:281:5
	addq	$8, %rax
.Ltmp315:
	#DEBUG_VALUE: hc_find_func:matches <- $rax
	.loc	0 0 5 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:5
	cmpl	%edi, %r13d
	jne	.LBB3_33
	jmp	.LBB3_37
.Ltmp316:
	.p2align	4, 0x90
.LBB3_32:                               #   in Loop: Header=BB3_24 Depth=1
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- [DW_OP_constu 8, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc4_find:len_limit <- $edi
	#DEBUG_VALUE: lzma_mf_hc4_find:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cyclic_pos <- $r14d
	#DEBUG_VALUE: hc_find_func:matches <- $rax
	#DEBUG_VALUE: hc_find_func:len_limit <- $edi
	#DEBUG_VALUE: hc_find_func:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cur_match <- $r10d
	#DEBUG_VALUE: hc_find_func:son <- $rbx
	#DEBUG_VALUE: hc_find_func:cyclic_size <- $ebp
	#DEBUG_VALUE: hc_find_func:len_best <- $r12d
	#DEBUG_VALUE: pb <- $rdx
	movl	%r12d, %r13d
.Ltmp317:
	#DEBUG_VALUE: hc_find_func:len_best <- $r13d
.LBB3_33:                               # %cleanup46.i
                                        #   in Loop: Header=BB3_24 Depth=1
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- [DW_OP_constu 8, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc4_find:len_limit <- $edi
	#DEBUG_VALUE: lzma_mf_hc4_find:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cyclic_pos <- $r14d
	#DEBUG_VALUE: hc_find_func:matches <- $rax
	#DEBUG_VALUE: hc_find_func:len_limit <- $edi
	#DEBUG_VALUE: hc_find_func:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cur_match <- $r10d
	#DEBUG_VALUE: hc_find_func:son <- $rbx
	#DEBUG_VALUE: hc_find_func:cyclic_size <- $ebp
	#DEBUG_VALUE: hc_find_func:len_best <- $r13d
	#DEBUG_VALUE: pb <- $rdx
	decl	%r11d
	#DEBUG_VALUE: hc_find_func:cur_match <- $r10d
	#DEBUG_VALUE: hc_find_func:len_best <- $r13d
	#DEBUG_VALUE: hc_find_func:matches <- $rax
.Ltmp318:
	#DEBUG_VALUE: hc_find_func:depth <- $r11d
	#DEBUG_VALUE: delta <- undef
	#DEBUG_VALUE: hc_find_func:depth <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r11d
	jne	.LBB3_34
	jmp	.LBB3_37
.Ltmp319:
.LBB3_35:                               #   in Loop: Header=BB3_24 Depth=1
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- [DW_OP_constu 8, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc4_find:len_limit <- $edi
	#DEBUG_VALUE: lzma_mf_hc4_find:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cyclic_pos <- $r14d
	#DEBUG_VALUE: hc_find_func:matches <- $rax
	#DEBUG_VALUE: hc_find_func:len_limit <- $edi
	#DEBUG_VALUE: hc_find_func:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cur_match <- $r10d
	#DEBUG_VALUE: hc_find_func:son <- $rbx
	#DEBUG_VALUE: hc_find_func:cyclic_size <- $ebp
	#DEBUG_VALUE: hc_find_func:len_best <- $r12d
	#DEBUG_VALUE: pb <- $rdx
	#DEBUG_VALUE: len <- [DW_OP_plus_uconst 1, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r13
	movl	%edi, %r13d
	movl	-20(%rsp), %r8d                 # 4-byte Reload
.Ltmp320:
	.loc	0 277 17 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:277:17
	cmpl	%r13d, %r12d
.Ltmp321:
	.loc	0 277 8 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:277:8
	jb	.LBB3_30
.Ltmp322:
	.p2align	4, 0x90
.LBB3_31:                               #   in Loop: Header=BB3_24 Depth=1
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- [DW_OP_constu 8, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc4_find:len_limit <- $edi
	#DEBUG_VALUE: lzma_mf_hc4_find:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cyclic_pos <- $r14d
	#DEBUG_VALUE: hc_find_func:matches <- $rax
	#DEBUG_VALUE: hc_find_func:len_limit <- $edi
	#DEBUG_VALUE: hc_find_func:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cur_match <- $r10d
	#DEBUG_VALUE: hc_find_func:son <- $rbx
	#DEBUG_VALUE: hc_find_func:cyclic_size <- $ebp
	#DEBUG_VALUE: hc_find_func:len_best <- $r12d
	#DEBUG_VALUE: pb <- $rdx
	.loc	0 0 8                           # liblzma/lz/lz_encoder_mf.c:0:8
	movl	%r12d, %r13d
.Ltmp323:
	#DEBUG_VALUE: hc_find_func:len_best <- $r13d
	decl	%r11d
	#DEBUG_VALUE: hc_find_func:cur_match <- $r10d
.Ltmp324:
	#DEBUG_VALUE: hc_find_func:len_best <- $r12d
	#DEBUG_VALUE: hc_find_func:matches <- $rax
	#DEBUG_VALUE: hc_find_func:depth <- undef
	#DEBUG_VALUE: delta <- undef
	#DEBUG_VALUE: hc_find_func:depth <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
	.loc	0 264 20 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:264:20
	je	.LBB3_37
.Ltmp325:
.LBB3_34:                               # %cleanup46.i
                                        #   in Loop: Header=BB3_24 Depth=1
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- [DW_OP_constu 8, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc4_find:len_limit <- $edi
	#DEBUG_VALUE: lzma_mf_hc4_find:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cyclic_pos <- $r14d
	#DEBUG_VALUE: hc_find_func:matches <- $rax
	#DEBUG_VALUE: hc_find_func:len_limit <- $edi
	#DEBUG_VALUE: hc_find_func:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cur_match <- $r10d
	#DEBUG_VALUE: hc_find_func:son <- $rbx
	#DEBUG_VALUE: hc_find_func:cyclic_size <- $ebp
	#DEBUG_VALUE: hc_find_func:len_best <- $r13d
	#DEBUG_VALUE: pb <- $rdx
	.loc	0 0 0 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:0
	movl	%r8d, %r15d
	subl	%r10d, %r15d
.Ltmp326:
	#DEBUG_VALUE: delta <- $r15d
	movl	%r13d, %r12d
.Ltmp327:
	.loc	0 264 20                        # liblzma/lz/lz_encoder_mf.c:264:20
	cmpl	%ebp, %r15d
	jb	.LBB3_24
.Ltmp328:
.LBB3_37:                               # %hc_find_func.exit
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- [DW_OP_constu 8, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc4_find:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:cyclic_pos <- $r14d
	#DEBUG_VALUE: hc_find_func:matches <- $rax
	#DEBUG_VALUE: hc_find_func:cur <- $rcx
	#DEBUG_VALUE: hc_find_func:son <- $rbx
	#DEBUG_VALUE: hc_find_func:cyclic_size <- $ebp
	#DEBUG_VALUE: hc_find_func:cur_match <- undef
	#DEBUG_VALUE: hc_find_func:len_best <- undef
	#DEBUG_VALUE: hc_find_func:matches <- undef
	.loc	0 415 2 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:415:2
	subq	-8(%rsp), %rax                  # 8-byte Folded Reload
	shrq	$3, %rax
.Ltmp329:
	#DEBUG_VALUE: lzma_mf_hc4_find:matches_count <- $eax
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 16, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 0 2 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:2
	movq	-16(%rsp), %r11                 # 8-byte Reload
.Ltmp330:
	.loc	0 150 6 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:150:6
	movl	80(%r11), %edx
	incl	%edx
	.loc	0 150 30 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:150:30
	movl	84(%r11), %ecx
.Ltmp331:
	.loc	0 0 30                          # liblzma/lz/lz_encoder_mf.c:0:30
	xorl	%esi, %esi
	.loc	0 150 23                        # liblzma/lz/lz_encoder_mf.c:150:23
	cmpl	%ecx, %edx
.Ltmp332:
	.loc	0 150 6                         # liblzma/lz/lz_encoder_mf.c:150:6
	cmovnel	%edx, %esi
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movl	%esi, 80(%r11)
.Ltmp333:
	.loc	0 156 6 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:156:6
	movl	20(%r11), %edx
.Ltmp334:
	.loc	0 153 2                         # liblzma/lz/lz_encoder_mf.c:153:2
	movl	24(%r11), %esi
	leal	1(%rsi), %edi
	movl	%edi, 24(%r11)
.Ltmp335:
	.loc	0 156 6                         # liblzma/lz/lz_encoder_mf.c:156:6
	addl	%edx, %esi
	incl	%esi
	cmpl	$-1, %esi
.Ltmp336:
	.loc	0 156 6 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:156:6
	jne	.LBB3_53
.Ltmp337:
# %bb.38:                               # %if.then5.i224
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- [DW_OP_constu 8, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc4_find:matches_count <- $eax
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 16, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 16, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 116 26 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:116:26
	notl	%ecx
.Ltmp338:
	#DEBUG_VALUE: normalize:subvalue <- $ecx
	.loc	0 119 49                        # liblzma/lz/lz_encoder_mf.c:119:49
	movl	112(%r11), %r9d
.Ltmp339:
	#DEBUG_VALUE: i <- 0
	.loc	0 122 25                        # liblzma/lz/lz_encoder_mf.c:122:25
	addl	108(%r11), %r9d
.Ltmp340:
	#DEBUG_VALUE: normalize:count <- $r9d
	#DEBUG_VALUE: normalize:hash <- undef
	.loc	0 122 2 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:122:2
	je	.LBB3_46
.Ltmp341:
# %bb.39:                               # %for.body.preheader.i.i231
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- [DW_OP_constu 8, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc4_find:matches_count <- $eax
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 16, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 16, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:subvalue <- $ecx
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $r9d
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movq	64(%r11), %rdx
.Ltmp342:
	#DEBUG_VALUE: normalize:hash <- $rdx
	.loc	0 122 25                        # liblzma/lz/lz_encoder_mf.c:122:25
	movl	%r9d, %esi
	xorl	%r8d, %r8d
.Ltmp343:
	.loc	0 122 2                         # liblzma/lz/lz_encoder_mf.c:122:2
	cmpl	$16, %r9d
	jae	.LBB3_41
.Ltmp344:
# %bb.40:
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- [DW_OP_constu 8, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc4_find:matches_count <- $eax
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 16, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 16, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:subvalue <- $ecx
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $r9d
	#DEBUG_VALUE: normalize:hash <- $rdx
	.loc	0 0 2                           # liblzma/lz/lz_encoder_mf.c:0:2
	xorl	%r9d, %r9d
.Ltmp345:
	#DEBUG_VALUE: normalize:count <- $esi
	.loc	0 122 2                         # liblzma/lz/lz_encoder_mf.c:122:2
	jmp	.LBB3_44
.Ltmp346:
.LBB3_41:                               # %vector.ph270
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- [DW_OP_constu 8, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc4_find:matches_count <- $eax
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 16, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 16, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:subvalue <- $ecx
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $r9d
	#DEBUG_VALUE: normalize:hash <- $rdx
	movl	%esi, %r9d
.Ltmp347:
	#DEBUG_VALUE: normalize:count <- $esi
	andl	$-16, %r9d
	movd	%ecx, %xmm0
	pshufd	$0, %xmm0, %xmm0                # xmm0 = xmm0[0,0,0,0]
	xorl	%r10d, %r10d
	movdqa	.LCPI3_0(%rip), %xmm1           # xmm1 = [2147483648,2147483648,2147483648,2147483648]
	movdqa	%xmm0, %xmm2
	pxor	%xmm1, %xmm2
.Ltmp348:
	.p2align	4, 0x90
.LBB3_42:                               # %vector.body274
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- [DW_OP_constu 8, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc4_find:matches_count <- $eax
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 16, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 16, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:subvalue <- $ecx
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $esi
	#DEBUG_VALUE: normalize:hash <- $rdx
	.loc	0 133 7 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:133:7
	movdqu	(%rdx,%r10,4), %xmm3
	movdqu	16(%rdx,%r10,4), %xmm4
	movdqu	32(%rdx,%r10,4), %xmm5
	movdqu	48(%rdx,%r10,4), %xmm6
.Ltmp349:
	.loc	0 133 7 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:133:7
	movdqa	%xmm3, %xmm7
	pxor	%xmm1, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm0, %xmm3
	pand	%xmm7, %xmm3
	movdqa	%xmm4, %xmm7
	pxor	%xmm1, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm0, %xmm4
	pand	%xmm7, %xmm4
	movdqa	%xmm5, %xmm7
	pxor	%xmm1, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm0, %xmm5
	pand	%xmm7, %xmm5
	movdqa	%xmm6, %xmm7
	pxor	%xmm1, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm0, %xmm6
	pand	%xmm7, %xmm6
.Ltmp350:
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movdqu	%xmm3, (%rdx,%r10,4)
	movdqu	%xmm4, 16(%rdx,%r10,4)
	movdqu	%xmm5, 32(%rdx,%r10,4)
	movdqu	%xmm6, 48(%rdx,%r10,4)
.Ltmp351:
	.loc	0 122 34 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:122:34
	addq	$16, %r10
	cmpq	%r10, %r9
	jne	.LBB3_42
.Ltmp352:
# %bb.43:                               # %middle.block267
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- [DW_OP_constu 8, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc4_find:matches_count <- $eax
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 16, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 16, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:subvalue <- $ecx
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $esi
	#DEBUG_VALUE: normalize:hash <- $rdx
	.loc	0 122 2 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:122:2
	cmpl	%esi, %r9d
	je	.LBB3_45
.Ltmp353:
	.p2align	4, 0x90
.LBB3_44:                               # %for.body.i.i233
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- [DW_OP_constu 8, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc4_find:matches_count <- $eax
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 16, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 16, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:subvalue <- $ecx
	#DEBUG_VALUE: normalize:count <- $esi
	#DEBUG_VALUE: normalize:hash <- $rdx
	#DEBUG_VALUE: i <- $r9
	.loc	0 133 7 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:133:7
	movl	(%rdx,%r9,4), %edi
.Ltmp354:
	.loc	0 133 7 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:133:7
	subl	%ecx, %edi
	cmovbl	%r8d, %edi
.Ltmp355:
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movl	%edi, (%rdx,%r9,4)
.Ltmp356:
	.loc	0 122 34 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:122:34
	incq	%r9
.Ltmp357:
	#DEBUG_VALUE: i <- $r9
	.loc	0 122 25 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:122:25
	cmpq	%r9, %rsi
.Ltmp358:
	.loc	0 122 2                         # liblzma/lz/lz_encoder_mf.c:122:2
	jne	.LBB3_44
.Ltmp359:
.LBB3_45:                               # %normalize.exit.loopexit.i239
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- [DW_OP_constu 8, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc4_find:matches_count <- $eax
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 16, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 16, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:subvalue <- $ecx
	#DEBUG_VALUE: normalize:count <- $esi
	#DEBUG_VALUE: normalize:hash <- $rdx
	.loc	0 140 13 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:140:13
	movl	20(%r11), %edx
.Ltmp360:
.LBB3_46:                               # %normalize.exit.i241
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- [DW_OP_constu 8, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_hc4_find:matches_count <- $eax
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 16, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 16, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:subvalue <- $ecx
	subl	%ecx, %edx
	movl	%edx, 20(%r11)
	jmp	.LBB3_53
.Ltmp361:
.LBB3_47:                               # %vector.ph
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_hc4_find:len_best <- $r10d
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $ecx
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $r9d
	#DEBUG_VALUE: normalize:hash <- $rdx
	.loc	0 122 2                         # liblzma/lz/lz_encoder_mf.c:122:2
	movl	%esi, %r9d
.Ltmp362:
	#DEBUG_VALUE: normalize:count <- $esi
	andl	$-16, %r9d
	movd	%ecx, %xmm0
	pshufd	$0, %xmm0, %xmm0                # xmm0 = xmm0[0,0,0,0]
	xorl	%r10d, %r10d
.Ltmp363:
	.loc	0 0 2 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:2
	movdqa	.LCPI3_0(%rip), %xmm1           # xmm1 = [2147483648,2147483648,2147483648,2147483648]
	movdqa	%xmm0, %xmm2
	pxor	%xmm1, %xmm2
.Ltmp364:
	.p2align	4, 0x90
.LBB3_48:                               # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $ecx
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $esi
	#DEBUG_VALUE: normalize:hash <- $rdx
	.loc	0 133 7 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:133:7
	movdqu	(%rdx,%r10,4), %xmm3
	movdqu	16(%rdx,%r10,4), %xmm4
	movdqu	32(%rdx,%r10,4), %xmm5
	movdqu	48(%rdx,%r10,4), %xmm6
.Ltmp365:
	.loc	0 133 7 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:133:7
	movdqa	%xmm3, %xmm7
	pxor	%xmm1, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm0, %xmm3
	pand	%xmm7, %xmm3
	movdqa	%xmm4, %xmm7
	pxor	%xmm1, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm0, %xmm4
	pand	%xmm7, %xmm4
	movdqa	%xmm5, %xmm7
	pxor	%xmm1, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm0, %xmm5
	pand	%xmm7, %xmm5
	movdqa	%xmm6, %xmm7
	pxor	%xmm1, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm0, %xmm6
	pand	%xmm7, %xmm6
.Ltmp366:
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movdqu	%xmm3, (%rdx,%r10,4)
	movdqu	%xmm4, 16(%rdx,%r10,4)
	movdqu	%xmm5, 32(%rdx,%r10,4)
	movdqu	%xmm6, 48(%rdx,%r10,4)
.Ltmp367:
	.loc	0 122 34 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:122:34
	addq	$16, %r10
	cmpq	%r10, %r9
	jne	.LBB3_48
.Ltmp368:
# %bb.49:                               # %middle.block
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $ecx
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $esi
	#DEBUG_VALUE: normalize:hash <- $rdx
	.loc	0 122 2 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:122:2
	cmpl	%esi, %r9d
	je	.LBB3_51
.Ltmp369:
	.p2align	4, 0x90
.LBB3_50:                               # %for.body.i.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $ecx
	#DEBUG_VALUE: normalize:count <- $esi
	#DEBUG_VALUE: normalize:hash <- $rdx
	#DEBUG_VALUE: i <- $r9
	.loc	0 133 7 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:133:7
	movl	(%rdx,%r9,4), %r10d
.Ltmp370:
	.loc	0 133 7 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:133:7
	subl	%ecx, %r10d
	cmovbl	%r8d, %r10d
.Ltmp371:
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movl	%r10d, (%rdx,%r9,4)
.Ltmp372:
	.loc	0 122 34 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:122:34
	incq	%r9
.Ltmp373:
	#DEBUG_VALUE: i <- $r9
	.loc	0 122 25 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:122:25
	cmpq	%r9, %rsi
.Ltmp374:
	.loc	0 122 2                         # liblzma/lz/lz_encoder_mf.c:122:2
	jne	.LBB3_50
.Ltmp375:
.LBB3_51:                               # %normalize.exit.loopexit.i
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $ecx
	#DEBUG_VALUE: normalize:count <- $esi
	#DEBUG_VALUE: normalize:hash <- $rdx
	.loc	0 140 13 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:140:13
	movl	20(%rdi), %edx
.Ltmp376:
.LBB3_52:                               # %normalize.exit.i
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $ecx
	subl	%ecx, %edx
	movl	%edx, 20(%rdi)
.Ltmp377:
.LBB3_53:
	#DEBUG_VALUE: lzma_mf_hc4_find:mf <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: lzma_mf_hc4_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	.loc	0 0 13 is_stmt 0                # liblzma/lz/lz_encoder_mf.c:0:13
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	.cfi_restore %rbx
	.cfi_restore %r12
	.cfi_restore %r13
	.cfi_restore %r14
	.cfi_restore %r15
	.cfi_restore %rbp
                                        # kill: def $eax killed $eax killed $rax
	.loc	0 416 1 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:416:1
	retq
.Ltmp378:
.Lfunc_end3:
	.size	lzma_mf_hc4_find, .Lfunc_end3-lzma_mf_hc4_find
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4, 0x0                          # -- Begin function lzma_mf_hc4_skip
.LCPI4_0:
	.long	2147483648                      # 0x80000000
	.long	2147483648                      # 0x80000000
	.long	2147483648                      # 0x80000000
	.long	2147483648                      # 0x80000000
	.text
	.globl	lzma_mf_hc4_skip
	.p2align	4, 0x90
	.type	lzma_mf_hc4_skip,@function
lzma_mf_hc4_skip:                       # @lzma_mf_hc4_skip
.Lfunc_begin4:
	.loc	0 421 0                         # liblzma/lz/lz_encoder_mf.c:421:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: lzma_mf_hc4_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc4_skip:amount <- $esi
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	lzma_crc32_table@GOTPCREL(%rip), %rax
	xorl	%ecx, %ecx
	movdqa	.LCPI4_0(%rip), %xmm0           # xmm0 = [2147483648,2147483648,2147483648,2147483648]
	jmp	.LBB4_1
.Ltmp379:
	.p2align	4, 0x90
.LBB4_2:                                # %if.then
                                        #   in Loop: Header=BB4_1 Depth=1
	#DEBUG_VALUE: lzma_mf_hc4_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc4_skip:amount <- $esi
	#DEBUG_VALUE: move_pending:mf <- $rdi
	.loc	0 178 2 prologue_end            # liblzma/lz/lz_encoder_mf.c:178:2
	incl	%r8d
	movl	%r8d, 24(%rdi)
	.loc	0 180 2                         # liblzma/lz/lz_encoder_mf.c:180:2
	incl	40(%rdi)
.Ltmp380:
.LBB4_13:                               # %do.cond35
                                        #   in Loop: Header=BB4_1 Depth=1
	#DEBUG_VALUE: lzma_mf_hc4_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc4_skip:amount <- $esi
	.loc	0 442 20                        # liblzma/lz/lz_encoder_mf.c:442:20
	decl	%esi
.Ltmp381:
	#DEBUG_VALUE: lzma_mf_hc4_skip:amount <- $esi
	.loc	0 442 2 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:442:2
	je	.LBB4_14
.Ltmp382:
.LBB4_1:                                # %do.body
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB4_8 Depth 2
                                        #     Child Loop BB4_10 Depth 2
	#DEBUG_VALUE: lzma_mf_hc4_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc4_skip:amount <- $esi
	#DEBUG_VALUE: lzma_mf_hc4_skip:amount <- $esi
	.loc	0 423 7 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:423:7
	movl	24(%rdi), %r8d
	movl	36(%rdi), %edx
.Ltmp383:
	#DEBUG_VALUE: mf_avail:mf <- undef
	.loc	4 232 23                        # liblzma/lz/lz_encoder.h:232:23
	subl	%r8d, %edx
.Ltmp384:
	.loc	0 423 20                        # liblzma/lz/lz_encoder_mf.c:423:20
	cmpl	$3, %edx
.Ltmp385:
	.loc	0 423 7 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:423:7
	jbe	.LBB4_2
.Ltmp386:
# %bb.3:                                # %if.end
                                        #   in Loop: Header=BB4_1 Depth=1
	#DEBUG_VALUE: lzma_mf_hc4_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc4_skip:amount <- $esi
	#DEBUG_VALUE: mf_ptr:mf <- undef
	#DEBUG_VALUE: cur <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] undef, undef
	.loc	0 0 7                           # liblzma/lz/lz_encoder_mf.c:0:7
	movl	20(%rdi), %edx
	.loc	0 429 37 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:429:37
	addl	%r8d, %edx
.Ltmp387:
	#DEBUG_VALUE: pos <- undef
	.loc	0 428 24                        # liblzma/lz/lz_encoder_mf.c:428:24
	movq	(%rdi), %r9
.Ltmp388:
	#DEBUG_VALUE: cur <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r9, $r8d
	.loc	0 431 3                         # liblzma/lz/lz_encoder_mf.c:431:3
	movzbl	(%r9,%r8), %r10d
	movzbl	1(%r9,%r8), %r11d
	xorl	(%rax,%r10,4), %r11d
	.loc	0 434 11                        # liblzma/lz/lz_encoder_mf.c:434:11
	movq	64(%rdi), %r10
	.loc	0 431 3                         # liblzma/lz/lz_encoder_mf.c:431:3
	movzbl	2(%r9,%r8), %ebx
	shll	$8, %ebx
	xorl	%r11d, %ebx
.Ltmp389:
	#DEBUG_VALUE: temp <- $r11d
	andl	$1023, %r11d                    # imm = 0x3FF
.Ltmp390:
	#DEBUG_VALUE: hash_2_value <- $r11d
	movzwl	%bx, %r14d
.Ltmp391:
	#DEBUG_VALUE: hash_3_value <- $r14d
	movzbl	3(%r9,%r8), %r8d
.Ltmp392:
	movl	(%rax,%r8,4), %r8d
	shll	$5, %r8d
	xorl	%ebx, %r8d
	andl	88(%rdi), %r8d
.Ltmp393:
	#DEBUG_VALUE: hash_value <- $r8d
	.loc	0 434 32                        # liblzma/lz/lz_encoder_mf.c:434:32
	addl	$66560, %r8d                    # imm = 0x10400
.Ltmp394:
	.loc	0 434 7 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:434:7
	movl	(%r10,%r8,4), %r9d
.Ltmp395:
	#DEBUG_VALUE: cur_match <- $r9d
	.loc	0 436 26 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:436:26
	movl	%edx, (%r10,%r11,4)
	.loc	0 437 7                         # liblzma/lz/lz_encoder_mf.c:437:7
	movq	64(%rdi), %r10
	.loc	0 437 44 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:437:44
	movl	%edx, 4096(%r10,%r14,4)
	.loc	0 438 7 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:438:7
	movq	64(%rdi), %r10
	.loc	0 438 42 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:438:42
	movl	%edx, (%r10,%r8,4)
.Ltmp396:
	.loc	0 440 3 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:440:3
	movq	72(%rdi), %rdx
	movl	80(%rdi), %r8d
	movl	%r9d, (%rdx,%r8,4)
.Ltmp397:
	#DEBUG_VALUE: move_pos:mf <- $rdi
	.loc	0 150 6                         # liblzma/lz/lz_encoder_mf.c:150:6
	movl	80(%rdi), %r8d
	incl	%r8d
	.loc	0 150 30 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:150:30
	movl	84(%rdi), %edx
	.loc	0 150 23                        # liblzma/lz/lz_encoder_mf.c:150:23
	cmpl	%edx, %r8d
.Ltmp398:
	.loc	0 150 6                         # liblzma/lz/lz_encoder_mf.c:150:6
	cmovel	%ecx, %r8d
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movl	%r8d, 80(%rdi)
.Ltmp399:
	.loc	0 156 6 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:156:6
	movl	20(%rdi), %r8d
.Ltmp400:
	.loc	0 153 2                         # liblzma/lz/lz_encoder_mf.c:153:2
	movl	24(%rdi), %r9d
.Ltmp401:
	leal	1(%r9), %r10d
	movl	%r10d, 24(%rdi)
.Ltmp402:
	.loc	0 156 6                         # liblzma/lz/lz_encoder_mf.c:156:6
	addl	%r8d, %r9d
	incl	%r9d
	cmpl	$-1, %r9d
.Ltmp403:
	.loc	0 156 6 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:156:6
	jne	.LBB4_13
.Ltmp404:
# %bb.4:                                # %if.then5.i
                                        #   in Loop: Header=BB4_1 Depth=1
	#DEBUG_VALUE: lzma_mf_hc4_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc4_skip:amount <- $esi
	#DEBUG_VALUE: hash_2_value <- $r11d
	#DEBUG_VALUE: hash_3_value <- $r14d
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	.loc	0 116 26 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:116:26
	notl	%edx
.Ltmp405:
	#DEBUG_VALUE: normalize:subvalue <- $edx
	.loc	0 119 49                        # liblzma/lz/lz_encoder_mf.c:119:49
	movl	112(%rdi), %r10d
.Ltmp406:
	#DEBUG_VALUE: i <- 0
	.loc	0 122 25                        # liblzma/lz/lz_encoder_mf.c:122:25
	addl	108(%rdi), %r10d
.Ltmp407:
	#DEBUG_VALUE: normalize:count <- $r10d
	#DEBUG_VALUE: normalize:hash <- undef
	.loc	0 122 2 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:122:2
	je	.LBB4_12
.Ltmp408:
# %bb.5:                                # %for.body.preheader.i.i
                                        #   in Loop: Header=BB4_1 Depth=1
	#DEBUG_VALUE: lzma_mf_hc4_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc4_skip:amount <- $esi
	#DEBUG_VALUE: hash_2_value <- $r11d
	#DEBUG_VALUE: hash_3_value <- $r14d
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $edx
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $r10d
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movq	64(%rdi), %r8
.Ltmp409:
	#DEBUG_VALUE: normalize:hash <- $r8
	.loc	0 122 25                        # liblzma/lz/lz_encoder_mf.c:122:25
	movl	%r10d, %r9d
.Ltmp410:
	.loc	0 122 2                         # liblzma/lz/lz_encoder_mf.c:122:2
	cmpl	$16, %r10d
	jae	.LBB4_7
.Ltmp411:
# %bb.6:                                #   in Loop: Header=BB4_1 Depth=1
	#DEBUG_VALUE: lzma_mf_hc4_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc4_skip:amount <- $esi
	#DEBUG_VALUE: hash_2_value <- $r11d
	#DEBUG_VALUE: hash_3_value <- $r14d
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $edx
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $r9d
	#DEBUG_VALUE: normalize:hash <- $r8
	.loc	0 0 2                           # liblzma/lz/lz_encoder_mf.c:0:2
	xorl	%r10d, %r10d
	.loc	0 122 2                         # liblzma/lz/lz_encoder_mf.c:122:2
	jmp	.LBB4_10
.Ltmp412:
.LBB4_7:                                # %vector.ph
                                        #   in Loop: Header=BB4_1 Depth=1
	#DEBUG_VALUE: lzma_mf_hc4_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc4_skip:amount <- $esi
	#DEBUG_VALUE: hash_2_value <- $r11d
	#DEBUG_VALUE: hash_3_value <- $r14d
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $edx
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $r9d
	#DEBUG_VALUE: normalize:hash <- $r8
	movl	%r9d, %r10d
	andl	$-16, %r10d
	movd	%edx, %xmm1
	pshufd	$0, %xmm1, %xmm1                # xmm1 = xmm1[0,0,0,0]
	movdqa	%xmm1, %xmm2
	pxor	%xmm0, %xmm2
	xorl	%r11d, %r11d
.Ltmp413:
	.p2align	4, 0x90
.LBB4_8:                                # %vector.body
                                        #   Parent Loop BB4_1 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: lzma_mf_hc4_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc4_skip:amount <- $esi
	#DEBUG_VALUE: hash_3_value <- $r14d
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $edx
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $r9d
	#DEBUG_VALUE: normalize:hash <- $r8
	.loc	0 133 7 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:133:7
	movdqu	(%r8,%r11,4), %xmm3
	movdqu	16(%r8,%r11,4), %xmm4
	movdqu	32(%r8,%r11,4), %xmm5
	movdqu	48(%r8,%r11,4), %xmm6
.Ltmp414:
	.loc	0 133 7 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:133:7
	movdqa	%xmm3, %xmm7
	pxor	%xmm0, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm1, %xmm3
	pand	%xmm7, %xmm3
	movdqa	%xmm4, %xmm7
	pxor	%xmm0, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm1, %xmm4
	pand	%xmm7, %xmm4
	movdqa	%xmm5, %xmm7
	pxor	%xmm0, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm1, %xmm5
	pand	%xmm7, %xmm5
	movdqa	%xmm6, %xmm7
	pxor	%xmm0, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm1, %xmm6
	pand	%xmm7, %xmm6
.Ltmp415:
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movdqu	%xmm3, (%r8,%r11,4)
	movdqu	%xmm4, 16(%r8,%r11,4)
	movdqu	%xmm5, 32(%r8,%r11,4)
	movdqu	%xmm6, 48(%r8,%r11,4)
.Ltmp416:
	.loc	0 122 34 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:122:34
	addq	$16, %r11
	cmpq	%r11, %r10
	jne	.LBB4_8
.Ltmp417:
# %bb.9:                                # %middle.block
                                        #   in Loop: Header=BB4_1 Depth=1
	#DEBUG_VALUE: lzma_mf_hc4_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc4_skip:amount <- $esi
	#DEBUG_VALUE: hash_3_value <- $r14d
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $edx
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $r9d
	#DEBUG_VALUE: normalize:hash <- $r8
	.loc	0 122 2 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:122:2
	cmpl	%r9d, %r10d
	je	.LBB4_11
.Ltmp418:
	.p2align	4, 0x90
.LBB4_10:                               # %for.body.i.i
                                        #   Parent Loop BB4_1 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: lzma_mf_hc4_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc4_skip:amount <- $esi
	#DEBUG_VALUE: hash_3_value <- $r14d
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $edx
	#DEBUG_VALUE: normalize:count <- $r9d
	#DEBUG_VALUE: normalize:hash <- $r8
	#DEBUG_VALUE: i <- $r10
	.loc	0 133 7 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:133:7
	movl	(%r8,%r10,4), %r11d
.Ltmp419:
	.loc	0 133 7 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:133:7
	subl	%edx, %r11d
	cmovbl	%ecx, %r11d
.Ltmp420:
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movl	%r11d, (%r8,%r10,4)
.Ltmp421:
	.loc	0 122 34 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:122:34
	incq	%r10
.Ltmp422:
	#DEBUG_VALUE: i <- $r10
	.loc	0 122 25 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:122:25
	cmpq	%r10, %r9
.Ltmp423:
	.loc	0 122 2                         # liblzma/lz/lz_encoder_mf.c:122:2
	jne	.LBB4_10
.Ltmp424:
.LBB4_11:                               # %normalize.exit.loopexit.i
                                        #   in Loop: Header=BB4_1 Depth=1
	#DEBUG_VALUE: lzma_mf_hc4_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc4_skip:amount <- $esi
	#DEBUG_VALUE: hash_3_value <- $r14d
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $edx
	#DEBUG_VALUE: normalize:count <- $r9d
	#DEBUG_VALUE: normalize:hash <- $r8
	.loc	0 140 13 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:140:13
	movl	20(%rdi), %r8d
.Ltmp425:
.LBB4_12:                               # %normalize.exit.i
                                        #   in Loop: Header=BB4_1 Depth=1
	#DEBUG_VALUE: lzma_mf_hc4_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc4_skip:amount <- $esi
	#DEBUG_VALUE: hash_3_value <- $r14d
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $edx
	subl	%edx, %r8d
	movl	%r8d, 20(%rdi)
	jmp	.LBB4_13
.Ltmp426:
.LBB4_14:                               # %do.end38
	#DEBUG_VALUE: lzma_mf_hc4_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_hc4_skip:amount <- $esi
	.loc	0 443 1 epilogue_begin          # liblzma/lz/lz_encoder_mf.c:443:1
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.Ltmp427:
.Lfunc_end4:
	.size	lzma_mf_hc4_skip, .Lfunc_end4-lzma_mf_hc4_skip
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4, 0x0                          # -- Begin function lzma_mf_bt2_find
.LCPI5_0:
	.long	2147483648                      # 0x80000000
	.long	2147483648                      # 0x80000000
	.long	2147483648                      # 0x80000000
	.long	2147483648                      # 0x80000000
	.text
	.globl	lzma_mf_bt2_find
	.p2align	4, 0x90
	.type	lzma_mf_bt2_find,@function
lzma_mf_bt2_find:                       # @lzma_mf_bt2_find
.Lfunc_begin5:
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: lzma_mf_bt2_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt2_find:matches <- $rsi
	.loc	0 596 2 prologue_end            # liblzma/lz/lz_encoder_mf.c:596:2
	movl	24(%rdi), %ecx
	movl	36(%rdi), %eax
.Ltmp428:
	.loc	4 232 23                        # liblzma/lz/lz_encoder.h:232:23
	subl	%ecx, %eax
.Ltmp429:
	#DEBUG_VALUE: lzma_mf_bt2_find:len_limit <- $eax
	.loc	0 596 2                         # liblzma/lz/lz_encoder_mf.c:596:2
	movl	96(%rdi), %r8d
	cmpl	%eax, %r8d
.Ltmp430:
	.loc	0 596 2 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:596:2
	jbe	.LBB5_5
.Ltmp431:
# %bb.1:                                # %if.else
	#DEBUG_VALUE: lzma_mf_bt2_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt2_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_bt2_find:len_limit <- $eax
	.loc	0 596 2                         # liblzma/lz/lz_encoder_mf.c:596:2
	cmpl	$2, %eax
	jb	.LBB5_3
.Ltmp432:
# %bb.2:                                # %lor.lhs.false
	#DEBUG_VALUE: lzma_mf_bt2_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt2_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_bt2_find:len_limit <- $eax
	cmpl	$1, 104(%rdi)
	movl	%eax, %r8d
.Ltmp433:
	.loc	0 596 2                         # liblzma/lz/lz_encoder_mf.c:596:2
	jne	.LBB5_5
.Ltmp434:
.LBB5_3:                                # %if.then4
	#DEBUG_VALUE: lzma_mf_bt2_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt2_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_bt2_find:len_limit <- $eax
	#DEBUG_VALUE: move_pending:mf <- $rdi
	.loc	0 178 2 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:178:2
	incl	%ecx
	movl	%ecx, 24(%rdi)
	.loc	0 180 2                         # liblzma/lz/lz_encoder_mf.c:180:2
	incl	40(%rdi)
	xorl	%eax, %eax
.Ltmp435:
                                        # kill: def $eax killed $eax killed $rax
	.loc	0 604 1                         # liblzma/lz/lz_encoder_mf.c:604:1
	retq
.Ltmp436:
.LBB5_5:                                # %if.end5
	#DEBUG_VALUE: lzma_mf_bt2_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt2_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_bt2_find:len_limit <- $eax
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
.Ltmp437:
	#DEBUG_VALUE: lzma_mf_bt2_find:len_limit <- $r8d
	.loc	0 596 2                         # liblzma/lz/lz_encoder_mf.c:596:2
	movq	(%rdi), %rbx
.Ltmp438:
	#DEBUG_VALUE: lzma_mf_bt2_find:hash_value <- undef
	.loc	0 600 33                        # liblzma/lz/lz_encoder_mf.c:600:33
	movq	64(%rdi), %rdx
.Ltmp439:
	#DEBUG_VALUE: mf_ptr:mf <- undef
	#DEBUG_VALUE: lzma_mf_bt2_find:cur <- undef
	.loc	0 0 33 is_stmt 0                # liblzma/lz/lz_encoder_mf.c:0:33
	movl	20(%rdi), %r14d
	.loc	0 596 2 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:596:2
	addl	%ecx, %r14d
.Ltmp440:
	#DEBUG_VALUE: lzma_mf_bt2_find:pos <- undef
	#DEBUG_VALUE: lzma_mf_bt2_find:matches_count <- 0
	.loc	0 598 2                         # liblzma/lz/lz_encoder_mf.c:598:2
	movzwl	(%rbx,%rcx), %eax
	.loc	0 600 29                        # liblzma/lz/lz_encoder_mf.c:600:29
	movl	(%rdx,%rax,4), %r13d
.Ltmp441:
	#DEBUG_VALUE: lzma_mf_bt2_find:cur_match <- $r13d
	.loc	0 601 23                        # liblzma/lz/lz_encoder_mf.c:601:23
	movl	%r14d, (%rdx,%rax,4)
.Ltmp442:
	.loc	0 603 2                         # liblzma/lz/lz_encoder_mf.c:603:2
	movl	92(%rdi), %r11d
	movq	72(%rdi), %r9
	movl	80(%rdi), %eax
.Ltmp443:
	#DEBUG_VALUE: bt_find_func:cyclic_size <- undef
	#DEBUG_VALUE: bt_find_func:len_limit <- $r8d
	#DEBUG_VALUE: bt_find_func:pos <- undef
	#DEBUG_VALUE: bt_find_func:cur <- undef
	#DEBUG_VALUE: bt_find_func:cur_match <- $r13d
	#DEBUG_VALUE: bt_find_func:depth <- $r11d
	#DEBUG_VALUE: bt_find_func:son <- $r9
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- $eax
	#DEBUG_VALUE: bt_find_func:matches <- $rsi
	#DEBUG_VALUE: bt_find_func:len_best <- 1
	.loc	0 0 2 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:2
	movq	%rax, -16(%rsp)                 # 8-byte Spill
.Ltmp444:
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- [DW_OP_constu 16, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 465 37 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:465:37
	leal	(%rax,%rax), %edx
	.loc	0 465 23 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:465:23
	leaq	(%r9,%rdx,4), %rax
	movq	%rax, -64(%rsp)                 # 8-byte Spill
	movq	%r9, -8(%rsp)                   # 8-byte Spill
.Ltmp445:
	#DEBUG_VALUE: bt_find_func:son <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 465 43                        # liblzma/lz/lz_encoder_mf.c:465:43
	leaq	(%r9,%rdx,4), %rax
	addq	$4, %rax
.Ltmp446:
	#DEBUG_VALUE: bt_find_func:ptr0 <- $rax
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len0 <- 0
	#DEBUG_VALUE: bt_find_func:len1 <- 0
	.loc	0 0 43                          # liblzma/lz/lz_encoder_mf.c:0:43
	movq	%rax, -56(%rsp)                 # 8-byte Spill
.Ltmp447:
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 473 15 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:473:15
	testl	%r11d, %r11d
	movq	%rdi, -40(%rsp)                 # 8-byte Spill
.Ltmp448:
	#DEBUG_VALUE: lzma_mf_bt2_find:mf <- [DW_OP_constu 40, DW_OP_minus] [$rsp+0]
	.loc	0 0 15 is_stmt 0                # liblzma/lz/lz_encoder_mf.c:0:15
	movq	%rsi, -48(%rsp)                 # 8-byte Spill
.Ltmp449:
	#DEBUG_VALUE: bt_find_func:matches <- [DW_OP_constu 48, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt2_find:matches <- [DW_OP_constu 48, DW_OP_minus] [$rsp+0]
	.loc	0 473 20                        # liblzma/lz/lz_encoder_mf.c:473:20
	je	.LBB5_7
.Ltmp450:
# %bb.6:                                # %if.end5
	#DEBUG_VALUE: lzma_mf_bt2_find:mf <- [DW_OP_constu 40, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:matches <- [DW_OP_constu 48, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:len_limit <- $r8d
	#DEBUG_VALUE: lzma_mf_bt2_find:matches_count <- 0
	#DEBUG_VALUE: lzma_mf_bt2_find:cur_match <- $r13d
	#DEBUG_VALUE: bt_find_func:len_limit <- $r8d
	#DEBUG_VALUE: bt_find_func:cur_match <- $r13d
	#DEBUG_VALUE: bt_find_func:depth <- $r11d
	#DEBUG_VALUE: bt_find_func:son <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- [DW_OP_constu 16, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:matches <- [DW_OP_constu 48, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len_best <- 1
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len0 <- 0
	#DEBUG_VALUE: bt_find_func:len1 <- 0
	.loc	0 603 2 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:603:2
	movl	84(%rdi), %ebp
.Ltmp451:
	#DEBUG_VALUE: bt_find_func:cyclic_size <- $ebp
	.loc	0 0 0 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:0
	movl	%r14d, %r10d
	subl	%r13d, %r10d
.Ltmp452:
	.loc	0 473 20 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:473:20
	cmpl	%ebp, %r10d
	jae	.LBB5_7
.Ltmp453:
# %bb.9:                                # %if.end.i.preheader
	#DEBUG_VALUE: lzma_mf_bt2_find:mf <- [DW_OP_constu 40, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:matches <- [DW_OP_constu 48, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:len_limit <- $r8d
	#DEBUG_VALUE: lzma_mf_bt2_find:matches_count <- 0
	#DEBUG_VALUE: lzma_mf_bt2_find:cur_match <- $r13d
	#DEBUG_VALUE: bt_find_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_find_func:len_limit <- $r8d
	#DEBUG_VALUE: bt_find_func:cur_match <- $r13d
	#DEBUG_VALUE: bt_find_func:depth <- $r11d
	#DEBUG_VALUE: bt_find_func:son <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- [DW_OP_constu 16, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:matches <- [DW_OP_constu 48, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len_best <- 1
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len0 <- 0
	#DEBUG_VALUE: bt_find_func:len1 <- 0
	.loc	0 0 20 is_stmt 0                # liblzma/lz/lz_encoder_mf.c:0:20
	addq	%rcx, %rbx
.Ltmp454:
	#DEBUG_VALUE: bt_find_func:cur <- $rbx
	#DEBUG_VALUE: lzma_mf_bt2_find:cur <- $rbx
	movl	%r8d, %eax
	movq	%rax, -32(%rsp)                 # 8-byte Spill
	movq	%r8, -24(%rsp)                  # 8-byte Spill
.Ltmp455:
	#DEBUG_VALUE: bt_find_func:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt2_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 471 2 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:471:2
	leal	-1(%r8), %r12d
	movl	$1, -68(%rsp)                   # 4-byte Folded Spill
	xorl	%r15d, %r15d
	xorl	%edi, %edi
	movq	%rsi, %rax
.Ltmp456:
	.p2align	4, 0x90
.LBB5_10:                               # %if.end.i
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB5_13 Depth 2
	#DEBUG_VALUE: lzma_mf_bt2_find:mf <- [DW_OP_constu 40, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:matches <- [DW_OP_constu 48, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:len_limit <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt2_find:cur <- $rbx
	#DEBUG_VALUE: lzma_mf_bt2_find:matches_count <- 0
	#DEBUG_VALUE: bt_find_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_find_func:len_limit <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cur <- $rbx
	#DEBUG_VALUE: bt_find_func:cur_match <- $r13d
	#DEBUG_VALUE: bt_find_func:son <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- [DW_OP_constu 16, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:matches <- $rax
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cur_match <- $r13d
	#DEBUG_VALUE: bt_find_func:len1 <- $r15d
	#DEBUG_VALUE: bt_find_func:len0 <- $edi
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len_best <- [DW_OP_constu 68, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:matches <- $rax
	.loc	0 0 2 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:2
	movq	-16(%rsp), %rcx                 # 8-byte Reload
                                        # kill: def $ecx killed $ecx killed $rcx def $rcx
.Ltmp457:
	.loc	0 479 45 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:479:45
	subl	%r10d, %ecx
	.loc	0 480 8                         # liblzma/lz/lz_encoder_mf.c:480:8
	movl	$0, %edx
	cmovbl	%ebp, %edx
	.loc	0 480 5 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:480:5
	addl	%edx, %ecx
	.loc	0 481 5 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:481:5
	addl	%ecx, %ecx
.Ltmp458:
	#DEBUG_VALUE: pair <- undef
	.loc	0 483 33                        # liblzma/lz/lz_encoder_mf.c:483:33
	movl	%r10d, %edx
	movq	%rbx, %r9
	subq	%rdx, %r9
.Ltmp459:
	#DEBUG_VALUE: pb <- $r9
	.loc	0 484 18                        # liblzma/lz/lz_encoder_mf.c:484:18
	cmpl	%r15d, %edi
	movl	%r15d, %edx
	cmovbl	%edi, %edx
.Ltmp460:
	#DEBUG_VALUE: len <- $edx
	.loc	0 0 18 is_stmt 0                # liblzma/lz/lz_encoder_mf.c:0:18
	movq	-8(%rsp), %rsi                  # 8-byte Reload
	.loc	0 479 30 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:479:30
	leaq	(%rsi,%rcx,4), %rcx
.Ltmp461:
	#DEBUG_VALUE: pair <- $rcx
	.loc	0 486 7                         # liblzma/lz/lz_encoder_mf.c:486:7
	movzbl	(%r9,%rdx), %r8d
	.loc	0 486 15 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:486:15
	cmpb	(%rbx,%rdx), %r8b
.Ltmp462:
	.loc	0 486 7                         # liblzma/lz/lz_encoder_mf.c:486:7
	jne	.LBB5_11
.Ltmp463:
# %bb.12:                               # %while.cond24.i.preheader
                                        #   in Loop: Header=BB5_10 Depth=1
	#DEBUG_VALUE: lzma_mf_bt2_find:mf <- [DW_OP_constu 40, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:matches <- [DW_OP_constu 48, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:len_limit <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt2_find:cur <- $rbx
	#DEBUG_VALUE: lzma_mf_bt2_find:matches_count <- 0
	#DEBUG_VALUE: bt_find_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_find_func:len_limit <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cur <- $rbx
	#DEBUG_VALUE: bt_find_func:cur_match <- $r13d
	#DEBUG_VALUE: bt_find_func:son <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- [DW_OP_constu 16, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:matches <- $rax
	#DEBUG_VALUE: bt_find_func:len_best <- [DW_OP_constu 68, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len0 <- $edi
	#DEBUG_VALUE: bt_find_func:len1 <- $r15d
	#DEBUG_VALUE: pair <- $rcx
	#DEBUG_VALUE: pb <- $r9
	#DEBUG_VALUE: len <- $edx
	.loc	0 0 7                           # liblzma/lz/lz_encoder_mf.c:0:7
	movl	%r14d, %esi
.Ltmp464:
	.p2align	4, 0x90
.LBB5_13:                               # %while.cond24.i
                                        #   Parent Loop BB5_10 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: lzma_mf_bt2_find:mf <- [DW_OP_constu 40, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:matches <- [DW_OP_constu 48, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:len_limit <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt2_find:cur <- $rbx
	#DEBUG_VALUE: lzma_mf_bt2_find:matches_count <- 0
	#DEBUG_VALUE: bt_find_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_find_func:len_limit <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cur <- $rbx
	#DEBUG_VALUE: bt_find_func:cur_match <- $r13d
	#DEBUG_VALUE: bt_find_func:son <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- [DW_OP_constu 16, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:matches <- $rax
	#DEBUG_VALUE: bt_find_func:len_best <- [DW_OP_constu 68, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len0 <- $edi
	#DEBUG_VALUE: bt_find_func:len1 <- $r15d
	#DEBUG_VALUE: pair <- $rcx
	#DEBUG_VALUE: pb <- $r9
	#DEBUG_VALUE: len <- $edx
	#DEBUG_VALUE: len <- $edx
	#DEBUG_VALUE: len <- undef
	.loc	0 487 17 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:487:17
	cmpl	%edx, %r12d
	.loc	0 487 4 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:487:4
	je	.LBB5_17
.Ltmp465:
# %bb.14:                               # %while.body27.i
                                        #   in Loop: Header=BB5_13 Depth=2
	#DEBUG_VALUE: lzma_mf_bt2_find:mf <- [DW_OP_constu 40, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:matches <- [DW_OP_constu 48, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:len_limit <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt2_find:cur <- $rbx
	#DEBUG_VALUE: lzma_mf_bt2_find:matches_count <- 0
	#DEBUG_VALUE: bt_find_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_find_func:len_limit <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cur <- $rbx
	#DEBUG_VALUE: bt_find_func:cur_match <- $r13d
	#DEBUG_VALUE: bt_find_func:son <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- [DW_OP_constu 16, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:matches <- $rax
	#DEBUG_VALUE: bt_find_func:len_best <- [DW_OP_constu 68, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len0 <- $edi
	#DEBUG_VALUE: bt_find_func:len1 <- $r15d
	#DEBUG_VALUE: pair <- $rcx
	#DEBUG_VALUE: pb <- $r9
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	incl	%edx
.Ltmp466:
	#DEBUG_VALUE: len <- $edx
	.loc	0 488 9 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:488:9
	movl	%edx, %r8d
	movzbl	(%r9,%r8), %r14d
	.loc	0 488 17 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:488:17
	cmpb	(%rbx,%r8), %r14b
.Ltmp467:
	.loc	0 488 9                         # liblzma/lz/lz_encoder_mf.c:488:9
	je	.LBB5_13
.Ltmp468:
# %bb.15:                               # %while.end.thread.i
                                        #   in Loop: Header=BB5_10 Depth=1
	#DEBUG_VALUE: lzma_mf_bt2_find:mf <- [DW_OP_constu 40, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:matches <- [DW_OP_constu 48, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:len_limit <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt2_find:cur <- $rbx
	#DEBUG_VALUE: lzma_mf_bt2_find:matches_count <- 0
	#DEBUG_VALUE: bt_find_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_find_func:len_limit <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cur <- $rbx
	#DEBUG_VALUE: bt_find_func:cur_match <- $r13d
	#DEBUG_VALUE: bt_find_func:son <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- [DW_OP_constu 16, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:matches <- $rax
	#DEBUG_VALUE: bt_find_func:len_best <- [DW_OP_constu 68, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len0 <- $edi
	#DEBUG_VALUE: bt_find_func:len1 <- $r15d
	#DEBUG_VALUE: pair <- $rcx
	#DEBUG_VALUE: pb <- $r9
	#DEBUG_VALUE: len <- $r8d
	.loc	0 491 17 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:491:17
	cmpl	%edx, -68(%rsp)                 # 4-byte Folded Reload
.Ltmp469:
	.loc	0 491 8 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:491:8
	jae	.LBB5_19
.Ltmp470:
# %bb.16:                               # %if.then40.thread.i
                                        #   in Loop: Header=BB5_10 Depth=1
	#DEBUG_VALUE: lzma_mf_bt2_find:mf <- [DW_OP_constu 40, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:matches <- [DW_OP_constu 48, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:len_limit <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt2_find:cur <- $rbx
	#DEBUG_VALUE: lzma_mf_bt2_find:matches_count <- 0
	#DEBUG_VALUE: bt_find_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_find_func:len_limit <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cur <- $rbx
	#DEBUG_VALUE: bt_find_func:cur_match <- $r13d
	#DEBUG_VALUE: bt_find_func:son <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- [DW_OP_constu 16, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:matches <- $rax
	#DEBUG_VALUE: bt_find_func:len_best <- [DW_OP_constu 68, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len0 <- $edi
	#DEBUG_VALUE: bt_find_func:len1 <- $r15d
	#DEBUG_VALUE: pair <- $rcx
	#DEBUG_VALUE: pb <- $r9
	#DEBUG_VALUE: len <- $r8d
	#DEBUG_VALUE: bt_find_func:len_best <- $r8d
	.loc	0 493 18 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:493:18
	movl	%edx, (%rax)
	.loc	0 494 27                        # liblzma/lz/lz_encoder_mf.c:494:27
	decl	%r10d
	.loc	0 494 19 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:494:19
	movl	%r10d, 4(%rax)
	.loc	0 495 5 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:495:5
	addq	$8, %rax
.Ltmp471:
	#DEBUG_VALUE: bt_find_func:matches <- $rax
	.loc	0 0 5 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:5
	movl	%edx, -68(%rsp)                 # 4-byte Spill
	jmp	.LBB5_19
.Ltmp472:
	.p2align	4, 0x90
.LBB5_11:                               #   in Loop: Header=BB5_10 Depth=1
	#DEBUG_VALUE: lzma_mf_bt2_find:mf <- [DW_OP_constu 40, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:matches <- [DW_OP_constu 48, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:len_limit <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt2_find:cur <- $rbx
	#DEBUG_VALUE: lzma_mf_bt2_find:matches_count <- 0
	#DEBUG_VALUE: bt_find_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_find_func:len_limit <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cur <- $rbx
	#DEBUG_VALUE: bt_find_func:cur_match <- $r13d
	#DEBUG_VALUE: bt_find_func:son <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- [DW_OP_constu 16, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:matches <- $rax
	#DEBUG_VALUE: bt_find_func:len_best <- [DW_OP_constu 68, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len0 <- $edi
	#DEBUG_VALUE: bt_find_func:len1 <- $r15d
	#DEBUG_VALUE: pair <- $rcx
	#DEBUG_VALUE: pb <- $r9
	#DEBUG_VALUE: len <- $edx
	movq	%rdx, %r8
.Ltmp473:
	#DEBUG_VALUE: len <- $r8d
	#DEBUG_VALUE: bt_find_func:len_best <- [DW_OP_constu 68, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:matches <- $rax
	.loc	0 505 7 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:505:7
	movzbl	(%r9,%r8), %r9d
.Ltmp474:
	.loc	0 505 15 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:505:15
	cmpb	(%rbx,%r8), %r9b
.Ltmp475:
	.loc	0 505 7                         # liblzma/lz/lz_encoder_mf.c:505:7
	jae	.LBB5_22
.Ltmp476:
.LBB5_21:                               # %if.then59.i
                                        #   in Loop: Header=BB5_10 Depth=1
	#DEBUG_VALUE: lzma_mf_bt2_find:mf <- [DW_OP_constu 40, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:matches <- [DW_OP_constu 48, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:len_limit <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt2_find:cur <- $rbx
	#DEBUG_VALUE: lzma_mf_bt2_find:matches_count <- 0
	#DEBUG_VALUE: bt_find_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_find_func:len_limit <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cur <- $rbx
	#DEBUG_VALUE: bt_find_func:cur_match <- $r13d
	#DEBUG_VALUE: bt_find_func:son <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- [DW_OP_constu 16, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:matches <- $rax
	#DEBUG_VALUE: bt_find_func:len_best <- [DW_OP_constu 68, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len0 <- $edi
	#DEBUG_VALUE: bt_find_func:len1 <- $r15d
	#DEBUG_VALUE: pair <- $rcx
	#DEBUG_VALUE: len <- $edx
	.loc	0 0 7                           # liblzma/lz/lz_encoder_mf.c:0:7
	movq	-64(%rsp), %r8                  # 8-byte Reload
.Ltmp477:
	.loc	0 506 10 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:506:10
	movl	%r13d, (%r8)
	.loc	0 507 16                        # liblzma/lz/lz_encoder_mf.c:507:16
	addq	$4, %rcx
.Ltmp478:
	#DEBUG_VALUE: bt_find_func:ptr1 <- $rcx
	#DEBUG_VALUE: bt_find_func:cur_match <- undef
	#DEBUG_VALUE: bt_find_func:len1 <- $edx
	.loc	0 0 16 is_stmt 0                # liblzma/lz/lz_encoder_mf.c:0:16
	movq	%rcx, -64(%rsp)                 # 8-byte Spill
.Ltmp479:
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	movl	%edx, %r15d
.Ltmp480:
	decl	%r11d
	#DEBUG_VALUE: bt_find_func:cur_match <- undef
.Ltmp481:
	#DEBUG_VALUE: bt_find_func:depth <- $r11d
	#DEBUG_VALUE: bt_find_func:len1 <- $r15d
	#DEBUG_VALUE: bt_find_func:len0 <- $edi
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len_best <- [DW_OP_constu 68, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:matches <- $rax
	#DEBUG_VALUE: delta <- undef
	#DEBUG_VALUE: bt_find_func:depth <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r11d
	jne	.LBB5_24
	jmp	.LBB5_8
.Ltmp482:
	.p2align	4, 0x90
.LBB5_17:                               # %while.end.i
                                        #   in Loop: Header=BB5_10 Depth=1
	#DEBUG_VALUE: lzma_mf_bt2_find:mf <- [DW_OP_constu 40, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:matches <- [DW_OP_constu 48, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:len_limit <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt2_find:cur <- $rbx
	#DEBUG_VALUE: lzma_mf_bt2_find:matches_count <- 0
	#DEBUG_VALUE: bt_find_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_find_func:len_limit <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cur <- $rbx
	#DEBUG_VALUE: bt_find_func:cur_match <- $r13d
	#DEBUG_VALUE: bt_find_func:son <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- [DW_OP_constu 16, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:matches <- $rax
	#DEBUG_VALUE: bt_find_func:len_best <- [DW_OP_constu 68, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len0 <- $edi
	#DEBUG_VALUE: bt_find_func:len1 <- $r15d
	#DEBUG_VALUE: pair <- $rcx
	#DEBUG_VALUE: pb <- $r9
	movq	-24(%rsp), %rdx                 # 8-byte Reload
.Ltmp483:
	.loc	0 491 17 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:491:17
	cmpl	%edx, -68(%rsp)                 # 4-byte Folded Reload
.Ltmp484:
	.loc	0 491 8 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:491:8
	jb	.LBB5_25
.Ltmp485:
# %bb.18:                               #   in Loop: Header=BB5_10 Depth=1
	#DEBUG_VALUE: lzma_mf_bt2_find:mf <- [DW_OP_constu 40, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:matches <- [DW_OP_constu 48, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:len_limit <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt2_find:cur <- $rbx
	#DEBUG_VALUE: lzma_mf_bt2_find:matches_count <- 0
	#DEBUG_VALUE: bt_find_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_find_func:len_limit <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cur <- $rbx
	#DEBUG_VALUE: bt_find_func:cur_match <- $r13d
	#DEBUG_VALUE: bt_find_func:son <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- [DW_OP_constu 16, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:matches <- $rax
	#DEBUG_VALUE: bt_find_func:len_best <- [DW_OP_constu 68, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len0 <- $edi
	#DEBUG_VALUE: bt_find_func:len1 <- $r15d
	#DEBUG_VALUE: pair <- $rcx
	#DEBUG_VALUE: pb <- $r9
	.loc	0 0 8                           # liblzma/lz/lz_encoder_mf.c:0:8
	movq	-32(%rsp), %r8                  # 8-byte Reload
                                        # kill: def $edx killed $edx killed $rdx def $rdx
.Ltmp486:
.LBB5_19:                               # %if.end50.i
                                        #   in Loop: Header=BB5_10 Depth=1
	#DEBUG_VALUE: lzma_mf_bt2_find:mf <- [DW_OP_constu 40, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:matches <- [DW_OP_constu 48, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:len_limit <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt2_find:cur <- $rbx
	#DEBUG_VALUE: lzma_mf_bt2_find:matches_count <- 0
	#DEBUG_VALUE: bt_find_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_find_func:len_limit <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cur <- $rbx
	#DEBUG_VALUE: bt_find_func:cur_match <- $r13d
	#DEBUG_VALUE: bt_find_func:son <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- [DW_OP_constu 16, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:matches <- $rax
	#DEBUG_VALUE: bt_find_func:len_best <- [DW_OP_constu 68, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len0 <- $edi
	#DEBUG_VALUE: bt_find_func:len1 <- $r15d
	#DEBUG_VALUE: pair <- $rcx
	#DEBUG_VALUE: pb <- $r9
	movl	%esi, %r14d
.Ltmp487:
	#DEBUG_VALUE: len <- $edx
	#DEBUG_VALUE: bt_find_func:len_best <- [DW_OP_constu 68, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:matches <- $rax
	.loc	0 505 7 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:505:7
	movzbl	(%r9,%r8), %r9d
.Ltmp488:
	.loc	0 505 15 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:505:15
	cmpb	(%rbx,%r8), %r9b
.Ltmp489:
	.loc	0 505 7                         # liblzma/lz/lz_encoder_mf.c:505:7
	jb	.LBB5_21
.Ltmp490:
.LBB5_22:                               # %if.else.i
                                        #   in Loop: Header=BB5_10 Depth=1
	#DEBUG_VALUE: lzma_mf_bt2_find:mf <- [DW_OP_constu 40, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:matches <- [DW_OP_constu 48, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:len_limit <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt2_find:cur <- $rbx
	#DEBUG_VALUE: lzma_mf_bt2_find:matches_count <- 0
	#DEBUG_VALUE: bt_find_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_find_func:len_limit <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cur <- $rbx
	#DEBUG_VALUE: bt_find_func:cur_match <- $r13d
	#DEBUG_VALUE: bt_find_func:son <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- [DW_OP_constu 16, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:matches <- $rax
	#DEBUG_VALUE: bt_find_func:len_best <- [DW_OP_constu 68, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len0 <- $edi
	#DEBUG_VALUE: bt_find_func:len1 <- $r15d
	#DEBUG_VALUE: pair <- $rcx
	#DEBUG_VALUE: len <- $edx
	.loc	0 0 7                           # liblzma/lz/lz_encoder_mf.c:0:7
	movq	-56(%rsp), %rdi                 # 8-byte Reload
.Ltmp491:
	.loc	0 511 10 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:511:10
	movl	%r13d, (%rdi)
.Ltmp492:
	#DEBUG_VALUE: bt_find_func:ptr0 <- $rcx
	#DEBUG_VALUE: bt_find_func:cur_match <- undef
	#DEBUG_VALUE: bt_find_func:len0 <- $edx
	.loc	0 0 10 is_stmt 0                # liblzma/lz/lz_encoder_mf.c:0:10
	movq	%rcx, -56(%rsp)                 # 8-byte Spill
.Ltmp493:
	#DEBUG_VALUE: pair <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	movl	%edx, %edi
.Ltmp494:
	decl	%r11d
	#DEBUG_VALUE: bt_find_func:cur_match <- undef
.Ltmp495:
	#DEBUG_VALUE: bt_find_func:depth <- undef
	#DEBUG_VALUE: bt_find_func:len1 <- $r15d
	#DEBUG_VALUE: bt_find_func:len0 <- $edi
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len_best <- [DW_OP_constu 68, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:matches <- $rax
	#DEBUG_VALUE: delta <- undef
	#DEBUG_VALUE: bt_find_func:depth <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
	.loc	0 473 20 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:473:20
	je	.LBB5_8
.Ltmp496:
.LBB5_24:                               # %cleanup64.i
                                        #   in Loop: Header=BB5_10 Depth=1
	#DEBUG_VALUE: lzma_mf_bt2_find:mf <- [DW_OP_constu 40, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:matches <- [DW_OP_constu 48, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:len_limit <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt2_find:cur <- $rbx
	#DEBUG_VALUE: lzma_mf_bt2_find:matches_count <- 0
	#DEBUG_VALUE: bt_find_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_find_func:len_limit <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cur <- $rbx
	#DEBUG_VALUE: bt_find_func:son <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- [DW_OP_constu 16, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:matches <- $rax
	#DEBUG_VALUE: bt_find_func:len_best <- [DW_OP_constu 68, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len0 <- $edi
	#DEBUG_VALUE: bt_find_func:len1 <- $r15d
	#DEBUG_VALUE: len <- $edx
	.loc	0 0 0 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:0
	movl	(%rcx), %r13d
.Ltmp497:
	#DEBUG_VALUE: bt_find_func:cur_match <- $r13d
	movl	%r14d, %r10d
	subl	%r13d, %r10d
.Ltmp498:
	#DEBUG_VALUE: delta <- $r10d
	.loc	0 473 20                        # liblzma/lz/lz_encoder_mf.c:473:20
	cmpl	%ebp, %r10d
	jb	.LBB5_10
	jmp	.LBB5_8
.Ltmp499:
.LBB5_7:
	#DEBUG_VALUE: lzma_mf_bt2_find:mf <- [DW_OP_constu 40, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:matches <- [DW_OP_constu 48, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:len_limit <- $r8d
	#DEBUG_VALUE: lzma_mf_bt2_find:matches_count <- 0
	#DEBUG_VALUE: lzma_mf_bt2_find:cur_match <- $r13d
	#DEBUG_VALUE: bt_find_func:len_limit <- $r8d
	#DEBUG_VALUE: bt_find_func:cur_match <- $r13d
	#DEBUG_VALUE: bt_find_func:depth <- $r11d
	#DEBUG_VALUE: bt_find_func:son <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- [DW_OP_constu 16, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:matches <- [DW_OP_constu 48, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len_best <- 1
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len0 <- 0
	#DEBUG_VALUE: bt_find_func:len1 <- 0
	.loc	0 0 20                          # liblzma/lz/lz_encoder_mf.c:0:20
	movq	%rsi, %rax
.Ltmp500:
.LBB5_8:                                # %if.then.i
	#DEBUG_VALUE: lzma_mf_bt2_find:mf <- [DW_OP_constu 40, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:matches <- [DW_OP_constu 48, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:matches_count <- 0
	#DEBUG_VALUE: bt_find_func:son <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- [DW_OP_constu 16, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:matches <- $rax
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	movq	-56(%rsp), %rcx                 # 8-byte Reload
.Ltmp501:
	.loc	0 474 10 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:474:10
	movl	$0, (%rcx)
	movq	-64(%rsp), %rcx                 # 8-byte Reload
	.loc	0 475 10                        # liblzma/lz/lz_encoder_mf.c:475:10
	movl	$0, (%rcx)
.Ltmp502:
.LBB5_26:                               # %bt_find_func.exit
	#DEBUG_VALUE: lzma_mf_bt2_find:mf <- [DW_OP_constu 40, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:matches <- [DW_OP_constu 48, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:matches_count <- 0
	#DEBUG_VALUE: bt_find_func:son <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- [DW_OP_constu 16, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:matches <- $rax
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cur_match <- undef
	#DEBUG_VALUE: bt_find_func:len1 <- undef
	#DEBUG_VALUE: bt_find_func:len0 <- undef
	#DEBUG_VALUE: bt_find_func:ptr1 <- undef
	#DEBUG_VALUE: bt_find_func:ptr0 <- undef
	#DEBUG_VALUE: bt_find_func:len_best <- undef
	#DEBUG_VALUE: bt_find_func:matches <- undef
	.loc	0 603 2                         # liblzma/lz/lz_encoder_mf.c:603:2
	subq	-48(%rsp), %rax                 # 8-byte Folded Reload
	shrq	$3, %rax
.Ltmp503:
	#DEBUG_VALUE: lzma_mf_bt2_find:matches_count <- $eax
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 0 2 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:2
	movq	-40(%rsp), %r9                  # 8-byte Reload
.Ltmp504:
	.loc	0 150 6 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:150:6
	movl	80(%r9), %ecx
	incl	%ecx
	.loc	0 150 30 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:150:30
	movl	84(%r9), %r10d
	xorl	%edx, %edx
	.loc	0 150 23                        # liblzma/lz/lz_encoder_mf.c:150:23
	cmpl	%r10d, %ecx
.Ltmp505:
	.loc	0 150 6                         # liblzma/lz/lz_encoder_mf.c:150:6
	cmovnel	%ecx, %edx
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movl	%edx, 80(%r9)
.Ltmp506:
	.loc	0 156 6 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:156:6
	movl	20(%r9), %ecx
.Ltmp507:
	.loc	0 153 2                         # liblzma/lz/lz_encoder_mf.c:153:2
	movl	24(%r9), %edx
	leal	1(%rdx), %esi
	movl	%esi, 24(%r9)
.Ltmp508:
	.loc	0 156 6                         # liblzma/lz/lz_encoder_mf.c:156:6
	addl	%ecx, %edx
	incl	%edx
	cmpl	$-1, %edx
.Ltmp509:
	.loc	0 156 6 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:156:6
	jne	.LBB5_36
.Ltmp510:
# %bb.27:                               # %if.then5.i
	#DEBUG_VALUE: lzma_mf_bt2_find:mf <- [DW_OP_constu 40, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:matches <- [DW_OP_constu 48, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:matches_count <- $eax
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 116 26 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:116:26
	notl	%r10d
.Ltmp511:
	#DEBUG_VALUE: normalize:subvalue <- $r10d
	.loc	0 119 49                        # liblzma/lz/lz_encoder_mf.c:119:49
	movl	112(%r9), %edi
.Ltmp512:
	#DEBUG_VALUE: i <- 0
	.loc	0 122 25                        # liblzma/lz/lz_encoder_mf.c:122:25
	addl	108(%r9), %edi
.Ltmp513:
	#DEBUG_VALUE: normalize:count <- $edi
	#DEBUG_VALUE: normalize:hash <- undef
	.loc	0 122 2 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:122:2
	je	.LBB5_35
.Ltmp514:
# %bb.28:                               # %for.body.preheader.i.i
	#DEBUG_VALUE: lzma_mf_bt2_find:mf <- [DW_OP_constu 40, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:matches <- [DW_OP_constu 48, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:matches_count <- $eax
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:subvalue <- $r10d
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $edi
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movq	64(%r9), %rcx
.Ltmp515:
	#DEBUG_VALUE: normalize:hash <- $rcx
	.loc	0 122 25                        # liblzma/lz/lz_encoder_mf.c:122:25
	movl	%edi, %edx
	xorl	%esi, %esi
.Ltmp516:
	.loc	0 122 2                         # liblzma/lz/lz_encoder_mf.c:122:2
	cmpl	$16, %edi
	jae	.LBB5_30
.Ltmp517:
# %bb.29:
	#DEBUG_VALUE: lzma_mf_bt2_find:mf <- [DW_OP_constu 40, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:matches <- [DW_OP_constu 48, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:matches_count <- $eax
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:subvalue <- $r10d
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $edi
	#DEBUG_VALUE: normalize:hash <- $rcx
	.loc	0 0 2                           # liblzma/lz/lz_encoder_mf.c:0:2
	xorl	%r8d, %r8d
	.loc	0 122 2                         # liblzma/lz/lz_encoder_mf.c:122:2
	jmp	.LBB5_33
.Ltmp518:
.LBB5_30:                               # %vector.ph
	#DEBUG_VALUE: lzma_mf_bt2_find:mf <- [DW_OP_constu 40, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:matches <- [DW_OP_constu 48, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:matches_count <- $eax
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:subvalue <- $r10d
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $edi
	#DEBUG_VALUE: normalize:hash <- $rcx
	movl	%edx, %r8d
	andl	$-16, %r8d
	movd	%r10d, %xmm0
	pshufd	$0, %xmm0, %xmm0                # xmm0 = xmm0[0,0,0,0]
	xorl	%edi, %edi
.Ltmp519:
	#DEBUG_VALUE: normalize:count <- $edx
	.loc	0 0 2                           # liblzma/lz/lz_encoder_mf.c:0:2
	movdqa	.LCPI5_0(%rip), %xmm1           # xmm1 = [2147483648,2147483648,2147483648,2147483648]
	movdqa	%xmm0, %xmm2
	pxor	%xmm1, %xmm2
.Ltmp520:
	.p2align	4, 0x90
.LBB5_31:                               # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: lzma_mf_bt2_find:mf <- [DW_OP_constu 40, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:matches <- [DW_OP_constu 48, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:matches_count <- $eax
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:subvalue <- $r10d
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $edx
	#DEBUG_VALUE: normalize:hash <- $rcx
	.loc	0 133 7 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:133:7
	movdqu	(%rcx,%rdi,4), %xmm3
	movdqu	16(%rcx,%rdi,4), %xmm4
	movdqu	32(%rcx,%rdi,4), %xmm5
	movdqu	48(%rcx,%rdi,4), %xmm6
.Ltmp521:
	.loc	0 133 7 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:133:7
	movdqa	%xmm3, %xmm7
	pxor	%xmm1, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm0, %xmm3
	pand	%xmm7, %xmm3
	movdqa	%xmm4, %xmm7
	pxor	%xmm1, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm0, %xmm4
	pand	%xmm7, %xmm4
	movdqa	%xmm5, %xmm7
	pxor	%xmm1, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm0, %xmm5
	pand	%xmm7, %xmm5
	movdqa	%xmm6, %xmm7
	pxor	%xmm1, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm0, %xmm6
	pand	%xmm7, %xmm6
.Ltmp522:
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movdqu	%xmm3, (%rcx,%rdi,4)
	movdqu	%xmm4, 16(%rcx,%rdi,4)
	movdqu	%xmm5, 32(%rcx,%rdi,4)
	movdqu	%xmm6, 48(%rcx,%rdi,4)
.Ltmp523:
	.loc	0 122 34 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:122:34
	addq	$16, %rdi
	cmpq	%rdi, %r8
	jne	.LBB5_31
.Ltmp524:
# %bb.32:                               # %middle.block
	#DEBUG_VALUE: lzma_mf_bt2_find:mf <- [DW_OP_constu 40, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:matches <- [DW_OP_constu 48, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:matches_count <- $eax
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:subvalue <- $r10d
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $edx
	#DEBUG_VALUE: normalize:hash <- $rcx
	.loc	0 122 2 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:122:2
	cmpl	%edx, %r8d
	je	.LBB5_34
.Ltmp525:
	.p2align	4, 0x90
.LBB5_33:                               # %for.body.i.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: lzma_mf_bt2_find:mf <- [DW_OP_constu 40, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:matches <- [DW_OP_constu 48, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:matches_count <- $eax
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:subvalue <- $r10d
	#DEBUG_VALUE: normalize:count <- $edx
	#DEBUG_VALUE: normalize:hash <- $rcx
	#DEBUG_VALUE: i <- $r8
	.loc	0 133 7 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:133:7
	movl	(%rcx,%r8,4), %edi
.Ltmp526:
	.loc	0 133 7 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:133:7
	subl	%r10d, %edi
	cmovbl	%esi, %edi
.Ltmp527:
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movl	%edi, (%rcx,%r8,4)
.Ltmp528:
	.loc	0 122 34 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:122:34
	incq	%r8
.Ltmp529:
	#DEBUG_VALUE: i <- $r8
	.loc	0 122 25 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:122:25
	cmpq	%r8, %rdx
.Ltmp530:
	.loc	0 122 2                         # liblzma/lz/lz_encoder_mf.c:122:2
	jne	.LBB5_33
.Ltmp531:
.LBB5_34:                               # %normalize.exit.loopexit.i
	#DEBUG_VALUE: lzma_mf_bt2_find:mf <- [DW_OP_constu 40, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:matches <- [DW_OP_constu 48, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:matches_count <- $eax
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:subvalue <- $r10d
	#DEBUG_VALUE: normalize:count <- $edx
	#DEBUG_VALUE: normalize:hash <- $rcx
	.loc	0 140 13 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:140:13
	movl	20(%r9), %ecx
.Ltmp532:
.LBB5_35:                               # %normalize.exit.i
	#DEBUG_VALUE: lzma_mf_bt2_find:mf <- [DW_OP_constu 40, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:matches <- [DW_OP_constu 48, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:matches_count <- $eax
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:subvalue <- $r10d
	subl	%r10d, %ecx
	movl	%ecx, 20(%r9)
.Ltmp533:
.LBB5_36:
	#DEBUG_VALUE: lzma_mf_bt2_find:mf <- [DW_OP_constu 40, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:matches <- [DW_OP_constu 48, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:matches_count <- $eax
	.loc	0 0 13 is_stmt 0                # liblzma/lz/lz_encoder_mf.c:0:13
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	.cfi_restore %rbx
	.cfi_restore %r12
	.cfi_restore %r13
	.cfi_restore %r14
	.cfi_restore %r15
	.cfi_restore %rbp
                                        # kill: def $eax killed $eax killed $rax
	.loc	0 604 1 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:604:1
	retq
.Ltmp534:
.LBB5_25:                               # %if.then45.i
	.cfi_def_cfa_offset 56
	.cfi_offset %rbx, -56
	.cfi_offset %rbp, -16
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	#DEBUG_VALUE: lzma_mf_bt2_find:mf <- [DW_OP_constu 40, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:matches <- [DW_OP_constu 48, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt2_find:len_limit <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt2_find:cur <- $rbx
	#DEBUG_VALUE: lzma_mf_bt2_find:matches_count <- 0
	#DEBUG_VALUE: bt_find_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_find_func:len_limit <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cur <- $rbx
	#DEBUG_VALUE: bt_find_func:cur_match <- $r13d
	#DEBUG_VALUE: bt_find_func:son <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- [DW_OP_constu 16, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:matches <- $rax
	#DEBUG_VALUE: bt_find_func:len_best <- [DW_OP_constu 68, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len0 <- $edi
	#DEBUG_VALUE: bt_find_func:len1 <- $r15d
	#DEBUG_VALUE: pair <- $rcx
	#DEBUG_VALUE: pb <- $r9
	#DEBUG_VALUE: bt_find_func:len_best <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 493 18                        # liblzma/lz/lz_encoder_mf.c:493:18
	movl	%edx, (%rax)
	.loc	0 494 27                        # liblzma/lz/lz_encoder_mf.c:494:27
	decl	%r10d
	.loc	0 494 19 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:494:19
	movl	%r10d, 4(%rax)
	.loc	0 495 5 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:495:5
	addq	$8, %rax
.Ltmp535:
	#DEBUG_VALUE: bt_find_func:matches <- $rax
	.loc	0 498 14                        # liblzma/lz/lz_encoder_mf.c:498:14
	movl	(%rcx), %edx
	movq	-64(%rsp), %rdi                 # 8-byte Reload
.Ltmp536:
	.loc	0 498 12 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:498:12
	movl	%edx, (%rdi)
	.loc	0 499 14 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:499:14
	movl	4(%rcx), %ecx
.Ltmp537:
	.loc	0 0 14 is_stmt 0                # liblzma/lz/lz_encoder_mf.c:0:14
	movq	-56(%rsp), %rdx                 # 8-byte Reload
	.loc	0 499 12                        # liblzma/lz/lz_encoder_mf.c:499:12
	movl	%ecx, (%rdx)
	jmp	.LBB5_26
.Ltmp538:
.Lfunc_end5:
	.size	lzma_mf_bt2_find, .Lfunc_end5-lzma_mf_bt2_find
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4, 0x0                          # -- Begin function lzma_mf_bt2_skip
.LCPI6_0:
	.long	2147483648                      # 0x80000000
	.long	2147483648                      # 0x80000000
	.long	2147483648                      # 0x80000000
	.long	2147483648                      # 0x80000000
	.text
	.globl	lzma_mf_bt2_skip
	.p2align	4, 0x90
	.type	lzma_mf_bt2_skip,@function
lzma_mf_bt2_skip:                       # @lzma_mf_bt2_skip
.Lfunc_begin6:
	.loc	0 609 0 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:609:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: lzma_mf_bt2_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt2_skip:amount <- $esi
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movdqa	.LCPI6_0(%rip), %xmm0           # xmm0 = [2147483648,2147483648,2147483648,2147483648]
	jmp	.LBB6_1
.Ltmp539:
	.p2align	4, 0x90
.LBB6_4:                                # %if.then4
                                        #   in Loop: Header=BB6_1 Depth=1
	#DEBUG_VALUE: lzma_mf_bt2_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt2_skip:amount <- $esi
	#DEBUG_VALUE: len_limit <- $eax
	#DEBUG_VALUE: move_pending:mf <- $rdi
	.loc	0 178 2 prologue_end            # liblzma/lz/lz_encoder_mf.c:178:2
	incl	%edx
	movl	%edx, 24(%rdi)
	.loc	0 180 2                         # liblzma/lz/lz_encoder_mf.c:180:2
	incl	40(%rdi)
.Ltmp540:
.LBB6_28:                               # %cleanup
                                        #   in Loop: Header=BB6_1 Depth=1
	#DEBUG_VALUE: lzma_mf_bt2_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt2_skip:amount <- $esi
	.loc	0 620 20                        # liblzma/lz/lz_encoder_mf.c:620:20
	decl	%esi
.Ltmp541:
	#DEBUG_VALUE: lzma_mf_bt2_skip:amount <- $esi
	.loc	0 620 2 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:620:2
	je	.LBB6_29
.Ltmp542:
.LBB6_1:                                # %do.body
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB6_8 Depth 2
                                        #       Child Loop BB6_10 Depth 3
                                        #     Child Loop BB6_23 Depth 2
                                        #     Child Loop BB6_25 Depth 2
	#DEBUG_VALUE: lzma_mf_bt2_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt2_skip:amount <- $esi
	#DEBUG_VALUE: lzma_mf_bt2_skip:amount <- $esi
	.loc	0 611 3 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:611:3
	movl	24(%rdi), %edx
	movl	36(%rdi), %eax
.Ltmp543:
	#DEBUG_VALUE: mf_avail:mf <- undef
	.loc	4 232 23                        # liblzma/lz/lz_encoder.h:232:23
	subl	%edx, %eax
.Ltmp544:
	#DEBUG_VALUE: len_limit <- $eax
	.loc	0 611 3                         # liblzma/lz/lz_encoder_mf.c:611:3
	movl	96(%rdi), %ecx
	cmpl	%eax, %ecx
.Ltmp545:
	.loc	0 611 3 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:611:3
	jbe	.LBB6_5
.Ltmp546:
# %bb.2:                                # %if.else
                                        #   in Loop: Header=BB6_1 Depth=1
	#DEBUG_VALUE: lzma_mf_bt2_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt2_skip:amount <- $esi
	#DEBUG_VALUE: len_limit <- $eax
	.loc	0 611 3                         # liblzma/lz/lz_encoder_mf.c:611:3
	cmpl	$2, %eax
	jb	.LBB6_4
.Ltmp547:
# %bb.3:                                # %lor.lhs.false
                                        #   in Loop: Header=BB6_1 Depth=1
	#DEBUG_VALUE: lzma_mf_bt2_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt2_skip:amount <- $esi
	#DEBUG_VALUE: len_limit <- $eax
	cmpl	$1, 104(%rdi)
	movl	%eax, %ecx
.Ltmp548:
	.loc	0 611 3                         # liblzma/lz/lz_encoder_mf.c:611:3
	je	.LBB6_4
.Ltmp549:
	.p2align	4, 0x90
.LBB6_5:                                # %if.end5
                                        #   in Loop: Header=BB6_1 Depth=1
	#DEBUG_VALUE: lzma_mf_bt2_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt2_skip:amount <- $esi
	#DEBUG_VALUE: len_limit <- $eax
	#DEBUG_VALUE: len_limit <- $ecx
	.loc	0 0 3                           # liblzma/lz/lz_encoder_mf.c:0:3
	movl	%esi, -12(%rsp)                 # 4-byte Spill
.Ltmp550:
	#DEBUG_VALUE: lzma_mf_bt2_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 611 3                         # liblzma/lz/lz_encoder_mf.c:611:3
	movq	(%rdi), %r9
.Ltmp551:
	#DEBUG_VALUE: hash_value <- undef
	.loc	0 615 34 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:615:34
	movq	64(%rdi), %rsi
.Ltmp552:
	#DEBUG_VALUE: mf_ptr:mf <- undef
	#DEBUG_VALUE: cur <- undef
	.loc	0 0 34 is_stmt 0                # liblzma/lz/lz_encoder_mf.c:0:34
	movl	20(%rdi), %eax
	.loc	0 611 3 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:611:3
	addl	%edx, %eax
.Ltmp553:
	#DEBUG_VALUE: pos <- undef
	.loc	0 613 3                         # liblzma/lz/lz_encoder_mf.c:613:3
	movzwl	(%r9,%rdx), %r8d
	.loc	0 615 30                        # liblzma/lz/lz_encoder_mf.c:615:30
	movl	(%rsi,%r8,4), %r15d
.Ltmp554:
	#DEBUG_VALUE: cur_match <- $r15d
	.loc	0 616 24                        # liblzma/lz/lz_encoder_mf.c:616:24
	movl	%eax, (%rsi,%r8,4)
.Ltmp555:
	.loc	0 618 3                         # liblzma/lz/lz_encoder_mf.c:618:3
	movl	92(%rdi), %r11d
	movq	72(%rdi), %rsi
	movl	80(%rdi), %r8d
.Ltmp556:
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- undef
	#DEBUG_VALUE: bt_skip_func:len_limit <- $ecx
	#DEBUG_VALUE: bt_skip_func:pos <- undef
	#DEBUG_VALUE: bt_skip_func:cur <- undef
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r15d
	#DEBUG_VALUE: bt_skip_func:depth <- $r11d
	#DEBUG_VALUE: bt_skip_func:son <- $rsi
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- $r8d
	.loc	0 0 3 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:3
	movq	%r8, -8(%rsp)                   # 8-byte Spill
.Ltmp557:
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 531 37 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:531:37
	addl	%r8d, %r8d
	.loc	0 531 23 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:531:23
	leaq	(%rsi,%r8,4), %r10
	movq	%r10, -24(%rsp)                 # 8-byte Spill
	.loc	0 531 43                        # liblzma/lz/lz_encoder_mf.c:531:43
	leaq	(%rsi,%r8,4), %r8
	addq	$4, %r8
.Ltmp558:
	#DEBUG_VALUE: bt_skip_func:ptr0 <- $r8
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:len0 <- 0
	#DEBUG_VALUE: bt_skip_func:len1 <- 0
	.loc	0 0 43                          # liblzma/lz/lz_encoder_mf.c:0:43
	movq	%r8, -32(%rsp)                  # 8-byte Spill
.Ltmp559:
	#DEBUG_VALUE: bt_skip_func:ptr0 <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 539 15 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:539:15
	testl	%r11d, %r11d
	.loc	0 539 20 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:539:20
	je	.LBB6_17
.Ltmp560:
# %bb.6:                                # %if.end5
                                        #   in Loop: Header=BB6_1 Depth=1
	#DEBUG_VALUE: lzma_mf_bt2_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt2_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_limit <- $ecx
	#DEBUG_VALUE: cur_match <- $r15d
	#DEBUG_VALUE: bt_skip_func:len_limit <- $ecx
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r15d
	#DEBUG_VALUE: bt_skip_func:depth <- $r11d
	#DEBUG_VALUE: bt_skip_func:son <- $rsi
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr0 <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:len0 <- 0
	#DEBUG_VALUE: bt_skip_func:len1 <- 0
	.loc	0 618 3 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:618:3
	movl	84(%rdi), %ebp
.Ltmp561:
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- $ebp
	.loc	0 0 0 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:0
	movl	%eax, %r10d
	subl	%r15d, %r10d
.Ltmp562:
	.loc	0 539 20 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:539:20
	cmpl	%ebp, %r10d
	jae	.LBB6_17
.Ltmp563:
# %bb.7:                                # %if.end.i.preheader
                                        #   in Loop: Header=BB6_1 Depth=1
	#DEBUG_VALUE: lzma_mf_bt2_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt2_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_limit <- $ecx
	#DEBUG_VALUE: cur_match <- $r15d
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_skip_func:len_limit <- $ecx
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r15d
	#DEBUG_VALUE: bt_skip_func:depth <- $r11d
	#DEBUG_VALUE: bt_skip_func:son <- $rsi
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr0 <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:len0 <- 0
	#DEBUG_VALUE: bt_skip_func:len1 <- 0
	.loc	0 0 0 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:0
	addq	%rdx, %r9
.Ltmp564:
	#DEBUG_VALUE: bt_skip_func:cur <- $r9
	#DEBUG_VALUE: cur <- $r9
	.loc	0 537 2 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:537:2
	decl	%ecx
.Ltmp565:
	.loc	0 0 2 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:2
	xorl	%r12d, %r12d
	xorl	%r13d, %r13d
.Ltmp566:
.LBB6_8:                                # %if.end.i
                                        #   Parent Loop BB6_1 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB6_10 Depth 3
	#DEBUG_VALUE: lzma_mf_bt2_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt2_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: cur <- $r9
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_skip_func:cur <- $r9
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r15d
	#DEBUG_VALUE: bt_skip_func:son <- $rsi
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr0 <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r15d
	#DEBUG_VALUE: bt_skip_func:ptr0 <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:len1 <- $r12d
	#DEBUG_VALUE: bt_skip_func:len0 <- $r13d
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	movq	-8(%rsp), %rdx                  # 8-byte Reload
                                        # kill: def $edx killed $edx killed $rdx def $rdx
.Ltmp567:
	.loc	0 545 39 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:545:39
	subl	%r10d, %edx
	.loc	0 546 8                         # liblzma/lz/lz_encoder_mf.c:546:8
	movl	$0, %r8d
	cmovbl	%ebp, %r8d
	.loc	0 546 5 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:546:5
	addl	%r8d, %edx
	.loc	0 547 5 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:547:5
	addl	%edx, %edx
.Ltmp568:
	#DEBUG_VALUE: pair <- undef
	.loc	0 548 27                        # liblzma/lz/lz_encoder_mf.c:548:27
	movl	%r10d, %r10d
	movq	%r9, %r8
	subq	%r10, %r8
.Ltmp569:
	#DEBUG_VALUE: pb <- $r8
	.loc	0 549 18                        # liblzma/lz/lz_encoder_mf.c:549:18
	cmpl	%r12d, %r13d
	movl	%r12d, %r10d
	cmovbl	%r13d, %r10d
.Ltmp570:
	#DEBUG_VALUE: len <- $r10d
	.loc	0 545 24                        # liblzma/lz/lz_encoder_mf.c:545:24
	leaq	(%rsi,%rdx,4), %rdx
.Ltmp571:
	#DEBUG_VALUE: pair <- $rdx
	.loc	0 551 7                         # liblzma/lz/lz_encoder_mf.c:551:7
	movzbl	(%r8,%r10), %r14d
	.loc	0 551 18 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:551:18
	movzbl	(%r9,%r10), %ebx
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	cmpb	%bl, %r14b
.Ltmp572:
	jne	.LBB6_12
.Ltmp573:
	.p2align	4, 0x90
.LBB6_10:                               # %while.cond24.i
                                        #   Parent Loop BB6_1 Depth=1
                                        #     Parent Loop BB6_8 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: lzma_mf_bt2_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt2_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: cur <- $r9
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_skip_func:cur <- $r9
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r15d
	#DEBUG_VALUE: bt_skip_func:son <- $rsi
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr0 <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:len0 <- $r13d
	#DEBUG_VALUE: bt_skip_func:len1 <- $r12d
	#DEBUG_VALUE: pair <- $rdx
	#DEBUG_VALUE: pb <- $r8
	#DEBUG_VALUE: len <- $r10d
	#DEBUG_VALUE: len <- $r10d
	#DEBUG_VALUE: len <- undef
	.loc	0 552 17 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:552:17
	cmpl	%r10d, %ecx
	.loc	0 552 4 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:552:4
	je	.LBB6_30
.Ltmp574:
# %bb.11:                               # %while.body27.i
                                        #   in Loop: Header=BB6_10 Depth=3
	#DEBUG_VALUE: lzma_mf_bt2_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt2_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: cur <- $r9
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_skip_func:cur <- $r9
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r15d
	#DEBUG_VALUE: bt_skip_func:son <- $rsi
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr0 <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:len0 <- $r13d
	#DEBUG_VALUE: bt_skip_func:len1 <- $r12d
	#DEBUG_VALUE: pair <- $rdx
	#DEBUG_VALUE: pb <- $r8
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	incl	%r10d
.Ltmp575:
	#DEBUG_VALUE: len <- $r10d
	.loc	0 553 9 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:553:9
	movl	%r10d, %ebx
	movzbl	(%r8,%rbx), %r14d
	.loc	0 553 20 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:553:20
	movzbl	(%r9,%rbx), %ebx
.Ltmp576:
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	cmpb	%bl, %r14b
.Ltmp577:
	je	.LBB6_10
.Ltmp578:
.LBB6_12:                               # %if.end44.i
                                        #   in Loop: Header=BB6_8 Depth=2
	#DEBUG_VALUE: lzma_mf_bt2_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt2_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: cur <- $r9
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_skip_func:cur <- $r9
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r15d
	#DEBUG_VALUE: bt_skip_func:son <- $rsi
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr0 <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:len0 <- $r13d
	#DEBUG_VALUE: bt_skip_func:len1 <- $r12d
	#DEBUG_VALUE: pair <- $rdx
	#DEBUG_VALUE: pb <- $r8
	#DEBUG_VALUE: len <- $r10d
	#DEBUG_VALUE: len <- $r10d
	.loc	0 563 15 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:563:15
	cmpb	%bl, %r14b
.Ltmp579:
	.loc	0 563 7 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:563:7
	jae	.LBB6_14
.Ltmp580:
# %bb.13:                               # %if.then53.i
                                        #   in Loop: Header=BB6_8 Depth=2
	#DEBUG_VALUE: lzma_mf_bt2_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt2_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: cur <- $r9
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_skip_func:cur <- $r9
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r15d
	#DEBUG_VALUE: bt_skip_func:son <- $rsi
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr0 <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:len0 <- $r13d
	#DEBUG_VALUE: bt_skip_func:len1 <- $r12d
	#DEBUG_VALUE: pair <- $rdx
	#DEBUG_VALUE: pb <- $r8
	#DEBUG_VALUE: len <- $r10d
	.loc	0 0 7                           # liblzma/lz/lz_encoder_mf.c:0:7
	movq	-24(%rsp), %r8                  # 8-byte Reload
.Ltmp581:
	.loc	0 564 10 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:564:10
	movl	%r15d, (%r8)
	.loc	0 565 16                        # liblzma/lz/lz_encoder_mf.c:565:16
	addq	$4, %rdx
.Ltmp582:
	#DEBUG_VALUE: bt_skip_func:ptr1 <- $rdx
	#DEBUG_VALUE: bt_skip_func:cur_match <- undef
	#DEBUG_VALUE: bt_skip_func:len1 <- $r10d
	.loc	0 0 16 is_stmt 0                # liblzma/lz/lz_encoder_mf.c:0:16
	movq	%rdx, -24(%rsp)                 # 8-byte Spill
.Ltmp583:
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	movl	%r10d, %r12d
.Ltmp584:
	decl	%r11d
	#DEBUG_VALUE: bt_skip_func:cur_match <- undef
.Ltmp585:
	#DEBUG_VALUE: bt_skip_func:depth <- $r11d
	#DEBUG_VALUE: bt_skip_func:ptr0 <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:len1 <- $r12d
	#DEBUG_VALUE: bt_skip_func:len0 <- $r13d
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- undef
	#DEBUG_VALUE: bt_skip_func:depth <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r11d
	jne	.LBB6_16
	jmp	.LBB6_17
.Ltmp586:
	.p2align	4, 0x90
.LBB6_14:                               # %if.else.i
                                        #   in Loop: Header=BB6_8 Depth=2
	#DEBUG_VALUE: lzma_mf_bt2_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt2_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: cur <- $r9
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_skip_func:cur <- $r9
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r15d
	#DEBUG_VALUE: bt_skip_func:son <- $rsi
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr0 <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:len0 <- $r13d
	#DEBUG_VALUE: bt_skip_func:len1 <- $r12d
	#DEBUG_VALUE: pair <- $rdx
	#DEBUG_VALUE: pb <- $r8
	#DEBUG_VALUE: len <- $r10d
	movq	-32(%rsp), %r8                  # 8-byte Reload
.Ltmp587:
	.loc	0 569 10 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:569:10
	movl	%r15d, (%r8)
.Ltmp588:
	#DEBUG_VALUE: bt_skip_func:ptr0 <- $rdx
	#DEBUG_VALUE: bt_skip_func:cur_match <- undef
	#DEBUG_VALUE: bt_skip_func:len0 <- $r10d
	.loc	0 0 10 is_stmt 0                # liblzma/lz/lz_encoder_mf.c:0:10
	movl	%r10d, %r13d
	movq	%rdx, -32(%rsp)                 # 8-byte Spill
.Ltmp589:
	#DEBUG_VALUE: pair <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr0 <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	decl	%r11d
	#DEBUG_VALUE: bt_skip_func:cur_match <- undef
.Ltmp590:
	#DEBUG_VALUE: bt_skip_func:depth <- undef
	#DEBUG_VALUE: bt_skip_func:ptr0 <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:len1 <- $r12d
	#DEBUG_VALUE: bt_skip_func:len0 <- $r13d
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- undef
	#DEBUG_VALUE: bt_skip_func:depth <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
	.loc	0 539 20 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:539:20
	je	.LBB6_17
.Ltmp591:
.LBB6_16:                               # %cleanup58.i
                                        #   in Loop: Header=BB6_8 Depth=2
	#DEBUG_VALUE: lzma_mf_bt2_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt2_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: cur <- $r9
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_skip_func:cur <- $r9
	#DEBUG_VALUE: bt_skip_func:son <- $rsi
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr0 <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:len0 <- $r13d
	#DEBUG_VALUE: bt_skip_func:len1 <- $r12d
	#DEBUG_VALUE: len <- $r10d
	.loc	0 0 0 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:0
	movl	(%rdx), %r15d
.Ltmp592:
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r15d
	movl	%eax, %r10d
.Ltmp593:
	subl	%r15d, %r10d
.Ltmp594:
	#DEBUG_VALUE: delta <- $r10d
	.loc	0 539 20                        # liblzma/lz/lz_encoder_mf.c:539:20
	cmpl	%ebp, %r10d
	jb	.LBB6_8
.Ltmp595:
	.p2align	4, 0x90
.LBB6_17:                               # %if.then.i
                                        #   in Loop: Header=BB6_1 Depth=1
	#DEBUG_VALUE: lzma_mf_bt2_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt2_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:son <- $rsi
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr0 <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 0 20                          # liblzma/lz/lz_encoder_mf.c:0:20
	movq	-32(%rsp), %rax                 # 8-byte Reload
.Ltmp596:
	.loc	0 540 10 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:540:10
	movl	$0, (%rax)
	movq	-24(%rsp), %rax                 # 8-byte Reload
	.loc	0 541 10                        # liblzma/lz/lz_encoder_mf.c:541:10
	movl	$0, (%rax)
	jmp	.LBB6_18
.Ltmp597:
	.p2align	4, 0x90
.LBB6_30:                               # %if.then40.i
                                        #   in Loop: Header=BB6_1 Depth=1
	#DEBUG_VALUE: lzma_mf_bt2_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt2_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: cur <- $r9
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_skip_func:cur <- $r9
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r15d
	#DEBUG_VALUE: bt_skip_func:son <- $rsi
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr0 <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:len0 <- $r13d
	#DEBUG_VALUE: bt_skip_func:len1 <- $r12d
	#DEBUG_VALUE: pair <- $rdx
	#DEBUG_VALUE: pb <- $r8
	.loc	0 557 13                        # liblzma/lz/lz_encoder_mf.c:557:13
	movl	(%rdx), %eax
	movq	-24(%rsp), %rcx                 # 8-byte Reload
	.loc	0 557 11 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:557:11
	movl	%eax, (%rcx)
	.loc	0 558 13 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:558:13
	movl	4(%rdx), %eax
	movq	-32(%rsp), %rcx                 # 8-byte Reload
	.loc	0 558 11 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:558:11
	movl	%eax, (%rcx)
.Ltmp598:
.LBB6_18:                               # %bt_skip_func.exit
                                        #   in Loop: Header=BB6_1 Depth=1
	#DEBUG_VALUE: lzma_mf_bt2_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt2_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:son <- $rsi
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr0 <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:cur_match <- undef
	#DEBUG_VALUE: bt_skip_func:ptr0 <- undef
	#DEBUG_VALUE: bt_skip_func:len1 <- undef
	#DEBUG_VALUE: bt_skip_func:len0 <- undef
	#DEBUG_VALUE: bt_skip_func:ptr1 <- undef
	#DEBUG_VALUE: move_pos:mf <- $rdi
	.loc	0 150 6 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:150:6
	movl	80(%rdi), %eax
	incl	%eax
	.loc	0 150 30 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:150:30
	movl	84(%rdi), %ecx
	.loc	0 150 23                        # liblzma/lz/lz_encoder_mf.c:150:23
	cmpl	%ecx, %eax
	movl	$0, %r10d
.Ltmp599:
	.loc	0 150 6                         # liblzma/lz/lz_encoder_mf.c:150:6
	cmovel	%r10d, %eax
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movl	%eax, 80(%rdi)
.Ltmp600:
	.loc	0 156 6 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:156:6
	movl	20(%rdi), %eax
.Ltmp601:
	.loc	0 153 2                         # liblzma/lz/lz_encoder_mf.c:153:2
	movl	24(%rdi), %edx
	leal	1(%rdx), %esi
	movl	%esi, 24(%rdi)
.Ltmp602:
	.loc	0 156 6                         # liblzma/lz/lz_encoder_mf.c:156:6
	addl	%eax, %edx
	incl	%edx
	cmpl	$-1, %edx
	movl	-12(%rsp), %esi                 # 4-byte Reload
.Ltmp603:
	.loc	0 156 6 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:156:6
	jne	.LBB6_28
.Ltmp604:
# %bb.19:                               # %if.then5.i
                                        #   in Loop: Header=BB6_1 Depth=1
	#DEBUG_VALUE: lzma_mf_bt2_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt2_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	.loc	0 116 26 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:116:26
	notl	%ecx
.Ltmp605:
	#DEBUG_VALUE: normalize:subvalue <- $ecx
	.loc	0 119 49                        # liblzma/lz/lz_encoder_mf.c:119:49
	movl	112(%rdi), %r9d
.Ltmp606:
	#DEBUG_VALUE: i <- 0
	.loc	0 122 25                        # liblzma/lz/lz_encoder_mf.c:122:25
	addl	108(%rdi), %r9d
.Ltmp607:
	#DEBUG_VALUE: normalize:count <- $r9d
	#DEBUG_VALUE: normalize:hash <- undef
	.loc	0 122 2 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:122:2
	je	.LBB6_27
.Ltmp608:
# %bb.20:                               # %for.body.preheader.i.i
                                        #   in Loop: Header=BB6_1 Depth=1
	#DEBUG_VALUE: lzma_mf_bt2_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt2_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $ecx
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $r9d
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movq	64(%rdi), %rdx
.Ltmp609:
	#DEBUG_VALUE: normalize:hash <- $rdx
	.loc	0 122 25                        # liblzma/lz/lz_encoder_mf.c:122:25
	movl	%r9d, %r8d
.Ltmp610:
	.loc	0 122 2                         # liblzma/lz/lz_encoder_mf.c:122:2
	cmpl	$16, %r9d
	jae	.LBB6_22
.Ltmp611:
# %bb.21:                               #   in Loop: Header=BB6_1 Depth=1
	#DEBUG_VALUE: lzma_mf_bt2_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt2_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $ecx
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $r9d
	#DEBUG_VALUE: normalize:hash <- $rdx
	.loc	0 0 2                           # liblzma/lz/lz_encoder_mf.c:0:2
	xorl	%r9d, %r9d
.Ltmp612:
	#DEBUG_VALUE: normalize:count <- $r8d
	.loc	0 122 2                         # liblzma/lz/lz_encoder_mf.c:122:2
	jmp	.LBB6_25
.Ltmp613:
.LBB6_22:                               # %vector.ph
                                        #   in Loop: Header=BB6_1 Depth=1
	#DEBUG_VALUE: lzma_mf_bt2_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt2_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $ecx
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $r9d
	#DEBUG_VALUE: normalize:hash <- $rdx
	movl	%r8d, %r9d
.Ltmp614:
	#DEBUG_VALUE: normalize:count <- $r8d
	andl	$-16, %r9d
	movd	%ecx, %xmm1
	pshufd	$0, %xmm1, %xmm1                # xmm1 = xmm1[0,0,0,0]
	movdqa	%xmm1, %xmm2
	pxor	%xmm0, %xmm2
	xorl	%eax, %eax
.Ltmp615:
	.p2align	4, 0x90
.LBB6_23:                               # %vector.body
                                        #   Parent Loop BB6_1 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: lzma_mf_bt2_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt2_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $ecx
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $r8d
	#DEBUG_VALUE: normalize:hash <- $rdx
	.loc	0 133 7 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:133:7
	movdqu	(%rdx,%rax,4), %xmm3
	movdqu	16(%rdx,%rax,4), %xmm4
	movdqu	32(%rdx,%rax,4), %xmm5
	movdqu	48(%rdx,%rax,4), %xmm6
.Ltmp616:
	.loc	0 133 7 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:133:7
	movdqa	%xmm3, %xmm7
	pxor	%xmm0, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm1, %xmm3
	pand	%xmm7, %xmm3
	movdqa	%xmm4, %xmm7
	pxor	%xmm0, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm1, %xmm4
	pand	%xmm7, %xmm4
	movdqa	%xmm5, %xmm7
	pxor	%xmm0, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm1, %xmm5
	pand	%xmm7, %xmm5
	movdqa	%xmm6, %xmm7
	pxor	%xmm0, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm1, %xmm6
	pand	%xmm7, %xmm6
.Ltmp617:
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movdqu	%xmm3, (%rdx,%rax,4)
	movdqu	%xmm4, 16(%rdx,%rax,4)
	movdqu	%xmm5, 32(%rdx,%rax,4)
	movdqu	%xmm6, 48(%rdx,%rax,4)
.Ltmp618:
	.loc	0 122 34 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:122:34
	addq	$16, %rax
	cmpq	%rax, %r9
	jne	.LBB6_23
.Ltmp619:
# %bb.24:                               # %middle.block
                                        #   in Loop: Header=BB6_1 Depth=1
	#DEBUG_VALUE: lzma_mf_bt2_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt2_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $ecx
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $r8d
	#DEBUG_VALUE: normalize:hash <- $rdx
	.loc	0 122 2 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:122:2
	cmpl	%r8d, %r9d
	je	.LBB6_26
.Ltmp620:
	.p2align	4, 0x90
.LBB6_25:                               # %for.body.i.i
                                        #   Parent Loop BB6_1 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: lzma_mf_bt2_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt2_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $ecx
	#DEBUG_VALUE: normalize:count <- $r8d
	#DEBUG_VALUE: normalize:hash <- $rdx
	#DEBUG_VALUE: i <- $r9
	.loc	0 133 7 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:133:7
	movl	(%rdx,%r9,4), %eax
.Ltmp621:
	.loc	0 133 7 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:133:7
	subl	%ecx, %eax
	cmovbl	%r10d, %eax
.Ltmp622:
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movl	%eax, (%rdx,%r9,4)
.Ltmp623:
	.loc	0 122 34 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:122:34
	incq	%r9
.Ltmp624:
	#DEBUG_VALUE: i <- $r9
	.loc	0 122 25 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:122:25
	cmpq	%r9, %r8
.Ltmp625:
	.loc	0 122 2                         # liblzma/lz/lz_encoder_mf.c:122:2
	jne	.LBB6_25
.Ltmp626:
.LBB6_26:                               # %normalize.exit.loopexit.i
                                        #   in Loop: Header=BB6_1 Depth=1
	#DEBUG_VALUE: lzma_mf_bt2_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt2_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $ecx
	#DEBUG_VALUE: normalize:count <- $r8d
	#DEBUG_VALUE: normalize:hash <- $rdx
	.loc	0 140 13 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:140:13
	movl	20(%rdi), %eax
.Ltmp627:
.LBB6_27:                               # %normalize.exit.i
                                        #   in Loop: Header=BB6_1 Depth=1
	#DEBUG_VALUE: lzma_mf_bt2_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt2_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $ecx
	subl	%ecx, %eax
	movl	%eax, 20(%rdi)
	jmp	.LBB6_28
.Ltmp628:
.LBB6_29:                               # %do.end17
	#DEBUG_VALUE: lzma_mf_bt2_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt2_skip:amount <- $esi
	.loc	0 621 1 epilogue_begin          # liblzma/lz/lz_encoder_mf.c:621:1
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp629:
.Lfunc_end6:
	.size	lzma_mf_bt2_skip, .Lfunc_end6-lzma_mf_bt2_skip
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4, 0x0                          # -- Begin function lzma_mf_bt3_find
.LCPI7_0:
	.long	2147483648                      # 0x80000000
	.long	2147483648                      # 0x80000000
	.long	2147483648                      # 0x80000000
	.long	2147483648                      # 0x80000000
	.text
	.globl	lzma_mf_bt3_find
	.p2align	4, 0x90
	.type	lzma_mf_bt3_find,@function
lzma_mf_bt3_find:                       # @lzma_mf_bt3_find
.Lfunc_begin7:
	.loc	0 628 0                         # liblzma/lz/lz_encoder_mf.c:628:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- $rsi
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	.loc	0 629 2 prologue_end            # liblzma/lz/lz_encoder_mf.c:629:2
	movl	24(%rdi), %ecx
	movl	36(%rdi), %eax
.Ltmp630:
	.loc	4 232 23                        # liblzma/lz/lz_encoder.h:232:23
	subl	%ecx, %eax
.Ltmp631:
	#DEBUG_VALUE: lzma_mf_bt3_find:len_limit <- $eax
	.loc	0 629 2                         # liblzma/lz/lz_encoder_mf.c:629:2
	movl	96(%rdi), %ebx
	cmpl	%eax, %ebx
.Ltmp632:
	.loc	0 629 2 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:629:2
	jbe	.LBB7_4
.Ltmp633:
# %bb.1:                                # %if.else
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_bt3_find:len_limit <- $eax
	.loc	0 629 2                         # liblzma/lz/lz_encoder_mf.c:629:2
	cmpl	$3, %eax
	jb	.LBB7_3
.Ltmp634:
# %bb.2:                                # %lor.lhs.false
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_bt3_find:len_limit <- $eax
	cmpl	$1, 104(%rdi)
	movl	%eax, %ebx
.Ltmp635:
	#DEBUG_VALUE: lzma_mf_bt3_find:len_limit <- $ebx
	.loc	0 629 2                         # liblzma/lz/lz_encoder_mf.c:629:2
	jne	.LBB7_4
.Ltmp636:
.LBB7_3:                                # %if.then4
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_bt3_find:len_limit <- $eax
	#DEBUG_VALUE: move_pending:mf <- $rdi
	.loc	0 178 2 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:178:2
	incl	%ecx
	movl	%ecx, 24(%rdi)
	.loc	0 180 2                         # liblzma/lz/lz_encoder_mf.c:180:2
	incl	40(%rdi)
	xorl	%eax, %eax
.Ltmp637:
	.loc	0 629 2                         # liblzma/lz/lz_encoder_mf.c:629:2
	jmp	.LBB7_56
.Ltmp638:
.LBB7_4:                                # %if.end5
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_bt3_find:len_limit <- $eax
	#DEBUG_VALUE: lzma_mf_bt3_find:len_limit <- $ebx
	.loc	0 629 2 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:629:2
	movq	(%rdi), %rdx
	.loc	0 633 36 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:633:36
	movq	64(%rdi), %r11
.Ltmp639:
	#DEBUG_VALUE: mf_ptr:mf <- undef
	.loc	4 224 20                        # liblzma/lz/lz_encoder.h:224:20
	leaq	(%rdx,%rcx), %rax
.Ltmp640:
	#DEBUG_VALUE: lzma_mf_bt3_find:cur <- $rax
	.loc	4 0 20 is_stmt 0                # liblzma/lz/lz_encoder.h:0:20
	movl	20(%rdi), %r12d
.Ltmp641:
	.loc	0 629 2 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:629:2
	addl	%ecx, %r12d
.Ltmp642:
	#DEBUG_VALUE: lzma_mf_bt3_find:pos <- undef
	#DEBUG_VALUE: lzma_mf_bt3_find:matches_count <- 0
	.loc	0 631 2                         # liblzma/lz/lz_encoder_mf.c:631:2
	movzbl	(%rdx,%rcx), %r9d
	movq	lzma_crc32_table@GOTPCREL(%rip), %r8
	movzbl	1(%rdx,%rcx), %r10d
	xorl	(%r8,%r9,4), %r10d
	movzbl	2(%rdx,%rcx), %edx
	shll	$8, %edx
	xorl	%r10d, %edx
.Ltmp643:
	#DEBUG_VALUE: lzma_mf_bt3_find:temp <- $r10d
	#DEBUG_VALUE: lzma_mf_bt3_find:hash_2_value <- undef
	andl	88(%rdi), %edx
.Ltmp644:
	#DEBUG_VALUE: lzma_mf_bt3_find:hash_value <- $edx
	andl	$1023, %r10d                    # imm = 0x3FF
.Ltmp645:
	#DEBUG_VALUE: lzma_mf_bt3_find:hash_2_value <- $r10d
	.loc	0 633 30                        # liblzma/lz/lz_encoder_mf.c:633:30
	movl	%r12d, %ecx
	subl	(%r11,%r10,4), %ecx
.Ltmp646:
	#DEBUG_VALUE: lzma_mf_bt3_find:delta2 <- $ecx
	.loc	0 634 54                        # liblzma/lz/lz_encoder_mf.c:634:54
	addl	$1024, %edx                     # imm = 0x400
.Ltmp647:
	.loc	0 634 29 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:634:29
	movl	(%r11,%rdx,4), %r9d
.Ltmp648:
	#DEBUG_VALUE: lzma_mf_bt3_find:cur_match <- $r9d
	.loc	0 636 25 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:636:25
	movl	%r12d, (%r11,%r10,4)
	.loc	0 637 6                         # liblzma/lz/lz_encoder_mf.c:637:6
	movq	64(%rdi), %r8
	.loc	0 637 41 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:637:41
	movl	%r12d, (%r8,%rdx,4)
.Ltmp649:
	#DEBUG_VALUE: lzma_mf_bt3_find:len_best <- 2
	.loc	0 641 19 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:641:19
	movl	84(%rdi), %r11d
	movl	$2, %r10d
.Ltmp650:
	.loc	0 641 13 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:641:13
	cmpl	%r11d, %ecx
	movq	%rbx, -56(%rsp)                 # 8-byte Spill
.Ltmp651:
	#DEBUG_VALUE: lzma_mf_bt3_find:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 0 13                          # liblzma/lz/lz_encoder_mf.c:0:13
	movl	%r12d, -68(%rsp)                # 4-byte Spill
	movq	%rdi, -32(%rsp)                 # 8-byte Spill
.Ltmp652:
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	.loc	0 641 31                        # liblzma/lz/lz_encoder_mf.c:641:31
	jae	.LBB7_23
.Ltmp653:
# %bb.5:                                # %land.lhs.true
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_bt3_find:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt3_find:cur <- $rax
	#DEBUG_VALUE: lzma_mf_bt3_find:matches_count <- 0
	#DEBUG_VALUE: lzma_mf_bt3_find:delta2 <- $ecx
	#DEBUG_VALUE: lzma_mf_bt3_find:cur_match <- $r9d
	#DEBUG_VALUE: lzma_mf_bt3_find:len_best <- 2
	.loc	0 641 40                        # liblzma/lz/lz_encoder_mf.c:641:40
	movl	%ecx, %edx
	movq	%rax, %r8
	subq	%rdx, %r8
	.loc	0 641 34                        # liblzma/lz/lz_encoder_mf.c:641:34
	movzbl	(%r8), %r8d
	.loc	0 641 50                        # liblzma/lz/lz_encoder_mf.c:641:50
	cmpb	(%rax), %r8b
.Ltmp654:
	.loc	0 641 6                         # liblzma/lz/lz_encoder_mf.c:641:6
	jne	.LBB7_23
.Ltmp655:
# %bb.6:                                # %for.cond.preheader
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_bt3_find:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt3_find:cur <- $rax
	#DEBUG_VALUE: lzma_mf_bt3_find:matches_count <- 0
	#DEBUG_VALUE: lzma_mf_bt3_find:delta2 <- $ecx
	#DEBUG_VALUE: lzma_mf_bt3_find:cur_match <- $r9d
	#DEBUG_VALUE: lzma_mf_bt3_find:len_best <- 2
	#DEBUG_VALUE: lzma_mf_bt3_find:len_best <- 2
	.loc	0 642 20 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:642:20
	cmpl	$2, %ebx
.Ltmp656:
	.loc	0 642 3 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:642:3
	je	.LBB7_10
.Ltmp657:
# %bb.7:                                # %for.body.preheader
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_bt3_find:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt3_find:cur <- $rax
	#DEBUG_VALUE: lzma_mf_bt3_find:matches_count <- 0
	#DEBUG_VALUE: lzma_mf_bt3_find:delta2 <- $ecx
	#DEBUG_VALUE: lzma_mf_bt3_find:cur_match <- $r9d
	#DEBUG_VALUE: lzma_mf_bt3_find:len_best <- 2
	.loc	0 0 3                           # liblzma/lz/lz_encoder_mf.c:0:3
	negq	%rdx
.Ltmp658:
	.p2align	4, 0x90
.LBB7_8:                                # %for.body
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_bt3_find:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt3_find:cur <- $rax
	#DEBUG_VALUE: lzma_mf_bt3_find:matches_count <- 0
	#DEBUG_VALUE: lzma_mf_bt3_find:delta2 <- $ecx
	#DEBUG_VALUE: lzma_mf_bt3_find:cur_match <- $r9d
	#DEBUG_VALUE: lzma_mf_bt3_find:len_best <- $r10d
	.loc	0 643 14 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:643:14
	movl	%r10d, %r11d
	leaq	(%rax,%r11), %r8
	.loc	0 643 8 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:643:8
	movzbl	(%rdx,%r8), %r8d
	.loc	0 643 35                        # liblzma/lz/lz_encoder_mf.c:643:35
	cmpb	(%rax,%r11), %r8b
.Ltmp659:
	.loc	0 643 8                         # liblzma/lz/lz_encoder_mf.c:643:8
	jne	.LBB7_29
.Ltmp660:
# %bb.9:                                # %for.inc
                                        #   in Loop: Header=BB7_8 Depth=1
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_bt3_find:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt3_find:cur <- $rax
	#DEBUG_VALUE: lzma_mf_bt3_find:matches_count <- 0
	#DEBUG_VALUE: lzma_mf_bt3_find:delta2 <- $ecx
	#DEBUG_VALUE: lzma_mf_bt3_find:cur_match <- $r9d
	#DEBUG_VALUE: lzma_mf_bt3_find:len_best <- $r11d
	.loc	0 642 34 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:642:34
	incl	%r10d
.Ltmp661:
	#DEBUG_VALUE: lzma_mf_bt3_find:len_best <- $r10d
	.loc	0 642 20 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:642:20
	cmpl	%r10d, %ebx
.Ltmp662:
	.loc	0 642 3                         # liblzma/lz/lz_encoder_mf.c:642:3
	jne	.LBB7_8
.Ltmp663:
.LBB7_10:                               # %do.body
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_bt3_find:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt3_find:cur <- $rax
	#DEBUG_VALUE: lzma_mf_bt3_find:matches_count <- 0
	#DEBUG_VALUE: lzma_mf_bt3_find:delta2 <- $ecx
	#DEBUG_VALUE: lzma_mf_bt3_find:cur_match <- $r9d
	.loc	0 646 18 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:646:18
	movl	%ebx, (%rsi)
	.loc	0 647 28                        # liblzma/lz/lz_encoder_mf.c:647:28
	decl	%ecx
.Ltmp664:
	.loc	0 647 19 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:647:19
	movl	%ecx, 4(%rsi)
.Ltmp665:
	#DEBUG_VALUE: lzma_mf_bt3_find:matches_count <- 1
	.loc	0 651 4 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:651:4
	movl	92(%rdi), %r10d
	movq	72(%rdi), %r11
	movl	80(%rdi), %ebx
.Ltmp666:
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- undef
	#DEBUG_VALUE: bt_skip_func:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:pos <- undef
	#DEBUG_VALUE: bt_skip_func:cur <- $rax
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_skip_func:depth <- $r10d
	#DEBUG_VALUE: bt_skip_func:son <- $r11
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- $ebx
	.loc	0 531 37                        # liblzma/lz/lz_encoder_mf.c:531:37
	leal	(%rbx,%rbx), %edx
	.loc	0 531 23 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:531:23
	leaq	(%r11,%rdx,4), %rcx
	.loc	0 531 43                        # liblzma/lz/lz_encoder_mf.c:531:43
	leaq	(%r11,%rdx,4), %rsi
.Ltmp667:
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	addq	$4, %rsi
.Ltmp668:
	#DEBUG_VALUE: bt_skip_func:ptr0 <- $rsi
	#DEBUG_VALUE: bt_skip_func:ptr1 <- $rcx
	#DEBUG_VALUE: bt_skip_func:len0 <- 0
	#DEBUG_VALUE: bt_skip_func:len1 <- 0
	.loc	0 539 15 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:539:15
	testl	%r10d, %r10d
	.loc	0 539 20 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:539:20
	je	.LBB7_21
.Ltmp669:
# %bb.11:                               # %do.body
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_bt3_find:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt3_find:cur <- $rax
	#DEBUG_VALUE: lzma_mf_bt3_find:matches_count <- 1
	#DEBUG_VALUE: lzma_mf_bt3_find:cur_match <- $r9d
	#DEBUG_VALUE: bt_skip_func:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:cur <- $rax
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_skip_func:depth <- $r10d
	#DEBUG_VALUE: bt_skip_func:son <- $r11
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- $ebx
	#DEBUG_VALUE: bt_skip_func:ptr0 <- $rsi
	#DEBUG_VALUE: bt_skip_func:ptr1 <- $rcx
	#DEBUG_VALUE: bt_skip_func:len0 <- 0
	#DEBUG_VALUE: bt_skip_func:len1 <- 0
	.loc	0 651 4 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:651:4
	movl	84(%rdi), %ebp
.Ltmp670:
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- $ebp
	.loc	0 0 0 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:0
	movl	%r12d, %edx
	subl	%r9d, %edx
.Ltmp671:
	.loc	0 539 20 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:539:20
	cmpl	%ebp, %edx
	jae	.LBB7_21
.Ltmp672:
# %bb.12:                               # %if.end.i.preheader
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_bt3_find:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt3_find:cur <- $rax
	#DEBUG_VALUE: lzma_mf_bt3_find:matches_count <- 1
	#DEBUG_VALUE: lzma_mf_bt3_find:cur_match <- $r9d
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_skip_func:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:cur <- $rax
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_skip_func:depth <- $r10d
	#DEBUG_VALUE: bt_skip_func:son <- $r11
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- $ebx
	#DEBUG_VALUE: bt_skip_func:ptr0 <- $rsi
	#DEBUG_VALUE: bt_skip_func:ptr1 <- $rcx
	#DEBUG_VALUE: bt_skip_func:len0 <- 0
	#DEBUG_VALUE: bt_skip_func:len1 <- 0
	.loc	0 0 20 is_stmt 0                # liblzma/lz/lz_encoder_mf.c:0:20
	movq	-56(%rsp), %rdi                 # 8-byte Reload
	.loc	0 537 2 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:537:2
	decl	%edi
	movq	%rdi, -56(%rsp)                 # 8-byte Spill
.Ltmp673:
	#DEBUG_VALUE: bt_skip_func:len_limit <- undef
	#DEBUG_VALUE: lzma_mf_bt3_find:len_limit <- undef
	.loc	0 0 2 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:2
	xorl	%r14d, %r14d
	xorl	%r15d, %r15d
.Ltmp674:
.LBB7_13:                               # %if.end.i
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB7_14 Depth 2
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_bt3_find:cur <- $rax
	#DEBUG_VALUE: lzma_mf_bt3_find:matches_count <- 1
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_skip_func:cur <- $rax
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_skip_func:son <- $r11
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- $ebx
	#DEBUG_VALUE: bt_skip_func:ptr0 <- $rsi
	#DEBUG_VALUE: bt_skip_func:ptr1 <- $rcx
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_skip_func:ptr0 <- $rsi
	#DEBUG_VALUE: bt_skip_func:len1 <- $r14d
	#DEBUG_VALUE: bt_skip_func:len0 <- $r15d
	#DEBUG_VALUE: bt_skip_func:ptr1 <- $rcx
	.loc	0 545 39 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:545:39
	movl	%ebx, %edi
	subl	%edx, %edi
	.loc	0 546 8                         # liblzma/lz/lz_encoder_mf.c:546:8
	movl	$0, %r8d
	cmovbl	%ebp, %r8d
	.loc	0 546 5 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:546:5
	leal	(%rdi,%r8), %r12d
	.loc	0 547 5 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:547:5
	addl	%r12d, %r12d
.Ltmp675:
	#DEBUG_VALUE: pair <- undef
	.loc	0 548 27                        # liblzma/lz/lz_encoder_mf.c:548:27
	movl	%edx, %edx
	movq	%rax, %r8
	subq	%rdx, %r8
.Ltmp676:
	#DEBUG_VALUE: pb <- $r8
	.loc	0 549 18                        # liblzma/lz/lz_encoder_mf.c:549:18
	cmpl	%r14d, %r15d
	movl	%r14d, %edi
	cmovbl	%r15d, %edi
.Ltmp677:
	#DEBUG_VALUE: len <- $edi
	.loc	0 545 24                        # liblzma/lz/lz_encoder_mf.c:545:24
	leaq	(%r11,%r12,4), %rdx
.Ltmp678:
	#DEBUG_VALUE: pair <- $rdx
	.loc	0 551 7                         # liblzma/lz/lz_encoder_mf.c:551:7
	movzbl	(%r8,%rdi), %r12d
	.loc	0 551 18 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:551:18
	movzbl	(%rax,%rdi), %r13d
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	cmpb	%r13b, %r12b
.Ltmp679:
	jne	.LBB7_16
.Ltmp680:
	.p2align	4, 0x90
.LBB7_14:                               # %while.cond24.i
                                        #   Parent Loop BB7_13 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_bt3_find:cur <- $rax
	#DEBUG_VALUE: lzma_mf_bt3_find:matches_count <- 1
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_skip_func:cur <- $rax
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_skip_func:son <- $r11
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- $ebx
	#DEBUG_VALUE: bt_skip_func:ptr0 <- $rsi
	#DEBUG_VALUE: bt_skip_func:ptr1 <- $rcx
	#DEBUG_VALUE: bt_skip_func:len0 <- $r15d
	#DEBUG_VALUE: bt_skip_func:len1 <- $r14d
	#DEBUG_VALUE: pair <- $rdx
	#DEBUG_VALUE: pb <- $r8
	#DEBUG_VALUE: len <- $edi
	#DEBUG_VALUE: len <- $edi
	#DEBUG_VALUE: len <- undef
	.loc	0 552 17 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:552:17
	cmpl	%edi, -56(%rsp)                 # 4-byte Folded Reload
	.loc	0 552 4 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:552:4
	je	.LBB7_24
.Ltmp681:
# %bb.15:                               # %while.body27.i
                                        #   in Loop: Header=BB7_14 Depth=2
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_bt3_find:cur <- $rax
	#DEBUG_VALUE: lzma_mf_bt3_find:matches_count <- 1
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_skip_func:cur <- $rax
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_skip_func:son <- $r11
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- $ebx
	#DEBUG_VALUE: bt_skip_func:ptr0 <- $rsi
	#DEBUG_VALUE: bt_skip_func:ptr1 <- $rcx
	#DEBUG_VALUE: bt_skip_func:len0 <- $r15d
	#DEBUG_VALUE: bt_skip_func:len1 <- $r14d
	#DEBUG_VALUE: pair <- $rdx
	#DEBUG_VALUE: pb <- $r8
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	incl	%edi
.Ltmp682:
	#DEBUG_VALUE: len <- $edi
	.loc	0 553 9 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:553:9
	movl	%edi, %r13d
	movzbl	(%r8,%r13), %r12d
	.loc	0 553 20 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:553:20
	movzbl	(%rax,%r13), %r13d
.Ltmp683:
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	cmpb	%r13b, %r12b
.Ltmp684:
	je	.LBB7_14
.Ltmp685:
.LBB7_16:                               # %if.end44.i
                                        #   in Loop: Header=BB7_13 Depth=1
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_bt3_find:cur <- $rax
	#DEBUG_VALUE: lzma_mf_bt3_find:matches_count <- 1
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_skip_func:cur <- $rax
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_skip_func:son <- $r11
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- $ebx
	#DEBUG_VALUE: bt_skip_func:ptr0 <- $rsi
	#DEBUG_VALUE: bt_skip_func:ptr1 <- $rcx
	#DEBUG_VALUE: bt_skip_func:len0 <- $r15d
	#DEBUG_VALUE: bt_skip_func:len1 <- $r14d
	#DEBUG_VALUE: pair <- $rdx
	#DEBUG_VALUE: pb <- $r8
	#DEBUG_VALUE: len <- $edi
	#DEBUG_VALUE: len <- $edi
	.loc	0 563 15 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:563:15
	cmpb	%r13b, %r12b
.Ltmp686:
	.loc	0 563 7 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:563:7
	jae	.LBB7_18
.Ltmp687:
# %bb.17:                               # %if.then53.i
                                        #   in Loop: Header=BB7_13 Depth=1
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_bt3_find:cur <- $rax
	#DEBUG_VALUE: lzma_mf_bt3_find:matches_count <- 1
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_skip_func:cur <- $rax
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_skip_func:son <- $r11
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- $ebx
	#DEBUG_VALUE: bt_skip_func:ptr0 <- $rsi
	#DEBUG_VALUE: bt_skip_func:ptr1 <- $rcx
	#DEBUG_VALUE: bt_skip_func:len0 <- $r15d
	#DEBUG_VALUE: bt_skip_func:len1 <- $r14d
	#DEBUG_VALUE: pair <- $rdx
	#DEBUG_VALUE: pb <- $r8
	#DEBUG_VALUE: len <- $edi
	.loc	0 564 10 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:564:10
	movl	%r9d, (%rcx)
	.loc	0 565 16                        # liblzma/lz/lz_encoder_mf.c:565:16
	addq	$4, %rdx
.Ltmp688:
	#DEBUG_VALUE: bt_skip_func:ptr1 <- $rdx
	#DEBUG_VALUE: bt_skip_func:cur_match <- undef
	#DEBUG_VALUE: bt_skip_func:len1 <- $edi
	.loc	0 0 16 is_stmt 0                # liblzma/lz/lz_encoder_mf.c:0:16
	movq	%rdx, %rcx
	movl	%edi, %r14d
	jmp	.LBB7_19
.Ltmp689:
.LBB7_18:                               # %if.else.i
                                        #   in Loop: Header=BB7_13 Depth=1
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_bt3_find:cur <- $rax
	#DEBUG_VALUE: lzma_mf_bt3_find:matches_count <- 1
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_skip_func:cur <- $rax
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_skip_func:son <- $r11
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- $ebx
	#DEBUG_VALUE: bt_skip_func:ptr0 <- $rsi
	#DEBUG_VALUE: bt_skip_func:ptr1 <- $rcx
	#DEBUG_VALUE: bt_skip_func:len0 <- $r15d
	#DEBUG_VALUE: bt_skip_func:len1 <- $r14d
	#DEBUG_VALUE: pair <- $rdx
	#DEBUG_VALUE: pb <- $r8
	#DEBUG_VALUE: len <- $edi
	.loc	0 569 10 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:569:10
	movl	%r9d, (%rsi)
.Ltmp690:
	#DEBUG_VALUE: bt_skip_func:ptr0 <- $rdx
	#DEBUG_VALUE: bt_skip_func:cur_match <- undef
	#DEBUG_VALUE: bt_skip_func:len0 <- $edi
	.loc	0 0 10 is_stmt 0                # liblzma/lz/lz_encoder_mf.c:0:10
	movl	%edi, %r15d
	movq	%rdx, %rsi
.Ltmp691:
.LBB7_19:                               # %cleanup58.i
                                        #   in Loop: Header=BB7_13 Depth=1
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_bt3_find:cur <- $rax
	#DEBUG_VALUE: lzma_mf_bt3_find:matches_count <- 1
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_skip_func:cur <- $rax
	#DEBUG_VALUE: bt_skip_func:son <- $r11
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- $ebx
	#DEBUG_VALUE: bt_skip_func:ptr0 <- $rsi
	#DEBUG_VALUE: bt_skip_func:ptr1 <- $rcx
	#DEBUG_VALUE: bt_skip_func:len0 <- $r15d
	#DEBUG_VALUE: bt_skip_func:len1 <- $r14d
	#DEBUG_VALUE: pb <- $r8
	#DEBUG_VALUE: len <- $edi
	movl	-68(%rsp), %edi                 # 4-byte Reload
.Ltmp692:
	decl	%r10d
.Ltmp693:
	#DEBUG_VALUE: bt_skip_func:cur_match <- undef
	#DEBUG_VALUE: bt_skip_func:depth <- $r10d
	#DEBUG_VALUE: bt_skip_func:ptr0 <- $rsi
	#DEBUG_VALUE: bt_skip_func:len1 <- $r14d
	#DEBUG_VALUE: bt_skip_func:len0 <- $r15d
	#DEBUG_VALUE: bt_skip_func:ptr1 <- $rcx
	#DEBUG_VALUE: delta <- undef
	#DEBUG_VALUE: bt_skip_func:depth <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r10d
	.loc	0 539 20 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:539:20
	je	.LBB7_21
.Ltmp694:
# %bb.20:                               # %cleanup58.i
                                        #   in Loop: Header=BB7_13 Depth=1
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_bt3_find:cur <- $rax
	#DEBUG_VALUE: lzma_mf_bt3_find:matches_count <- 1
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_skip_func:cur <- $rax
	#DEBUG_VALUE: bt_skip_func:depth <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r10d
	#DEBUG_VALUE: bt_skip_func:son <- $r11
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- $ebx
	#DEBUG_VALUE: bt_skip_func:ptr0 <- $rsi
	#DEBUG_VALUE: bt_skip_func:ptr1 <- $rcx
	#DEBUG_VALUE: bt_skip_func:len0 <- $r15d
	#DEBUG_VALUE: bt_skip_func:len1 <- $r14d
	#DEBUG_VALUE: pb <- $r8
	.loc	0 0 0 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:0
	movl	(%rdx), %r9d
.Ltmp695:
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r9d
	movl	%edi, %edx
	subl	%r9d, %edx
.Ltmp696:
	#DEBUG_VALUE: delta <- $edx
	.loc	0 539 20                        # liblzma/lz/lz_encoder_mf.c:539:20
	cmpl	%ebp, %edx
	jb	.LBB7_13
.Ltmp697:
.LBB7_21:                               # %if.then.i
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_bt3_find:cur <- $rax
	#DEBUG_VALUE: lzma_mf_bt3_find:matches_count <- 1
	#DEBUG_VALUE: bt_skip_func:cur <- $rax
	#DEBUG_VALUE: bt_skip_func:son <- $r11
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- $ebx
	#DEBUG_VALUE: bt_skip_func:ptr0 <- $rsi
	#DEBUG_VALUE: bt_skip_func:ptr1 <- $rcx
	.loc	0 540 10 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:540:10
	movl	$0, (%rsi)
	.loc	0 541 10                        # liblzma/lz/lz_encoder_mf.c:541:10
	movl	$0, (%rcx)
	jmp	.LBB7_25
.Ltmp698:
.LBB7_23:
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_bt3_find:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt3_find:cur <- $rax
	#DEBUG_VALUE: lzma_mf_bt3_find:matches_count <- 0
	#DEBUG_VALUE: lzma_mf_bt3_find:delta2 <- $ecx
	#DEBUG_VALUE: lzma_mf_bt3_find:cur_match <- $r9d
	#DEBUG_VALUE: lzma_mf_bt3_find:len_best <- 2
	.loc	0 0 10 is_stmt 0                # liblzma/lz/lz_encoder_mf.c:0:10
	xorl	%ecx, %ecx
.Ltmp699:
.LBB7_30:                               # %do.body57
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_bt3_find:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt3_find:cur <- $rax
	#DEBUG_VALUE: lzma_mf_bt3_find:cur_match <- $r9d
	#DEBUG_VALUE: lzma_mf_bt3_find:len_best <- $r10d
	#DEBUG_VALUE: lzma_mf_bt3_find:matches_count <- $rcx
	.loc	0 656 2 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:656:2
	movl	92(%rdi), %ebp
	movq	72(%rdi), %r15
	movl	80(%rdi), %edx
	leaq	(%rsi,%rcx,8), %rcx
.Ltmp700:
	#DEBUG_VALUE: bt_find_func:matches <- $rcx
	#DEBUG_VALUE: bt_find_func:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:pos <- undef
	#DEBUG_VALUE: bt_find_func:cur <- $rax
	#DEBUG_VALUE: bt_find_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_find_func:depth <- $ebp
	#DEBUG_VALUE: bt_find_func:son <- $r15
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- $edx
	#DEBUG_VALUE: bt_find_func:cyclic_size <- $r11d
	#DEBUG_VALUE: bt_find_func:len_best <- $r10d
	.loc	0 0 2 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:2
	movq	%rcx, -64(%rsp)                 # 8-byte Spill
.Ltmp701:
	#DEBUG_VALUE: bt_find_func:matches <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	movq	%rdx, -8(%rsp)                  # 8-byte Spill
.Ltmp702:
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 465 37 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:465:37
	leal	(%rdx,%rdx), %ecx
	.loc	0 465 23 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:465:23
	leaq	(%r15,%rcx,4), %rdx
	movq	%rdx, -48(%rsp)                 # 8-byte Spill
	.loc	0 465 43                        # liblzma/lz/lz_encoder_mf.c:465:43
	leaq	(%r15,%rcx,4), %rcx
	addq	$4, %rcx
.Ltmp703:
	#DEBUG_VALUE: bt_find_func:ptr0 <- $rcx
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 48, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len0 <- 0
	#DEBUG_VALUE: bt_find_func:len1 <- 0
	.loc	0 0 43                          # liblzma/lz/lz_encoder_mf.c:0:43
	movq	%rcx, -40(%rsp)                 # 8-byte Spill
.Ltmp704:
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 473 15 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:473:15
	testl	%ebp, %ebp
	movq	%rsi, -24(%rsp)                 # 8-byte Spill
.Ltmp705:
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- [DW_OP_constu 24, DW_OP_minus] [$rsp+0]
	.loc	0 473 20 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:473:20
	je	.LBB7_45
.Ltmp706:
# %bb.31:                               # %do.body57
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- [DW_OP_constu 24, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt3_find:cur <- $rax
	#DEBUG_VALUE: lzma_mf_bt3_find:cur_match <- $r9d
	#DEBUG_VALUE: lzma_mf_bt3_find:len_best <- $r10d
	#DEBUG_VALUE: bt_find_func:matches <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cur <- $rax
	#DEBUG_VALUE: bt_find_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_find_func:depth <- $ebp
	#DEBUG_VALUE: bt_find_func:son <- $r15
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cyclic_size <- $r11d
	#DEBUG_VALUE: bt_find_func:len_best <- $r10d
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 48, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len0 <- 0
	#DEBUG_VALUE: bt_find_func:len1 <- 0
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movl	%r12d, %r8d
	subl	%r9d, %r8d
.Ltmp707:
	.loc	0 473 20                        # liblzma/lz/lz_encoder_mf.c:473:20
	cmpl	%r11d, %r8d
	jae	.LBB7_45
.Ltmp708:
# %bb.32:                               # %if.end.i152.preheader
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- [DW_OP_constu 24, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt3_find:cur <- $rax
	#DEBUG_VALUE: lzma_mf_bt3_find:cur_match <- $r9d
	#DEBUG_VALUE: lzma_mf_bt3_find:len_best <- $r10d
	#DEBUG_VALUE: bt_find_func:matches <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cur <- $rax
	#DEBUG_VALUE: bt_find_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_find_func:depth <- $ebp
	#DEBUG_VALUE: bt_find_func:son <- $r15
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cyclic_size <- $r11d
	#DEBUG_VALUE: bt_find_func:len_best <- $r10d
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 48, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len0 <- 0
	#DEBUG_VALUE: bt_find_func:len1 <- 0
	.loc	0 0 20                          # liblzma/lz/lz_encoder_mf.c:0:20
	movl	%ebx, %ecx
	movq	%rcx, -16(%rsp)                 # 8-byte Spill
	.loc	0 471 2 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:471:2
	leal	-1(%rbx), %r13d
	xorl	%esi, %esi
	xorl	%ecx, %ecx
	jmp	.LBB7_33
.Ltmp709:
	.p2align	4, 0x90
.LBB7_43:                               # %if.else.i169
                                        #   in Loop: Header=BB7_33 Depth=1
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- [DW_OP_constu 24, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt3_find:cur <- $rax
	#DEBUG_VALUE: bt_find_func:matches <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cur <- $rax
	#DEBUG_VALUE: bt_find_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_find_func:son <- $r15
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cyclic_size <- $r11d
	#DEBUG_VALUE: bt_find_func:len_best <- $r10d
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 48, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len0 <- $ecx
	#DEBUG_VALUE: bt_find_func:len1 <- $esi
	#DEBUG_VALUE: pair <- $rbx
	#DEBUG_VALUE: len <- $edi
	.loc	0 0 2 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:2
	movq	-40(%rsp), %rcx                 # 8-byte Reload
.Ltmp710:
	.loc	0 511 10 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:511:10
	movl	%r9d, (%rcx)
.Ltmp711:
	#DEBUG_VALUE: bt_find_func:ptr0 <- $rbx
	#DEBUG_VALUE: bt_find_func:cur_match <- undef
	#DEBUG_VALUE: bt_find_func:len0 <- $edi
	.loc	0 0 10 is_stmt 0                # liblzma/lz/lz_encoder_mf.c:0:10
	movq	%rbx, -40(%rsp)                 # 8-byte Spill
.Ltmp712:
	#DEBUG_VALUE: pair <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	movl	%edi, %ecx
.Ltmp713:
	decl	%ebp
	#DEBUG_VALUE: bt_find_func:cur_match <- undef
.Ltmp714:
	#DEBUG_VALUE: bt_find_func:depth <- undef
	#DEBUG_VALUE: bt_find_func:len1 <- $esi
	#DEBUG_VALUE: bt_find_func:len0 <- $edi
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 48, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len_best <- $r10d
	#DEBUG_VALUE: bt_find_func:matches <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- undef
	#DEBUG_VALUE: bt_find_func:depth <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
	.loc	0 473 20 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:473:20
	je	.LBB7_45
.Ltmp715:
.LBB7_44:                               # %cleanup64.i
                                        #   in Loop: Header=BB7_33 Depth=1
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- [DW_OP_constu 24, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt3_find:cur <- $rax
	#DEBUG_VALUE: bt_find_func:matches <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cur <- $rax
	#DEBUG_VALUE: bt_find_func:son <- $r15
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cyclic_size <- $r11d
	#DEBUG_VALUE: bt_find_func:len_best <- $r10d
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 48, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len0 <- $ecx
	#DEBUG_VALUE: bt_find_func:len1 <- $esi
	#DEBUG_VALUE: len <- $edi
	.loc	0 0 0 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:0
	movl	(%rbx), %r9d
.Ltmp716:
	#DEBUG_VALUE: bt_find_func:cur_match <- $r9d
	movl	%r12d, %r8d
	subl	%r9d, %r8d
.Ltmp717:
	#DEBUG_VALUE: delta <- $r8d
	.loc	0 473 20                        # liblzma/lz/lz_encoder_mf.c:473:20
	cmpl	%r11d, %r8d
	jae	.LBB7_45
.Ltmp718:
.LBB7_33:                               # %if.end.i152
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB7_34 Depth 2
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- [DW_OP_constu 24, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt3_find:cur <- $rax
	#DEBUG_VALUE: bt_find_func:matches <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cur <- $rax
	#DEBUG_VALUE: bt_find_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_find_func:son <- $r15
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cyclic_size <- $r11d
	#DEBUG_VALUE: bt_find_func:len_best <- $r10d
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 48, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_find_func:len1 <- $esi
	#DEBUG_VALUE: bt_find_func:len0 <- $ecx
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 48, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len_best <- $r10d
	#DEBUG_VALUE: bt_find_func:matches <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 0 20                          # liblzma/lz/lz_encoder_mf.c:0:20
	movq	-8(%rsp), %rdx                  # 8-byte Reload
                                        # kill: def $edx killed $edx killed $rdx def $rdx
	.loc	0 479 45 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:479:45
	subl	%r8d, %edx
	.loc	0 480 8                         # liblzma/lz/lz_encoder_mf.c:480:8
	movl	$0, %edi
	cmovbl	%r11d, %edi
	.loc	0 480 5 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:480:5
	leal	(%rdx,%rdi), %ebx
	.loc	0 481 5 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:481:5
	addl	%ebx, %ebx
.Ltmp719:
	#DEBUG_VALUE: pair <- undef
	.loc	0 483 33                        # liblzma/lz/lz_encoder_mf.c:483:33
	movl	%r8d, %edi
	movq	%rax, %rdx
	subq	%rdi, %rdx
.Ltmp720:
	#DEBUG_VALUE: pb <- $rdx
	.loc	0 484 18                        # liblzma/lz/lz_encoder_mf.c:484:18
	cmpl	%esi, %ecx
	movl	%esi, %edi
	cmovbl	%ecx, %edi
.Ltmp721:
	#DEBUG_VALUE: len <- $edi
	.loc	0 479 30                        # liblzma/lz/lz_encoder_mf.c:479:30
	leaq	(%r15,%rbx,4), %rbx
.Ltmp722:
	#DEBUG_VALUE: pair <- $rbx
	.loc	0 486 7                         # liblzma/lz/lz_encoder_mf.c:486:7
	movzbl	(%rdx,%rdi), %r14d
	.loc	0 486 15 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:486:15
	cmpb	(%rax,%rdi), %r14b
.Ltmp723:
	.loc	0 486 7                         # liblzma/lz/lz_encoder_mf.c:486:7
	jne	.LBB7_39
.Ltmp724:
	.p2align	4, 0x90
.LBB7_34:                               # %while.cond24.i180
                                        #   Parent Loop BB7_33 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- [DW_OP_constu 24, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt3_find:cur <- $rax
	#DEBUG_VALUE: bt_find_func:matches <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cur <- $rax
	#DEBUG_VALUE: bt_find_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_find_func:son <- $r15
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cyclic_size <- $r11d
	#DEBUG_VALUE: bt_find_func:len_best <- $r10d
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 48, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len0 <- $ecx
	#DEBUG_VALUE: bt_find_func:len1 <- $esi
	#DEBUG_VALUE: pair <- $rbx
	#DEBUG_VALUE: pb <- $rdx
	#DEBUG_VALUE: len <- $edi
	#DEBUG_VALUE: len <- $edi
	#DEBUG_VALUE: len <- undef
	.loc	0 487 17 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:487:17
	cmpl	%edi, %r13d
	.loc	0 487 4 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:487:4
	je	.LBB7_41
.Ltmp725:
# %bb.35:                               # %while.body27.i184
                                        #   in Loop: Header=BB7_34 Depth=2
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- [DW_OP_constu 24, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt3_find:cur <- $rax
	#DEBUG_VALUE: bt_find_func:matches <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cur <- $rax
	#DEBUG_VALUE: bt_find_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_find_func:son <- $r15
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cyclic_size <- $r11d
	#DEBUG_VALUE: bt_find_func:len_best <- $r10d
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 48, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len0 <- $ecx
	#DEBUG_VALUE: bt_find_func:len1 <- $esi
	#DEBUG_VALUE: pair <- $rbx
	#DEBUG_VALUE: pb <- $rdx
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	incl	%edi
.Ltmp726:
	#DEBUG_VALUE: len <- $edi
	.loc	0 488 9 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:488:9
	movl	%edi, %r14d
	movzbl	(%rdx,%r14), %r12d
	.loc	0 488 17 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:488:17
	cmpb	(%rax,%r14), %r12b
.Ltmp727:
	.loc	0 488 9                         # liblzma/lz/lz_encoder_mf.c:488:9
	je	.LBB7_34
.Ltmp728:
# %bb.36:                               # %while.end.thread.i
                                        #   in Loop: Header=BB7_33 Depth=1
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- [DW_OP_constu 24, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt3_find:cur <- $rax
	#DEBUG_VALUE: bt_find_func:matches <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cur <- $rax
	#DEBUG_VALUE: bt_find_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_find_func:son <- $r15
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cyclic_size <- $r11d
	#DEBUG_VALUE: bt_find_func:len_best <- $r10d
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 48, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len0 <- $ecx
	#DEBUG_VALUE: bt_find_func:len1 <- $esi
	#DEBUG_VALUE: pair <- $rbx
	#DEBUG_VALUE: pb <- $rdx
	#DEBUG_VALUE: len <- $r14d
	.loc	0 491 17 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:491:17
	cmpl	%edi, %r10d
.Ltmp729:
	.loc	0 491 8 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:491:8
	jae	.LBB7_38
.Ltmp730:
# %bb.37:                               # %if.then40.thread.i
                                        #   in Loop: Header=BB7_33 Depth=1
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- [DW_OP_constu 24, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt3_find:cur <- $rax
	#DEBUG_VALUE: bt_find_func:matches <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cur <- $rax
	#DEBUG_VALUE: bt_find_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_find_func:son <- $r15
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cyclic_size <- $r11d
	#DEBUG_VALUE: bt_find_func:len_best <- $r10d
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 48, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len0 <- $ecx
	#DEBUG_VALUE: bt_find_func:len1 <- $esi
	#DEBUG_VALUE: pair <- $rbx
	#DEBUG_VALUE: pb <- $rdx
	#DEBUG_VALUE: len <- $r14d
	#DEBUG_VALUE: bt_find_func:len_best <- $r14d
	.loc	0 0 8                           # liblzma/lz/lz_encoder_mf.c:0:8
	movq	-64(%rsp), %r10                 # 8-byte Reload
.Ltmp731:
	.loc	0 493 18 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:493:18
	movl	%edi, (%r10)
	.loc	0 494 27                        # liblzma/lz/lz_encoder_mf.c:494:27
	decl	%r8d
	.loc	0 494 19 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:494:19
	movl	%r8d, 4(%r10)
	.loc	0 495 5 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:495:5
	addq	$8, %r10
.Ltmp732:
	#DEBUG_VALUE: bt_find_func:matches <- $r10
	.loc	0 0 5 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:5
	movq	%r10, -64(%rsp)                 # 8-byte Spill
.Ltmp733:
	#DEBUG_VALUE: bt_find_func:matches <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	movl	%edi, %r10d
.Ltmp734:
.LBB7_38:                               # %if.end50.i
                                        #   in Loop: Header=BB7_33 Depth=1
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- [DW_OP_constu 24, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt3_find:cur <- $rax
	#DEBUG_VALUE: bt_find_func:matches <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cur <- $rax
	#DEBUG_VALUE: bt_find_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_find_func:son <- $r15
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cyclic_size <- $r11d
	#DEBUG_VALUE: bt_find_func:len_best <- $r10d
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 48, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len0 <- $ecx
	#DEBUG_VALUE: bt_find_func:len1 <- $esi
	#DEBUG_VALUE: pair <- $rbx
	#DEBUG_VALUE: pb <- $rdx
	#DEBUG_VALUE: len <- $r14d
	movl	-68(%rsp), %r12d                # 4-byte Reload
	#DEBUG_VALUE: len <- $r14d
	#DEBUG_VALUE: bt_find_func:len_best <- $r10d
	#DEBUG_VALUE: bt_find_func:matches <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
.Ltmp735:
	.loc	0 505 7 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:505:7
	movzbl	(%rdx,%r14), %edx
.Ltmp736:
	.loc	0 505 15 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:505:15
	cmpb	(%rax,%r14), %dl
.Ltmp737:
	.loc	0 505 7                         # liblzma/lz/lz_encoder_mf.c:505:7
	jb	.LBB7_40
	jmp	.LBB7_43
.Ltmp738:
	.p2align	4, 0x90
.LBB7_39:                               #   in Loop: Header=BB7_33 Depth=1
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- [DW_OP_constu 24, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt3_find:cur <- $rax
	#DEBUG_VALUE: bt_find_func:matches <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cur <- $rax
	#DEBUG_VALUE: bt_find_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_find_func:son <- $r15
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cyclic_size <- $r11d
	#DEBUG_VALUE: bt_find_func:len_best <- $r10d
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 48, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len0 <- $ecx
	#DEBUG_VALUE: bt_find_func:len1 <- $esi
	#DEBUG_VALUE: pair <- $rbx
	#DEBUG_VALUE: pb <- $rdx
	#DEBUG_VALUE: len <- $edi
	.loc	0 0 7                           # liblzma/lz/lz_encoder_mf.c:0:7
	movq	%rdi, %r14
.Ltmp739:
	#DEBUG_VALUE: len <- $r14d
	#DEBUG_VALUE: bt_find_func:len_best <- $r10d
	#DEBUG_VALUE: bt_find_func:matches <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 505 7                         # liblzma/lz/lz_encoder_mf.c:505:7
	movzbl	(%rdx,%r14), %edx
.Ltmp740:
	.loc	0 505 15                        # liblzma/lz/lz_encoder_mf.c:505:15
	cmpb	(%rax,%r14), %dl
.Ltmp741:
	.loc	0 505 7                         # liblzma/lz/lz_encoder_mf.c:505:7
	jae	.LBB7_43
	jmp	.LBB7_40
.Ltmp742:
	.p2align	4, 0x90
.LBB7_41:                               # %while.end.i
                                        #   in Loop: Header=BB7_33 Depth=1
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- [DW_OP_constu 24, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt3_find:cur <- $rax
	#DEBUG_VALUE: bt_find_func:matches <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cur <- $rax
	#DEBUG_VALUE: bt_find_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_find_func:son <- $r15
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cyclic_size <- $r11d
	#DEBUG_VALUE: bt_find_func:len_best <- $r10d
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 48, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len0 <- $ecx
	#DEBUG_VALUE: bt_find_func:len1 <- $esi
	#DEBUG_VALUE: pair <- $rbx
	#DEBUG_VALUE: pb <- $rdx
	.loc	0 0 7                           # liblzma/lz/lz_encoder_mf.c:0:7
	movq	-56(%rsp), %rdi                 # 8-byte Reload
.Ltmp743:
	.loc	0 491 17 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:491:17
	cmpl	%edi, %r10d
.Ltmp744:
	.loc	0 491 8 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:491:8
	jb	.LBB7_57
.Ltmp745:
# %bb.42:                               #   in Loop: Header=BB7_33 Depth=1
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- [DW_OP_constu 24, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt3_find:cur <- $rax
	#DEBUG_VALUE: bt_find_func:matches <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cur <- $rax
	#DEBUG_VALUE: bt_find_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_find_func:son <- $r15
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cyclic_size <- $r11d
	#DEBUG_VALUE: bt_find_func:len_best <- $r10d
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 48, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len0 <- $ecx
	#DEBUG_VALUE: bt_find_func:len1 <- $esi
	#DEBUG_VALUE: pair <- $rbx
	#DEBUG_VALUE: pb <- $rdx
	.loc	0 0 8                           # liblzma/lz/lz_encoder_mf.c:0:8
	movq	-16(%rsp), %r14                 # 8-byte Reload
                                        # kill: def $edi killed $edi killed $rdi def $rdi
	movl	-68(%rsp), %r12d                # 4-byte Reload
.Ltmp746:
	#DEBUG_VALUE: len <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len_best <- $r10d
	#DEBUG_VALUE: bt_find_func:matches <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 505 7 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:505:7
	movzbl	(%rdx,%r14), %edx
.Ltmp747:
	.loc	0 505 15 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:505:15
	cmpb	(%rax,%r14), %dl
.Ltmp748:
	.loc	0 505 7                         # liblzma/lz/lz_encoder_mf.c:505:7
	jae	.LBB7_43
.Ltmp749:
.LBB7_40:                               # %if.then59.i
                                        #   in Loop: Header=BB7_33 Depth=1
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- [DW_OP_constu 24, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt3_find:cur <- $rax
	#DEBUG_VALUE: bt_find_func:matches <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cur <- $rax
	#DEBUG_VALUE: bt_find_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_find_func:son <- $r15
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cyclic_size <- $r11d
	#DEBUG_VALUE: bt_find_func:len_best <- $r10d
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 48, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len0 <- $ecx
	#DEBUG_VALUE: bt_find_func:len1 <- $esi
	#DEBUG_VALUE: pair <- $rbx
	#DEBUG_VALUE: len <- $edi
	.loc	0 0 7                           # liblzma/lz/lz_encoder_mf.c:0:7
	movq	-48(%rsp), %rdx                 # 8-byte Reload
.Ltmp750:
	.loc	0 506 10 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:506:10
	movl	%r9d, (%rdx)
	.loc	0 507 16                        # liblzma/lz/lz_encoder_mf.c:507:16
	addq	$4, %rbx
.Ltmp751:
	#DEBUG_VALUE: bt_find_func:ptr1 <- $rbx
	#DEBUG_VALUE: bt_find_func:cur_match <- undef
	#DEBUG_VALUE: bt_find_func:len1 <- $edi
	.loc	0 0 16 is_stmt 0                # liblzma/lz/lz_encoder_mf.c:0:16
	movq	%rbx, -48(%rsp)                 # 8-byte Spill
.Ltmp752:
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 48, DW_OP_minus, DW_OP_deref] $rsp
	movl	%edi, %esi
.Ltmp753:
	decl	%ebp
	#DEBUG_VALUE: bt_find_func:cur_match <- undef
.Ltmp754:
	#DEBUG_VALUE: bt_find_func:depth <- $ebp
	#DEBUG_VALUE: bt_find_func:len1 <- $edi
	#DEBUG_VALUE: bt_find_func:len0 <- $ecx
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 48, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len_best <- $r10d
	#DEBUG_VALUE: bt_find_func:matches <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- undef
	#DEBUG_VALUE: bt_find_func:depth <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $ebp
	.loc	0 473 20 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:473:20
	jne	.LBB7_44
.Ltmp755:
.LBB7_45:                               # %if.then.i149
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- [DW_OP_constu 24, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt3_find:cur <- $rax
	#DEBUG_VALUE: bt_find_func:matches <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cur <- $rax
	#DEBUG_VALUE: bt_find_func:son <- $r15
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cyclic_size <- $r11d
	#DEBUG_VALUE: bt_find_func:len_best <- $r10d
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 48, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 0 20 is_stmt 0                # liblzma/lz/lz_encoder_mf.c:0:20
	movq	-40(%rsp), %rax                 # 8-byte Reload
.Ltmp756:
	.loc	0 474 10 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:474:10
	movl	$0, (%rax)
	movq	-48(%rsp), %rax                 # 8-byte Reload
	.loc	0 475 10                        # liblzma/lz/lz_encoder_mf.c:475:10
	movl	$0, (%rax)
	movq	-64(%rsp), %rax                 # 8-byte Reload
.Ltmp757:
.LBB7_46:                               # %bt_find_func.exit
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- [DW_OP_constu 24, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:matches <- $rax
	#DEBUG_VALUE: bt_find_func:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:son <- $r15
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cyclic_size <- $r11d
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 48, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cur_match <- undef
	#DEBUG_VALUE: bt_find_func:len1 <- undef
	#DEBUG_VALUE: bt_find_func:len0 <- undef
	#DEBUG_VALUE: bt_find_func:ptr1 <- undef
	#DEBUG_VALUE: bt_find_func:ptr0 <- undef
	#DEBUG_VALUE: bt_find_func:len_best <- undef
	#DEBUG_VALUE: bt_find_func:matches <- undef
	.loc	0 656 2                         # liblzma/lz/lz_encoder_mf.c:656:2
	subq	-24(%rsp), %rax                 # 8-byte Folded Reload
	shrq	$3, %rax
.Ltmp758:
	#DEBUG_VALUE: lzma_mf_bt3_find:matches_count <- $eax
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 0 2 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:2
	movq	-32(%rsp), %r9                  # 8-byte Reload
.Ltmp759:
	.loc	0 150 6 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:150:6
	movl	80(%r9), %ecx
	incl	%ecx
	.loc	0 150 30 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:150:30
	movl	84(%r9), %r10d
	xorl	%edx, %edx
	.loc	0 150 23                        # liblzma/lz/lz_encoder_mf.c:150:23
	cmpl	%r10d, %ecx
.Ltmp760:
	.loc	0 150 6                         # liblzma/lz/lz_encoder_mf.c:150:6
	cmovnel	%ecx, %edx
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movl	%edx, 80(%r9)
.Ltmp761:
	.loc	0 156 6 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:156:6
	movl	20(%r9), %ecx
.Ltmp762:
	.loc	0 153 2                         # liblzma/lz/lz_encoder_mf.c:153:2
	movl	24(%r9), %edx
	leal	1(%rdx), %esi
	movl	%esi, 24(%r9)
.Ltmp763:
	.loc	0 156 6                         # liblzma/lz/lz_encoder_mf.c:156:6
	addl	%ecx, %edx
	incl	%edx
	cmpl	$-1, %edx
.Ltmp764:
	.loc	0 156 6 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:156:6
	jne	.LBB7_56
.Ltmp765:
# %bb.47:                               # %if.then5.i199
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- [DW_OP_constu 24, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt3_find:matches_count <- $eax
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 116 26 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:116:26
	notl	%r10d
.Ltmp766:
	#DEBUG_VALUE: normalize:subvalue <- $r10d
	.loc	0 119 49                        # liblzma/lz/lz_encoder_mf.c:119:49
	movl	112(%r9), %edi
.Ltmp767:
	#DEBUG_VALUE: i <- 0
	.loc	0 122 25                        # liblzma/lz/lz_encoder_mf.c:122:25
	addl	108(%r9), %edi
.Ltmp768:
	#DEBUG_VALUE: normalize:count <- $edi
	#DEBUG_VALUE: normalize:hash <- undef
	.loc	0 122 2 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:122:2
	je	.LBB7_55
.Ltmp769:
# %bb.48:                               # %for.body.preheader.i.i206
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- [DW_OP_constu 24, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt3_find:matches_count <- $eax
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:subvalue <- $r10d
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $edi
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movq	64(%r9), %rcx
.Ltmp770:
	#DEBUG_VALUE: normalize:hash <- $rcx
	.loc	0 122 25                        # liblzma/lz/lz_encoder_mf.c:122:25
	movl	%edi, %edx
	xorl	%esi, %esi
.Ltmp771:
	.loc	0 122 2                         # liblzma/lz/lz_encoder_mf.c:122:2
	cmpl	$16, %edi
	jae	.LBB7_50
.Ltmp772:
# %bb.49:
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- [DW_OP_constu 24, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt3_find:matches_count <- $eax
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:subvalue <- $r10d
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $edi
	#DEBUG_VALUE: normalize:hash <- $rcx
	.loc	0 0 2                           # liblzma/lz/lz_encoder_mf.c:0:2
	xorl	%edi, %edi
.Ltmp773:
	#DEBUG_VALUE: normalize:count <- $edx
	.loc	0 122 2                         # liblzma/lz/lz_encoder_mf.c:122:2
	jmp	.LBB7_53
.Ltmp774:
.LBB7_50:                               # %vector.ph
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- [DW_OP_constu 24, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt3_find:matches_count <- $eax
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:subvalue <- $r10d
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $edi
	#DEBUG_VALUE: normalize:hash <- $rcx
	movl	%edx, %edi
.Ltmp775:
	#DEBUG_VALUE: normalize:count <- $edx
	andl	$-16, %edi
	movd	%r10d, %xmm0
	pshufd	$0, %xmm0, %xmm0                # xmm0 = xmm0[0,0,0,0]
	xorl	%r8d, %r8d
	movdqa	.LCPI7_0(%rip), %xmm1           # xmm1 = [2147483648,2147483648,2147483648,2147483648]
	movdqa	%xmm0, %xmm2
	pxor	%xmm1, %xmm2
.Ltmp776:
	.p2align	4, 0x90
.LBB7_51:                               # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- [DW_OP_constu 24, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt3_find:matches_count <- $eax
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:subvalue <- $r10d
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $edx
	#DEBUG_VALUE: normalize:hash <- $rcx
	.loc	0 133 7 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:133:7
	movdqu	(%rcx,%r8,4), %xmm3
	movdqu	16(%rcx,%r8,4), %xmm4
	movdqu	32(%rcx,%r8,4), %xmm5
	movdqu	48(%rcx,%r8,4), %xmm6
.Ltmp777:
	.loc	0 133 7 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:133:7
	movdqa	%xmm3, %xmm7
	pxor	%xmm1, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm0, %xmm3
	pand	%xmm7, %xmm3
	movdqa	%xmm4, %xmm7
	pxor	%xmm1, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm0, %xmm4
	pand	%xmm7, %xmm4
	movdqa	%xmm5, %xmm7
	pxor	%xmm1, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm0, %xmm5
	pand	%xmm7, %xmm5
	movdqa	%xmm6, %xmm7
	pxor	%xmm1, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm0, %xmm6
	pand	%xmm7, %xmm6
.Ltmp778:
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movdqu	%xmm3, (%rcx,%r8,4)
	movdqu	%xmm4, 16(%rcx,%r8,4)
	movdqu	%xmm5, 32(%rcx,%r8,4)
	movdqu	%xmm6, 48(%rcx,%r8,4)
.Ltmp779:
	.loc	0 122 34 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:122:34
	addq	$16, %r8
	cmpq	%r8, %rdi
	jne	.LBB7_51
.Ltmp780:
# %bb.52:                               # %middle.block
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- [DW_OP_constu 24, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt3_find:matches_count <- $eax
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:subvalue <- $r10d
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $edx
	#DEBUG_VALUE: normalize:hash <- $rcx
	.loc	0 122 2 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:122:2
	cmpl	%edx, %edi
	je	.LBB7_54
.Ltmp781:
	.p2align	4, 0x90
.LBB7_53:                               # %for.body.i.i208
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- [DW_OP_constu 24, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt3_find:matches_count <- $eax
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:subvalue <- $r10d
	#DEBUG_VALUE: normalize:count <- $edx
	#DEBUG_VALUE: normalize:hash <- $rcx
	#DEBUG_VALUE: i <- $rdi
	.loc	0 133 7 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:133:7
	movl	(%rcx,%rdi,4), %r8d
.Ltmp782:
	.loc	0 133 7 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:133:7
	subl	%r10d, %r8d
	cmovbl	%esi, %r8d
.Ltmp783:
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movl	%r8d, (%rcx,%rdi,4)
.Ltmp784:
	.loc	0 122 34 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:122:34
	incq	%rdi
.Ltmp785:
	#DEBUG_VALUE: i <- $rdi
	.loc	0 122 25 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:122:25
	cmpq	%rdi, %rdx
.Ltmp786:
	.loc	0 122 2                         # liblzma/lz/lz_encoder_mf.c:122:2
	jne	.LBB7_53
.Ltmp787:
.LBB7_54:                               # %normalize.exit.loopexit.i214
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	.loc	0 140 13 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:140:13
	movl	20(%r9), %ecx
.Ltmp788:
.LBB7_55:                               # %normalize.exit.i216
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	subl	%r10d, %ecx
	movl	%ecx, 20(%r9)
	jmp	.LBB7_56
.Ltmp789:
.LBB7_24:                               # %if.then40.i
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_bt3_find:cur <- $rax
	#DEBUG_VALUE: lzma_mf_bt3_find:matches_count <- 1
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_skip_func:cur <- $rax
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_skip_func:son <- $r11
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- $ebx
	#DEBUG_VALUE: bt_skip_func:ptr0 <- $rsi
	#DEBUG_VALUE: bt_skip_func:ptr1 <- $rcx
	#DEBUG_VALUE: bt_skip_func:len0 <- $r15d
	#DEBUG_VALUE: bt_skip_func:len1 <- $r14d
	#DEBUG_VALUE: pair <- $rdx
	#DEBUG_VALUE: pb <- $r8
	.loc	0 557 13                        # liblzma/lz/lz_encoder_mf.c:557:13
	movl	(%rdx), %eax
.Ltmp790:
	.loc	0 557 11 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:557:11
	movl	%eax, (%rcx)
	.loc	0 558 13 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:558:13
	movl	4(%rdx), %eax
	.loc	0 558 11 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:558:11
	movl	%eax, (%rsi)
.Ltmp791:
.LBB7_25:                               # %bt_skip_func.exit
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_bt3_find:matches_count <- 1
	#DEBUG_VALUE: bt_skip_func:son <- $r11
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- $ebx
	#DEBUG_VALUE: bt_skip_func:ptr0 <- $rsi
	#DEBUG_VALUE: bt_skip_func:ptr1 <- $rcx
	#DEBUG_VALUE: bt_skip_func:cur_match <- undef
	#DEBUG_VALUE: bt_skip_func:ptr0 <- undef
	#DEBUG_VALUE: bt_skip_func:len1 <- undef
	#DEBUG_VALUE: bt_skip_func:len0 <- undef
	#DEBUG_VALUE: bt_skip_func:ptr1 <- undef
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 0 11                          # liblzma/lz/lz_encoder_mf.c:0:11
	movq	-32(%rsp), %r9                  # 8-byte Reload
.Ltmp792:
	.loc	0 150 6 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:150:6
	movl	80(%r9), %ecx
	incl	%ecx
	.loc	0 150 30 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:150:30
	movl	84(%r9), %r10d
	xorl	%edx, %edx
	.loc	0 150 23                        # liblzma/lz/lz_encoder_mf.c:150:23
	cmpl	%r10d, %ecx
.Ltmp793:
	.loc	0 150 6                         # liblzma/lz/lz_encoder_mf.c:150:6
	cmovnel	%ecx, %edx
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movl	%edx, 80(%r9)
.Ltmp794:
	.loc	0 156 6 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:156:6
	movl	20(%r9), %ecx
.Ltmp795:
	.loc	0 153 2                         # liblzma/lz/lz_encoder_mf.c:153:2
	movl	24(%r9), %edx
	leal	1(%rdx), %esi
	movl	%esi, 24(%r9)
.Ltmp796:
	.loc	0 156 6                         # liblzma/lz/lz_encoder_mf.c:156:6
	addl	%ecx, %edx
	incl	%edx
	movl	$1, %eax
	cmpl	$-1, %edx
.Ltmp797:
	.loc	0 156 6 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:156:6
	je	.LBB7_26
.Ltmp798:
.LBB7_56:                               # %cleanup76
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
                                        # kill: def $eax killed $eax killed $rax
	.loc	0 657 1 epilogue_begin is_stmt 1 # liblzma/lz/lz_encoder_mf.c:657:1
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp799:
.LBB7_57:                               # %if.then45.i
	.cfi_def_cfa_offset 56
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- [DW_OP_constu 24, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt3_find:cur <- $rax
	#DEBUG_VALUE: bt_find_func:matches <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cur <- $rax
	#DEBUG_VALUE: bt_find_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_find_func:son <- $r15
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cyclic_size <- $r11d
	#DEBUG_VALUE: bt_find_func:len_best <- $r10d
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 48, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len0 <- $ecx
	#DEBUG_VALUE: bt_find_func:len1 <- $esi
	#DEBUG_VALUE: pair <- $rbx
	#DEBUG_VALUE: pb <- $rdx
	#DEBUG_VALUE: bt_find_func:len_best <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 0 1 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:1
	movq	-64(%rsp), %rax                 # 8-byte Reload
.Ltmp800:
	.loc	0 493 18 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:493:18
	movl	%edi, (%rax)
	.loc	0 494 27                        # liblzma/lz/lz_encoder_mf.c:494:27
	decl	%r8d
	.loc	0 494 19 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:494:19
	movl	%r8d, 4(%rax)
	.loc	0 495 5 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:495:5
	addq	$8, %rax
.Ltmp801:
	#DEBUG_VALUE: bt_find_func:matches <- $rax
	.loc	0 498 14                        # liblzma/lz/lz_encoder_mf.c:498:14
	movl	(%rbx), %ecx
.Ltmp802:
	.loc	0 0 14 is_stmt 0                # liblzma/lz/lz_encoder_mf.c:0:14
	movq	-48(%rsp), %rdx                 # 8-byte Reload
.Ltmp803:
	.loc	0 498 12                        # liblzma/lz/lz_encoder_mf.c:498:12
	movl	%ecx, (%rdx)
	.loc	0 499 14 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:499:14
	movl	4(%rbx), %ecx
	movq	-40(%rsp), %rdx                 # 8-byte Reload
	.loc	0 499 12 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:499:12
	movl	%ecx, (%rdx)
	.loc	0 500 6 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:500:6
	jmp	.LBB7_46
.Ltmp804:
.LBB7_26:                               # %if.then5.i
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_bt3_find:matches_count <- 1
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 116 26                        # liblzma/lz/lz_encoder_mf.c:116:26
	notl	%r10d
.Ltmp805:
	#DEBUG_VALUE: normalize:subvalue <- $r10d
	.loc	0 119 49                        # liblzma/lz/lz_encoder_mf.c:119:49
	movl	112(%r9), %edi
.Ltmp806:
	#DEBUG_VALUE: i <- 0
	.loc	0 122 25                        # liblzma/lz/lz_encoder_mf.c:122:25
	addl	108(%r9), %edi
.Ltmp807:
	#DEBUG_VALUE: normalize:count <- $edi
	#DEBUG_VALUE: normalize:hash <- undef
	.loc	0 122 2 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:122:2
	je	.LBB7_55
.Ltmp808:
# %bb.27:                               # %for.body.preheader.i.i
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_bt3_find:matches_count <- 1
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:subvalue <- $r10d
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $edi
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movq	64(%r9), %rcx
.Ltmp809:
	#DEBUG_VALUE: normalize:hash <- $rcx
	.loc	0 122 25                        # liblzma/lz/lz_encoder_mf.c:122:25
	movl	%edi, %edx
	xorl	%esi, %esi
.Ltmp810:
	.loc	0 122 2                         # liblzma/lz/lz_encoder_mf.c:122:2
	cmpl	$16, %edi
	jae	.LBB7_58
.Ltmp811:
# %bb.28:
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_bt3_find:matches_count <- 1
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:subvalue <- $r10d
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $edi
	#DEBUG_VALUE: normalize:hash <- $rcx
	.loc	0 0 2                           # liblzma/lz/lz_encoder_mf.c:0:2
	xorl	%edi, %edi
.Ltmp812:
	#DEBUG_VALUE: normalize:count <- $edx
	.loc	0 122 2                         # liblzma/lz/lz_encoder_mf.c:122:2
	jmp	.LBB7_61
.Ltmp813:
.LBB7_29:                               # %for.end
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_bt3_find:len_limit <- [DW_OP_constu 56, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt3_find:cur <- $rax
	#DEBUG_VALUE: lzma_mf_bt3_find:matches_count <- 0
	#DEBUG_VALUE: lzma_mf_bt3_find:delta2 <- $ecx
	#DEBUG_VALUE: lzma_mf_bt3_find:cur_match <- $r9d
	#DEBUG_VALUE: lzma_mf_bt3_find:len_best <- $r11d
	.loc	0 646 18 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:646:18
	movl	%r10d, (%rsi)
	.loc	0 647 28                        # liblzma/lz/lz_encoder_mf.c:647:28
	decl	%ecx
.Ltmp814:
	.loc	0 647 19 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:647:19
	movl	%ecx, 4(%rsi)
.Ltmp815:
	#DEBUG_VALUE: lzma_mf_bt3_find:matches_count <- 1
	.loc	0 656 2 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:656:2
	movl	84(%rdi), %r11d
.Ltmp816:
	#DEBUG_VALUE: lzma_mf_bt3_find:len_best <- $r10d
	.loc	0 0 2 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:2
	movl	$1, %ecx
	jmp	.LBB7_30
.Ltmp817:
.LBB7_58:                               # %vector.ph278
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_bt3_find:matches_count <- 1
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:subvalue <- $r10d
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $edi
	#DEBUG_VALUE: normalize:hash <- $rcx
	.loc	0 122 2 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:122:2
	movl	%edx, %edi
.Ltmp818:
	#DEBUG_VALUE: normalize:count <- $edx
	andl	$-16, %edi
	movd	%r10d, %xmm0
	pshufd	$0, %xmm0, %xmm0                # xmm0 = xmm0[0,0,0,0]
	xorl	%r8d, %r8d
	movdqa	.LCPI7_0(%rip), %xmm1           # xmm1 = [2147483648,2147483648,2147483648,2147483648]
	movdqa	%xmm0, %xmm2
	pxor	%xmm1, %xmm2
.Ltmp819:
	.p2align	4, 0x90
.LBB7_59:                               # %vector.body282
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_bt3_find:matches_count <- 1
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:subvalue <- $r10d
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $edx
	#DEBUG_VALUE: normalize:hash <- $rcx
	.loc	0 133 7                         # liblzma/lz/lz_encoder_mf.c:133:7
	movdqu	(%rcx,%r8,4), %xmm3
	movdqu	16(%rcx,%r8,4), %xmm4
	movdqu	32(%rcx,%r8,4), %xmm5
	movdqu	48(%rcx,%r8,4), %xmm6
.Ltmp820:
	.loc	0 133 7 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:133:7
	movdqa	%xmm3, %xmm7
	pxor	%xmm1, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm0, %xmm3
	pand	%xmm7, %xmm3
	movdqa	%xmm4, %xmm7
	pxor	%xmm1, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm0, %xmm4
	pand	%xmm7, %xmm4
	movdqa	%xmm5, %xmm7
	pxor	%xmm1, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm0, %xmm5
	pand	%xmm7, %xmm5
	movdqa	%xmm6, %xmm7
	pxor	%xmm1, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm0, %xmm6
	pand	%xmm7, %xmm6
.Ltmp821:
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movdqu	%xmm3, (%rcx,%r8,4)
	movdqu	%xmm4, 16(%rcx,%r8,4)
	movdqu	%xmm5, 32(%rcx,%r8,4)
	movdqu	%xmm6, 48(%rcx,%r8,4)
.Ltmp822:
	.loc	0 122 34 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:122:34
	addq	$16, %r8
	cmpq	%r8, %rdi
	jne	.LBB7_59
.Ltmp823:
# %bb.60:                               # %middle.block275
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_bt3_find:matches_count <- 1
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:subvalue <- $r10d
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $edx
	#DEBUG_VALUE: normalize:hash <- $rcx
	.loc	0 122 2 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:122:2
	cmpl	%edx, %edi
	je	.LBB7_54
.Ltmp824:
	.p2align	4, 0x90
.LBB7_61:                               # %for.body.i.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: lzma_mf_bt3_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt3_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_bt3_find:matches_count <- 1
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:subvalue <- $r10d
	#DEBUG_VALUE: normalize:count <- $edx
	#DEBUG_VALUE: normalize:hash <- $rcx
	#DEBUG_VALUE: i <- $rdi
	.loc	0 133 7 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:133:7
	movl	(%rcx,%rdi,4), %r8d
.Ltmp825:
	.loc	0 133 7 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:133:7
	subl	%r10d, %r8d
	cmovbl	%esi, %r8d
.Ltmp826:
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movl	%r8d, (%rcx,%rdi,4)
.Ltmp827:
	.loc	0 122 34 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:122:34
	incq	%rdi
.Ltmp828:
	#DEBUG_VALUE: i <- $rdi
	.loc	0 122 25 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:122:25
	cmpq	%rdi, %rdx
.Ltmp829:
	.loc	0 122 2                         # liblzma/lz/lz_encoder_mf.c:122:2
	jne	.LBB7_61
	jmp	.LBB7_54
.Ltmp830:
.Lfunc_end7:
	.size	lzma_mf_bt3_find, .Lfunc_end7-lzma_mf_bt3_find
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4, 0x0                          # -- Begin function lzma_mf_bt3_skip
.LCPI8_0:
	.long	2147483648                      # 0x80000000
	.long	2147483648                      # 0x80000000
	.long	2147483648                      # 0x80000000
	.long	2147483648                      # 0x80000000
	.text
	.globl	lzma_mf_bt3_skip
	.p2align	4, 0x90
	.type	lzma_mf_bt3_skip,@function
lzma_mf_bt3_skip:                       # @lzma_mf_bt3_skip
.Lfunc_begin8:
	.loc	0 662 0 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:662:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: lzma_mf_bt3_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt3_skip:amount <- $esi
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movdqa	.LCPI8_0(%rip), %xmm0           # xmm0 = [2147483648,2147483648,2147483648,2147483648]
	jmp	.LBB8_1
.Ltmp831:
	.p2align	4, 0x90
.LBB8_4:                                # %if.then4
                                        #   in Loop: Header=BB8_1 Depth=1
	#DEBUG_VALUE: lzma_mf_bt3_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt3_skip:amount <- $esi
	#DEBUG_VALUE: len_limit <- $ecx
	#DEBUG_VALUE: move_pending:mf <- $rdi
	.loc	0 178 2 prologue_end            # liblzma/lz/lz_encoder_mf.c:178:2
	incl	%eax
	movl	%eax, 24(%rdi)
	.loc	0 180 2                         # liblzma/lz/lz_encoder_mf.c:180:2
	incl	40(%rdi)
.Ltmp832:
.LBB8_28:                               # %cleanup
                                        #   in Loop: Header=BB8_1 Depth=1
	#DEBUG_VALUE: lzma_mf_bt3_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt3_skip:amount <- $esi
	.loc	0 676 20                        # liblzma/lz/lz_encoder_mf.c:676:20
	decl	%esi
.Ltmp833:
	#DEBUG_VALUE: lzma_mf_bt3_skip:amount <- $esi
	.loc	0 676 2 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:676:2
	je	.LBB8_29
.Ltmp834:
.LBB8_1:                                # %do.body
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB8_8 Depth 2
                                        #       Child Loop BB8_10 Depth 3
                                        #     Child Loop BB8_23 Depth 2
                                        #     Child Loop BB8_25 Depth 2
	#DEBUG_VALUE: lzma_mf_bt3_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt3_skip:amount <- $esi
	#DEBUG_VALUE: lzma_mf_bt3_skip:amount <- $esi
	.loc	0 664 3 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:664:3
	movl	24(%rdi), %eax
	movl	36(%rdi), %ecx
.Ltmp835:
	#DEBUG_VALUE: mf_avail:mf <- undef
	.loc	4 232 23                        # liblzma/lz/lz_encoder.h:232:23
	subl	%eax, %ecx
.Ltmp836:
	#DEBUG_VALUE: len_limit <- $ecx
	.loc	0 664 3                         # liblzma/lz/lz_encoder_mf.c:664:3
	movl	96(%rdi), %edx
	cmpl	%ecx, %edx
.Ltmp837:
	.loc	0 664 3 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:664:3
	jbe	.LBB8_5
.Ltmp838:
# %bb.2:                                # %if.else
                                        #   in Loop: Header=BB8_1 Depth=1
	#DEBUG_VALUE: lzma_mf_bt3_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt3_skip:amount <- $esi
	#DEBUG_VALUE: len_limit <- $ecx
	.loc	0 664 3                         # liblzma/lz/lz_encoder_mf.c:664:3
	cmpl	$3, %ecx
	jb	.LBB8_4
.Ltmp839:
# %bb.3:                                # %lor.lhs.false
                                        #   in Loop: Header=BB8_1 Depth=1
	#DEBUG_VALUE: lzma_mf_bt3_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt3_skip:amount <- $esi
	#DEBUG_VALUE: len_limit <- $ecx
	cmpl	$1, 104(%rdi)
	movl	%ecx, %edx
.Ltmp840:
	.loc	0 664 3                         # liblzma/lz/lz_encoder_mf.c:664:3
	je	.LBB8_4
.Ltmp841:
	.p2align	4, 0x90
.LBB8_5:                                # %if.end5
                                        #   in Loop: Header=BB8_1 Depth=1
	#DEBUG_VALUE: lzma_mf_bt3_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt3_skip:amount <- $esi
	#DEBUG_VALUE: len_limit <- $ecx
	#DEBUG_VALUE: len_limit <- $edx
	.loc	0 0 3                           # liblzma/lz/lz_encoder_mf.c:0:3
	movl	%esi, -12(%rsp)                 # 4-byte Spill
.Ltmp842:
	#DEBUG_VALUE: lzma_mf_bt3_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 664 3                         # liblzma/lz/lz_encoder_mf.c:664:3
	movq	(%rdi), %r11
	.loc	0 669 11 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:669:11
	movq	64(%rdi), %rcx
.Ltmp843:
	#DEBUG_VALUE: mf_ptr:mf <- undef
	#DEBUG_VALUE: cur <- undef
	.loc	0 0 11 is_stmt 0                # liblzma/lz/lz_encoder_mf.c:0:11
	movl	20(%rdi), %r9d
	.loc	0 664 3 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:664:3
	addl	%eax, %r9d
.Ltmp844:
	#DEBUG_VALUE: pos <- undef
	.loc	0 666 3                         # liblzma/lz/lz_encoder_mf.c:666:3
	movzbl	(%r11,%rax), %esi
	movzbl	1(%r11,%rax), %r8d
	movq	lzma_crc32_table@GOTPCREL(%rip), %r10
	xorl	(%r10,%rsi,4), %r8d
	movzbl	2(%r11,%rax), %esi
	shll	$8, %esi
	xorl	%r8d, %esi
.Ltmp845:
	#DEBUG_VALUE: temp <- $r8d
	andl	$1023, %r8d                     # imm = 0x3FF
.Ltmp846:
	#DEBUG_VALUE: hash_2_value <- $r8d
	andl	88(%rdi), %esi
.Ltmp847:
	#DEBUG_VALUE: hash_value <- $esi
	.loc	0 669 32                        # liblzma/lz/lz_encoder_mf.c:669:32
	addl	$1024, %esi                     # imm = 0x400
.Ltmp848:
	.loc	0 669 7 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:669:7
	movl	(%rcx,%rsi,4), %r12d
.Ltmp849:
	#DEBUG_VALUE: cur_match <- $r12d
	.loc	0 671 26 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:671:26
	movl	%r9d, (%rcx,%r8,4)
	.loc	0 672 7                         # liblzma/lz/lz_encoder_mf.c:672:7
	movq	64(%rdi), %rcx
	.loc	0 672 42 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:672:42
	movl	%r9d, (%rcx,%rsi,4)
.Ltmp850:
	.loc	0 674 3 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:674:3
	movl	92(%rdi), %ebx
	movq	72(%rdi), %rsi
	movl	80(%rdi), %ecx
.Ltmp851:
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- undef
	#DEBUG_VALUE: bt_skip_func:len_limit <- $edx
	#DEBUG_VALUE: bt_skip_func:pos <- undef
	#DEBUG_VALUE: bt_skip_func:cur <- undef
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r12d
	#DEBUG_VALUE: bt_skip_func:depth <- $ebx
	#DEBUG_VALUE: bt_skip_func:son <- $rsi
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- $ecx
	.loc	0 0 3 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:3
	movq	%rcx, -8(%rsp)                  # 8-byte Spill
.Ltmp852:
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 531 37 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:531:37
	addl	%ecx, %ecx
	.loc	0 531 23 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:531:23
	leaq	(%rsi,%rcx,4), %r8
.Ltmp853:
	.loc	0 0 23                          # liblzma/lz/lz_encoder_mf.c:0:23
	movq	%r8, -24(%rsp)                  # 8-byte Spill
	.loc	0 531 43                        # liblzma/lz/lz_encoder_mf.c:531:43
	leaq	(%rsi,%rcx,4), %rcx
	addq	$4, %rcx
.Ltmp854:
	#DEBUG_VALUE: bt_skip_func:ptr0 <- $rcx
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:len0 <- 0
	#DEBUG_VALUE: bt_skip_func:len1 <- 0
	.loc	0 0 43                          # liblzma/lz/lz_encoder_mf.c:0:43
	movq	%rcx, -32(%rsp)                 # 8-byte Spill
.Ltmp855:
	#DEBUG_VALUE: bt_skip_func:ptr0 <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 539 15 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:539:15
	testl	%ebx, %ebx
	.loc	0 539 20 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:539:20
	je	.LBB8_17
.Ltmp856:
# %bb.6:                                # %if.end5
                                        #   in Loop: Header=BB8_1 Depth=1
	#DEBUG_VALUE: lzma_mf_bt3_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt3_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_limit <- $edx
	#DEBUG_VALUE: cur_match <- $r12d
	#DEBUG_VALUE: bt_skip_func:len_limit <- $edx
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r12d
	#DEBUG_VALUE: bt_skip_func:depth <- $ebx
	#DEBUG_VALUE: bt_skip_func:son <- $rsi
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr0 <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:len0 <- 0
	#DEBUG_VALUE: bt_skip_func:len1 <- 0
	.loc	0 674 3 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:674:3
	movl	84(%rdi), %ebp
.Ltmp857:
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- $ebp
	.loc	0 0 0 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:0
	movl	%r9d, %r10d
	subl	%r12d, %r10d
.Ltmp858:
	.loc	0 539 20 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:539:20
	cmpl	%ebp, %r10d
	jae	.LBB8_17
.Ltmp859:
# %bb.7:                                # %if.end.i.preheader
                                        #   in Loop: Header=BB8_1 Depth=1
	#DEBUG_VALUE: lzma_mf_bt3_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt3_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_limit <- $edx
	#DEBUG_VALUE: cur_match <- $r12d
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_skip_func:len_limit <- $edx
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r12d
	#DEBUG_VALUE: bt_skip_func:depth <- $ebx
	#DEBUG_VALUE: bt_skip_func:son <- $rsi
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr0 <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:len0 <- 0
	#DEBUG_VALUE: bt_skip_func:len1 <- 0
	.loc	0 0 0 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:0
	addq	%rax, %r11
.Ltmp860:
	#DEBUG_VALUE: bt_skip_func:cur <- $r11
	#DEBUG_VALUE: cur <- $r11
	.loc	0 537 2 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:537:2
	decl	%edx
.Ltmp861:
	.loc	0 0 2 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:2
	xorl	%r13d, %r13d
	xorl	%eax, %eax
.Ltmp862:
.LBB8_8:                                # %if.end.i
                                        #   Parent Loop BB8_1 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB8_10 Depth 3
	#DEBUG_VALUE: lzma_mf_bt3_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt3_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: cur <- $r11
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_skip_func:cur <- $r11
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r12d
	#DEBUG_VALUE: bt_skip_func:son <- $rsi
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr0 <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r12d
	#DEBUG_VALUE: bt_skip_func:ptr0 <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:len1 <- $r13d
	#DEBUG_VALUE: bt_skip_func:len0 <- $eax
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	movq	-8(%rsp), %rcx                  # 8-byte Reload
                                        # kill: def $ecx killed $ecx killed $rcx def $rcx
.Ltmp863:
	.loc	0 545 39 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:545:39
	subl	%r10d, %ecx
	.loc	0 546 8                         # liblzma/lz/lz_encoder_mf.c:546:8
	movl	$0, %r8d
	cmovbl	%ebp, %r8d
	.loc	0 546 5 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:546:5
	leal	(%rcx,%r8), %r14d
	.loc	0 547 5 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:547:5
	addl	%r14d, %r14d
.Ltmp864:
	#DEBUG_VALUE: pair <- undef
	.loc	0 548 27                        # liblzma/lz/lz_encoder_mf.c:548:27
	movl	%r10d, %ecx
	movq	%r11, %r8
	subq	%rcx, %r8
.Ltmp865:
	#DEBUG_VALUE: pb <- $r8
	.loc	0 549 18                        # liblzma/lz/lz_encoder_mf.c:549:18
	cmpl	%r13d, %eax
	movl	%r13d, %ecx
	cmovbl	%eax, %ecx
.Ltmp866:
	#DEBUG_VALUE: len <- $ecx
	.loc	0 545 24                        # liblzma/lz/lz_encoder_mf.c:545:24
	leaq	(%rsi,%r14,4), %r10
.Ltmp867:
	#DEBUG_VALUE: pair <- $r10
	.loc	0 551 7                         # liblzma/lz/lz_encoder_mf.c:551:7
	movzbl	(%r8,%rcx), %r15d
	.loc	0 551 18 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:551:18
	movzbl	(%r11,%rcx), %r14d
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	cmpb	%r14b, %r15b
.Ltmp868:
	jne	.LBB8_12
.Ltmp869:
	.p2align	4, 0x90
.LBB8_10:                               # %while.cond24.i
                                        #   Parent Loop BB8_1 Depth=1
                                        #     Parent Loop BB8_8 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: lzma_mf_bt3_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt3_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: cur <- $r11
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_skip_func:cur <- $r11
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r12d
	#DEBUG_VALUE: bt_skip_func:son <- $rsi
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr0 <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:len0 <- $eax
	#DEBUG_VALUE: bt_skip_func:len1 <- $r13d
	#DEBUG_VALUE: pair <- $r10
	#DEBUG_VALUE: pb <- $r8
	#DEBUG_VALUE: len <- $ecx
	#DEBUG_VALUE: len <- $ecx
	#DEBUG_VALUE: len <- undef
	.loc	0 552 17 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:552:17
	cmpl	%ecx, %edx
	.loc	0 552 4 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:552:4
	je	.LBB8_30
.Ltmp870:
# %bb.11:                               # %while.body27.i
                                        #   in Loop: Header=BB8_10 Depth=3
	#DEBUG_VALUE: lzma_mf_bt3_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt3_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: cur <- $r11
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_skip_func:cur <- $r11
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r12d
	#DEBUG_VALUE: bt_skip_func:son <- $rsi
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr0 <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:len0 <- $eax
	#DEBUG_VALUE: bt_skip_func:len1 <- $r13d
	#DEBUG_VALUE: pair <- $r10
	#DEBUG_VALUE: pb <- $r8
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	incl	%ecx
.Ltmp871:
	#DEBUG_VALUE: len <- $ecx
	.loc	0 553 9 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:553:9
	movl	%ecx, %r14d
	movzbl	(%r8,%r14), %r15d
	.loc	0 553 20 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:553:20
	movzbl	(%r11,%r14), %r14d
.Ltmp872:
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	cmpb	%r14b, %r15b
.Ltmp873:
	je	.LBB8_10
.Ltmp874:
.LBB8_12:                               # %if.end44.i
                                        #   in Loop: Header=BB8_8 Depth=2
	#DEBUG_VALUE: lzma_mf_bt3_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt3_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: cur <- $r11
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_skip_func:cur <- $r11
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r12d
	#DEBUG_VALUE: bt_skip_func:son <- $rsi
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr0 <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:len0 <- $eax
	#DEBUG_VALUE: bt_skip_func:len1 <- $r13d
	#DEBUG_VALUE: pair <- $r10
	#DEBUG_VALUE: pb <- $r8
	#DEBUG_VALUE: len <- $ecx
	#DEBUG_VALUE: len <- $ecx
	.loc	0 563 15 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:563:15
	cmpb	%r14b, %r15b
.Ltmp875:
	.loc	0 563 7 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:563:7
	jae	.LBB8_14
.Ltmp876:
# %bb.13:                               # %if.then53.i
                                        #   in Loop: Header=BB8_8 Depth=2
	#DEBUG_VALUE: lzma_mf_bt3_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt3_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: cur <- $r11
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_skip_func:cur <- $r11
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r12d
	#DEBUG_VALUE: bt_skip_func:son <- $rsi
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr0 <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:len0 <- $eax
	#DEBUG_VALUE: bt_skip_func:len1 <- $r13d
	#DEBUG_VALUE: pair <- $r10
	#DEBUG_VALUE: pb <- $r8
	#DEBUG_VALUE: len <- $ecx
	.loc	0 0 7                           # liblzma/lz/lz_encoder_mf.c:0:7
	movq	-24(%rsp), %r8                  # 8-byte Reload
.Ltmp877:
	.loc	0 564 10 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:564:10
	movl	%r12d, (%r8)
	.loc	0 565 16                        # liblzma/lz/lz_encoder_mf.c:565:16
	addq	$4, %r10
.Ltmp878:
	#DEBUG_VALUE: bt_skip_func:ptr1 <- $r10
	#DEBUG_VALUE: bt_skip_func:cur_match <- undef
	#DEBUG_VALUE: bt_skip_func:len1 <- $ecx
	.loc	0 0 16 is_stmt 0                # liblzma/lz/lz_encoder_mf.c:0:16
	movq	%r10, -24(%rsp)                 # 8-byte Spill
.Ltmp879:
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	movl	%ecx, %r13d
.Ltmp880:
	decl	%ebx
	#DEBUG_VALUE: bt_skip_func:cur_match <- undef
.Ltmp881:
	#DEBUG_VALUE: bt_skip_func:depth <- $ebx
	#DEBUG_VALUE: bt_skip_func:ptr0 <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:len1 <- $r13d
	#DEBUG_VALUE: bt_skip_func:len0 <- $eax
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- undef
	#DEBUG_VALUE: bt_skip_func:depth <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $ebx
	jne	.LBB8_16
	jmp	.LBB8_17
.Ltmp882:
	.p2align	4, 0x90
.LBB8_14:                               # %if.else.i
                                        #   in Loop: Header=BB8_8 Depth=2
	#DEBUG_VALUE: lzma_mf_bt3_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt3_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: cur <- $r11
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_skip_func:cur <- $r11
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r12d
	#DEBUG_VALUE: bt_skip_func:son <- $rsi
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr0 <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:len0 <- $eax
	#DEBUG_VALUE: bt_skip_func:len1 <- $r13d
	#DEBUG_VALUE: pair <- $r10
	#DEBUG_VALUE: pb <- $r8
	#DEBUG_VALUE: len <- $ecx
	movq	-32(%rsp), %rax                 # 8-byte Reload
.Ltmp883:
	.loc	0 569 10 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:569:10
	movl	%r12d, (%rax)
.Ltmp884:
	#DEBUG_VALUE: bt_skip_func:ptr0 <- $r10
	#DEBUG_VALUE: bt_skip_func:cur_match <- undef
	#DEBUG_VALUE: bt_skip_func:len0 <- $ecx
	.loc	0 0 10 is_stmt 0                # liblzma/lz/lz_encoder_mf.c:0:10
	movl	%ecx, %eax
	movq	%r10, -32(%rsp)                 # 8-byte Spill
.Ltmp885:
	#DEBUG_VALUE: pair <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr0 <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	decl	%ebx
	#DEBUG_VALUE: bt_skip_func:cur_match <- undef
.Ltmp886:
	#DEBUG_VALUE: bt_skip_func:depth <- undef
	#DEBUG_VALUE: bt_skip_func:ptr0 <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:len1 <- $r13d
	#DEBUG_VALUE: bt_skip_func:len0 <- $eax
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- undef
	#DEBUG_VALUE: bt_skip_func:depth <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
	.loc	0 539 20 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:539:20
	je	.LBB8_17
.Ltmp887:
.LBB8_16:                               # %cleanup58.i
                                        #   in Loop: Header=BB8_8 Depth=2
	#DEBUG_VALUE: lzma_mf_bt3_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt3_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: cur <- $r11
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_skip_func:cur <- $r11
	#DEBUG_VALUE: bt_skip_func:son <- $rsi
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr0 <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:len0 <- $eax
	#DEBUG_VALUE: bt_skip_func:len1 <- $r13d
	#DEBUG_VALUE: len <- $ecx
	.loc	0 0 0 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:0
	movl	(%r10), %r12d
.Ltmp888:
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r12d
	movl	%r9d, %r10d
	subl	%r12d, %r10d
.Ltmp889:
	#DEBUG_VALUE: delta <- $r10d
	.loc	0 539 20                        # liblzma/lz/lz_encoder_mf.c:539:20
	cmpl	%ebp, %r10d
	jb	.LBB8_8
.Ltmp890:
	.p2align	4, 0x90
.LBB8_17:                               # %if.then.i
                                        #   in Loop: Header=BB8_1 Depth=1
	#DEBUG_VALUE: lzma_mf_bt3_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt3_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:son <- $rsi
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr0 <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 0 20                          # liblzma/lz/lz_encoder_mf.c:0:20
	movq	-32(%rsp), %rax                 # 8-byte Reload
.Ltmp891:
	.loc	0 540 10 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:540:10
	movl	$0, (%rax)
	movq	-24(%rsp), %rax                 # 8-byte Reload
	.loc	0 541 10                        # liblzma/lz/lz_encoder_mf.c:541:10
	movl	$0, (%rax)
	jmp	.LBB8_18
.Ltmp892:
	.p2align	4, 0x90
.LBB8_30:                               # %if.then40.i
                                        #   in Loop: Header=BB8_1 Depth=1
	#DEBUG_VALUE: lzma_mf_bt3_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt3_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: cur <- $r11
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_skip_func:cur <- $r11
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r12d
	#DEBUG_VALUE: bt_skip_func:son <- $rsi
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr0 <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:len0 <- $eax
	#DEBUG_VALUE: bt_skip_func:len1 <- $r13d
	#DEBUG_VALUE: pair <- $r10
	#DEBUG_VALUE: pb <- $r8
	.loc	0 557 13                        # liblzma/lz/lz_encoder_mf.c:557:13
	movl	(%r10), %eax
.Ltmp893:
	.loc	0 0 13 is_stmt 0                # liblzma/lz/lz_encoder_mf.c:0:13
	movq	-24(%rsp), %rcx                 # 8-byte Reload
	.loc	0 557 11                        # liblzma/lz/lz_encoder_mf.c:557:11
	movl	%eax, (%rcx)
	.loc	0 558 13 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:558:13
	movl	4(%r10), %eax
	movq	-32(%rsp), %rcx                 # 8-byte Reload
	.loc	0 558 11 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:558:11
	movl	%eax, (%rcx)
.Ltmp894:
.LBB8_18:                               # %bt_skip_func.exit
                                        #   in Loop: Header=BB8_1 Depth=1
	#DEBUG_VALUE: lzma_mf_bt3_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt3_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:son <- $rsi
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr0 <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:cur_match <- undef
	#DEBUG_VALUE: bt_skip_func:ptr0 <- undef
	#DEBUG_VALUE: bt_skip_func:len1 <- undef
	#DEBUG_VALUE: bt_skip_func:len0 <- undef
	#DEBUG_VALUE: bt_skip_func:ptr1 <- undef
	#DEBUG_VALUE: move_pos:mf <- $rdi
	.loc	0 150 6 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:150:6
	movl	80(%rdi), %eax
	incl	%eax
	.loc	0 150 30 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:150:30
	movl	84(%rdi), %edx
	.loc	0 150 23                        # liblzma/lz/lz_encoder_mf.c:150:23
	cmpl	%edx, %eax
	movl	$0, %r10d
.Ltmp895:
	.loc	0 150 6                         # liblzma/lz/lz_encoder_mf.c:150:6
	cmovel	%r10d, %eax
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movl	%eax, 80(%rdi)
.Ltmp896:
	.loc	0 156 6 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:156:6
	movl	20(%rdi), %eax
.Ltmp897:
	.loc	0 153 2                         # liblzma/lz/lz_encoder_mf.c:153:2
	movl	24(%rdi), %ecx
	leal	1(%rcx), %esi
	movl	%esi, 24(%rdi)
.Ltmp898:
	.loc	0 156 6                         # liblzma/lz/lz_encoder_mf.c:156:6
	addl	%eax, %ecx
	incl	%ecx
	cmpl	$-1, %ecx
	movl	-12(%rsp), %esi                 # 4-byte Reload
.Ltmp899:
	.loc	0 156 6 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:156:6
	jne	.LBB8_28
.Ltmp900:
# %bb.19:                               # %if.then5.i
                                        #   in Loop: Header=BB8_1 Depth=1
	#DEBUG_VALUE: lzma_mf_bt3_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt3_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	.loc	0 116 26 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:116:26
	notl	%edx
.Ltmp901:
	#DEBUG_VALUE: normalize:subvalue <- $edx
	.loc	0 119 49                        # liblzma/lz/lz_encoder_mf.c:119:49
	movl	112(%rdi), %ecx
.Ltmp902:
	#DEBUG_VALUE: i <- 0
	.loc	0 122 25                        # liblzma/lz/lz_encoder_mf.c:122:25
	addl	108(%rdi), %ecx
.Ltmp903:
	#DEBUG_VALUE: normalize:count <- $ecx
	#DEBUG_VALUE: normalize:hash <- undef
	.loc	0 122 2 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:122:2
	je	.LBB8_27
.Ltmp904:
# %bb.20:                               # %for.body.preheader.i.i
                                        #   in Loop: Header=BB8_1 Depth=1
	#DEBUG_VALUE: lzma_mf_bt3_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt3_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $edx
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $ecx
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movq	64(%rdi), %rax
.Ltmp905:
	#DEBUG_VALUE: normalize:hash <- $rax
	.loc	0 122 25                        # liblzma/lz/lz_encoder_mf.c:122:25
	movl	%ecx, %r8d
.Ltmp906:
	.loc	0 122 2                         # liblzma/lz/lz_encoder_mf.c:122:2
	cmpl	$16, %ecx
	jae	.LBB8_22
.Ltmp907:
# %bb.21:                               #   in Loop: Header=BB8_1 Depth=1
	#DEBUG_VALUE: lzma_mf_bt3_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt3_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $edx
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $ecx
	#DEBUG_VALUE: normalize:hash <- $rax
	.loc	0 0 2                           # liblzma/lz/lz_encoder_mf.c:0:2
	xorl	%r9d, %r9d
	.loc	0 122 2                         # liblzma/lz/lz_encoder_mf.c:122:2
	jmp	.LBB8_25
.Ltmp908:
.LBB8_22:                               # %vector.ph
                                        #   in Loop: Header=BB8_1 Depth=1
	#DEBUG_VALUE: lzma_mf_bt3_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt3_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $edx
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $ecx
	#DEBUG_VALUE: normalize:hash <- $rax
	movl	%r8d, %r9d
	andl	$-16, %r9d
	movd	%edx, %xmm1
	pshufd	$0, %xmm1, %xmm1                # xmm1 = xmm1[0,0,0,0]
	movdqa	%xmm1, %xmm2
	pxor	%xmm0, %xmm2
	xorl	%ecx, %ecx
.Ltmp909:
	#DEBUG_VALUE: normalize:count <- $r8d
	.p2align	4, 0x90
.LBB8_23:                               # %vector.body
                                        #   Parent Loop BB8_1 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: lzma_mf_bt3_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt3_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $edx
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $r8d
	#DEBUG_VALUE: normalize:hash <- $rax
	.loc	0 133 7 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:133:7
	movdqu	(%rax,%rcx,4), %xmm3
	movdqu	16(%rax,%rcx,4), %xmm4
	movdqu	32(%rax,%rcx,4), %xmm5
	movdqu	48(%rax,%rcx,4), %xmm6
.Ltmp910:
	.loc	0 133 7 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:133:7
	movdqa	%xmm3, %xmm7
	pxor	%xmm0, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm1, %xmm3
	pand	%xmm7, %xmm3
	movdqa	%xmm4, %xmm7
	pxor	%xmm0, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm1, %xmm4
	pand	%xmm7, %xmm4
	movdqa	%xmm5, %xmm7
	pxor	%xmm0, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm1, %xmm5
	pand	%xmm7, %xmm5
	movdqa	%xmm6, %xmm7
	pxor	%xmm0, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm1, %xmm6
	pand	%xmm7, %xmm6
.Ltmp911:
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movdqu	%xmm3, (%rax,%rcx,4)
	movdqu	%xmm4, 16(%rax,%rcx,4)
	movdqu	%xmm5, 32(%rax,%rcx,4)
	movdqu	%xmm6, 48(%rax,%rcx,4)
.Ltmp912:
	.loc	0 122 34 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:122:34
	addq	$16, %rcx
	cmpq	%rcx, %r9
	jne	.LBB8_23
.Ltmp913:
# %bb.24:                               # %middle.block
                                        #   in Loop: Header=BB8_1 Depth=1
	#DEBUG_VALUE: lzma_mf_bt3_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt3_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $edx
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $r8d
	#DEBUG_VALUE: normalize:hash <- $rax
	.loc	0 122 2 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:122:2
	cmpl	%r8d, %r9d
	je	.LBB8_26
.Ltmp914:
	.p2align	4, 0x90
.LBB8_25:                               # %for.body.i.i
                                        #   Parent Loop BB8_1 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: lzma_mf_bt3_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt3_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $edx
	#DEBUG_VALUE: normalize:count <- $r8d
	#DEBUG_VALUE: normalize:hash <- $rax
	#DEBUG_VALUE: i <- $r9
	.loc	0 133 7 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:133:7
	movl	(%rax,%r9,4), %ecx
.Ltmp915:
	.loc	0 133 7 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:133:7
	subl	%edx, %ecx
	cmovbl	%r10d, %ecx
.Ltmp916:
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movl	%ecx, (%rax,%r9,4)
.Ltmp917:
	.loc	0 122 34 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:122:34
	incq	%r9
.Ltmp918:
	#DEBUG_VALUE: i <- $r9
	.loc	0 122 25 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:122:25
	cmpq	%r9, %r8
.Ltmp919:
	.loc	0 122 2                         # liblzma/lz/lz_encoder_mf.c:122:2
	jne	.LBB8_25
.Ltmp920:
.LBB8_26:                               # %normalize.exit.loopexit.i
                                        #   in Loop: Header=BB8_1 Depth=1
	#DEBUG_VALUE: lzma_mf_bt3_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt3_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $edx
	#DEBUG_VALUE: normalize:count <- $r8d
	#DEBUG_VALUE: normalize:hash <- $rax
	.loc	0 140 13 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:140:13
	movl	20(%rdi), %eax
.Ltmp921:
.LBB8_27:                               # %normalize.exit.i
                                        #   in Loop: Header=BB8_1 Depth=1
	#DEBUG_VALUE: lzma_mf_bt3_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt3_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $edx
	subl	%edx, %eax
	movl	%eax, 20(%rdi)
	jmp	.LBB8_28
.Ltmp922:
.LBB8_29:                               # %do.end27
	#DEBUG_VALUE: lzma_mf_bt3_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt3_skip:amount <- $esi
	.loc	0 677 1 epilogue_begin          # liblzma/lz/lz_encoder_mf.c:677:1
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp923:
.Lfunc_end8:
	.size	lzma_mf_bt3_skip, .Lfunc_end8-lzma_mf_bt3_skip
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4, 0x0                          # -- Begin function lzma_mf_bt4_find
.LCPI9_0:
	.long	2147483648                      # 0x80000000
	.long	2147483648                      # 0x80000000
	.long	2147483648                      # 0x80000000
	.long	2147483648                      # 0x80000000
	.text
	.globl	lzma_mf_bt4_find
	.p2align	4, 0x90
	.type	lzma_mf_bt4_find,@function
lzma_mf_bt4_find:                       # @lzma_mf_bt4_find
.Lfunc_begin9:
	.loc	0 684 0                         # liblzma/lz/lz_encoder_mf.c:684:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- $rsi
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	.loc	0 685 2 prologue_end            # liblzma/lz/lz_encoder_mf.c:685:2
	movl	24(%rdi), %ecx
	movl	36(%rdi), %eax
.Ltmp924:
	.loc	4 232 23                        # liblzma/lz/lz_encoder.h:232:23
	subl	%ecx, %eax
.Ltmp925:
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- $eax
	.loc	0 685 2                         # liblzma/lz/lz_encoder_mf.c:685:2
	movl	96(%rdi), %r15d
	cmpl	%eax, %r15d
.Ltmp926:
	.loc	0 685 2 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:685:2
	jbe	.LBB9_4
.Ltmp927:
# %bb.1:                                # %if.else
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- $eax
	.loc	0 685 2                         # liblzma/lz/lz_encoder_mf.c:685:2
	cmpl	$4, %eax
	jb	.LBB9_3
.Ltmp928:
# %bb.2:                                # %lor.lhs.false
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- $eax
	cmpl	$1, 104(%rdi)
	movl	%eax, %r15d
.Ltmp929:
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- $r15d
	.loc	0 685 2                         # liblzma/lz/lz_encoder_mf.c:685:2
	jne	.LBB9_4
.Ltmp930:
.LBB9_3:                                # %if.then4
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- $eax
	#DEBUG_VALUE: move_pending:mf <- $rdi
	.loc	0 178 2 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:178:2
	incl	%ecx
	movl	%ecx, 24(%rdi)
	.loc	0 180 2                         # liblzma/lz/lz_encoder_mf.c:180:2
	incl	40(%rdi)
	xorl	%eax, %eax
.Ltmp931:
	.loc	0 685 2                         # liblzma/lz/lz_encoder_mf.c:685:2
	jmp	.LBB9_66
.Ltmp932:
.LBB9_4:                                # %if.end5
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- $eax
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- $r15d
	.loc	0 685 2 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:685:2
	movq	(%rdi), %rdx
	.loc	0 689 30 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:689:30
	movq	64(%rdi), %r14
.Ltmp933:
	#DEBUG_VALUE: mf_ptr:mf <- undef
	.loc	4 224 20                        # liblzma/lz/lz_encoder.h:224:20
	leaq	(%rdx,%rcx), %rax
.Ltmp934:
	#DEBUG_VALUE: lzma_mf_bt4_find:cur <- $rax
	.loc	4 0 20 is_stmt 0                # liblzma/lz/lz_encoder.h:0:20
	movl	20(%rdi), %ebp
.Ltmp935:
	#DEBUG_VALUE: lzma_mf_bt4_find:pos <- undef
	#DEBUG_VALUE: lzma_mf_bt4_find:matches_count <- 0
	.loc	0 687 2 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:687:2
	movzbl	(%rdx,%rcx), %r10d
	movq	lzma_crc32_table@GOTPCREL(%rip), %r9
	movzbl	1(%rdx,%rcx), %r8d
	xorl	(%r9,%r10,4), %r8d
	.loc	0 685 2                         # liblzma/lz/lz_encoder_mf.c:685:2
	addl	%ecx, %ebp
	.loc	0 687 2                         # liblzma/lz/lz_encoder_mf.c:687:2
	movzbl	2(%rdx,%rcx), %ebx
	shll	$8, %ebx
	xorl	%r8d, %ebx
.Ltmp936:
	#DEBUG_VALUE: lzma_mf_bt4_find:temp <- $r8d
	andl	$1023, %r8d                     # imm = 0x3FF
.Ltmp937:
	#DEBUG_VALUE: lzma_mf_bt4_find:hash_2_value <- $r8d
	movzwl	%bx, %r10d
.Ltmp938:
	#DEBUG_VALUE: lzma_mf_bt4_find:hash_3_value <- $r10d
	movzbl	3(%rdx,%rcx), %ecx
	movl	(%r9,%rcx,4), %r11d
	shll	$5, %r11d
	xorl	%ebx, %r11d
	andl	88(%rdi), %r11d
.Ltmp939:
	#DEBUG_VALUE: lzma_mf_bt4_find:hash_value <- $r11d
	.loc	0 689 26                        # liblzma/lz/lz_encoder_mf.c:689:26
	movl	(%r14,%r8,4), %edx
	.loc	0 689 24 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:689:24
	movl	%ebp, %ebx
	subl	%edx, %ebx
.Ltmp940:
	#DEBUG_VALUE: lzma_mf_bt4_find:delta2 <- $ebx
	.loc	0 691 12 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:691:12
	movl	4096(%r14,%r10,4), %ecx
.Ltmp941:
	#DEBUG_VALUE: lzma_mf_bt4_find:delta3 <- undef
	.loc	0 692 54                        # liblzma/lz/lz_encoder_mf.c:692:54
	addl	$66560, %r11d                   # imm = 0x10400
.Ltmp942:
	.loc	0 692 29 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:692:29
	movl	(%r14,%r11,4), %r9d
.Ltmp943:
	#DEBUG_VALUE: lzma_mf_bt4_find:cur_match <- $r9d
	.loc	0 694 25 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:694:25
	movl	%ebp, (%r14,%r8,4)
	.loc	0 695 6                         # liblzma/lz/lz_encoder_mf.c:695:6
	movq	64(%rdi), %r8
.Ltmp944:
	.loc	0 695 43 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:695:43
	movl	%ebp, 4096(%r8,%r10,4)
	.loc	0 696 6 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:696:6
	movq	64(%rdi), %r8
	movl	%ebp, -68(%rsp)                 # 4-byte Spill
	.loc	0 696 41 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:696:41
	movl	%ebp, (%r8,%r11,4)
	movl	$1, %r12d
	xorl	%r14d, %r14d
	movb	$1, %r8b
.Ltmp945:
	#DEBUG_VALUE: lzma_mf_bt4_find:len_best <- 1
	.loc	0 700 13 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:700:13
	cmpl	84(%rdi), %ebx
	.loc	0 700 31 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:700:31
	jae	.LBB9_7
.Ltmp946:
# %bb.5:                                # %land.lhs.true
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- $r15d
	#DEBUG_VALUE: lzma_mf_bt4_find:cur <- $rax
	#DEBUG_VALUE: lzma_mf_bt4_find:matches_count <- 0
	#DEBUG_VALUE: lzma_mf_bt4_find:hash_3_value <- $r10d
	#DEBUG_VALUE: lzma_mf_bt4_find:delta2 <- $ebx
	#DEBUG_VALUE: lzma_mf_bt4_find:cur_match <- $r9d
	#DEBUG_VALUE: lzma_mf_bt4_find:len_best <- 1
	.loc	0 700 40                        # liblzma/lz/lz_encoder_mf.c:700:40
	movl	%ebx, %r10d
.Ltmp947:
	movq	%rax, %r11
	subq	%r10, %r11
	.loc	0 700 34                        # liblzma/lz/lz_encoder_mf.c:700:34
	movzbl	(%r11), %r10d
	.loc	0 700 50                        # liblzma/lz/lz_encoder_mf.c:700:50
	cmpb	(%rax), %r10b
.Ltmp948:
	.loc	0 700 6                         # liblzma/lz/lz_encoder_mf.c:700:6
	jne	.LBB9_7
.Ltmp949:
# %bb.6:                                # %if.then51
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- $r15d
	#DEBUG_VALUE: lzma_mf_bt4_find:cur <- $rax
	#DEBUG_VALUE: lzma_mf_bt4_find:matches_count <- 0
	#DEBUG_VALUE: lzma_mf_bt4_find:delta2 <- $ebx
	#DEBUG_VALUE: lzma_mf_bt4_find:cur_match <- $r9d
	#DEBUG_VALUE: lzma_mf_bt4_find:len_best <- 1
	#DEBUG_VALUE: lzma_mf_bt4_find:len_best <- 2
	.loc	0 702 18 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:702:18
	movl	$2, (%rsi)
	.loc	0 703 28                        # liblzma/lz/lz_encoder_mf.c:703:28
	leal	-1(%rbx), %r8d
	.loc	0 703 19 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:703:19
	movl	%r8d, 4(%rsi)
	movl	$2, %r12d
	movl	$1, %r14d
	xorl	%r8d, %r8d
.Ltmp950:
	#DEBUG_VALUE: lzma_mf_bt4_find:matches_count <- 1
.LBB9_7:                                # %if.end55
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- $r15d
	#DEBUG_VALUE: lzma_mf_bt4_find:cur <- $rax
	#DEBUG_VALUE: lzma_mf_bt4_find:delta2 <- $ebx
	#DEBUG_VALUE: lzma_mf_bt4_find:cur_match <- $r9d
	#DEBUG_VALUE: lzma_mf_bt4_find:len_best <- $r12d
	#DEBUG_VALUE: lzma_mf_bt4_find:matches_count <- $r14d
	.loc	0 707 13 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:707:13
	cmpl	%edx, %ecx
	movq	%r15, -24(%rsp)                 # 8-byte Spill
.Ltmp951:
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 0 13 is_stmt 0                # liblzma/lz/lz_encoder_mf.c:0:13
	movq	%rdi, -32(%rsp)                 # 8-byte Spill
.Ltmp952:
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	.loc	0 707 23                        # liblzma/lz/lz_encoder_mf.c:707:23
	je	.LBB9_11
.Ltmp953:
# %bb.8:                                # %land.lhs.true58
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt4_find:cur <- $rax
	#DEBUG_VALUE: lzma_mf_bt4_find:matches_count <- $r14d
	#DEBUG_VALUE: lzma_mf_bt4_find:delta2 <- $ebx
	#DEBUG_VALUE: lzma_mf_bt4_find:cur_match <- $r9d
	#DEBUG_VALUE: lzma_mf_bt4_find:len_best <- $r12d
	.loc	0 0 23                          # liblzma/lz/lz_encoder_mf.c:0:23
	movl	-68(%rsp), %edx                 # 4-byte Reload
                                        # kill: def $edx killed $edx def $rdx
	subl	%ecx, %edx
.Ltmp954:
	#DEBUG_VALUE: lzma_mf_bt4_find:delta3 <- $edx
	.loc	0 707 33                        # liblzma/lz/lz_encoder_mf.c:707:33
	cmpl	84(%rdi), %edx
	.loc	0 708 4 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:708:4
	jae	.LBB9_11
.Ltmp955:
# %bb.9:                                # %land.lhs.true62
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt4_find:cur <- $rax
	#DEBUG_VALUE: lzma_mf_bt4_find:matches_count <- $r14d
	#DEBUG_VALUE: lzma_mf_bt4_find:delta2 <- $ebx
	#DEBUG_VALUE: lzma_mf_bt4_find:delta3 <- $edx
	#DEBUG_VALUE: lzma_mf_bt4_find:cur_match <- $r9d
	#DEBUG_VALUE: lzma_mf_bt4_find:len_best <- $r12d
	.loc	0 708 13 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:708:13
	movl	%edx, %ecx
	movq	%rax, %r10
	subq	%rcx, %r10
	.loc	0 708 7                         # liblzma/lz/lz_encoder_mf.c:708:7
	movzbl	(%r10), %ecx
	.loc	0 708 23                        # liblzma/lz/lz_encoder_mf.c:708:23
	cmpb	(%rax), %cl
.Ltmp956:
	.loc	0 707 6 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:707:6
	jne	.LBB9_11
.Ltmp957:
# %bb.10:                               # %if.end75.thread
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt4_find:cur <- $rax
	#DEBUG_VALUE: lzma_mf_bt4_find:matches_count <- $r14d
	#DEBUG_VALUE: lzma_mf_bt4_find:delta2 <- $ebx
	#DEBUG_VALUE: lzma_mf_bt4_find:delta3 <- $edx
	#DEBUG_VALUE: lzma_mf_bt4_find:cur_match <- $r9d
	#DEBUG_VALUE: lzma_mf_bt4_find:len_best <- $r12d
	#DEBUG_VALUE: lzma_mf_bt4_find:len_best <- 3
	.loc	0 710 42                        # liblzma/lz/lz_encoder_mf.c:710:42
	leal	-1(%rdx), %ecx
	.loc	0 710 28 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:710:28
	movl	%r14d, %r8d
	.loc	0 710 24                        # liblzma/lz/lz_encoder_mf.c:710:24
	incl	%r14d
.Ltmp958:
	#DEBUG_VALUE: lzma_mf_bt4_find:matches_count <- $r8d
	#DEBUG_VALUE: lzma_mf_bt4_find:matches_count <- $r14d
	.loc	0 710 33                        # liblzma/lz/lz_encoder_mf.c:710:33
	movl	%ecx, 4(%rsi,%r8,8)
	movl	$3, %r12d
.Ltmp959:
	#DEBUG_VALUE: lzma_mf_bt4_find:delta2 <- $edx
	#DEBUG_VALUE: lzma_mf_bt4_find:len_best <- $r12d
	.loc	0 715 20 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:715:20
	cmpl	%r15d, %r12d
.Ltmp960:
	.loc	0 715 3 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:715:3
	jne	.LBB9_14
	jmp	.LBB9_17
.Ltmp961:
.LBB9_11:                               # %if.end75
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt4_find:cur <- $rax
	#DEBUG_VALUE: lzma_mf_bt4_find:matches_count <- $r14d
	#DEBUG_VALUE: lzma_mf_bt4_find:delta2 <- $ebx
	#DEBUG_VALUE: lzma_mf_bt4_find:cur_match <- $r9d
	#DEBUG_VALUE: lzma_mf_bt4_find:len_best <- $r12d
	#DEBUG_VALUE: lzma_mf_bt4_find:len_best <- $r12d
	#DEBUG_VALUE: lzma_mf_bt4_find:delta2 <- $ebx
	#DEBUG_VALUE: lzma_mf_bt4_find:matches_count <- $r14d
	.loc	0 0 3                           # liblzma/lz/lz_encoder_mf.c:0:3
	movl	$1, %r14d
.Ltmp962:
	.loc	0 714 6 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:714:6
	testb	%r8b, %r8b
	je	.LBB9_12
.Ltmp963:
# %bb.38:
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt4_find:cur <- $rax
	#DEBUG_VALUE: lzma_mf_bt4_find:delta2 <- $ebx
	#DEBUG_VALUE: lzma_mf_bt4_find:cur_match <- $r9d
	#DEBUG_VALUE: lzma_mf_bt4_find:len_best <- $r12d
	.loc	0 0 6 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:6
	xorl	%ecx, %ecx
	jmp	.LBB9_39
.Ltmp964:
.LBB9_12:
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt4_find:cur <- $rax
	#DEBUG_VALUE: lzma_mf_bt4_find:delta2 <- $ebx
	#DEBUG_VALUE: lzma_mf_bt4_find:cur_match <- $r9d
	#DEBUG_VALUE: lzma_mf_bt4_find:len_best <- $r12d
	movl	%ebx, %edx
	#DEBUG_VALUE: lzma_mf_bt4_find:len_best <- $r12d
.Ltmp965:
	.loc	0 715 20 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:715:20
	cmpl	%r15d, %r12d
.Ltmp966:
	.loc	0 715 3 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:715:3
	je	.LBB9_17
.Ltmp967:
.LBB9_14:                               # %for.body.lr.ph
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt4_find:cur <- $rax
	#DEBUG_VALUE: lzma_mf_bt4_find:delta2 <- $edx
	#DEBUG_VALUE: lzma_mf_bt4_find:cur_match <- $r9d
	#DEBUG_VALUE: lzma_mf_bt4_find:len_best <- $r12d
	.loc	0 0 3                           # liblzma/lz/lz_encoder_mf.c:0:3
	movl	%edx, %ecx
	negq	%rcx
.Ltmp968:
	.p2align	4, 0x90
.LBB9_15:                               # %for.body
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt4_find:cur <- $rax
	#DEBUG_VALUE: lzma_mf_bt4_find:cur_match <- $r9d
	#DEBUG_VALUE: lzma_mf_bt4_find:len_best <- $r12d
	#DEBUG_VALUE: lzma_mf_bt4_find:len_best <- $r12d
	.loc	0 716 14 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:716:14
	movl	%r12d, %edx
	leaq	(%rax,%rdx), %r8
	.loc	0 716 8 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:716:8
	movzbl	(%rcx,%r8), %r8d
	.loc	0 716 35                        # liblzma/lz/lz_encoder_mf.c:716:35
	cmpb	(%rax,%rdx), %r8b
.Ltmp969:
	.loc	0 716 8                         # liblzma/lz/lz_encoder_mf.c:716:8
	jne	.LBB9_67
.Ltmp970:
# %bb.16:                               # %for.inc
                                        #   in Loop: Header=BB9_15 Depth=1
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt4_find:cur <- $rax
	#DEBUG_VALUE: lzma_mf_bt4_find:cur_match <- $r9d
	#DEBUG_VALUE: lzma_mf_bt4_find:len_best <- $r12d
	.loc	0 715 34 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:715:34
	incl	%r12d
.Ltmp971:
	#DEBUG_VALUE: lzma_mf_bt4_find:len_best <- $edx
	#DEBUG_VALUE: lzma_mf_bt4_find:len_best <- $r12d
	.loc	0 715 20 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:715:20
	cmpl	%r12d, %r15d
.Ltmp972:
	.loc	0 715 3                         # liblzma/lz/lz_encoder_mf.c:715:3
	jne	.LBB9_15
.Ltmp973:
.LBB9_17:                               # %do.body
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt4_find:cur <- $rax
	#DEBUG_VALUE: lzma_mf_bt4_find:cur_match <- $r9d
	#DEBUG_VALUE: lzma_mf_bt4_find:len_best <- $r12d
	.loc	0 719 25 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:719:25
	leal	-1(%r14), %ecx
	.loc	0 719 34 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:719:34
	movl	%r15d, (%rsi,%rcx,8)
.Ltmp974:
	.loc	0 722 4 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:722:4
	movl	92(%rdi), %esi
.Ltmp975:
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	movq	72(%rdi), %r11
	movl	80(%rdi), %ebx
.Ltmp976:
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- undef
	#DEBUG_VALUE: bt_skip_func:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:pos <- undef
	#DEBUG_VALUE: bt_skip_func:cur <- $rax
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_skip_func:depth <- $esi
	#DEBUG_VALUE: bt_skip_func:son <- $r11
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- $ebx
	.loc	0 531 37                        # liblzma/lz/lz_encoder_mf.c:531:37
	leal	(%rbx,%rbx), %ecx
	.loc	0 531 23 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:531:23
	leaq	(%r11,%rcx,4), %rdx
	movq	%rdx, -64(%rsp)                 # 8-byte Spill
	.loc	0 531 43                        # liblzma/lz/lz_encoder_mf.c:531:43
	leaq	(%r11,%rcx,4), %r10
	addq	$4, %r10
.Ltmp977:
	#DEBUG_VALUE: bt_skip_func:ptr0 <- $r10
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:len0 <- 0
	#DEBUG_VALUE: bt_skip_func:len1 <- 0
	.loc	0 539 15 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:539:15
	testl	%esi, %esi
	movq	%r14, -48(%rsp)                 # 8-byte Spill
	.loc	0 539 20 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:539:20
	je	.LBB9_29
.Ltmp978:
# %bb.18:                               # %do.body
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt4_find:cur <- $rax
	#DEBUG_VALUE: lzma_mf_bt4_find:cur_match <- $r9d
	#DEBUG_VALUE: lzma_mf_bt4_find:len_best <- $r12d
	#DEBUG_VALUE: bt_skip_func:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:cur <- $rax
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_skip_func:depth <- $esi
	#DEBUG_VALUE: bt_skip_func:son <- $r11
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- $ebx
	#DEBUG_VALUE: bt_skip_func:ptr0 <- $r10
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:len0 <- 0
	#DEBUG_VALUE: bt_skip_func:len1 <- 0
	.loc	0 722 4 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:722:4
	movl	84(%rdi), %ebp
.Ltmp979:
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- $ebp
	.loc	0 0 4 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:4
	movl	-68(%rsp), %ecx                 # 4-byte Reload
.Ltmp980:
	subl	%r9d, %ecx
.Ltmp981:
	.loc	0 539 20 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:539:20
	cmpl	%ebp, %ecx
	jae	.LBB9_29
.Ltmp982:
# %bb.19:                               # %if.end.i.preheader
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt4_find:cur <- $rax
	#DEBUG_VALUE: lzma_mf_bt4_find:cur_match <- $r9d
	#DEBUG_VALUE: lzma_mf_bt4_find:len_best <- $r12d
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_skip_func:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:cur <- $rax
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_skip_func:depth <- $esi
	#DEBUG_VALUE: bt_skip_func:son <- $r11
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- $ebx
	#DEBUG_VALUE: bt_skip_func:ptr0 <- $r10
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:len0 <- 0
	#DEBUG_VALUE: bt_skip_func:len1 <- 0
	.loc	0 537 2                         # liblzma/lz/lz_encoder_mf.c:537:2
	decl	%r15d
	movq	%r15, %rdi
	xorl	%r14d, %r14d
	xorl	%r15d, %r15d
.Ltmp983:
.LBB9_20:                               # %if.end.i
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB9_22 Depth 2
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt4_find:cur <- $rax
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_skip_func:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:cur <- $rax
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_skip_func:son <- $r11
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- $ebx
	#DEBUG_VALUE: bt_skip_func:ptr0 <- $r10
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_skip_func:ptr0 <- $r10
	#DEBUG_VALUE: bt_skip_func:len1 <- $r14d
	#DEBUG_VALUE: bt_skip_func:len0 <- $r15d
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 545 39                        # liblzma/lz/lz_encoder_mf.c:545:39
	movl	%ebx, %edx
	subl	%ecx, %edx
	.loc	0 546 8                         # liblzma/lz/lz_encoder_mf.c:546:8
	movl	$0, %r8d
	cmovbl	%ebp, %r8d
	.loc	0 546 5 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:546:5
	leal	(%rdx,%r8), %r12d
	.loc	0 547 5 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:547:5
	addl	%r12d, %r12d
.Ltmp984:
	#DEBUG_VALUE: pair <- undef
	.loc	0 548 27                        # liblzma/lz/lz_encoder_mf.c:548:27
	movl	%ecx, %ecx
	movq	%rax, %r8
	subq	%rcx, %r8
.Ltmp985:
	#DEBUG_VALUE: pb <- $r8
	.loc	0 549 18                        # liblzma/lz/lz_encoder_mf.c:549:18
	cmpl	%r14d, %r15d
	movl	%r14d, %edx
	cmovbl	%r15d, %edx
.Ltmp986:
	#DEBUG_VALUE: len <- $edx
	.loc	0 545 24                        # liblzma/lz/lz_encoder_mf.c:545:24
	leaq	(%r11,%r12,4), %rcx
.Ltmp987:
	#DEBUG_VALUE: pair <- $rcx
	.loc	0 551 7                         # liblzma/lz/lz_encoder_mf.c:551:7
	movzbl	(%r8,%rdx), %r12d
	.loc	0 551 18 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:551:18
	movzbl	(%rax,%rdx), %r13d
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	cmpb	%r13b, %r12b
.Ltmp988:
	jne	.LBB9_24
.Ltmp989:
	.p2align	4, 0x90
.LBB9_22:                               # %while.cond24.i
                                        #   Parent Loop BB9_20 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt4_find:cur <- $rax
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_skip_func:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:cur <- $rax
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_skip_func:son <- $r11
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- $ebx
	#DEBUG_VALUE: bt_skip_func:ptr0 <- $r10
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:len0 <- $r15d
	#DEBUG_VALUE: bt_skip_func:len1 <- $r14d
	#DEBUG_VALUE: pair <- $rcx
	#DEBUG_VALUE: pb <- $r8
	#DEBUG_VALUE: len <- $edx
	#DEBUG_VALUE: len <- $edx
	#DEBUG_VALUE: len <- undef
	.loc	0 552 17 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:552:17
	cmpl	%edx, %edi
	.loc	0 552 4 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:552:4
	je	.LBB9_68
.Ltmp990:
# %bb.23:                               # %while.body27.i
                                        #   in Loop: Header=BB9_22 Depth=2
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt4_find:cur <- $rax
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_skip_func:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:cur <- $rax
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_skip_func:son <- $r11
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- $ebx
	#DEBUG_VALUE: bt_skip_func:ptr0 <- $r10
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:len0 <- $r15d
	#DEBUG_VALUE: bt_skip_func:len1 <- $r14d
	#DEBUG_VALUE: pair <- $rcx
	#DEBUG_VALUE: pb <- $r8
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	incl	%edx
.Ltmp991:
	#DEBUG_VALUE: len <- $edx
	.loc	0 553 9 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:553:9
	movl	%edx, %r13d
	movzbl	(%r8,%r13), %r12d
	.loc	0 553 20 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:553:20
	movzbl	(%rax,%r13), %r13d
.Ltmp992:
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	cmpb	%r13b, %r12b
.Ltmp993:
	je	.LBB9_22
.Ltmp994:
.LBB9_24:                               # %if.end44.i
                                        #   in Loop: Header=BB9_20 Depth=1
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt4_find:cur <- $rax
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_skip_func:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:cur <- $rax
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_skip_func:son <- $r11
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- $ebx
	#DEBUG_VALUE: bt_skip_func:ptr0 <- $r10
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:len0 <- $r15d
	#DEBUG_VALUE: bt_skip_func:len1 <- $r14d
	#DEBUG_VALUE: pair <- $rcx
	#DEBUG_VALUE: pb <- $r8
	#DEBUG_VALUE: len <- $edx
	#DEBUG_VALUE: len <- $edx
	.loc	0 563 15 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:563:15
	cmpb	%r13b, %r12b
.Ltmp995:
	.loc	0 563 7 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:563:7
	jae	.LBB9_26
.Ltmp996:
# %bb.25:                               # %if.then53.i
                                        #   in Loop: Header=BB9_20 Depth=1
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt4_find:cur <- $rax
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_skip_func:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:cur <- $rax
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_skip_func:son <- $r11
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- $ebx
	#DEBUG_VALUE: bt_skip_func:ptr0 <- $r10
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:len0 <- $r15d
	#DEBUG_VALUE: bt_skip_func:len1 <- $r14d
	#DEBUG_VALUE: pair <- $rcx
	#DEBUG_VALUE: pb <- $r8
	#DEBUG_VALUE: len <- $edx
	.loc	0 0 7                           # liblzma/lz/lz_encoder_mf.c:0:7
	movq	-64(%rsp), %r8                  # 8-byte Reload
.Ltmp997:
	.loc	0 564 10 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:564:10
	movl	%r9d, (%r8)
	.loc	0 565 16                        # liblzma/lz/lz_encoder_mf.c:565:16
	addq	$4, %rcx
.Ltmp998:
	#DEBUG_VALUE: bt_skip_func:ptr1 <- $rcx
	#DEBUG_VALUE: bt_skip_func:cur_match <- undef
	#DEBUG_VALUE: bt_skip_func:len1 <- $edx
	.loc	0 0 16 is_stmt 0                # liblzma/lz/lz_encoder_mf.c:0:16
	movq	%rcx, -64(%rsp)                 # 8-byte Spill
.Ltmp999:
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	movl	%edx, %r14d
	.loc	0 568 3 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:568:3
	jmp	.LBB9_27
.Ltmp1000:
.LBB9_26:                               # %if.else.i
                                        #   in Loop: Header=BB9_20 Depth=1
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt4_find:cur <- $rax
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_skip_func:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:cur <- $rax
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_skip_func:son <- $r11
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- $ebx
	#DEBUG_VALUE: bt_skip_func:ptr0 <- $r10
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:len0 <- $r15d
	#DEBUG_VALUE: bt_skip_func:len1 <- $r14d
	#DEBUG_VALUE: pair <- $rcx
	#DEBUG_VALUE: pb <- $r8
	#DEBUG_VALUE: len <- $edx
	.loc	0 569 10                        # liblzma/lz/lz_encoder_mf.c:569:10
	movl	%r9d, (%r10)
.Ltmp1001:
	#DEBUG_VALUE: bt_skip_func:ptr0 <- $rcx
	#DEBUG_VALUE: bt_skip_func:cur_match <- undef
	#DEBUG_VALUE: bt_skip_func:len0 <- $edx
	.loc	0 0 10 is_stmt 0                # liblzma/lz/lz_encoder_mf.c:0:10
	movl	%edx, %r15d
	movq	%rcx, %r10
.Ltmp1002:
.LBB9_27:                               # %cleanup58.i
                                        #   in Loop: Header=BB9_20 Depth=1
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt4_find:cur <- $rax
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_skip_func:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:cur <- $rax
	#DEBUG_VALUE: bt_skip_func:son <- $r11
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- $ebx
	#DEBUG_VALUE: bt_skip_func:ptr0 <- $r10
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:len0 <- $r15d
	#DEBUG_VALUE: bt_skip_func:len1 <- $r14d
	#DEBUG_VALUE: len <- $edx
	decl	%esi
.Ltmp1003:
	#DEBUG_VALUE: bt_skip_func:cur_match <- undef
	#DEBUG_VALUE: bt_skip_func:depth <- $esi
	#DEBUG_VALUE: bt_skip_func:ptr0 <- $r10
	#DEBUG_VALUE: bt_skip_func:len1 <- $r14d
	#DEBUG_VALUE: bt_skip_func:len0 <- $r15d
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- undef
	#DEBUG_VALUE: bt_skip_func:depth <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $esi
	.loc	0 539 20 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:539:20
	je	.LBB9_29
.Ltmp1004:
# %bb.28:                               # %cleanup58.i
                                        #   in Loop: Header=BB9_20 Depth=1
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt4_find:cur <- $rax
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_skip_func:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:cur <- $rax
	#DEBUG_VALUE: bt_skip_func:depth <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $esi
	#DEBUG_VALUE: bt_skip_func:son <- $r11
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- $ebx
	#DEBUG_VALUE: bt_skip_func:ptr0 <- $r10
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:len0 <- $r15d
	#DEBUG_VALUE: bt_skip_func:len1 <- $r14d
	#DEBUG_VALUE: len <- $edx
	.loc	0 0 0 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:0
	movl	(%rcx), %r9d
.Ltmp1005:
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r9d
	movl	-68(%rsp), %ecx                 # 4-byte Reload
	subl	%r9d, %ecx
.Ltmp1006:
	#DEBUG_VALUE: delta <- $ecx
	.loc	0 539 20                        # liblzma/lz/lz_encoder_mf.c:539:20
	cmpl	%ebp, %ecx
	jb	.LBB9_20
.Ltmp1007:
.LBB9_29:                               # %if.then.i
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt4_find:cur <- $rax
	#DEBUG_VALUE: bt_skip_func:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:cur <- $rax
	#DEBUG_VALUE: bt_skip_func:son <- $r11
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- $ebx
	#DEBUG_VALUE: bt_skip_func:ptr0 <- $r10
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 540 10 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:540:10
	movl	$0, (%r10)
	movq	-64(%rsp), %rax                 # 8-byte Reload
.Ltmp1008:
	.loc	0 541 10                        # liblzma/lz/lz_encoder_mf.c:541:10
	movl	$0, (%rax)
	jmp	.LBB9_30
.Ltmp1009:
.LBB9_68:                               # %if.then40.i
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt4_find:cur <- $rax
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_skip_func:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:cur <- $rax
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_skip_func:son <- $r11
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- $ebx
	#DEBUG_VALUE: bt_skip_func:ptr0 <- $r10
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:len0 <- $r15d
	#DEBUG_VALUE: bt_skip_func:len1 <- $r14d
	#DEBUG_VALUE: pair <- $rcx
	#DEBUG_VALUE: pb <- $r8
	.loc	0 557 13                        # liblzma/lz/lz_encoder_mf.c:557:13
	movl	(%rcx), %eax
.Ltmp1010:
	.loc	0 0 13 is_stmt 0                # liblzma/lz/lz_encoder_mf.c:0:13
	movq	-64(%rsp), %rdx                 # 8-byte Reload
	.loc	0 557 11                        # liblzma/lz/lz_encoder_mf.c:557:11
	movl	%eax, (%rdx)
	.loc	0 558 13 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:558:13
	movl	4(%rcx), %eax
	.loc	0 558 11 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:558:11
	movl	%eax, (%r10)
.Ltmp1011:
.LBB9_30:                               # %bt_skip_func.exit
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:son <- $r11
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- $ebx
	#DEBUG_VALUE: bt_skip_func:ptr0 <- $r10
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:cur_match <- undef
	#DEBUG_VALUE: bt_skip_func:ptr0 <- undef
	#DEBUG_VALUE: bt_skip_func:len1 <- undef
	#DEBUG_VALUE: bt_skip_func:len0 <- undef
	#DEBUG_VALUE: bt_skip_func:ptr1 <- undef
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 0 11                          # liblzma/lz/lz_encoder_mf.c:0:11
	movq	-32(%rsp), %r9                  # 8-byte Reload
.Ltmp1012:
	.loc	0 150 6 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:150:6
	movl	80(%r9), %ecx
	incl	%ecx
	.loc	0 150 30 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:150:30
	movl	84(%r9), %r10d
	xorl	%edx, %edx
	.loc	0 150 23                        # liblzma/lz/lz_encoder_mf.c:150:23
	cmpl	%r10d, %ecx
.Ltmp1013:
	.loc	0 150 6                         # liblzma/lz/lz_encoder_mf.c:150:6
	cmovnel	%ecx, %edx
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movl	%edx, 80(%r9)
.Ltmp1014:
	.loc	0 156 6 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:156:6
	movl	20(%r9), %ecx
.Ltmp1015:
	.loc	0 153 2                         # liblzma/lz/lz_encoder_mf.c:153:2
	movl	24(%r9), %edx
	leal	1(%rdx), %esi
	movl	%esi, 24(%r9)
.Ltmp1016:
	.loc	0 156 6                         # liblzma/lz/lz_encoder_mf.c:156:6
	addl	%ecx, %edx
	incl	%edx
	cmpl	$-1, %edx
	movq	-48(%rsp), %rax                 # 8-byte Reload
.Ltmp1017:
	.loc	0 156 6 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:156:6
	jne	.LBB9_66
.Ltmp1018:
# %bb.31:                               # %if.then5.i
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 116 26 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:116:26
	notl	%r10d
.Ltmp1019:
	#DEBUG_VALUE: normalize:subvalue <- $r10d
	.loc	0 119 49                        # liblzma/lz/lz_encoder_mf.c:119:49
	movl	112(%r9), %edi
.Ltmp1020:
	#DEBUG_VALUE: i <- 0
	.loc	0 122 25                        # liblzma/lz/lz_encoder_mf.c:122:25
	addl	108(%r9), %edi
.Ltmp1021:
	#DEBUG_VALUE: normalize:count <- $edi
	#DEBUG_VALUE: normalize:hash <- undef
	.loc	0 122 2 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:122:2
	je	.LBB9_65
.Ltmp1022:
# %bb.32:                               # %for.body.preheader.i.i
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:subvalue <- $r10d
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $edi
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movq	64(%r9), %rcx
.Ltmp1023:
	#DEBUG_VALUE: normalize:hash <- $rcx
	.loc	0 122 25                        # liblzma/lz/lz_encoder_mf.c:122:25
	movl	%edi, %edx
	xorl	%esi, %esi
.Ltmp1024:
	.loc	0 122 2                         # liblzma/lz/lz_encoder_mf.c:122:2
	cmpl	$16, %edi
	jae	.LBB9_34
.Ltmp1025:
# %bb.33:
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:subvalue <- $r10d
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $edi
	#DEBUG_VALUE: normalize:hash <- $rcx
	.loc	0 0 2                           # liblzma/lz/lz_encoder_mf.c:0:2
	xorl	%edi, %edi
.Ltmp1026:
	#DEBUG_VALUE: normalize:count <- $edx
	.loc	0 122 2                         # liblzma/lz/lz_encoder_mf.c:122:2
	jmp	.LBB9_37
.Ltmp1027:
.LBB9_67:                               # %for.end
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt4_find:cur <- $rax
	#DEBUG_VALUE: lzma_mf_bt4_find:cur_match <- $r9d
	#DEBUG_VALUE: lzma_mf_bt4_find:len_best <- $r12d
	.loc	0 719 25 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:719:25
	leal	-1(%r14), %ecx
	.loc	0 719 34 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:719:34
	movl	%r12d, (%rsi,%rcx,8)
.Ltmp1028:
	.loc	0 730 2 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:730:2
	movl	%r14d, %ecx
.Ltmp1029:
.LBB9_39:                               # %if.end104
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- $rsi
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt4_find:cur <- $rax
	#DEBUG_VALUE: lzma_mf_bt4_find:cur_match <- $r9d
	#DEBUG_VALUE: lzma_mf_bt4_find:len_best <- $r12d
	#DEBUG_VALUE: lzma_mf_bt4_find:len_best <- undef
	movl	92(%rdi), %ebx
	movq	72(%rdi), %r14
	movl	80(%rdi), %r15d
	leaq	(%rsi,%rcx,8), %rcx
	#DEBUG_VALUE: bt_find_func:matches <- $rcx
.Ltmp1030:
	#DEBUG_VALUE: bt_find_func:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:pos <- undef
	#DEBUG_VALUE: bt_find_func:cur <- $rax
	#DEBUG_VALUE: bt_find_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_find_func:depth <- $ebx
	#DEBUG_VALUE: bt_find_func:son <- $r14
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- $r15d
	#DEBUG_VALUE: bt_find_func:cyclic_size <- undef
	#DEBUG_VALUE: bt_find_func:len_best <- undef
	.loc	0 0 2 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:2
	movq	%rcx, -48(%rsp)                 # 8-byte Spill
.Ltmp1031:
	#DEBUG_VALUE: bt_find_func:matches <- [DW_OP_constu 48, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 465 37 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:465:37
	leal	(%r15,%r15), %ecx
	.loc	0 465 23 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:465:23
	leaq	(%r14,%rcx,4), %rdx
	movq	%rdx, -40(%rsp)                 # 8-byte Spill
	.loc	0 465 43                        # liblzma/lz/lz_encoder_mf.c:465:43
	leaq	(%r14,%rcx,4), %rcx
	addq	$4, %rcx
.Ltmp1032:
	#DEBUG_VALUE: bt_find_func:ptr0 <- $rcx
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len0 <- 0
	#DEBUG_VALUE: bt_find_func:len1 <- 0
	.loc	0 0 43                          # liblzma/lz/lz_encoder_mf.c:0:43
	movq	%rcx, -64(%rsp)                 # 8-byte Spill
.Ltmp1033:
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 473 15 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:473:15
	testl	%ebx, %ebx
	movq	%rsi, -16(%rsp)                 # 8-byte Spill
.Ltmp1034:
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	.loc	0 473 20 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:473:20
	je	.LBB9_55
.Ltmp1035:
# %bb.40:                               # %if.end104
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt4_find:cur <- $rax
	#DEBUG_VALUE: lzma_mf_bt4_find:cur_match <- $r9d
	#DEBUG_VALUE: bt_find_func:matches <- [DW_OP_constu 48, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cur <- $rax
	#DEBUG_VALUE: bt_find_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_find_func:depth <- $ebx
	#DEBUG_VALUE: bt_find_func:son <- $r14
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- $r15d
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len0 <- 0
	#DEBUG_VALUE: bt_find_func:len1 <- 0
	.loc	0 730 2 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:730:2
	movl	84(%rdi), %ebp
.Ltmp1036:
	#DEBUG_VALUE: bt_find_func:cyclic_size <- $ebp
	.loc	0 0 2 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:2
	movl	-68(%rsp), %r8d                 # 4-byte Reload
.Ltmp1037:
	subl	%r9d, %r8d
.Ltmp1038:
	.loc	0 473 20 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:473:20
	cmpl	%ebp, %r8d
	jae	.LBB9_55
.Ltmp1039:
# %bb.41:                               # %if.end.i229.preheader
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt4_find:cur <- $rax
	#DEBUG_VALUE: lzma_mf_bt4_find:cur_match <- $r9d
	#DEBUG_VALUE: bt_find_func:matches <- [DW_OP_constu 48, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cur <- $rax
	#DEBUG_VALUE: bt_find_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_find_func:depth <- $ebx
	#DEBUG_VALUE: bt_find_func:son <- $r14
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- $r15d
	#DEBUG_VALUE: bt_find_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len0 <- 0
	#DEBUG_VALUE: bt_find_func:len1 <- 0
	.loc	0 727 6                         # liblzma/lz/lz_encoder_mf.c:727:6
	cmpl	$4, %r12d
	movl	$3, %ecx
	cmovael	%r12d, %ecx
.Ltmp1040:
	#DEBUG_VALUE: lzma_mf_bt4_find:len_best <- $ecx
	#DEBUG_VALUE: bt_find_func:len_best <- $ecx
	.loc	0 0 6 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:6
	movl	%ecx, -52(%rsp)                 # 4-byte Spill
.Ltmp1041:
	#DEBUG_VALUE: bt_find_func:len_best <- [DW_OP_constu 52, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt4_find:len_best <- [DW_OP_constu 52, DW_OP_minus, DW_OP_deref] $rsp
	movq	-24(%rsp), %rcx                 # 8-byte Reload
	movl	%ecx, %edx
	movq	%rdx, -8(%rsp)                  # 8-byte Spill
.Ltmp1042:
	.loc	0 471 2 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:471:2
	leal	-1(%rcx), %r13d
	xorl	%esi, %esi
	xorl	%r12d, %r12d
.Ltmp1043:
	.p2align	4, 0x90
.LBB9_42:                               # %if.end.i229
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB9_44 Depth 2
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt4_find:cur <- $rax
	#DEBUG_VALUE: bt_find_func:matches <- [DW_OP_constu 48, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cur <- $rax
	#DEBUG_VALUE: bt_find_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_find_func:son <- $r14
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- $r15d
	#DEBUG_VALUE: bt_find_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_find_func:len_best <- [DW_OP_constu 52, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_find_func:len1 <- $esi
	#DEBUG_VALUE: bt_find_func:len0 <- $r12d
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len_best <- [DW_OP_constu 52, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:matches <- [DW_OP_constu 48, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 479 45                        # liblzma/lz/lz_encoder_mf.c:479:45
	movl	%r15d, %ecx
	subl	%r8d, %ecx
	.loc	0 480 8                         # liblzma/lz/lz_encoder_mf.c:480:8
	movl	$0, %edx
	cmovbl	%ebp, %edx
	.loc	0 480 5 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:480:5
	leal	(%rcx,%rdx), %edi
	.loc	0 481 5 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:481:5
	addl	%edi, %edi
.Ltmp1044:
	#DEBUG_VALUE: pair <- undef
	.loc	0 483 33                        # liblzma/lz/lz_encoder_mf.c:483:33
	movl	%r8d, %ecx
	movq	%rax, %rdx
	subq	%rcx, %rdx
.Ltmp1045:
	#DEBUG_VALUE: pb <- $rdx
	.loc	0 484 18                        # liblzma/lz/lz_encoder_mf.c:484:18
	cmpl	%esi, %r12d
	movl	%esi, %ecx
	cmovbl	%r12d, %ecx
.Ltmp1046:
	#DEBUG_VALUE: len <- $ecx
	.loc	0 479 30                        # liblzma/lz/lz_encoder_mf.c:479:30
	leaq	(%r14,%rdi,4), %r10
.Ltmp1047:
	#DEBUG_VALUE: pair <- $r10
	.loc	0 486 7                         # liblzma/lz/lz_encoder_mf.c:486:7
	movzbl	(%rdx,%rcx), %edi
	.loc	0 486 15 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:486:15
	cmpb	(%rax,%rcx), %dil
.Ltmp1048:
	.loc	0 486 7                         # liblzma/lz/lz_encoder_mf.c:486:7
	jne	.LBB9_43
.Ltmp1049:
	.p2align	4, 0x90
.LBB9_44:                               # %while.cond24.i257
                                        #   Parent Loop BB9_42 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt4_find:cur <- $rax
	#DEBUG_VALUE: bt_find_func:matches <- [DW_OP_constu 48, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cur <- $rax
	#DEBUG_VALUE: bt_find_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_find_func:son <- $r14
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- $r15d
	#DEBUG_VALUE: bt_find_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_find_func:len_best <- [DW_OP_constu 52, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len0 <- $r12d
	#DEBUG_VALUE: bt_find_func:len1 <- $esi
	#DEBUG_VALUE: pair <- $r10
	#DEBUG_VALUE: pb <- $rdx
	#DEBUG_VALUE: len <- $ecx
	#DEBUG_VALUE: len <- $ecx
	#DEBUG_VALUE: len <- undef
	.loc	0 487 17 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:487:17
	cmpl	%ecx, %r13d
	.loc	0 487 4 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:487:4
	je	.LBB9_48
.Ltmp1050:
# %bb.45:                               # %while.body27.i261
                                        #   in Loop: Header=BB9_44 Depth=2
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt4_find:cur <- $rax
	#DEBUG_VALUE: bt_find_func:matches <- [DW_OP_constu 48, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cur <- $rax
	#DEBUG_VALUE: bt_find_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_find_func:son <- $r14
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- $r15d
	#DEBUG_VALUE: bt_find_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_find_func:len_best <- [DW_OP_constu 52, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len0 <- $r12d
	#DEBUG_VALUE: bt_find_func:len1 <- $esi
	#DEBUG_VALUE: pair <- $r10
	#DEBUG_VALUE: pb <- $rdx
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	incl	%ecx
.Ltmp1051:
	#DEBUG_VALUE: len <- $ecx
	.loc	0 488 9 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:488:9
	movl	%ecx, %edi
	movzbl	(%rdx,%rdi), %r11d
	.loc	0 488 17 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:488:17
	cmpb	(%rax,%rdi), %r11b
.Ltmp1052:
	.loc	0 488 9                         # liblzma/lz/lz_encoder_mf.c:488:9
	je	.LBB9_44
.Ltmp1053:
# %bb.46:                               # %while.end.thread.i
                                        #   in Loop: Header=BB9_42 Depth=1
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt4_find:cur <- $rax
	#DEBUG_VALUE: bt_find_func:matches <- [DW_OP_constu 48, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cur <- $rax
	#DEBUG_VALUE: bt_find_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_find_func:son <- $r14
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- $r15d
	#DEBUG_VALUE: bt_find_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_find_func:len_best <- [DW_OP_constu 52, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len0 <- $r12d
	#DEBUG_VALUE: bt_find_func:len1 <- $esi
	#DEBUG_VALUE: pair <- $r10
	#DEBUG_VALUE: pb <- $rdx
	#DEBUG_VALUE: len <- $edi
	.loc	0 491 17 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:491:17
	cmpl	%ecx, -52(%rsp)                 # 4-byte Folded Reload
	jae	.LBB9_50
.Ltmp1054:
# %bb.47:                               # %if.then40.thread.i
                                        #   in Loop: Header=BB9_42 Depth=1
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt4_find:cur <- $rax
	#DEBUG_VALUE: bt_find_func:matches <- [DW_OP_constu 48, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cur <- $rax
	#DEBUG_VALUE: bt_find_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_find_func:son <- $r14
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- $r15d
	#DEBUG_VALUE: bt_find_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_find_func:len_best <- [DW_OP_constu 52, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len0 <- $r12d
	#DEBUG_VALUE: bt_find_func:len1 <- $esi
	#DEBUG_VALUE: pair <- $r10
	#DEBUG_VALUE: pb <- $rdx
	#DEBUG_VALUE: len <- $edi
	#DEBUG_VALUE: bt_find_func:len_best <- $edi
	.loc	0 0 17 is_stmt 0                # liblzma/lz/lz_encoder_mf.c:0:17
	movq	-48(%rsp), %r11                 # 8-byte Reload
.Ltmp1055:
	.loc	0 493 18 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:493:18
	movl	%ecx, (%r11)
	.loc	0 494 27                        # liblzma/lz/lz_encoder_mf.c:494:27
	decl	%r8d
	.loc	0 494 19 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:494:19
	movl	%r8d, 4(%r11)
	.loc	0 495 5 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:495:5
	addq	$8, %r11
.Ltmp1056:
	#DEBUG_VALUE: bt_find_func:matches <- $r11
	.loc	0 0 5 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:5
	movq	%r11, -48(%rsp)                 # 8-byte Spill
.Ltmp1057:
	#DEBUG_VALUE: bt_find_func:matches <- [DW_OP_constu 48, DW_OP_minus, DW_OP_deref] $rsp
	movl	%ecx, -52(%rsp)                 # 4-byte Spill
.Ltmp1058:
	#DEBUG_VALUE: len <- [DW_OP_constu 52, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len_best <- [DW_OP_constu 52, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:matches <- [DW_OP_constu 48, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 505 7 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:505:7
	movzbl	(%rdx,%rdi), %edx
.Ltmp1059:
	.loc	0 505 15 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:505:15
	cmpb	(%rax,%rdi), %dl
.Ltmp1060:
	.loc	0 505 7                         # liblzma/lz/lz_encoder_mf.c:505:7
	jb	.LBB9_51
	jmp	.LBB9_52
.Ltmp1061:
	.p2align	4, 0x90
.LBB9_43:                               #   in Loop: Header=BB9_42 Depth=1
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt4_find:cur <- $rax
	#DEBUG_VALUE: bt_find_func:matches <- [DW_OP_constu 48, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cur <- $rax
	#DEBUG_VALUE: bt_find_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_find_func:son <- $r14
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- $r15d
	#DEBUG_VALUE: bt_find_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_find_func:len_best <- [DW_OP_constu 52, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len0 <- $r12d
	#DEBUG_VALUE: bt_find_func:len1 <- $esi
	#DEBUG_VALUE: pair <- $r10
	#DEBUG_VALUE: pb <- $rdx
	#DEBUG_VALUE: len <- $ecx
	.loc	0 0 7                           # liblzma/lz/lz_encoder_mf.c:0:7
	movq	%rcx, %rdi
.Ltmp1062:
.LBB9_50:                               # %if.end50.i
                                        #   in Loop: Header=BB9_42 Depth=1
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt4_find:cur <- $rax
	#DEBUG_VALUE: bt_find_func:matches <- [DW_OP_constu 48, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cur <- $rax
	#DEBUG_VALUE: bt_find_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_find_func:son <- $r14
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- $r15d
	#DEBUG_VALUE: bt_find_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_find_func:len_best <- [DW_OP_constu 52, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len0 <- $r12d
	#DEBUG_VALUE: bt_find_func:len1 <- $esi
	#DEBUG_VALUE: pair <- $r10
	#DEBUG_VALUE: pb <- $rdx
	#DEBUG_VALUE: len <- $edi
	#DEBUG_VALUE: len <- $ecx
	#DEBUG_VALUE: bt_find_func:len_best <- [DW_OP_constu 52, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:matches <- [DW_OP_constu 48, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 505 7                         # liblzma/lz/lz_encoder_mf.c:505:7
	movzbl	(%rdx,%rdi), %edx
.Ltmp1063:
	.loc	0 505 15                        # liblzma/lz/lz_encoder_mf.c:505:15
	cmpb	(%rax,%rdi), %dl
.Ltmp1064:
	.loc	0 505 7                         # liblzma/lz/lz_encoder_mf.c:505:7
	jae	.LBB9_52
.Ltmp1065:
.LBB9_51:                               # %if.then59.i
                                        #   in Loop: Header=BB9_42 Depth=1
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt4_find:cur <- $rax
	#DEBUG_VALUE: bt_find_func:matches <- [DW_OP_constu 48, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cur <- $rax
	#DEBUG_VALUE: bt_find_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_find_func:son <- $r14
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- $r15d
	#DEBUG_VALUE: bt_find_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_find_func:len_best <- [DW_OP_constu 52, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len0 <- $r12d
	#DEBUG_VALUE: bt_find_func:len1 <- $esi
	#DEBUG_VALUE: pair <- $r10
	#DEBUG_VALUE: len <- $ecx
	.loc	0 0 7                           # liblzma/lz/lz_encoder_mf.c:0:7
	movq	-40(%rsp), %rdx                 # 8-byte Reload
.Ltmp1066:
	.loc	0 506 10 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:506:10
	movl	%r9d, (%rdx)
	.loc	0 507 16                        # liblzma/lz/lz_encoder_mf.c:507:16
	addq	$4, %r10
.Ltmp1067:
	#DEBUG_VALUE: bt_find_func:ptr1 <- $r10
	#DEBUG_VALUE: bt_find_func:cur_match <- undef
	#DEBUG_VALUE: bt_find_func:len1 <- $ecx
	.loc	0 0 16 is_stmt 0                # liblzma/lz/lz_encoder_mf.c:0:16
	movq	%r10, -40(%rsp)                 # 8-byte Spill
.Ltmp1068:
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	movl	%ecx, %esi
.Ltmp1069:
	decl	%ebx
	#DEBUG_VALUE: bt_find_func:cur_match <- undef
.Ltmp1070:
	#DEBUG_VALUE: bt_find_func:depth <- $ebx
	#DEBUG_VALUE: bt_find_func:len1 <- $ecx
	#DEBUG_VALUE: bt_find_func:len0 <- $r12d
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len_best <- [DW_OP_constu 52, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:matches <- [DW_OP_constu 48, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- undef
	#DEBUG_VALUE: bt_find_func:depth <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $ebx
	jne	.LBB9_54
	jmp	.LBB9_55
.Ltmp1071:
	.p2align	4, 0x90
.LBB9_48:                               # %while.end.i
                                        #   in Loop: Header=BB9_42 Depth=1
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt4_find:cur <- $rax
	#DEBUG_VALUE: bt_find_func:matches <- [DW_OP_constu 48, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cur <- $rax
	#DEBUG_VALUE: bt_find_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_find_func:son <- $r14
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- $r15d
	#DEBUG_VALUE: bt_find_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_find_func:len_best <- [DW_OP_constu 52, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len0 <- $r12d
	#DEBUG_VALUE: bt_find_func:len1 <- $esi
	#DEBUG_VALUE: pair <- $r10
	#DEBUG_VALUE: pb <- $rdx
	movq	-24(%rsp), %rcx                 # 8-byte Reload
.Ltmp1072:
	.loc	0 491 17 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:491:17
	cmpl	%ecx, -52(%rsp)                 # 4-byte Folded Reload
.Ltmp1073:
	.loc	0 491 8 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:491:8
	jb	.LBB9_69
.Ltmp1074:
# %bb.49:                               #   in Loop: Header=BB9_42 Depth=1
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt4_find:cur <- $rax
	#DEBUG_VALUE: bt_find_func:matches <- [DW_OP_constu 48, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cur <- $rax
	#DEBUG_VALUE: bt_find_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_find_func:son <- $r14
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- $r15d
	#DEBUG_VALUE: bt_find_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_find_func:len_best <- [DW_OP_constu 52, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len0 <- $r12d
	#DEBUG_VALUE: bt_find_func:len1 <- $esi
	#DEBUG_VALUE: pair <- $r10
	#DEBUG_VALUE: pb <- $rdx
	.loc	0 0 8                           # liblzma/lz/lz_encoder_mf.c:0:8
	movq	-8(%rsp), %rdi                  # 8-byte Reload
                                        # kill: def $ecx killed $ecx killed $rcx def $rcx
.Ltmp1075:
	#DEBUG_VALUE: len <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len_best <- [DW_OP_constu 52, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:matches <- [DW_OP_constu 48, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 505 7 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:505:7
	movzbl	(%rdx,%rdi), %edx
.Ltmp1076:
	.loc	0 505 15 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:505:15
	cmpb	(%rax,%rdi), %dl
.Ltmp1077:
	.loc	0 505 7                         # liblzma/lz/lz_encoder_mf.c:505:7
	jb	.LBB9_51
.Ltmp1078:
.LBB9_52:                               # %if.else.i246
                                        #   in Loop: Header=BB9_42 Depth=1
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt4_find:cur <- $rax
	#DEBUG_VALUE: bt_find_func:matches <- [DW_OP_constu 48, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cur <- $rax
	#DEBUG_VALUE: bt_find_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_find_func:son <- $r14
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- $r15d
	#DEBUG_VALUE: bt_find_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_find_func:len_best <- [DW_OP_constu 52, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len0 <- $r12d
	#DEBUG_VALUE: bt_find_func:len1 <- $esi
	#DEBUG_VALUE: pair <- $r10
	#DEBUG_VALUE: len <- $ecx
	.loc	0 0 7                           # liblzma/lz/lz_encoder_mf.c:0:7
	movq	-64(%rsp), %rdx                 # 8-byte Reload
.Ltmp1079:
	.loc	0 511 10 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:511:10
	movl	%r9d, (%rdx)
.Ltmp1080:
	#DEBUG_VALUE: bt_find_func:ptr0 <- $r10
	#DEBUG_VALUE: bt_find_func:cur_match <- undef
	#DEBUG_VALUE: bt_find_func:len0 <- $ecx
	.loc	0 0 10 is_stmt 0                # liblzma/lz/lz_encoder_mf.c:0:10
	movq	%r10, -64(%rsp)                 # 8-byte Spill
.Ltmp1081:
	#DEBUG_VALUE: pair <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	movl	%ecx, %r12d
.Ltmp1082:
	decl	%ebx
	#DEBUG_VALUE: bt_find_func:cur_match <- undef
.Ltmp1083:
	#DEBUG_VALUE: bt_find_func:depth <- undef
	#DEBUG_VALUE: bt_find_func:len1 <- $esi
	#DEBUG_VALUE: bt_find_func:len0 <- $r12d
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len_best <- [DW_OP_constu 52, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:matches <- [DW_OP_constu 48, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- undef
	#DEBUG_VALUE: bt_find_func:depth <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
	.loc	0 473 20 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:473:20
	je	.LBB9_55
.Ltmp1084:
.LBB9_54:                               # %cleanup64.i
                                        #   in Loop: Header=BB9_42 Depth=1
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt4_find:cur <- $rax
	#DEBUG_VALUE: bt_find_func:matches <- [DW_OP_constu 48, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cur <- $rax
	#DEBUG_VALUE: bt_find_func:son <- $r14
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- $r15d
	#DEBUG_VALUE: bt_find_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_find_func:len_best <- [DW_OP_constu 52, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len0 <- $r12d
	#DEBUG_VALUE: bt_find_func:len1 <- $esi
	#DEBUG_VALUE: len <- $ecx
	.loc	0 0 0 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:0
	movl	(%r10), %r9d
.Ltmp1085:
	#DEBUG_VALUE: bt_find_func:cur_match <- $r9d
	movl	-68(%rsp), %r8d                 # 4-byte Reload
	subl	%r9d, %r8d
.Ltmp1086:
	#DEBUG_VALUE: delta <- $r8d
	.loc	0 473 20                        # liblzma/lz/lz_encoder_mf.c:473:20
	cmpl	%ebp, %r8d
	jb	.LBB9_42
.Ltmp1087:
.LBB9_55:                               # %if.then.i226
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt4_find:cur <- $rax
	#DEBUG_VALUE: bt_find_func:matches <- [DW_OP_constu 48, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cur <- $rax
	#DEBUG_VALUE: bt_find_func:son <- $r14
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- $r15d
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 0 20                          # liblzma/lz/lz_encoder_mf.c:0:20
	movq	-64(%rsp), %rax                 # 8-byte Reload
.Ltmp1088:
	.loc	0 474 10 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:474:10
	movl	$0, (%rax)
	movq	-40(%rsp), %rax                 # 8-byte Reload
	.loc	0 475 10                        # liblzma/lz/lz_encoder_mf.c:475:10
	movl	$0, (%rax)
	movq	-48(%rsp), %rax                 # 8-byte Reload
.Ltmp1089:
.LBB9_56:                               # %bt_find_func.exit
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:matches <- $rax
	#DEBUG_VALUE: bt_find_func:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:son <- $r14
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- $r15d
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cur_match <- undef
	#DEBUG_VALUE: bt_find_func:len1 <- undef
	#DEBUG_VALUE: bt_find_func:len0 <- undef
	#DEBUG_VALUE: bt_find_func:ptr1 <- undef
	#DEBUG_VALUE: bt_find_func:ptr0 <- undef
	#DEBUG_VALUE: bt_find_func:len_best <- undef
	#DEBUG_VALUE: bt_find_func:matches <- undef
	.loc	0 730 2                         # liblzma/lz/lz_encoder_mf.c:730:2
	subq	-16(%rsp), %rax                 # 8-byte Folded Reload
	shrq	$3, %rax
.Ltmp1090:
	#DEBUG_VALUE: lzma_mf_bt4_find:matches_count <- $eax
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 0 2 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:2
	movq	-32(%rsp), %r9                  # 8-byte Reload
.Ltmp1091:
	.loc	0 150 6 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:150:6
	movl	80(%r9), %ecx
	incl	%ecx
	.loc	0 150 30 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:150:30
	movl	84(%r9), %r10d
	xorl	%edx, %edx
	.loc	0 150 23                        # liblzma/lz/lz_encoder_mf.c:150:23
	cmpl	%r10d, %ecx
.Ltmp1092:
	.loc	0 150 6                         # liblzma/lz/lz_encoder_mf.c:150:6
	cmovnel	%ecx, %edx
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movl	%edx, 80(%r9)
.Ltmp1093:
	.loc	0 156 6 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:156:6
	movl	20(%r9), %ecx
.Ltmp1094:
	.loc	0 153 2                         # liblzma/lz/lz_encoder_mf.c:153:2
	movl	24(%r9), %edx
	leal	1(%rdx), %esi
	movl	%esi, 24(%r9)
.Ltmp1095:
	.loc	0 156 6                         # liblzma/lz/lz_encoder_mf.c:156:6
	addl	%ecx, %edx
	incl	%edx
	cmpl	$-1, %edx
.Ltmp1096:
	.loc	0 156 6 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:156:6
	jne	.LBB9_66
.Ltmp1097:
# %bb.57:                               # %if.then5.i276
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt4_find:matches_count <- $eax
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 116 26 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:116:26
	notl	%r10d
.Ltmp1098:
	#DEBUG_VALUE: normalize:subvalue <- $r10d
	.loc	0 119 49                        # liblzma/lz/lz_encoder_mf.c:119:49
	movl	112(%r9), %edi
.Ltmp1099:
	#DEBUG_VALUE: i <- 0
	.loc	0 122 25                        # liblzma/lz/lz_encoder_mf.c:122:25
	addl	108(%r9), %edi
.Ltmp1100:
	#DEBUG_VALUE: normalize:count <- $edi
	#DEBUG_VALUE: normalize:hash <- undef
	.loc	0 122 2 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:122:2
	je	.LBB9_65
.Ltmp1101:
# %bb.58:                               # %for.body.preheader.i.i283
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt4_find:matches_count <- $eax
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:subvalue <- $r10d
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $edi
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movq	64(%r9), %rcx
.Ltmp1102:
	#DEBUG_VALUE: normalize:hash <- $rcx
	.loc	0 122 25                        # liblzma/lz/lz_encoder_mf.c:122:25
	movl	%edi, %edx
	xorl	%esi, %esi
.Ltmp1103:
	.loc	0 122 2                         # liblzma/lz/lz_encoder_mf.c:122:2
	cmpl	$16, %edi
	jae	.LBB9_60
.Ltmp1104:
# %bb.59:
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt4_find:matches_count <- $eax
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:subvalue <- $r10d
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $edi
	#DEBUG_VALUE: normalize:hash <- $rcx
	.loc	0 0 2                           # liblzma/lz/lz_encoder_mf.c:0:2
	xorl	%edi, %edi
.Ltmp1105:
	#DEBUG_VALUE: normalize:count <- $edx
	.loc	0 122 2                         # liblzma/lz/lz_encoder_mf.c:122:2
	jmp	.LBB9_63
.Ltmp1106:
.LBB9_60:                               # %vector.ph363
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt4_find:matches_count <- $eax
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:subvalue <- $r10d
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $edi
	#DEBUG_VALUE: normalize:hash <- $rcx
	movl	%edx, %edi
.Ltmp1107:
	#DEBUG_VALUE: normalize:count <- $edx
	andl	$-16, %edi
	movd	%r10d, %xmm0
	pshufd	$0, %xmm0, %xmm0                # xmm0 = xmm0[0,0,0,0]
	xorl	%r8d, %r8d
	movdqa	.LCPI9_0(%rip), %xmm1           # xmm1 = [2147483648,2147483648,2147483648,2147483648]
	movdqa	%xmm0, %xmm2
	pxor	%xmm1, %xmm2
.Ltmp1108:
	.p2align	4, 0x90
.LBB9_61:                               # %vector.body367
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt4_find:matches_count <- $eax
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:subvalue <- $r10d
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $edx
	#DEBUG_VALUE: normalize:hash <- $rcx
	.loc	0 133 7 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:133:7
	movdqu	(%rcx,%r8,4), %xmm3
	movdqu	16(%rcx,%r8,4), %xmm4
	movdqu	32(%rcx,%r8,4), %xmm5
	movdqu	48(%rcx,%r8,4), %xmm6
.Ltmp1109:
	.loc	0 133 7 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:133:7
	movdqa	%xmm3, %xmm7
	pxor	%xmm1, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm0, %xmm3
	pand	%xmm7, %xmm3
	movdqa	%xmm4, %xmm7
	pxor	%xmm1, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm0, %xmm4
	pand	%xmm7, %xmm4
	movdqa	%xmm5, %xmm7
	pxor	%xmm1, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm0, %xmm5
	pand	%xmm7, %xmm5
	movdqa	%xmm6, %xmm7
	pxor	%xmm1, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm0, %xmm6
	pand	%xmm7, %xmm6
.Ltmp1110:
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movdqu	%xmm3, (%rcx,%r8,4)
	movdqu	%xmm4, 16(%rcx,%r8,4)
	movdqu	%xmm5, 32(%rcx,%r8,4)
	movdqu	%xmm6, 48(%rcx,%r8,4)
.Ltmp1111:
	.loc	0 122 34 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:122:34
	addq	$16, %r8
	cmpq	%r8, %rdi
	jne	.LBB9_61
.Ltmp1112:
# %bb.62:                               # %middle.block360
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt4_find:matches_count <- $eax
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:subvalue <- $r10d
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $edx
	#DEBUG_VALUE: normalize:hash <- $rcx
	.loc	0 122 2 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:122:2
	cmpl	%edx, %edi
	je	.LBB9_64
.Ltmp1113:
	.p2align	4, 0x90
.LBB9_63:                               # %for.body.i.i285
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt4_find:matches_count <- $eax
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:subvalue <- $r10d
	#DEBUG_VALUE: normalize:count <- $edx
	#DEBUG_VALUE: normalize:hash <- $rcx
	#DEBUG_VALUE: i <- $rdi
	.loc	0 133 7 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:133:7
	movl	(%rcx,%rdi,4), %r8d
.Ltmp1114:
	.loc	0 133 7 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:133:7
	subl	%r10d, %r8d
	cmovbl	%esi, %r8d
.Ltmp1115:
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movl	%r8d, (%rcx,%rdi,4)
.Ltmp1116:
	.loc	0 122 34 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:122:34
	incq	%rdi
.Ltmp1117:
	#DEBUG_VALUE: i <- $rdi
	.loc	0 122 25 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:122:25
	cmpq	%rdi, %rdx
.Ltmp1118:
	.loc	0 122 2                         # liblzma/lz/lz_encoder_mf.c:122:2
	jne	.LBB9_63
	jmp	.LBB9_64
.Ltmp1119:
.LBB9_69:                               # %if.then45.i
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- [DW_OP_constu 16, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_mf_bt4_find:cur <- $rax
	#DEBUG_VALUE: bt_find_func:matches <- [DW_OP_constu 48, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:cur <- $rax
	#DEBUG_VALUE: bt_find_func:cur_match <- $r9d
	#DEBUG_VALUE: bt_find_func:son <- $r14
	#DEBUG_VALUE: bt_find_func:cyclic_pos <- $r15d
	#DEBUG_VALUE: bt_find_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_find_func:len_best <- [DW_OP_constu 52, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr0 <- [DW_OP_constu 64, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:ptr1 <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_find_func:len0 <- $r12d
	#DEBUG_VALUE: bt_find_func:len1 <- $esi
	#DEBUG_VALUE: pair <- $r10
	#DEBUG_VALUE: pb <- $rdx
	#DEBUG_VALUE: bt_find_func:len_best <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 0 2                           # liblzma/lz/lz_encoder_mf.c:0:2
	movq	-48(%rsp), %rax                 # 8-byte Reload
.Ltmp1120:
	.loc	0 493 18 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:493:18
	movl	%ecx, (%rax)
	.loc	0 494 27                        # liblzma/lz/lz_encoder_mf.c:494:27
	decl	%r8d
	.loc	0 494 19 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:494:19
	movl	%r8d, 4(%rax)
	.loc	0 495 5 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:495:5
	addq	$8, %rax
.Ltmp1121:
	#DEBUG_VALUE: bt_find_func:matches <- $rax
	.loc	0 498 14                        # liblzma/lz/lz_encoder_mf.c:498:14
	movl	(%r10), %ecx
	movq	-40(%rsp), %rdx                 # 8-byte Reload
.Ltmp1122:
	.loc	0 498 12 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:498:12
	movl	%ecx, (%rdx)
	.loc	0 499 14 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:499:14
	movl	4(%r10), %ecx
	movq	-64(%rsp), %rdx                 # 8-byte Reload
	.loc	0 499 12 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:499:12
	movl	%ecx, (%rdx)
	.loc	0 500 6 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:500:6
	jmp	.LBB9_56
.Ltmp1123:
.LBB9_34:                               # %vector.ph
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:subvalue <- $r10d
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $edi
	#DEBUG_VALUE: normalize:hash <- $rcx
	.loc	0 122 2                         # liblzma/lz/lz_encoder_mf.c:122:2
	movl	%edx, %edi
.Ltmp1124:
	#DEBUG_VALUE: normalize:count <- $edx
	andl	$-16, %edi
	movd	%r10d, %xmm0
	pshufd	$0, %xmm0, %xmm0                # xmm0 = xmm0[0,0,0,0]
	xorl	%r8d, %r8d
	movdqa	.LCPI9_0(%rip), %xmm1           # xmm1 = [2147483648,2147483648,2147483648,2147483648]
	movdqa	%xmm0, %xmm2
	pxor	%xmm1, %xmm2
.Ltmp1125:
	.p2align	4, 0x90
.LBB9_35:                               # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:subvalue <- $r10d
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $edx
	#DEBUG_VALUE: normalize:hash <- $rcx
	.loc	0 133 7                         # liblzma/lz/lz_encoder_mf.c:133:7
	movdqu	(%rcx,%r8,4), %xmm3
	movdqu	16(%rcx,%r8,4), %xmm4
	movdqu	32(%rcx,%r8,4), %xmm5
	movdqu	48(%rcx,%r8,4), %xmm6
.Ltmp1126:
	.loc	0 133 7 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:133:7
	movdqa	%xmm3, %xmm7
	pxor	%xmm1, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm0, %xmm3
	pand	%xmm7, %xmm3
	movdqa	%xmm4, %xmm7
	pxor	%xmm1, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm0, %xmm4
	pand	%xmm7, %xmm4
	movdqa	%xmm5, %xmm7
	pxor	%xmm1, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm0, %xmm5
	pand	%xmm7, %xmm5
	movdqa	%xmm6, %xmm7
	pxor	%xmm1, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm0, %xmm6
	pand	%xmm7, %xmm6
.Ltmp1127:
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movdqu	%xmm3, (%rcx,%r8,4)
	movdqu	%xmm4, 16(%rcx,%r8,4)
	movdqu	%xmm5, 32(%rcx,%r8,4)
	movdqu	%xmm6, 48(%rcx,%r8,4)
.Ltmp1128:
	.loc	0 122 34 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:122:34
	addq	$16, %r8
	cmpq	%r8, %rdi
	jne	.LBB9_35
.Ltmp1129:
# %bb.36:                               # %middle.block
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:subvalue <- $r10d
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $edx
	#DEBUG_VALUE: normalize:hash <- $rcx
	.loc	0 122 2 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:122:2
	cmpl	%edx, %edi
	je	.LBB9_64
.Ltmp1130:
	.p2align	4, 0x90
.LBB9_37:                               # %for.body.i.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: move_pos:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:mf <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: normalize:subvalue <- $r10d
	#DEBUG_VALUE: normalize:count <- $edx
	#DEBUG_VALUE: normalize:hash <- $rcx
	#DEBUG_VALUE: i <- $rdi
	.loc	0 133 7 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:133:7
	movl	(%rcx,%rdi,4), %r8d
.Ltmp1131:
	.loc	0 133 7 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:133:7
	subl	%r10d, %r8d
	cmovbl	%esi, %r8d
.Ltmp1132:
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movl	%r8d, (%rcx,%rdi,4)
.Ltmp1133:
	.loc	0 122 34 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:122:34
	incq	%rdi
.Ltmp1134:
	#DEBUG_VALUE: i <- $rdi
	.loc	0 122 25 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:122:25
	cmpq	%rdi, %rdx
.Ltmp1135:
	.loc	0 122 2                         # liblzma/lz/lz_encoder_mf.c:122:2
	jne	.LBB9_37
.Ltmp1136:
.LBB9_64:                               # %normalize.exit.loopexit.i291
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 140 13 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:140:13
	movl	20(%r9), %ecx
.Ltmp1137:
.LBB9_65:                               # %normalize.exit.i293
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_mf_bt4_find:len_limit <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	subl	%r10d, %ecx
	movl	%ecx, 20(%r9)
.Ltmp1138:
.LBB9_66:                               # %cleanup130
	#DEBUG_VALUE: lzma_mf_bt4_find:mf <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: lzma_mf_bt4_find:matches <- [DW_OP_LLVM_entry_value 1] $rsi
                                        # kill: def $eax killed $eax killed $rax
	.loc	0 731 1 epilogue_begin          # liblzma/lz/lz_encoder_mf.c:731:1
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp1139:
.Lfunc_end9:
	.size	lzma_mf_bt4_find, .Lfunc_end9-lzma_mf_bt4_find
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4, 0x0                          # -- Begin function lzma_mf_bt4_skip
.LCPI10_0:
	.long	2147483648                      # 0x80000000
	.long	2147483648                      # 0x80000000
	.long	2147483648                      # 0x80000000
	.long	2147483648                      # 0x80000000
	.text
	.globl	lzma_mf_bt4_skip
	.p2align	4, 0x90
	.type	lzma_mf_bt4_skip,@function
lzma_mf_bt4_skip:                       # @lzma_mf_bt4_skip
.Lfunc_begin10:
	.loc	0 736 0                         # liblzma/lz/lz_encoder_mf.c:736:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: lzma_mf_bt4_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt4_skip:amount <- $esi
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movdqa	.LCPI10_0(%rip), %xmm0          # xmm0 = [2147483648,2147483648,2147483648,2147483648]
	jmp	.LBB10_1
.Ltmp1140:
	.p2align	4, 0x90
.LBB10_4:                               # %if.then4
                                        #   in Loop: Header=BB10_1 Depth=1
	#DEBUG_VALUE: lzma_mf_bt4_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt4_skip:amount <- $esi
	#DEBUG_VALUE: len_limit <- $ecx
	#DEBUG_VALUE: move_pending:mf <- $rdi
	.loc	0 178 2 prologue_end            # liblzma/lz/lz_encoder_mf.c:178:2
	incl	%eax
	movl	%eax, 24(%rdi)
	.loc	0 180 2                         # liblzma/lz/lz_encoder_mf.c:180:2
	incl	40(%rdi)
.Ltmp1141:
.LBB10_28:                              # %cleanup
                                        #   in Loop: Header=BB10_1 Depth=1
	#DEBUG_VALUE: lzma_mf_bt4_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt4_skip:amount <- $esi
	.loc	0 751 20                        # liblzma/lz/lz_encoder_mf.c:751:20
	decl	%esi
.Ltmp1142:
	#DEBUG_VALUE: lzma_mf_bt4_skip:amount <- $esi
	.loc	0 751 2 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:751:2
	je	.LBB10_29
.Ltmp1143:
.LBB10_1:                               # %do.body
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB10_8 Depth 2
                                        #       Child Loop BB10_10 Depth 3
                                        #     Child Loop BB10_23 Depth 2
                                        #     Child Loop BB10_25 Depth 2
	#DEBUG_VALUE: lzma_mf_bt4_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt4_skip:amount <- $esi
	#DEBUG_VALUE: lzma_mf_bt4_skip:amount <- $esi
	.loc	0 738 3 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:738:3
	movl	24(%rdi), %eax
	movl	36(%rdi), %ecx
.Ltmp1144:
	#DEBUG_VALUE: mf_avail:mf <- undef
	.loc	4 232 23                        # liblzma/lz/lz_encoder.h:232:23
	subl	%eax, %ecx
.Ltmp1145:
	#DEBUG_VALUE: len_limit <- $ecx
	.loc	0 738 3                         # liblzma/lz/lz_encoder_mf.c:738:3
	movl	96(%rdi), %edx
	cmpl	%ecx, %edx
.Ltmp1146:
	.loc	0 738 3 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:738:3
	jbe	.LBB10_5
.Ltmp1147:
# %bb.2:                                # %if.else
                                        #   in Loop: Header=BB10_1 Depth=1
	#DEBUG_VALUE: lzma_mf_bt4_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt4_skip:amount <- $esi
	#DEBUG_VALUE: len_limit <- $ecx
	.loc	0 738 3                         # liblzma/lz/lz_encoder_mf.c:738:3
	cmpl	$4, %ecx
	jb	.LBB10_4
.Ltmp1148:
# %bb.3:                                # %lor.lhs.false
                                        #   in Loop: Header=BB10_1 Depth=1
	#DEBUG_VALUE: lzma_mf_bt4_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt4_skip:amount <- $esi
	#DEBUG_VALUE: len_limit <- $ecx
	cmpl	$1, 104(%rdi)
	movl	%ecx, %edx
.Ltmp1149:
	.loc	0 738 3                         # liblzma/lz/lz_encoder_mf.c:738:3
	je	.LBB10_4
.Ltmp1150:
	.p2align	4, 0x90
.LBB10_5:                               # %if.end5
                                        #   in Loop: Header=BB10_1 Depth=1
	#DEBUG_VALUE: lzma_mf_bt4_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt4_skip:amount <- $esi
	#DEBUG_VALUE: len_limit <- $ecx
	#DEBUG_VALUE: len_limit <- $edx
	.loc	0 0 3                           # liblzma/lz/lz_encoder_mf.c:0:3
	movl	%esi, -12(%rsp)                 # 4-byte Spill
.Ltmp1151:
	#DEBUG_VALUE: lzma_mf_bt4_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 738 3                         # liblzma/lz/lz_encoder_mf.c:738:3
	movq	(%rdi), %r11
	.loc	0 743 11 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:743:11
	movq	64(%rdi), %rcx
.Ltmp1152:
	#DEBUG_VALUE: mf_ptr:mf <- undef
	#DEBUG_VALUE: cur <- undef
	.loc	0 0 11 is_stmt 0                # liblzma/lz/lz_encoder_mf.c:0:11
	movl	20(%rdi), %r9d
	.loc	0 738 3 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:738:3
	addl	%eax, %r9d
.Ltmp1153:
	#DEBUG_VALUE: pos <- undef
	.loc	0 740 3                         # liblzma/lz/lz_encoder_mf.c:740:3
	movzbl	(%r11,%rax), %esi
	movzbl	1(%r11,%rax), %r8d
	movq	lzma_crc32_table@GOTPCREL(%rip), %r14
	xorl	(%r14,%rsi,4), %r8d
	movzbl	2(%r11,%rax), %esi
	shll	$8, %esi
	xorl	%r8d, %esi
.Ltmp1154:
	#DEBUG_VALUE: temp <- $r8d
	andl	$1023, %r8d                     # imm = 0x3FF
.Ltmp1155:
	#DEBUG_VALUE: hash_2_value <- $r8d
	movzwl	%si, %r10d
.Ltmp1156:
	#DEBUG_VALUE: hash_3_value <- $r10d
	movzbl	3(%r11,%rax), %ebx
	movl	(%r14,%rbx,4), %ebx
	shll	$5, %ebx
	xorl	%esi, %ebx
	andl	88(%rdi), %ebx
.Ltmp1157:
	#DEBUG_VALUE: hash_value <- $ebx
	.loc	0 743 32                        # liblzma/lz/lz_encoder_mf.c:743:32
	addl	$66560, %ebx                    # imm = 0x10400
.Ltmp1158:
	.loc	0 743 7 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:743:7
	movl	(%rcx,%rbx,4), %r12d
.Ltmp1159:
	#DEBUG_VALUE: cur_match <- $r12d
	.loc	0 745 26 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:745:26
	movl	%r9d, (%rcx,%r8,4)
	.loc	0 746 7                         # liblzma/lz/lz_encoder_mf.c:746:7
	movq	64(%rdi), %rcx
	.loc	0 746 44 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:746:44
	movl	%r9d, 4096(%rcx,%r10,4)
	.loc	0 747 7 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:747:7
	movq	64(%rdi), %rcx
	.loc	0 747 42 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:747:42
	movl	%r9d, (%rcx,%rbx,4)
.Ltmp1160:
	.loc	0 749 3 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:749:3
	movl	92(%rdi), %ebx
	movq	72(%rdi), %rsi
	movl	80(%rdi), %ecx
.Ltmp1161:
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- undef
	#DEBUG_VALUE: bt_skip_func:len_limit <- $edx
	#DEBUG_VALUE: bt_skip_func:pos <- undef
	#DEBUG_VALUE: bt_skip_func:cur <- undef
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r12d
	#DEBUG_VALUE: bt_skip_func:depth <- $ebx
	#DEBUG_VALUE: bt_skip_func:son <- $rsi
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- $ecx
	.loc	0 0 3 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:3
	movq	%rcx, -8(%rsp)                  # 8-byte Spill
.Ltmp1162:
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 531 37 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:531:37
	addl	%ecx, %ecx
	.loc	0 531 23 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:531:23
	leaq	(%rsi,%rcx,4), %r8
.Ltmp1163:
	.loc	0 0 23                          # liblzma/lz/lz_encoder_mf.c:0:23
	movq	%r8, -24(%rsp)                  # 8-byte Spill
	.loc	0 531 43                        # liblzma/lz/lz_encoder_mf.c:531:43
	leaq	(%rsi,%rcx,4), %rcx
	addq	$4, %rcx
.Ltmp1164:
	#DEBUG_VALUE: bt_skip_func:ptr0 <- $rcx
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:len0 <- 0
	#DEBUG_VALUE: bt_skip_func:len1 <- 0
	.loc	0 0 43                          # liblzma/lz/lz_encoder_mf.c:0:43
	movq	%rcx, -32(%rsp)                 # 8-byte Spill
.Ltmp1165:
	#DEBUG_VALUE: bt_skip_func:ptr0 <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 539 15 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:539:15
	testl	%ebx, %ebx
	.loc	0 539 20 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:539:20
	je	.LBB10_17
.Ltmp1166:
# %bb.6:                                # %if.end5
                                        #   in Loop: Header=BB10_1 Depth=1
	#DEBUG_VALUE: lzma_mf_bt4_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt4_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_limit <- $edx
	#DEBUG_VALUE: hash_3_value <- $r10d
	#DEBUG_VALUE: cur_match <- $r12d
	#DEBUG_VALUE: bt_skip_func:len_limit <- $edx
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r12d
	#DEBUG_VALUE: bt_skip_func:depth <- $ebx
	#DEBUG_VALUE: bt_skip_func:son <- $rsi
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr0 <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:len0 <- 0
	#DEBUG_VALUE: bt_skip_func:len1 <- 0
	.loc	0 749 3 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:749:3
	movl	84(%rdi), %ebp
.Ltmp1167:
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- $ebp
	.loc	0 0 0 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:0
	movl	%r9d, %r10d
.Ltmp1168:
	subl	%r12d, %r10d
.Ltmp1169:
	.loc	0 539 20 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:539:20
	cmpl	%ebp, %r10d
	jae	.LBB10_17
.Ltmp1170:
# %bb.7:                                # %if.end.i.preheader
                                        #   in Loop: Header=BB10_1 Depth=1
	#DEBUG_VALUE: lzma_mf_bt4_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt4_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_limit <- $edx
	#DEBUG_VALUE: cur_match <- $r12d
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_skip_func:len_limit <- $edx
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r12d
	#DEBUG_VALUE: bt_skip_func:depth <- $ebx
	#DEBUG_VALUE: bt_skip_func:son <- $rsi
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr0 <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:len0 <- 0
	#DEBUG_VALUE: bt_skip_func:len1 <- 0
	.loc	0 0 0 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:0
	addq	%rax, %r11
.Ltmp1171:
	#DEBUG_VALUE: bt_skip_func:cur <- $r11
	#DEBUG_VALUE: cur <- $r11
	.loc	0 537 2 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:537:2
	decl	%edx
.Ltmp1172:
	.loc	0 0 2 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:2
	xorl	%r13d, %r13d
	xorl	%eax, %eax
.Ltmp1173:
.LBB10_8:                               # %if.end.i
                                        #   Parent Loop BB10_1 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB10_10 Depth 3
	#DEBUG_VALUE: lzma_mf_bt4_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt4_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: cur <- $r11
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_skip_func:cur <- $r11
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r12d
	#DEBUG_VALUE: bt_skip_func:son <- $rsi
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr0 <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r12d
	#DEBUG_VALUE: bt_skip_func:ptr0 <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:len1 <- $r13d
	#DEBUG_VALUE: bt_skip_func:len0 <- $eax
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	movq	-8(%rsp), %rcx                  # 8-byte Reload
                                        # kill: def $ecx killed $ecx killed $rcx def $rcx
.Ltmp1174:
	.loc	0 545 39 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:545:39
	subl	%r10d, %ecx
	.loc	0 546 8                         # liblzma/lz/lz_encoder_mf.c:546:8
	movl	$0, %r8d
	cmovbl	%ebp, %r8d
	.loc	0 546 5 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:546:5
	leal	(%rcx,%r8), %r14d
	.loc	0 547 5 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:547:5
	addl	%r14d, %r14d
.Ltmp1175:
	#DEBUG_VALUE: pair <- undef
	.loc	0 548 27                        # liblzma/lz/lz_encoder_mf.c:548:27
	movl	%r10d, %ecx
	movq	%r11, %r8
	subq	%rcx, %r8
.Ltmp1176:
	#DEBUG_VALUE: pb <- $r8
	.loc	0 549 18                        # liblzma/lz/lz_encoder_mf.c:549:18
	cmpl	%r13d, %eax
	movl	%r13d, %ecx
	cmovbl	%eax, %ecx
.Ltmp1177:
	#DEBUG_VALUE: len <- $ecx
	.loc	0 545 24                        # liblzma/lz/lz_encoder_mf.c:545:24
	leaq	(%rsi,%r14,4), %r10
.Ltmp1178:
	#DEBUG_VALUE: pair <- $r10
	.loc	0 551 7                         # liblzma/lz/lz_encoder_mf.c:551:7
	movzbl	(%r8,%rcx), %r15d
	.loc	0 551 18 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:551:18
	movzbl	(%r11,%rcx), %r14d
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	cmpb	%r14b, %r15b
.Ltmp1179:
	jne	.LBB10_12
.Ltmp1180:
	.p2align	4, 0x90
.LBB10_10:                              # %while.cond24.i
                                        #   Parent Loop BB10_1 Depth=1
                                        #     Parent Loop BB10_8 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: lzma_mf_bt4_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt4_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: cur <- $r11
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_skip_func:cur <- $r11
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r12d
	#DEBUG_VALUE: bt_skip_func:son <- $rsi
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr0 <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:len0 <- $eax
	#DEBUG_VALUE: bt_skip_func:len1 <- $r13d
	#DEBUG_VALUE: pair <- $r10
	#DEBUG_VALUE: pb <- $r8
	#DEBUG_VALUE: len <- $ecx
	#DEBUG_VALUE: len <- $ecx
	#DEBUG_VALUE: len <- undef
	.loc	0 552 17 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:552:17
	cmpl	%ecx, %edx
	.loc	0 552 4 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:552:4
	je	.LBB10_30
.Ltmp1181:
# %bb.11:                               # %while.body27.i
                                        #   in Loop: Header=BB10_10 Depth=3
	#DEBUG_VALUE: lzma_mf_bt4_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt4_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: cur <- $r11
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_skip_func:cur <- $r11
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r12d
	#DEBUG_VALUE: bt_skip_func:son <- $rsi
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr0 <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:len0 <- $eax
	#DEBUG_VALUE: bt_skip_func:len1 <- $r13d
	#DEBUG_VALUE: pair <- $r10
	#DEBUG_VALUE: pb <- $r8
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	incl	%ecx
.Ltmp1182:
	#DEBUG_VALUE: len <- $ecx
	.loc	0 553 9 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:553:9
	movl	%ecx, %r14d
	movzbl	(%r8,%r14), %r15d
	.loc	0 553 20 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:553:20
	movzbl	(%r11,%r14), %r14d
.Ltmp1183:
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	cmpb	%r14b, %r15b
.Ltmp1184:
	je	.LBB10_10
.Ltmp1185:
.LBB10_12:                              # %if.end44.i
                                        #   in Loop: Header=BB10_8 Depth=2
	#DEBUG_VALUE: lzma_mf_bt4_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt4_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: cur <- $r11
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_skip_func:cur <- $r11
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r12d
	#DEBUG_VALUE: bt_skip_func:son <- $rsi
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr0 <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:len0 <- $eax
	#DEBUG_VALUE: bt_skip_func:len1 <- $r13d
	#DEBUG_VALUE: pair <- $r10
	#DEBUG_VALUE: pb <- $r8
	#DEBUG_VALUE: len <- $ecx
	#DEBUG_VALUE: len <- $ecx
	.loc	0 563 15 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:563:15
	cmpb	%r14b, %r15b
.Ltmp1186:
	.loc	0 563 7 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:563:7
	jae	.LBB10_14
.Ltmp1187:
# %bb.13:                               # %if.then53.i
                                        #   in Loop: Header=BB10_8 Depth=2
	#DEBUG_VALUE: lzma_mf_bt4_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt4_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: cur <- $r11
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_skip_func:cur <- $r11
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r12d
	#DEBUG_VALUE: bt_skip_func:son <- $rsi
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr0 <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:len0 <- $eax
	#DEBUG_VALUE: bt_skip_func:len1 <- $r13d
	#DEBUG_VALUE: pair <- $r10
	#DEBUG_VALUE: pb <- $r8
	#DEBUG_VALUE: len <- $ecx
	.loc	0 0 7                           # liblzma/lz/lz_encoder_mf.c:0:7
	movq	-24(%rsp), %r8                  # 8-byte Reload
.Ltmp1188:
	.loc	0 564 10 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:564:10
	movl	%r12d, (%r8)
	.loc	0 565 16                        # liblzma/lz/lz_encoder_mf.c:565:16
	addq	$4, %r10
.Ltmp1189:
	#DEBUG_VALUE: bt_skip_func:ptr1 <- $r10
	#DEBUG_VALUE: bt_skip_func:cur_match <- undef
	#DEBUG_VALUE: bt_skip_func:len1 <- $ecx
	.loc	0 0 16 is_stmt 0                # liblzma/lz/lz_encoder_mf.c:0:16
	movq	%r10, -24(%rsp)                 # 8-byte Spill
.Ltmp1190:
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	movl	%ecx, %r13d
.Ltmp1191:
	decl	%ebx
	#DEBUG_VALUE: bt_skip_func:cur_match <- undef
.Ltmp1192:
	#DEBUG_VALUE: bt_skip_func:depth <- $ebx
	#DEBUG_VALUE: bt_skip_func:ptr0 <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:len1 <- $r13d
	#DEBUG_VALUE: bt_skip_func:len0 <- $eax
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- undef
	#DEBUG_VALUE: bt_skip_func:depth <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $ebx
	jne	.LBB10_16
	jmp	.LBB10_17
.Ltmp1193:
	.p2align	4, 0x90
.LBB10_14:                              # %if.else.i
                                        #   in Loop: Header=BB10_8 Depth=2
	#DEBUG_VALUE: lzma_mf_bt4_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt4_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: cur <- $r11
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_skip_func:cur <- $r11
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r12d
	#DEBUG_VALUE: bt_skip_func:son <- $rsi
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr0 <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:len0 <- $eax
	#DEBUG_VALUE: bt_skip_func:len1 <- $r13d
	#DEBUG_VALUE: pair <- $r10
	#DEBUG_VALUE: pb <- $r8
	#DEBUG_VALUE: len <- $ecx
	movq	-32(%rsp), %rax                 # 8-byte Reload
.Ltmp1194:
	.loc	0 569 10 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:569:10
	movl	%r12d, (%rax)
.Ltmp1195:
	#DEBUG_VALUE: bt_skip_func:ptr0 <- $r10
	#DEBUG_VALUE: bt_skip_func:cur_match <- undef
	#DEBUG_VALUE: bt_skip_func:len0 <- $ecx
	.loc	0 0 10 is_stmt 0                # liblzma/lz/lz_encoder_mf.c:0:10
	movl	%ecx, %eax
	movq	%r10, -32(%rsp)                 # 8-byte Spill
.Ltmp1196:
	#DEBUG_VALUE: pair <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr0 <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	decl	%ebx
	#DEBUG_VALUE: bt_skip_func:cur_match <- undef
.Ltmp1197:
	#DEBUG_VALUE: bt_skip_func:depth <- undef
	#DEBUG_VALUE: bt_skip_func:ptr0 <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:len1 <- $r13d
	#DEBUG_VALUE: bt_skip_func:len0 <- $eax
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- undef
	#DEBUG_VALUE: bt_skip_func:depth <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
	.loc	0 539 20 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:539:20
	je	.LBB10_17
.Ltmp1198:
.LBB10_16:                              # %cleanup58.i
                                        #   in Loop: Header=BB10_8 Depth=2
	#DEBUG_VALUE: lzma_mf_bt4_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt4_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: cur <- $r11
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_skip_func:cur <- $r11
	#DEBUG_VALUE: bt_skip_func:son <- $rsi
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr0 <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:len0 <- $eax
	#DEBUG_VALUE: bt_skip_func:len1 <- $r13d
	#DEBUG_VALUE: len <- $ecx
	.loc	0 0 0 is_stmt 0                 # liblzma/lz/lz_encoder_mf.c:0:0
	movl	(%r10), %r12d
.Ltmp1199:
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r12d
	movl	%r9d, %r10d
	subl	%r12d, %r10d
.Ltmp1200:
	#DEBUG_VALUE: delta <- $r10d
	.loc	0 539 20                        # liblzma/lz/lz_encoder_mf.c:539:20
	cmpl	%ebp, %r10d
	jb	.LBB10_8
.Ltmp1201:
	.p2align	4, 0x90
.LBB10_17:                              # %if.then.i
                                        #   in Loop: Header=BB10_1 Depth=1
	#DEBUG_VALUE: lzma_mf_bt4_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt4_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:son <- $rsi
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr0 <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 0 20                          # liblzma/lz/lz_encoder_mf.c:0:20
	movq	-32(%rsp), %rax                 # 8-byte Reload
.Ltmp1202:
	.loc	0 540 10 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:540:10
	movl	$0, (%rax)
	movq	-24(%rsp), %rax                 # 8-byte Reload
	.loc	0 541 10                        # liblzma/lz/lz_encoder_mf.c:541:10
	movl	$0, (%rax)
	jmp	.LBB10_18
.Ltmp1203:
	.p2align	4, 0x90
.LBB10_30:                              # %if.then40.i
                                        #   in Loop: Header=BB10_1 Depth=1
	#DEBUG_VALUE: lzma_mf_bt4_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt4_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: cur <- $r11
	#DEBUG_VALUE: bt_skip_func:cyclic_size <- $ebp
	#DEBUG_VALUE: bt_skip_func:cur <- $r11
	#DEBUG_VALUE: bt_skip_func:cur_match <- $r12d
	#DEBUG_VALUE: bt_skip_func:son <- $rsi
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr0 <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:len0 <- $eax
	#DEBUG_VALUE: bt_skip_func:len1 <- $r13d
	#DEBUG_VALUE: pair <- $r10
	#DEBUG_VALUE: pb <- $r8
	.loc	0 557 13                        # liblzma/lz/lz_encoder_mf.c:557:13
	movl	(%r10), %eax
.Ltmp1204:
	.loc	0 0 13 is_stmt 0                # liblzma/lz/lz_encoder_mf.c:0:13
	movq	-24(%rsp), %rcx                 # 8-byte Reload
	.loc	0 557 11                        # liblzma/lz/lz_encoder_mf.c:557:11
	movl	%eax, (%rcx)
	.loc	0 558 13 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:558:13
	movl	4(%r10), %eax
	movq	-32(%rsp), %rcx                 # 8-byte Reload
	.loc	0 558 11 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:558:11
	movl	%eax, (%rcx)
.Ltmp1205:
.LBB10_18:                              # %bt_skip_func.exit
                                        #   in Loop: Header=BB10_1 Depth=1
	#DEBUG_VALUE: lzma_mf_bt4_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt4_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:son <- $rsi
	#DEBUG_VALUE: bt_skip_func:cyclic_pos <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr0 <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:ptr1 <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: bt_skip_func:cur_match <- undef
	#DEBUG_VALUE: bt_skip_func:ptr0 <- undef
	#DEBUG_VALUE: bt_skip_func:len1 <- undef
	#DEBUG_VALUE: bt_skip_func:len0 <- undef
	#DEBUG_VALUE: bt_skip_func:ptr1 <- undef
	#DEBUG_VALUE: move_pos:mf <- $rdi
	.loc	0 150 6 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:150:6
	movl	80(%rdi), %eax
	incl	%eax
	.loc	0 150 30 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:150:30
	movl	84(%rdi), %edx
	.loc	0 150 23                        # liblzma/lz/lz_encoder_mf.c:150:23
	cmpl	%edx, %eax
	movl	$0, %r10d
.Ltmp1206:
	.loc	0 150 6                         # liblzma/lz/lz_encoder_mf.c:150:6
	cmovel	%r10d, %eax
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movl	%eax, 80(%rdi)
.Ltmp1207:
	.loc	0 156 6 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:156:6
	movl	20(%rdi), %eax
.Ltmp1208:
	.loc	0 153 2                         # liblzma/lz/lz_encoder_mf.c:153:2
	movl	24(%rdi), %ecx
	leal	1(%rcx), %esi
	movl	%esi, 24(%rdi)
.Ltmp1209:
	.loc	0 156 6                         # liblzma/lz/lz_encoder_mf.c:156:6
	addl	%eax, %ecx
	incl	%ecx
	cmpl	$-1, %ecx
	movl	-12(%rsp), %esi                 # 4-byte Reload
.Ltmp1210:
	.loc	0 156 6 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:156:6
	jne	.LBB10_28
.Ltmp1211:
# %bb.19:                               # %if.then5.i
                                        #   in Loop: Header=BB10_1 Depth=1
	#DEBUG_VALUE: lzma_mf_bt4_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt4_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	.loc	0 116 26 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:116:26
	notl	%edx
.Ltmp1212:
	#DEBUG_VALUE: normalize:subvalue <- $edx
	.loc	0 119 49                        # liblzma/lz/lz_encoder_mf.c:119:49
	movl	112(%rdi), %ecx
.Ltmp1213:
	#DEBUG_VALUE: i <- 0
	.loc	0 122 25                        # liblzma/lz/lz_encoder_mf.c:122:25
	addl	108(%rdi), %ecx
.Ltmp1214:
	#DEBUG_VALUE: normalize:count <- $ecx
	#DEBUG_VALUE: normalize:hash <- undef
	.loc	0 122 2 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:122:2
	je	.LBB10_27
.Ltmp1215:
# %bb.20:                               # %for.body.preheader.i.i
                                        #   in Loop: Header=BB10_1 Depth=1
	#DEBUG_VALUE: lzma_mf_bt4_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt4_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $edx
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $ecx
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movq	64(%rdi), %rax
.Ltmp1216:
	#DEBUG_VALUE: normalize:hash <- $rax
	.loc	0 122 25                        # liblzma/lz/lz_encoder_mf.c:122:25
	movl	%ecx, %r8d
.Ltmp1217:
	.loc	0 122 2                         # liblzma/lz/lz_encoder_mf.c:122:2
	cmpl	$16, %ecx
	jae	.LBB10_22
.Ltmp1218:
# %bb.21:                               #   in Loop: Header=BB10_1 Depth=1
	#DEBUG_VALUE: lzma_mf_bt4_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt4_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $edx
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $ecx
	#DEBUG_VALUE: normalize:hash <- $rax
	.loc	0 0 2                           # liblzma/lz/lz_encoder_mf.c:0:2
	xorl	%r9d, %r9d
	.loc	0 122 2                         # liblzma/lz/lz_encoder_mf.c:122:2
	jmp	.LBB10_25
.Ltmp1219:
.LBB10_22:                              # %vector.ph
                                        #   in Loop: Header=BB10_1 Depth=1
	#DEBUG_VALUE: lzma_mf_bt4_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt4_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $edx
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $ecx
	#DEBUG_VALUE: normalize:hash <- $rax
	movl	%r8d, %r9d
	andl	$-16, %r9d
	movd	%edx, %xmm1
	pshufd	$0, %xmm1, %xmm1                # xmm1 = xmm1[0,0,0,0]
	movdqa	%xmm1, %xmm2
	pxor	%xmm0, %xmm2
	xorl	%ecx, %ecx
.Ltmp1220:
	#DEBUG_VALUE: normalize:count <- $r8d
	.p2align	4, 0x90
.LBB10_23:                              # %vector.body
                                        #   Parent Loop BB10_1 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: lzma_mf_bt4_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt4_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $edx
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $r8d
	#DEBUG_VALUE: normalize:hash <- $rax
	.loc	0 133 7 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:133:7
	movdqu	(%rax,%rcx,4), %xmm3
	movdqu	16(%rax,%rcx,4), %xmm4
	movdqu	32(%rax,%rcx,4), %xmm5
	movdqu	48(%rax,%rcx,4), %xmm6
.Ltmp1221:
	.loc	0 133 7 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:133:7
	movdqa	%xmm3, %xmm7
	pxor	%xmm0, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm1, %xmm3
	pand	%xmm7, %xmm3
	movdqa	%xmm4, %xmm7
	pxor	%xmm0, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm1, %xmm4
	pand	%xmm7, %xmm4
	movdqa	%xmm5, %xmm7
	pxor	%xmm0, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm1, %xmm5
	pand	%xmm7, %xmm5
	movdqa	%xmm6, %xmm7
	pxor	%xmm0, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm1, %xmm6
	pand	%xmm7, %xmm6
.Ltmp1222:
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movdqu	%xmm3, (%rax,%rcx,4)
	movdqu	%xmm4, 16(%rax,%rcx,4)
	movdqu	%xmm5, 32(%rax,%rcx,4)
	movdqu	%xmm6, 48(%rax,%rcx,4)
.Ltmp1223:
	.loc	0 122 34 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:122:34
	addq	$16, %rcx
	cmpq	%rcx, %r9
	jne	.LBB10_23
.Ltmp1224:
# %bb.24:                               # %middle.block
                                        #   in Loop: Header=BB10_1 Depth=1
	#DEBUG_VALUE: lzma_mf_bt4_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt4_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $edx
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: normalize:count <- $r8d
	#DEBUG_VALUE: normalize:hash <- $rax
	.loc	0 122 2 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:122:2
	cmpl	%r8d, %r9d
	je	.LBB10_26
.Ltmp1225:
	.p2align	4, 0x90
.LBB10_25:                              # %for.body.i.i
                                        #   Parent Loop BB10_1 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: lzma_mf_bt4_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt4_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $edx
	#DEBUG_VALUE: normalize:count <- $r8d
	#DEBUG_VALUE: normalize:hash <- $rax
	#DEBUG_VALUE: i <- $r9
	.loc	0 133 7 is_stmt 1               # liblzma/lz/lz_encoder_mf.c:133:7
	movl	(%rax,%r9,4), %ecx
.Ltmp1226:
	.loc	0 133 7 is_stmt 0               # liblzma/lz/lz_encoder_mf.c:133:7
	subl	%edx, %ecx
	cmovbl	%r10d, %ecx
.Ltmp1227:
	.loc	0 0 0                           # liblzma/lz/lz_encoder_mf.c:0:0
	movl	%ecx, (%rax,%r9,4)
.Ltmp1228:
	.loc	0 122 34 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:122:34
	incq	%r9
.Ltmp1229:
	#DEBUG_VALUE: i <- $r9
	.loc	0 122 25 is_stmt 0              # liblzma/lz/lz_encoder_mf.c:122:25
	cmpq	%r9, %r8
.Ltmp1230:
	.loc	0 122 2                         # liblzma/lz/lz_encoder_mf.c:122:2
	jne	.LBB10_25
.Ltmp1231:
.LBB10_26:                              # %normalize.exit.loopexit.i
                                        #   in Loop: Header=BB10_1 Depth=1
	#DEBUG_VALUE: lzma_mf_bt4_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt4_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $edx
	#DEBUG_VALUE: normalize:count <- $r8d
	#DEBUG_VALUE: normalize:hash <- $rax
	.loc	0 140 13 is_stmt 1              # liblzma/lz/lz_encoder_mf.c:140:13
	movl	20(%rdi), %eax
.Ltmp1232:
.LBB10_27:                              # %normalize.exit.i
                                        #   in Loop: Header=BB10_1 Depth=1
	#DEBUG_VALUE: lzma_mf_bt4_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt4_skip:amount <- [DW_OP_constu 12, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: move_pos:mf <- $rdi
	#DEBUG_VALUE: normalize:mf <- $rdi
	#DEBUG_VALUE: normalize:subvalue <- $edx
	subl	%edx, %eax
	movl	%eax, 20(%rdi)
	jmp	.LBB10_28
.Ltmp1233:
.LBB10_29:                              # %do.end41
	#DEBUG_VALUE: lzma_mf_bt4_skip:mf <- $rdi
	#DEBUG_VALUE: lzma_mf_bt4_skip:amount <- $esi
	.loc	0 752 1 epilogue_begin          # liblzma/lz/lz_encoder_mf.c:752:1
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp1234:
.Lfunc_end10:
	.size	lzma_mf_bt4_skip, .Lfunc_end10-lzma_mf_bt4_skip
	.cfi_endproc
                                        # -- End function
	.section	.debug_loclists,"",@progbits
	.long	.Ldebug_list_header_end0-.Ldebug_list_header_start0 # Length
.Ldebug_list_header_start0:
	.short	5                               # Version
	.byte	8                               # Address size
	.byte	0                               # Segment selector size
	.long	287                             # Offset entry count
.Lloclists_table_base0:
	.long	.Ldebug_loc0-.Lloclists_table_base0
	.long	.Ldebug_loc1-.Lloclists_table_base0
	.long	.Ldebug_loc2-.Lloclists_table_base0
	.long	.Ldebug_loc3-.Lloclists_table_base0
	.long	.Ldebug_loc4-.Lloclists_table_base0
	.long	.Ldebug_loc5-.Lloclists_table_base0
	.long	.Ldebug_loc6-.Lloclists_table_base0
	.long	.Ldebug_loc7-.Lloclists_table_base0
	.long	.Ldebug_loc8-.Lloclists_table_base0
	.long	.Ldebug_loc9-.Lloclists_table_base0
	.long	.Ldebug_loc10-.Lloclists_table_base0
	.long	.Ldebug_loc11-.Lloclists_table_base0
	.long	.Ldebug_loc12-.Lloclists_table_base0
	.long	.Ldebug_loc13-.Lloclists_table_base0
	.long	.Ldebug_loc14-.Lloclists_table_base0
	.long	.Ldebug_loc15-.Lloclists_table_base0
	.long	.Ldebug_loc16-.Lloclists_table_base0
	.long	.Ldebug_loc17-.Lloclists_table_base0
	.long	.Ldebug_loc18-.Lloclists_table_base0
	.long	.Ldebug_loc19-.Lloclists_table_base0
	.long	.Ldebug_loc20-.Lloclists_table_base0
	.long	.Ldebug_loc21-.Lloclists_table_base0
	.long	.Ldebug_loc22-.Lloclists_table_base0
	.long	.Ldebug_loc23-.Lloclists_table_base0
	.long	.Ldebug_loc24-.Lloclists_table_base0
	.long	.Ldebug_loc25-.Lloclists_table_base0
	.long	.Ldebug_loc26-.Lloclists_table_base0
	.long	.Ldebug_loc27-.Lloclists_table_base0
	.long	.Ldebug_loc28-.Lloclists_table_base0
	.long	.Ldebug_loc29-.Lloclists_table_base0
	.long	.Ldebug_loc30-.Lloclists_table_base0
	.long	.Ldebug_loc31-.Lloclists_table_base0
	.long	.Ldebug_loc32-.Lloclists_table_base0
	.long	.Ldebug_loc33-.Lloclists_table_base0
	.long	.Ldebug_loc34-.Lloclists_table_base0
	.long	.Ldebug_loc35-.Lloclists_table_base0
	.long	.Ldebug_loc36-.Lloclists_table_base0
	.long	.Ldebug_loc37-.Lloclists_table_base0
	.long	.Ldebug_loc38-.Lloclists_table_base0
	.long	.Ldebug_loc39-.Lloclists_table_base0
	.long	.Ldebug_loc40-.Lloclists_table_base0
	.long	.Ldebug_loc41-.Lloclists_table_base0
	.long	.Ldebug_loc42-.Lloclists_table_base0
	.long	.Ldebug_loc43-.Lloclists_table_base0
	.long	.Ldebug_loc44-.Lloclists_table_base0
	.long	.Ldebug_loc45-.Lloclists_table_base0
	.long	.Ldebug_loc46-.Lloclists_table_base0
	.long	.Ldebug_loc47-.Lloclists_table_base0
	.long	.Ldebug_loc48-.Lloclists_table_base0
	.long	.Ldebug_loc49-.Lloclists_table_base0
	.long	.Ldebug_loc50-.Lloclists_table_base0
	.long	.Ldebug_loc51-.Lloclists_table_base0
	.long	.Ldebug_loc52-.Lloclists_table_base0
	.long	.Ldebug_loc53-.Lloclists_table_base0
	.long	.Ldebug_loc54-.Lloclists_table_base0
	.long	.Ldebug_loc55-.Lloclists_table_base0
	.long	.Ldebug_loc56-.Lloclists_table_base0
	.long	.Ldebug_loc57-.Lloclists_table_base0
	.long	.Ldebug_loc58-.Lloclists_table_base0
	.long	.Ldebug_loc59-.Lloclists_table_base0
	.long	.Ldebug_loc60-.Lloclists_table_base0
	.long	.Ldebug_loc61-.Lloclists_table_base0
	.long	.Ldebug_loc62-.Lloclists_table_base0
	.long	.Ldebug_loc63-.Lloclists_table_base0
	.long	.Ldebug_loc64-.Lloclists_table_base0
	.long	.Ldebug_loc65-.Lloclists_table_base0
	.long	.Ldebug_loc66-.Lloclists_table_base0
	.long	.Ldebug_loc67-.Lloclists_table_base0
	.long	.Ldebug_loc68-.Lloclists_table_base0
	.long	.Ldebug_loc69-.Lloclists_table_base0
	.long	.Ldebug_loc70-.Lloclists_table_base0
	.long	.Ldebug_loc71-.Lloclists_table_base0
	.long	.Ldebug_loc72-.Lloclists_table_base0
	.long	.Ldebug_loc73-.Lloclists_table_base0
	.long	.Ldebug_loc74-.Lloclists_table_base0
	.long	.Ldebug_loc75-.Lloclists_table_base0
	.long	.Ldebug_loc76-.Lloclists_table_base0
	.long	.Ldebug_loc77-.Lloclists_table_base0
	.long	.Ldebug_loc78-.Lloclists_table_base0
	.long	.Ldebug_loc79-.Lloclists_table_base0
	.long	.Ldebug_loc80-.Lloclists_table_base0
	.long	.Ldebug_loc81-.Lloclists_table_base0
	.long	.Ldebug_loc82-.Lloclists_table_base0
	.long	.Ldebug_loc83-.Lloclists_table_base0
	.long	.Ldebug_loc84-.Lloclists_table_base0
	.long	.Ldebug_loc85-.Lloclists_table_base0
	.long	.Ldebug_loc86-.Lloclists_table_base0
	.long	.Ldebug_loc87-.Lloclists_table_base0
	.long	.Ldebug_loc88-.Lloclists_table_base0
	.long	.Ldebug_loc89-.Lloclists_table_base0
	.long	.Ldebug_loc90-.Lloclists_table_base0
	.long	.Ldebug_loc91-.Lloclists_table_base0
	.long	.Ldebug_loc92-.Lloclists_table_base0
	.long	.Ldebug_loc93-.Lloclists_table_base0
	.long	.Ldebug_loc94-.Lloclists_table_base0
	.long	.Ldebug_loc95-.Lloclists_table_base0
	.long	.Ldebug_loc96-.Lloclists_table_base0
	.long	.Ldebug_loc97-.Lloclists_table_base0
	.long	.Ldebug_loc98-.Lloclists_table_base0
	.long	.Ldebug_loc99-.Lloclists_table_base0
	.long	.Ldebug_loc100-.Lloclists_table_base0
	.long	.Ldebug_loc101-.Lloclists_table_base0
	.long	.Ldebug_loc102-.Lloclists_table_base0
	.long	.Ldebug_loc103-.Lloclists_table_base0
	.long	.Ldebug_loc104-.Lloclists_table_base0
	.long	.Ldebug_loc105-.Lloclists_table_base0
	.long	.Ldebug_loc106-.Lloclists_table_base0
	.long	.Ldebug_loc107-.Lloclists_table_base0
	.long	.Ldebug_loc108-.Lloclists_table_base0
	.long	.Ldebug_loc109-.Lloclists_table_base0
	.long	.Ldebug_loc110-.Lloclists_table_base0
	.long	.Ldebug_loc111-.Lloclists_table_base0
	.long	.Ldebug_loc112-.Lloclists_table_base0
	.long	.Ldebug_loc113-.Lloclists_table_base0
	.long	.Ldebug_loc114-.Lloclists_table_base0
	.long	.Ldebug_loc115-.Lloclists_table_base0
	.long	.Ldebug_loc116-.Lloclists_table_base0
	.long	.Ldebug_loc117-.Lloclists_table_base0
	.long	.Ldebug_loc118-.Lloclists_table_base0
	.long	.Ldebug_loc119-.Lloclists_table_base0
	.long	.Ldebug_loc120-.Lloclists_table_base0
	.long	.Ldebug_loc121-.Lloclists_table_base0
	.long	.Ldebug_loc122-.Lloclists_table_base0
	.long	.Ldebug_loc123-.Lloclists_table_base0
	.long	.Ldebug_loc124-.Lloclists_table_base0
	.long	.Ldebug_loc125-.Lloclists_table_base0
	.long	.Ldebug_loc126-.Lloclists_table_base0
	.long	.Ldebug_loc127-.Lloclists_table_base0
	.long	.Ldebug_loc128-.Lloclists_table_base0
	.long	.Ldebug_loc129-.Lloclists_table_base0
	.long	.Ldebug_loc130-.Lloclists_table_base0
	.long	.Ldebug_loc131-.Lloclists_table_base0
	.long	.Ldebug_loc132-.Lloclists_table_base0
	.long	.Ldebug_loc133-.Lloclists_table_base0
	.long	.Ldebug_loc134-.Lloclists_table_base0
	.long	.Ldebug_loc135-.Lloclists_table_base0
	.long	.Ldebug_loc136-.Lloclists_table_base0
	.long	.Ldebug_loc137-.Lloclists_table_base0
	.long	.Ldebug_loc138-.Lloclists_table_base0
	.long	.Ldebug_loc139-.Lloclists_table_base0
	.long	.Ldebug_loc140-.Lloclists_table_base0
	.long	.Ldebug_loc141-.Lloclists_table_base0
	.long	.Ldebug_loc142-.Lloclists_table_base0
	.long	.Ldebug_loc143-.Lloclists_table_base0
	.long	.Ldebug_loc144-.Lloclists_table_base0
	.long	.Ldebug_loc145-.Lloclists_table_base0
	.long	.Ldebug_loc146-.Lloclists_table_base0
	.long	.Ldebug_loc147-.Lloclists_table_base0
	.long	.Ldebug_loc148-.Lloclists_table_base0
	.long	.Ldebug_loc149-.Lloclists_table_base0
	.long	.Ldebug_loc150-.Lloclists_table_base0
	.long	.Ldebug_loc151-.Lloclists_table_base0
	.long	.Ldebug_loc152-.Lloclists_table_base0
	.long	.Ldebug_loc153-.Lloclists_table_base0
	.long	.Ldebug_loc154-.Lloclists_table_base0
	.long	.Ldebug_loc155-.Lloclists_table_base0
	.long	.Ldebug_loc156-.Lloclists_table_base0
	.long	.Ldebug_loc157-.Lloclists_table_base0
	.long	.Ldebug_loc158-.Lloclists_table_base0
	.long	.Ldebug_loc159-.Lloclists_table_base0
	.long	.Ldebug_loc160-.Lloclists_table_base0
	.long	.Ldebug_loc161-.Lloclists_table_base0
	.long	.Ldebug_loc162-.Lloclists_table_base0
	.long	.Ldebug_loc163-.Lloclists_table_base0
	.long	.Ldebug_loc164-.Lloclists_table_base0
	.long	.Ldebug_loc165-.Lloclists_table_base0
	.long	.Ldebug_loc166-.Lloclists_table_base0
	.long	.Ldebug_loc167-.Lloclists_table_base0
	.long	.Ldebug_loc168-.Lloclists_table_base0
	.long	.Ldebug_loc169-.Lloclists_table_base0
	.long	.Ldebug_loc170-.Lloclists_table_base0
	.long	.Ldebug_loc171-.Lloclists_table_base0
	.long	.Ldebug_loc172-.Lloclists_table_base0
	.long	.Ldebug_loc173-.Lloclists_table_base0
	.long	.Ldebug_loc174-.Lloclists_table_base0
	.long	.Ldebug_loc175-.Lloclists_table_base0
	.long	.Ldebug_loc176-.Lloclists_table_base0
	.long	.Ldebug_loc177-.Lloclists_table_base0
	.long	.Ldebug_loc178-.Lloclists_table_base0
	.long	.Ldebug_loc179-.Lloclists_table_base0
	.long	.Ldebug_loc180-.Lloclists_table_base0
	.long	.Ldebug_loc181-.Lloclists_table_base0
	.long	.Ldebug_loc182-.Lloclists_table_base0
	.long	.Ldebug_loc183-.Lloclists_table_base0
	.long	.Ldebug_loc184-.Lloclists_table_base0
	.long	.Ldebug_loc185-.Lloclists_table_base0
	.long	.Ldebug_loc186-.Lloclists_table_base0
	.long	.Ldebug_loc187-.Lloclists_table_base0
	.long	.Ldebug_loc188-.Lloclists_table_base0
	.long	.Ldebug_loc189-.Lloclists_table_base0
	.long	.Ldebug_loc190-.Lloclists_table_base0
	.long	.Ldebug_loc191-.Lloclists_table_base0
	.long	.Ldebug_loc192-.Lloclists_table_base0
	.long	.Ldebug_loc193-.Lloclists_table_base0
	.long	.Ldebug_loc194-.Lloclists_table_base0
	.long	.Ldebug_loc195-.Lloclists_table_base0
	.long	.Ldebug_loc196-.Lloclists_table_base0
	.long	.Ldebug_loc197-.Lloclists_table_base0
	.long	.Ldebug_loc198-.Lloclists_table_base0
	.long	.Ldebug_loc199-.Lloclists_table_base0
	.long	.Ldebug_loc200-.Lloclists_table_base0
	.long	.Ldebug_loc201-.Lloclists_table_base0
	.long	.Ldebug_loc202-.Lloclists_table_base0
	.long	.Ldebug_loc203-.Lloclists_table_base0
	.long	.Ldebug_loc204-.Lloclists_table_base0
	.long	.Ldebug_loc205-.Lloclists_table_base0
	.long	.Ldebug_loc206-.Lloclists_table_base0
	.long	.Ldebug_loc207-.Lloclists_table_base0
	.long	.Ldebug_loc208-.Lloclists_table_base0
	.long	.Ldebug_loc209-.Lloclists_table_base0
	.long	.Ldebug_loc210-.Lloclists_table_base0
	.long	.Ldebug_loc211-.Lloclists_table_base0
	.long	.Ldebug_loc212-.Lloclists_table_base0
	.long	.Ldebug_loc213-.Lloclists_table_base0
	.long	.Ldebug_loc214-.Lloclists_table_base0
	.long	.Ldebug_loc215-.Lloclists_table_base0
	.long	.Ldebug_loc216-.Lloclists_table_base0
	.long	.Ldebug_loc217-.Lloclists_table_base0
	.long	.Ldebug_loc218-.Lloclists_table_base0
	.long	.Ldebug_loc219-.Lloclists_table_base0
	.long	.Ldebug_loc220-.Lloclists_table_base0
	.long	.Ldebug_loc221-.Lloclists_table_base0
	.long	.Ldebug_loc222-.Lloclists_table_base0
	.long	.Ldebug_loc223-.Lloclists_table_base0
	.long	.Ldebug_loc224-.Lloclists_table_base0
	.long	.Ldebug_loc225-.Lloclists_table_base0
	.long	.Ldebug_loc226-.Lloclists_table_base0
	.long	.Ldebug_loc227-.Lloclists_table_base0
	.long	.Ldebug_loc228-.Lloclists_table_base0
	.long	.Ldebug_loc229-.Lloclists_table_base0
	.long	.Ldebug_loc230-.Lloclists_table_base0
	.long	.Ldebug_loc231-.Lloclists_table_base0
	.long	.Ldebug_loc232-.Lloclists_table_base0
	.long	.Ldebug_loc233-.Lloclists_table_base0
	.long	.Ldebug_loc234-.Lloclists_table_base0
	.long	.Ldebug_loc235-.Lloclists_table_base0
	.long	.Ldebug_loc236-.Lloclists_table_base0
	.long	.Ldebug_loc237-.Lloclists_table_base0
	.long	.Ldebug_loc238-.Lloclists_table_base0
	.long	.Ldebug_loc239-.Lloclists_table_base0
	.long	.Ldebug_loc240-.Lloclists_table_base0
	.long	.Ldebug_loc241-.Lloclists_table_base0
	.long	.Ldebug_loc242-.Lloclists_table_base0
	.long	.Ldebug_loc243-.Lloclists_table_base0
	.long	.Ldebug_loc244-.Lloclists_table_base0
	.long	.Ldebug_loc245-.Lloclists_table_base0
	.long	.Ldebug_loc246-.Lloclists_table_base0
	.long	.Ldebug_loc247-.Lloclists_table_base0
	.long	.Ldebug_loc248-.Lloclists_table_base0
	.long	.Ldebug_loc249-.Lloclists_table_base0
	.long	.Ldebug_loc250-.Lloclists_table_base0
	.long	.Ldebug_loc251-.Lloclists_table_base0
	.long	.Ldebug_loc252-.Lloclists_table_base0
	.long	.Ldebug_loc253-.Lloclists_table_base0
	.long	.Ldebug_loc254-.Lloclists_table_base0
	.long	.Ldebug_loc255-.Lloclists_table_base0
	.long	.Ldebug_loc256-.Lloclists_table_base0
	.long	.Ldebug_loc257-.Lloclists_table_base0
	.long	.Ldebug_loc258-.Lloclists_table_base0
	.long	.Ldebug_loc259-.Lloclists_table_base0
	.long	.Ldebug_loc260-.Lloclists_table_base0
	.long	.Ldebug_loc261-.Lloclists_table_base0
	.long	.Ldebug_loc262-.Lloclists_table_base0
	.long	.Ldebug_loc263-.Lloclists_table_base0
	.long	.Ldebug_loc264-.Lloclists_table_base0
	.long	.Ldebug_loc265-.Lloclists_table_base0
	.long	.Ldebug_loc266-.Lloclists_table_base0
	.long	.Ldebug_loc267-.Lloclists_table_base0
	.long	.Ldebug_loc268-.Lloclists_table_base0
	.long	.Ldebug_loc269-.Lloclists_table_base0
	.long	.Ldebug_loc270-.Lloclists_table_base0
	.long	.Ldebug_loc271-.Lloclists_table_base0
	.long	.Ldebug_loc272-.Lloclists_table_base0
	.long	.Ldebug_loc273-.Lloclists_table_base0
	.long	.Ldebug_loc274-.Lloclists_table_base0
	.long	.Ldebug_loc275-.Lloclists_table_base0
	.long	.Ldebug_loc276-.Lloclists_table_base0
	.long	.Ldebug_loc277-.Lloclists_table_base0
	.long	.Ldebug_loc278-.Lloclists_table_base0
	.long	.Ldebug_loc279-.Lloclists_table_base0
	.long	.Ldebug_loc280-.Lloclists_table_base0
	.long	.Ldebug_loc281-.Lloclists_table_base0
	.long	.Ldebug_loc282-.Lloclists_table_base0
	.long	.Ldebug_loc283-.Lloclists_table_base0
	.long	.Ldebug_loc284-.Lloclists_table_base0
	.long	.Ldebug_loc285-.Lloclists_table_base0
	.long	.Ldebug_loc286-.Lloclists_table_base0
.Ldebug_loc0:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin0-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp2-.Lfunc_begin0           #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2-.Lfunc_begin0           #   starting offset
	.uleb128 .Ltmp18-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp18-.Lfunc_begin0          #   starting offset
	.uleb128 .Lfunc_end0-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc1:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin0-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp1-.Lfunc_begin0           #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1-.Lfunc_begin0           #   starting offset
	.uleb128 .Ltmp19-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp19-.Lfunc_begin0          #   starting offset
	.uleb128 .Lfunc_end0-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc2:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin0-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp2-.Lfunc_begin0           #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2-.Lfunc_begin0           #   starting offset
	.uleb128 .Ltmp20-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp20-.Lfunc_begin0          #   starting offset
	.uleb128 .Lfunc_end0-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc3:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2-.Lfunc_begin0           #   starting offset
	.uleb128 .Ltmp17-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc4:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2-.Lfunc_begin0           #   starting offset
	.uleb128 .Ltmp5-.Lfunc_begin0           #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp5-.Lfunc_begin0           #   starting offset
	.uleb128 .Ltmp12-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp15-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp16-.Lfunc_begin0          #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp16-.Lfunc_begin0          #   starting offset
	.uleb128 .Lfunc_end0-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc5:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp8-.Lfunc_begin0           #   starting offset
	.uleb128 .Ltmp14-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc6:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin1-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp76-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp76-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp147-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	120                             # -8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp147-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp148-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp148-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end1-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc7:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin1-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp61-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp61-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp73-.Lfunc_begin0          #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp73-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp80-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp80-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp147-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	112                             # -16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp147-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp148-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp148-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp152-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp152-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end1-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc8:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp23-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp31-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp31-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp70-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp73-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp85-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp85-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp114-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp148-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp152-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc9:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp33-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp56-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp73-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp117-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp148-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp152-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc10:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp35-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp55-.Lfunc_begin0          #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp55-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp73-.Lfunc_begin0          #   ending offset
	.byte	2                               # Loc expr size
	.byte	49                              # DW_OP_lit1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp73-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp74-.Lfunc_begin0          #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp74-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp78-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp115-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp147-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp148-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp150-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp150-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end1-.Lfunc_begin0      #   ending offset
	.byte	2                               # Loc expr size
	.byte	49                              # DW_OP_lit1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc11:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp36-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp38-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc12:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp38-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp75-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp148-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end1-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc13:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp37-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp40-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc14:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp39-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp54-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp73-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp74-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp148-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp149-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc15:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp41-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp85-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp148-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end1-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc16:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp42-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp48-.Lfunc_begin0          #   ending offset
	.byte	2                               # Loc expr size
	.byte	50                              # DW_OP_lit2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp48-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp50-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp50-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp51-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp51-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp53-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp73-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp74-.Lfunc_begin0          #   ending offset
	.byte	2                               # Loc expr size
	.byte	50                              # DW_OP_lit2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp74-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp85-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp148-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp151-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp151-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp152-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc17:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp57-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp73-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp152-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end1-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc18:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp64-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp73-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp152-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end1-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc19:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp65-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp73-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp152-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end1-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc20:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp66-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp73-.Lfunc_begin0          #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp152-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp159-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp159-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp165-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc21:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp67-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp72-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp72-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp73-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp152-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp153-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp153-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp166-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc22:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp69-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp73-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp152-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp166-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc23:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp78-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp100-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp101-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp114-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc24:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp78-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp85-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp85-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp114-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc25:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp78-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp87-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp88-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp114-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc26:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp78-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp85-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp104-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp105-.Lfunc_begin0         #   ending offset
	.byte	12                              # Loc expr size
	.byte	123                             # DW_OP_breg11
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	49                              # DW_OP_lit1
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc27:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp78-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp89-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp89-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp92-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp92-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp100-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp100-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp105-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp105-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp109-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp109-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp114-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc28:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp86-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp102-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp105-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp114-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc29:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp92-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp94-.Lfunc_begin0          #   ending offset
	.byte	13                              # Loc expr size
	.byte	125                             # DW_OP_breg13
	.byte	1                               # 1
	.byte	168                             # DW_OP_convert
	.asciz	"\253\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\257\200\200"                  # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp94-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp99-.Lfunc_begin0          #   ending offset
	.byte	13                              # Loc expr size
	.byte	125                             # DW_OP_breg13
	.byte	0                               # 0
	.byte	168                             # DW_OP_convert
	.asciz	"\253\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\257\200\200"                  # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc30:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp112-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp114-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc31:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp124-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp147-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc32:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp125-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp139-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp139-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp145-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc33:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp126-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp131-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp131-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp132-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp132-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp133-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp133-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp146-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc34:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp128-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp146-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc35:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp178-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp179-.Lfunc_begin0         #   ending offset
	.byte	13                              # Loc expr size
	.byte	121                             # DW_OP_breg9
	.byte	0                               # 0
	.byte	113                             # DW_OP_breg1
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc36:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp180-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp181-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc37:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp181-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp215-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc38:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp182-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp183-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc39:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp184-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp190-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc40:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp194-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp215-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc41:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp195-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp207-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp207-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp213-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc42:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp196-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp200-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp200-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp214-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc43:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp198-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp214-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc44:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin3-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp293-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp293-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp361-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	112                             # -16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp361-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp377-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp377-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end3-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc45:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin3-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp270-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp270-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp286-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp286-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp292-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp292-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp361-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	120                             # -8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp361-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end3-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc46:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp218-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp226-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp226-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp274-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp286-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp300-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp300-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp328-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc47:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp228-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp267-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp286-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp331-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc48:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp229-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp243-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp243-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp254-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp329-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp361-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc49:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp230-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp231-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc50:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp231-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp238-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc51:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp232-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp239-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc52:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp233-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp236-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc53:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp234-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp249-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp251-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp253-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp253-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp259-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp259-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp260-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc54:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp245-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp253-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc55:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp237-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp279-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp286-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp299-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc56:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp239-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp242-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	49                              # DW_OP_lit1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp242-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp243-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	50                              # DW_OP_lit2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp243-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp248-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp248-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp251-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	51                              # DW_OP_lit3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp251-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp288-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp297-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp300-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp361-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp363-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc57:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp269-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp286-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp361-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp377-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc58:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp277-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp286-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp361-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp377-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc59:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp278-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp286-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp361-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp377-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc60:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp279-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp286-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp361-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp369-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp369-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp375-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc61:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp280-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp285-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp285-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp286-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp361-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp362-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp362-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp376-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc62:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp282-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp286-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp361-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp376-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc63:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp290-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp314-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp315-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp328-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc64:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp290-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp300-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp300-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp328-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc65:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp290-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp299-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp302-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp328-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc66:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp290-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp300-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp318-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp319-.Lfunc_begin0         #   ending offset
	.byte	12                              # Loc expr size
	.byte	123                             # DW_OP_breg11
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	49                              # DW_OP_lit1
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc67:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp297-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp314-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp314-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp316-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp316-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp317-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp317-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp319-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp319-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp323-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp323-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp324-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp324-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp325-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp325-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp328-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc68:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp301-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp316-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp319-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp328-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc69:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp306-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp308-.Lfunc_begin0         #   ending offset
	.byte	13                              # Loc expr size
	.byte	125                             # DW_OP_breg13
	.byte	1                               # 1
	.byte	168                             # DW_OP_convert
	.asciz	"\253\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\257\200\200"                  # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp308-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp313-.Lfunc_begin0         #   ending offset
	.byte	13                              # Loc expr size
	.byte	125                             # DW_OP_breg13
	.byte	0                               # 0
	.byte	168                             # DW_OP_convert
	.asciz	"\253\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\257\200\200"                  # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc70:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp326-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp328-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc71:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp338-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp361-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc72:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp339-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp353-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp353-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp359-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc73:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp340-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp345-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp345-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp346-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp346-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp347-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp347-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp360-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc74:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp342-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp360-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc75:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp388-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp392-.Lfunc_begin0         #   ending offset
	.byte	13                              # Loc expr size
	.byte	121                             # DW_OP_breg9
	.byte	0                               # 0
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc76:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp389-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp390-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc77:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp390-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp413-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc78:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp391-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp426-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc79:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp393-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp394-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc80:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp395-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp401-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc81:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp405-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp426-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc82:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp406-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp418-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp418-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp424-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc83:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp407-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp411-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp411-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp425-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc84:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp409-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp425-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc85:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin5-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp448-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp448-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end5-.Lfunc_begin0      #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	88                              # -40
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc86:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin5-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp449-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp449-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end5-.Lfunc_begin0      #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	80                              # -48
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc87:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp429-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp435-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp436-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp437-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp437-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp455-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp455-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp456-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	104                             # -24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp456-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp499-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	96                              # -32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp499-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp500-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp534-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end5-.Lfunc_begin0      #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	96                              # -32
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc88:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp454-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp499-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp534-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end5-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc89:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp440-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp503-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp503-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp534-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp534-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end5-.Lfunc_begin0      #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc90:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp441-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp456-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp499-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp500-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc91:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp451-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp499-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp534-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end5-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc92:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp443-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp455-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp455-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp456-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	104                             # -24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp456-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp499-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	96                              # -32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp499-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp500-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp534-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end5-.Lfunc_begin0      #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	96                              # -32
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc93:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp454-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp499-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp534-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end5-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc94:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp443-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp478-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp482-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp492-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp497-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp500-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp534-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end5-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc95:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp443-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp456-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp481-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp482-.Lfunc_begin0         #   ending offset
	.byte	12                              # Loc expr size
	.byte	123                             # DW_OP_breg11
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	49                              # DW_OP_lit1
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp499-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp500-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc96:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp443-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp445-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp445-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp502-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	120                             # -8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp534-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end5-.Lfunc_begin0      #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	120                             # -8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc97:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp444-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp502-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	112                             # -16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp534-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end5-.Lfunc_begin0      #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	112                             # -16
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc98:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp443-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp449-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp449-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp456-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	80                              # -48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp456-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp499-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp499-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp500-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	80                              # -48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp500-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp502-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp534-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end5-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc99:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp443-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp456-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	49                              # DW_OP_lit1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp456-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp470-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	188                             # -68
	.byte	127                             # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp470-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp472-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp472-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp499-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	188                             # -68
	.byte	127                             # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp499-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp500-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	49                              # DW_OP_lit1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp534-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end5-.Lfunc_begin0      #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	96                              # -32
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc100:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp446-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp447-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp447-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp492-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	72                              # -56
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp492-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp493-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp493-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp502-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	72                              # -56
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp534-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end5-.Lfunc_begin0      #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	72                              # -56
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc101:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp446-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp478-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	64                              # -64
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp478-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp479-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp479-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp502-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	64                              # -64
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp534-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end5-.Lfunc_begin0      #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	64                              # -64
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc102:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp446-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp456-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp456-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp491-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp492-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp495-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp495-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp499-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp499-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp500-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp534-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp536-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc103:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp446-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp456-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp456-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp478-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp478-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp481-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp481-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp499-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp499-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp500-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp534-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end5-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc104:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp461-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp478-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp482-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp493-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp493-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp496-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	72                              # -56
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp534-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp537-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc105:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp459-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp474-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp482-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp488-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp534-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end5-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc106:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp460-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp464-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp466-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp468-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp468-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp472-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp472-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp473-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp473-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp476-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp476-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp482-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp487-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp499-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc107:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp498-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp499-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc108:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp511-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp533-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc109:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp512-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp525-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp525-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp531-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc110:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp513-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp519-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp519-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp532-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc111:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp515-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp532-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc112:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin6-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp550-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp550-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp628-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	116                             # -12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp628-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end6-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc113:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp539-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp540-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp544-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp549-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp549-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp565-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc114:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp564-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp595-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp597-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp598-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc115:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp554-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp566-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc116:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp561-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp595-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp597-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp598-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc117:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp556-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp565-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc118:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp564-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp595-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp597-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp598-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc119:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp556-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp582-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp586-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp588-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp592-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp595-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp597-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp598-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc120:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp556-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp566-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp585-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp586-.Lfunc_begin0         #   ending offset
	.byte	12                              # Loc expr size
	.byte	123                             # DW_OP_breg11
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	49                              # DW_OP_lit1
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc121:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp558-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp559-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp559-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp588-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	96                              # -32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp588-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp589-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp589-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp598-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	96                              # -32
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc122:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp558-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp582-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	104                             # -24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp582-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp583-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp583-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp598-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	104                             # -24
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc123:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp558-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp566-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp566-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp588-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp588-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp590-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp590-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp595-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp597-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp598-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc124:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp558-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp566-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp566-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp582-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp582-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp585-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp585-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp595-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp597-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp598-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc125:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp571-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp582-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp586-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp589-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp589-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp591-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	96                              # -32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp597-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp598-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc126:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp569-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp581-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp586-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp587-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp597-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp598-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc127:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp570-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp573-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp575-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp593-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc128:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp594-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp595-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc129:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp605-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp628-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc130:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp606-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp620-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp620-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp626-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc131:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp607-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp612-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp612-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp613-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp613-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp614-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp614-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp627-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc132:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp609-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp627-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc133:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin7-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp652-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp652-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp798-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	96                              # -32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp798-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp799-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp799-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end7-.Lfunc_begin0      #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	96                              # -32
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc134:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin7-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp667-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp667-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp698-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp698-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp705-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp705-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp787-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	104                             # -24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp787-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp799-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp799-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp804-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	104                             # -24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp804-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp813-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp813-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp817-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp817-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end7-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc135:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp631-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp635-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp635-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp636-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp636-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp637-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp638-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp651-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp651-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp673-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	72                              # -56
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp698-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp787-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	72                              # -56
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp799-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp804-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	72                              # -56
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp813-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp817-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	72                              # -56
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc136:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp640-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp756-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp789-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp790-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp799-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp800-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp813-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp817-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc137:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp642-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp665-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp665-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp698-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	49                              # DW_OP_lit1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp698-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp699-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp699-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp700-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp758-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp787-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp789-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp798-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	49                              # DW_OP_lit1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp804-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp813-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	49                              # DW_OP_lit1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp813-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp815-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp815-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end7-.Lfunc_begin0      #   ending offset
	.byte	2                               # Loc expr size
	.byte	49                              # DW_OP_lit1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc138:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp643-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp645-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc139:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp645-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp650-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc140:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp644-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp647-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc141:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp646-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp664-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp698-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp699-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp813-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp814-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc142:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp648-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp674-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp698-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp709-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp813-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp817-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc143:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp649-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp658-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	50                              # DW_OP_lit2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp658-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp660-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp660-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp661-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp661-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp663-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp698-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp699-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	50                              # DW_OP_lit2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp699-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp709-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp813-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp816-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp816-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp817-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc144:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp670-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp697-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp789-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp791-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc145:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp666-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp673-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	72                              # -56
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc146:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp666-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp698-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp789-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp790-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc147:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp666-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp688-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp689-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp690-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp695-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp697-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp789-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp791-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc148:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp666-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp674-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp693-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp697-.Lfunc_begin0         #   ending offset
	.byte	12                              # Loc expr size
	.byte	122                             # DW_OP_breg10
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	49                              # DW_OP_lit1
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc149:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp666-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp698-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp789-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp791-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # DW_OP_reg11
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc150:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp666-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp698-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp789-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp791-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc151:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp668-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp690-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp690-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp691-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp691-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp698-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp789-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp791-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc152:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp668-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp688-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp688-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp689-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp689-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp698-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp789-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp791-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc153:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp668-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp674-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp674-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp690-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp690-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp691-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp691-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp697-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp789-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp791-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc154:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp668-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp674-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp674-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp688-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp688-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp689-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp689-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp697-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp789-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp791-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc155:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp678-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp688-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp689-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp691-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp789-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp791-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc156:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp676-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp697-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp789-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp791-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc157:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp677-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp680-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp682-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp692-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc158:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp696-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp697-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc159:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp701-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp732-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	64                              # -64
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp732-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp733-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp733-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp757-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	64                              # -64
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp799-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp801-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	64                              # -64
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp801-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp804-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc160:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp700-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp757-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	72                              # -56
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp799-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp804-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	72                              # -56
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc161:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp700-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp756-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc162:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp700-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp711-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp716-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp751-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp799-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp804-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc163:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp700-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp709-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp754-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp755-.Lfunc_begin0         #   ending offset
	.byte	12                              # Loc expr size
	.byte	118                             # DW_OP_breg6
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	49                              # DW_OP_lit1
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc164:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp700-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp757-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp799-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp804-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc165:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp702-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp757-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	120                             # -8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp799-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp804-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	120                             # -8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc166:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp700-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp757-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp799-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp804-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc167:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp700-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp730-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp730-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp734-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp734-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp757-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp799-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp804-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	72                              # -56
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc168:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp703-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp704-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp704-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp711-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	88                              # -40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp711-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp712-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp712-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp757-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	88                              # -40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp799-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp804-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	88                              # -40
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc169:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp703-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp751-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	80                              # -48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp751-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp752-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp752-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp757-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	80                              # -48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp799-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp804-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	80                              # -48
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc170:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp703-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp709-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp709-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp710-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp711-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp715-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp715-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp755-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp799-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp802-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc171:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp703-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp709-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp709-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp751-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp751-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp755-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp799-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp804-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc172:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp709-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp712-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp712-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp715-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	88                              # -40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp722-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp751-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp799-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp804-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc173:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp709-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp718-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp721-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp724-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp726-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp728-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp728-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp738-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp738-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp739-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp739-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp742-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp746-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp749-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	72                              # -56
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp749-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp755-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc174:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp717-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp718-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc175:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp720-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp736-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp738-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp740-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp742-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp747-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp799-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp803-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc176:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp766-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp787-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc177:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp767-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp781-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp781-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp787-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc178:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp768-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp773-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp773-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp774-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp774-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp775-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp775-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp787-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc179:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp770-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp787-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc180:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp791-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp798-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	96                              # -32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp804-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp813-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	96                              # -32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp817-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end7-.Lfunc_begin0      #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	96                              # -32
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc181:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp804-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp813-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	96                              # -32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp817-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end7-.Lfunc_begin0      #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	96                              # -32
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc182:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp805-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp813-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp817-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end7-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc183:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp806-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp813-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp817-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp824-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp824-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end7-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc184:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp807-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp812-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp812-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp813-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp817-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp818-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp818-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end7-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc185:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp809-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp813-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp817-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end7-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc186:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin8-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp842-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp842-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp922-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	116                             # -12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp922-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end8-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc187:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp831-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp832-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp836-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp841-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp841-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp861-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc188:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp860-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp890-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp892-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp894-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # DW_OP_reg11
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc189:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp845-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp846-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc190:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp846-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp853-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc191:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp847-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp848-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc192:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp849-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp862-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc193:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp857-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp890-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp892-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp894-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc194:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp851-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp861-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc195:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp860-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp890-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp892-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp894-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # DW_OP_reg11
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc196:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp851-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp878-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp882-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp884-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp888-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp890-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp892-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp894-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc197:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp851-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp862-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp881-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp882-.Lfunc_begin0         #   ending offset
	.byte	12                              # Loc expr size
	.byte	115                             # DW_OP_breg3
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	49                              # DW_OP_lit1
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc198:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp854-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp855-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp855-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp884-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	96                              # -32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp884-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp885-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp885-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp894-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	96                              # -32
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc199:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp854-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp878-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	104                             # -24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp878-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp879-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp879-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp894-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	104                             # -24
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc200:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp854-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp862-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp862-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp883-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp884-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp886-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp886-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp890-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp892-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp893-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc201:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp854-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp862-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp862-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp878-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp878-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp881-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp881-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp890-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp892-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp894-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc202:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp867-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp878-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp882-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp885-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp885-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp887-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	96                              # -32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp892-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp894-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc203:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp865-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp877-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp882-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp887-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp892-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp894-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc204:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp866-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp869-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp871-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp890-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc205:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp889-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp890-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc206:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp901-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp922-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc207:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp902-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp914-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp914-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp920-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc208:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp903-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp909-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp909-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp921-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc209:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp905-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp921-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc210:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin9-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp952-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp952-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp1138-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	96                              # -32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1138-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end9-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc211:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin9-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp975-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp975-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp1027-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1027-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1034-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1034-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1123-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	112                             # -16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1123-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end9-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc212:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp925-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp929-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp929-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp930-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp930-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp931-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp932-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp951-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp951-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp1138-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	104                             # -24
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc213:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp934-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp1008-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1009-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1010-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1027-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1088-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1119-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1120-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc214:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp935-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp950-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp950-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp962-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1090-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1119-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc215:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp936-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp937-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc216:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp937-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp944-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc217:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp938-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp947-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc218:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp939-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp942-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc219:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp940-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp959-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp959-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp961-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp961-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp967-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp967-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp968-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc220:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp954-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp961-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc221:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp943-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp983-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1027-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1043-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc222:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp945-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp949-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	49                              # DW_OP_lit1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp949-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp950-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	50                              # DW_OP_lit2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp950-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp957-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp957-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp959-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	51                              # DW_OP_lit3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp959-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp983-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1027-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1029-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1040-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1041-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1041-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1043-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	76                              # -52
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc223:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp979-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp1007-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1009-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1011-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc224:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp976-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp1008-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1009-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1010-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc225:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp976-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp998-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1000-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1001-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1005-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1007-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1009-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1011-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc226:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp976-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp983-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1003-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1007-.Lfunc_begin0        #   ending offset
	.byte	12                              # Loc expr size
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	49                              # DW_OP_lit1
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc227:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp977-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp1001-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1001-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1002-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1002-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1011-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc228:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp977-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp998-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	64                              # -64
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp998-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp999-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp999-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp1011-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	64                              # -64
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc229:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp977-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp983-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp983-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp1001-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1001-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1002-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1002-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1007-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1009-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1011-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc230:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp977-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp983-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp983-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp998-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp998-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp1000-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1000-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1007-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1009-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1011-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc231:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp987-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp998-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1000-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1002-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1009-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1011-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc232:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp985-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp997-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1000-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1002-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1009-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1011-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc233:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp986-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp989-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp991-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp1007-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc234:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1006-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1007-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc235:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1011-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1027-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	96                              # -32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1123-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1136-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	96                              # -32
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc236:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1018-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1027-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	96                              # -32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1123-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1136-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	96                              # -32
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc237:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1019-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1027-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1123-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1136-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc238:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1020-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1027-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1123-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1130-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1130-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1136-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc239:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1021-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1026-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1026-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1027-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1123-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1124-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1124-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1136-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc240:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1023-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1027-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1123-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1136-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc241:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1031-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1056-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	80                              # -48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1056-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1057-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1057-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1089-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	80                              # -48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1119-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1121-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	80                              # -48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1121-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1123-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc242:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1030-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1089-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	104                             # -24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1119-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1123-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	104                             # -24
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc243:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1030-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1088-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc244:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1030-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1067-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1071-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1080-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1085-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1087-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1119-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1123-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc245:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1030-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1043-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1070-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1071-.Lfunc_begin0        #   ending offset
	.byte	12                              # Loc expr size
	.byte	115                             # DW_OP_breg3
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	49                              # DW_OP_lit1
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc246:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1030-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1089-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1119-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1123-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc247:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1030-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1089-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1119-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1123-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc248:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1036-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1087-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1119-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1123-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc249:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1041-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1054-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	76                              # -52
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1054-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1058-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1058-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1087-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	76                              # -52
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1119-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1123-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	104                             # -24
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc250:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1032-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1033-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1033-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1080-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	64                              # -64
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1080-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1081-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1081-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1089-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	64                              # -64
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1119-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1123-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	64                              # -64
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc251:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1032-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1067-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	88                              # -40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1067-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1068-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1068-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1089-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	88                              # -40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1119-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1123-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	88                              # -40
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc252:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1032-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1043-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1043-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1080-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1080-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1083-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1083-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1087-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1119-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1123-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc253:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1032-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1043-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1043-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1067-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1067-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1071-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1071-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1087-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1119-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1123-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc254:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1047-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1067-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1071-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1081-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1081-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1084-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	64                              # -64
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1119-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1123-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc255:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1045-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1059-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1061-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1063-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1071-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1076-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1119-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1122-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc256:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1046-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1049-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1051-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1053-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1053-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1058-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1058-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1061-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	76                              # -52
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1061-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1071-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1075-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1078-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	104                             # -24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1078-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1087-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc257:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1086-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1087-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc258:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1098-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1119-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc259:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1099-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1113-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1113-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1119-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc260:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1100-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1105-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1105-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1106-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1106-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1107-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1107-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1119-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc261:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1102-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1119-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc262:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin10-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1151-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1151-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1233-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	116                             # -12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1233-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end10-.Lfunc_begin0     #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc263:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1140-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1141-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1145-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1150-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1150-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1172-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc264:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1171-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1201-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1203-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1205-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # DW_OP_reg11
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc265:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1154-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1155-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc266:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1155-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1163-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc267:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1156-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1168-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc268:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1157-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1158-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc269:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1159-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1173-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc270:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1167-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1201-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1203-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1205-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc271:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1161-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1172-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc272:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1171-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1201-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1203-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1205-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # DW_OP_reg11
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc273:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1161-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1189-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1193-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1195-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1199-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1201-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1203-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1205-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc274:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1161-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1173-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1192-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1193-.Lfunc_begin0        #   ending offset
	.byte	12                              # Loc expr size
	.byte	115                             # DW_OP_breg3
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	49                              # DW_OP_lit1
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc275:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1164-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1165-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1165-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1195-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	96                              # -32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1195-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1196-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1196-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1205-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	96                              # -32
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc276:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1164-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1189-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	104                             # -24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1189-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1190-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1190-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1205-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	104                             # -24
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc277:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1164-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1173-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1173-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1194-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1195-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1197-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1197-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1201-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1203-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1204-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc278:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1164-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1173-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1173-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1189-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1189-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1192-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1192-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1201-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1203-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1205-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc279:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1178-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1189-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1193-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1196-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1196-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1198-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	96                              # -32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1203-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1205-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc280:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1176-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1188-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1193-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1198-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1203-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1205-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc281:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1177-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1180-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1182-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1201-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc282:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1200-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1201-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc283:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1212-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1233-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc284:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1213-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1225-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1225-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1231-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc285:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1214-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1220-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1220-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1232-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc286:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1216-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1232-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_list_header_end0:
	.section	.debug_abbrev,"",@progbits
	.byte	1                               # Abbreviation Code
	.byte	17                              # DW_TAG_compile_unit
	.byte	1                               # DW_CHILDREN_yes
	.byte	37                              # DW_AT_producer
	.byte	37                              # DW_FORM_strx1
	.byte	19                              # DW_AT_language
	.byte	5                               # DW_FORM_data2
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	114                             # DW_AT_str_offsets_base
	.byte	23                              # DW_FORM_sec_offset
	.byte	16                              # DW_AT_stmt_list
	.byte	23                              # DW_FORM_sec_offset
	.byte	27                              # DW_AT_comp_dir
	.byte	37                              # DW_FORM_strx1
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	115                             # DW_AT_addr_base
	.byte	23                              # DW_FORM_sec_offset
	.byte	116                             # DW_AT_rnglists_base
	.byte	23                              # DW_FORM_sec_offset
	.ascii	"\214\001"                      # DW_AT_loclists_base
	.byte	23                              # DW_FORM_sec_offset
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	2                               # Abbreviation Code
	.byte	36                              # DW_TAG_base_type
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	62                              # DW_AT_encoding
	.byte	11                              # DW_FORM_data1
	.byte	11                              # DW_AT_byte_size
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	3                               # Abbreviation Code
	.byte	4                               # DW_TAG_enumeration_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	11                              # DW_AT_byte_size
	.byte	11                              # DW_FORM_data1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	4                               # Abbreviation Code
	.byte	40                              # DW_TAG_enumerator
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	28                              # DW_AT_const_value
	.byte	15                              # DW_FORM_udata
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	5                               # Abbreviation Code
	.byte	22                              # DW_TAG_typedef
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	6                               # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	64                              # DW_AT_frame_base
	.byte	24                              # DW_FORM_exprloc
	.byte	122                             # DW_AT_call_all_calls
	.byte	25                              # DW_FORM_flag_present
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	63                              # DW_AT_external
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	7                               # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	34                              # DW_FORM_loclistx
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	8                               # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	34                              # DW_FORM_loclistx
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	9                               # Abbreviation Code
	.byte	11                              # DW_TAG_lexical_block
	.byte	1                               # DW_CHILDREN_yes
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	10                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	11                              # Abbreviation Code
	.byte	72                              # DW_TAG_call_site
	.byte	0                               # DW_CHILDREN_no
	.ascii	"\203\001"                      # DW_AT_call_target
	.byte	24                              # DW_FORM_exprloc
	.byte	125                             # DW_AT_call_return_pc
	.byte	27                              # DW_FORM_addrx
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	12                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	32                              # DW_AT_inline
	.byte	33                              # DW_FORM_implicit_const
	.byte	1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	13                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	14                              # Abbreviation Code
	.byte	15                              # DW_TAG_pointer_type
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	15                              # Abbreviation Code
	.byte	38                              # DW_TAG_const_type
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	16                              # Abbreviation Code
	.byte	19                              # DW_TAG_structure_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	11                              # DW_AT_byte_size
	.byte	11                              # DW_FORM_data1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	17                              # Abbreviation Code
	.byte	13                              # DW_TAG_member
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	56                              # DW_AT_data_member_location
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	18                              # Abbreviation Code
	.byte	21                              # DW_TAG_subroutine_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	19                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	20                              # Abbreviation Code
	.byte	19                              # DW_TAG_structure_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	11                              # DW_AT_byte_size
	.byte	11                              # DW_FORM_data1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	21                              # Abbreviation Code
	.byte	21                              # DW_TAG_subroutine_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	22                              # Abbreviation Code
	.byte	22                              # DW_TAG_typedef
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	23                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	32                              # DW_AT_inline
	.byte	33                              # DW_FORM_implicit_const
	.byte	1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	24                              # Abbreviation Code
	.byte	11                              # DW_TAG_lexical_block
	.byte	1                               # DW_CHILDREN_yes
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	25                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	26                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	27                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	64                              # DW_AT_frame_base
	.byte	24                              # DW_FORM_exprloc
	.byte	122                             # DW_AT_call_all_calls
	.byte	25                              # DW_FORM_flag_present
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	63                              # DW_AT_external
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	28                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	34                              # DW_FORM_loclistx
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	29                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	34                              # DW_FORM_loclistx
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	30                              # Abbreviation Code
	.byte	29                              # DW_TAG_inlined_subroutine
	.byte	0                               # DW_CHILDREN_no
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	88                              # DW_AT_call_file
	.byte	11                              # DW_FORM_data1
	.byte	89                              # DW_AT_call_line
	.byte	5                               # DW_FORM_data2
	.byte	87                              # DW_AT_call_column
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	31                              # Abbreviation Code
	.byte	29                              # DW_TAG_inlined_subroutine
	.byte	1                               # DW_CHILDREN_yes
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	88                              # DW_AT_call_file
	.byte	11                              # DW_FORM_data1
	.byte	89                              # DW_AT_call_line
	.byte	5                               # DW_FORM_data2
	.byte	87                              # DW_AT_call_column
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	32                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	24                              # DW_FORM_exprloc
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	33                              # Abbreviation Code
	.byte	29                              # DW_TAG_inlined_subroutine
	.byte	1                               # DW_CHILDREN_yes
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	85                              # DW_AT_ranges
	.byte	35                              # DW_FORM_rnglistx
	.byte	88                              # DW_AT_call_file
	.byte	11                              # DW_FORM_data1
	.byte	89                              # DW_AT_call_line
	.byte	5                               # DW_FORM_data2
	.byte	87                              # DW_AT_call_column
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	34                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	34                              # DW_FORM_loclistx
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	35                              # Abbreviation Code
	.byte	29                              # DW_TAG_inlined_subroutine
	.byte	1                               # DW_CHILDREN_yes
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	85                              # DW_AT_ranges
	.byte	35                              # DW_FORM_rnglistx
	.byte	88                              # DW_AT_call_file
	.byte	11                              # DW_FORM_data1
	.byte	89                              # DW_AT_call_line
	.byte	11                              # DW_FORM_data1
	.byte	87                              # DW_AT_call_column
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	36                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	34                              # DW_FORM_loclistx
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	37                              # Abbreviation Code
	.byte	11                              # DW_TAG_lexical_block
	.byte	1                               # DW_CHILDREN_yes
	.byte	85                              # DW_AT_ranges
	.byte	35                              # DW_FORM_rnglistx
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	38                              # Abbreviation Code
	.byte	29                              # DW_TAG_inlined_subroutine
	.byte	1                               # DW_CHILDREN_yes
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	88                              # DW_AT_call_file
	.byte	11                              # DW_FORM_data1
	.byte	89                              # DW_AT_call_line
	.byte	11                              # DW_FORM_data1
	.byte	87                              # DW_AT_call_column
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	39                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	64                              # DW_AT_frame_base
	.byte	24                              # DW_FORM_exprloc
	.byte	122                             # DW_AT_call_all_calls
	.byte	25                              # DW_FORM_flag_present
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	63                              # DW_AT_external
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	40                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	24                              # DW_FORM_exprloc
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	41                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	32                              # DW_AT_inline
	.byte	33                              # DW_FORM_implicit_const
	.byte	1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	42                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	32                              # DW_AT_inline
	.byte	33                              # DW_FORM_implicit_const
	.byte	1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	43                              # Abbreviation Code
	.byte	29                              # DW_TAG_inlined_subroutine
	.byte	1                               # DW_CHILDREN_yes
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	88                              # DW_AT_call_file
	.byte	11                              # DW_FORM_data1
	.byte	89                              # DW_AT_call_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	44                              # Abbreviation Code
	.byte	29                              # DW_TAG_inlined_subroutine
	.byte	0                               # DW_CHILDREN_no
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	88                              # DW_AT_call_file
	.byte	11                              # DW_FORM_data1
	.byte	89                              # DW_AT_call_line
	.byte	11                              # DW_FORM_data1
	.byte	87                              # DW_AT_call_column
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	0                               # EOM(3)
	.section	.debug_info,"",@progbits
.Lcu_begin0:
	.long	.Ldebug_info_end0-.Ldebug_info_start0 # Length of Unit
.Ldebug_info_start0:
	.short	5                               # DWARF version number
	.byte	1                               # DWARF Unit Type
	.byte	8                               # Address Size (in bytes)
	.long	.debug_abbrev                   # Offset Into Abbrev. Section
	.byte	1                               # Abbrev [1] 0xc:0x1352 DW_TAG_compile_unit
	.byte	0                               # DW_AT_producer
	.short	12                              # DW_AT_language
	.byte	1                               # DW_AT_name
	.long	.Lstr_offsets_base0             # DW_AT_str_offsets_base
	.long	.Lline_table_start0             # DW_AT_stmt_list
	.byte	2                               # DW_AT_comp_dir
	.byte	0                               # DW_AT_low_pc
	.long	.Lfunc_end10-.Lfunc_begin0      # DW_AT_high_pc
	.long	.Laddr_table_base0              # DW_AT_addr_base
	.long	.Lrnglists_table_base0          # DW_AT_rnglists_base
	.long	.Lloclists_table_base0          # DW_AT_loclists_base
	.byte	2                               # Abbrev [2] 0x2b:0x4 DW_TAG_base_type
	.byte	68                              # DW_AT_name
	.byte	7                               # DW_AT_encoding
	.byte	8                               # DW_AT_byte_size
	.byte	2                               # Abbrev [2] 0x2f:0x4 DW_TAG_base_type
	.byte	67                              # DW_AT_name
	.byte	7                               # DW_AT_encoding
	.byte	4                               # DW_AT_byte_size
	.byte	3                               # Abbrev [3] 0x33:0x15 DW_TAG_enumeration_type
	.long	72                              # DW_AT_type
	.byte	4                               # DW_AT_byte_size
	.byte	1                               # DW_AT_decl_file
	.byte	250                             # DW_AT_decl_line
	.byte	4                               # Abbrev [4] 0x3b:0x3 DW_TAG_enumerator
	.byte	4                               # DW_AT_name
	.byte	0                               # DW_AT_const_value
	.byte	4                               # Abbrev [4] 0x3e:0x3 DW_TAG_enumerator
	.byte	5                               # DW_AT_name
	.byte	1                               # DW_AT_const_value
	.byte	4                               # Abbrev [4] 0x41:0x3 DW_TAG_enumerator
	.byte	6                               # DW_AT_name
	.byte	2                               # DW_AT_const_value
	.byte	4                               # Abbrev [4] 0x44:0x3 DW_TAG_enumerator
	.byte	7                               # DW_AT_name
	.byte	3                               # DW_AT_const_value
	.byte	0                               # End Of Children Mark
	.byte	2                               # Abbrev [2] 0x48:0x4 DW_TAG_base_type
	.byte	3                               # DW_AT_name
	.byte	7                               # DW_AT_encoding
	.byte	4                               # DW_AT_byte_size
	.byte	5                               # Abbrev [5] 0x4c:0x8 DW_TAG_typedef
	.long	84                              # DW_AT_type
	.byte	9                               # DW_AT_name
	.byte	3                               # DW_AT_decl_file
	.byte	26                              # DW_AT_decl_line
	.byte	5                               # Abbrev [5] 0x54:0x8 DW_TAG_typedef
	.long	72                              # DW_AT_type
	.byte	8                               # DW_AT_name
	.byte	2                               # DW_AT_decl_file
	.byte	42                              # DW_AT_decl_line
	.byte	6                               # Abbrev [6] 0x5c:0x61 DW_TAG_subprogram
	.byte	0                               # DW_AT_low_pc
	.long	.Lfunc_end0-.Lfunc_begin0       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	69                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	22                              # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	76                              # DW_AT_type
                                        # DW_AT_external
	.byte	7                               # Abbrev [7] 0x6b:0x9 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_location
	.byte	11                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	22                              # DW_AT_decl_line
	.long	483                             # DW_AT_type
	.byte	7                               # Abbrev [7] 0x74:0x9 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	80                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	22                              # DW_AT_decl_line
	.long	541                             # DW_AT_type
	.byte	7                               # Abbrev [7] 0x7d:0x9 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_location
	.byte	56                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	22                              # DW_AT_decl_line
	.long	488                             # DW_AT_type
	.byte	8                               # Abbrev [8] 0x86:0x9 DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	49                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	27                              # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	8                               # Abbrev [8] 0x8f:0x9 DW_TAG_variable
	.byte	4                               # DW_AT_location
	.byte	57                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	31                              # DW_AT_decl_line
	.long	76                              # DW_AT_type
	.byte	9                               # Abbrev [9] 0x98:0x20 DW_TAG_lexical_block
	.byte	1                               # DW_AT_low_pc
	.long	.Ltmp14-.Ltmp7                  # DW_AT_high_pc
	.byte	8                               # Abbrev [8] 0x9e:0x9 DW_TAG_variable
	.byte	5                               # DW_AT_location
	.byte	81                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	56                              # DW_AT_decl_line
	.long	76                              # DW_AT_type
	.byte	10                              # Abbrev [10] 0xa7:0x8 DW_TAG_variable
	.byte	82                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	62                              # DW_AT_decl_line
	.long	585                             # DW_AT_type
	.byte	10                              # Abbrev [10] 0xaf:0x8 DW_TAG_variable
	.byte	83                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	66                              # DW_AT_decl_line
	.long	585                             # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	11                              # Abbrev [11] 0xb8:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	85
	.byte	2                               # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	12                              # Abbrev [12] 0xbd:0x11 DW_TAG_subprogram
	.byte	10                              # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.byte	230                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	76                              # DW_AT_type
                                        # DW_AT_inline
	.byte	13                              # Abbrev [13] 0xc5:0x8 DW_TAG_formal_parameter
	.byte	11                              # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.byte	230                             # DW_AT_decl_line
	.long	206                             # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0xce:0x5 DW_TAG_pointer_type
	.long	211                             # DW_AT_type
	.byte	15                              # Abbrev [15] 0xd3:0x5 DW_TAG_const_type
	.long	216                             # DW_AT_type
	.byte	5                               # Abbrev [5] 0xd8:0x8 DW_TAG_typedef
	.long	224                             # DW_AT_type
	.byte	43                              # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.byte	28                              # DW_AT_decl_line
	.byte	16                              # Abbrev [16] 0xe0:0xd5 DW_TAG_structure_type
	.byte	42                              # DW_AT_name
	.byte	120                             # DW_AT_byte_size
	.byte	4                               # DW_AT_decl_file
	.byte	29                              # DW_AT_decl_line
	.byte	17                              # Abbrev [17] 0xe5:0x9 DW_TAG_member
	.byte	12                              # DW_AT_name
	.long	437                             # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	35                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	17                              # Abbrev [17] 0xee:0x9 DW_TAG_member
	.byte	16                              # DW_AT_name
	.long	76                              # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	39                              # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	17                              # Abbrev [17] 0xf7:0x9 DW_TAG_member
	.byte	17                              # DW_AT_name
	.long	76                              # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	45                              # DW_AT_decl_line
	.byte	12                              # DW_AT_data_member_location
	.byte	17                              # Abbrev [17] 0x100:0x9 DW_TAG_member
	.byte	18                              # DW_AT_name
	.long	76                              # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	51                              # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	17                              # Abbrev [17] 0x109:0x9 DW_TAG_member
	.byte	19                              # DW_AT_name
	.long	76                              # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	58                              # DW_AT_decl_line
	.byte	20                              # DW_AT_data_member_location
	.byte	17                              # Abbrev [17] 0x112:0x9 DW_TAG_member
	.byte	20                              # DW_AT_name
	.long	76                              # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	63                              # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	17                              # Abbrev [17] 0x11b:0x9 DW_TAG_member
	.byte	21                              # DW_AT_name
	.long	76                              # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	67                              # DW_AT_decl_line
	.byte	28                              # DW_AT_data_member_location
	.byte	17                              # Abbrev [17] 0x124:0x9 DW_TAG_member
	.byte	22                              # DW_AT_name
	.long	76                              # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	75                              # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	17                              # Abbrev [17] 0x12d:0x9 DW_TAG_member
	.byte	23                              # DW_AT_name
	.long	76                              # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	80                              # DW_AT_decl_line
	.byte	36                              # DW_AT_data_member_location
	.byte	17                              # Abbrev [17] 0x136:0x9 DW_TAG_member
	.byte	24                              # DW_AT_name
	.long	76                              # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	84                              # DW_AT_decl_line
	.byte	40                              # DW_AT_data_member_location
	.byte	17                              # Abbrev [17] 0x13f:0x9 DW_TAG_member
	.byte	25                              # DW_AT_name
	.long	462                             # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	92                              # DW_AT_decl_line
	.byte	48                              # DW_AT_data_member_location
	.byte	17                              # Abbrev [17] 0x148:0x9 DW_TAG_member
	.byte	29                              # DW_AT_name
	.long	524                             # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	97                              # DW_AT_decl_line
	.byte	56                              # DW_AT_data_member_location
	.byte	17                              # Abbrev [17] 0x151:0x9 DW_TAG_member
	.byte	30                              # DW_AT_name
	.long	541                             # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	99                              # DW_AT_decl_line
	.byte	64                              # DW_AT_data_member_location
	.byte	17                              # Abbrev [17] 0x15a:0x9 DW_TAG_member
	.byte	31                              # DW_AT_name
	.long	541                             # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	100                             # DW_AT_decl_line
	.byte	72                              # DW_AT_data_member_location
	.byte	17                              # Abbrev [17] 0x163:0x9 DW_TAG_member
	.byte	32                              # DW_AT_name
	.long	76                              # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	101                             # DW_AT_decl_line
	.byte	80                              # DW_AT_data_member_location
	.byte	17                              # Abbrev [17] 0x16c:0x9 DW_TAG_member
	.byte	33                              # DW_AT_name
	.long	76                              # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	102                             # DW_AT_decl_line
	.byte	84                              # DW_AT_data_member_location
	.byte	17                              # Abbrev [17] 0x175:0x9 DW_TAG_member
	.byte	34                              # DW_AT_name
	.long	76                              # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	103                             # DW_AT_decl_line
	.byte	88                              # DW_AT_data_member_location
	.byte	17                              # Abbrev [17] 0x17e:0x9 DW_TAG_member
	.byte	35                              # DW_AT_name
	.long	76                              # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	106                             # DW_AT_decl_line
	.byte	92                              # DW_AT_data_member_location
	.byte	17                              # Abbrev [17] 0x187:0x9 DW_TAG_member
	.byte	36                              # DW_AT_name
	.long	76                              # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	109                             # DW_AT_decl_line
	.byte	96                              # DW_AT_data_member_location
	.byte	17                              # Abbrev [17] 0x190:0x9 DW_TAG_member
	.byte	37                              # DW_AT_name
	.long	76                              # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	114                             # DW_AT_decl_line
	.byte	100                             # DW_AT_data_member_location
	.byte	17                              # Abbrev [17] 0x199:0x9 DW_TAG_member
	.byte	38                              # DW_AT_name
	.long	546                             # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	119                             # DW_AT_decl_line
	.byte	104                             # DW_AT_data_member_location
	.byte	17                              # Abbrev [17] 0x1a2:0x9 DW_TAG_member
	.byte	40                              # DW_AT_name
	.long	76                              # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	122                             # DW_AT_decl_line
	.byte	108                             # DW_AT_data_member_location
	.byte	17                              # Abbrev [17] 0x1ab:0x9 DW_TAG_member
	.byte	41                              # DW_AT_name
	.long	76                              # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	125                             # DW_AT_decl_line
	.byte	112                             # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x1b5:0x5 DW_TAG_pointer_type
	.long	442                             # DW_AT_type
	.byte	5                               # Abbrev [5] 0x1ba:0x8 DW_TAG_typedef
	.long	450                             # DW_AT_type
	.byte	15                              # DW_AT_name
	.byte	3                               # DW_AT_decl_file
	.byte	24                              # DW_AT_decl_line
	.byte	5                               # Abbrev [5] 0x1c2:0x8 DW_TAG_typedef
	.long	458                             # DW_AT_type
	.byte	14                              # DW_AT_name
	.byte	2                               # DW_AT_decl_file
	.byte	38                              # DW_AT_decl_line
	.byte	2                               # Abbrev [2] 0x1ca:0x4 DW_TAG_base_type
	.byte	13                              # DW_AT_name
	.byte	8                               # DW_AT_encoding
	.byte	1                               # DW_AT_byte_size
	.byte	14                              # Abbrev [14] 0x1ce:0x5 DW_TAG_pointer_type
	.long	467                             # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1d3:0x10 DW_TAG_subroutine_type
	.long	76                              # DW_AT_type
                                        # DW_AT_prototyped
	.byte	19                              # Abbrev [19] 0x1d8:0x5 DW_TAG_formal_parameter
	.long	483                             # DW_AT_type
	.byte	19                              # Abbrev [19] 0x1dd:0x5 DW_TAG_formal_parameter
	.long	488                             # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x1e3:0x5 DW_TAG_pointer_type
	.long	216                             # DW_AT_type
	.byte	14                              # Abbrev [14] 0x1e8:0x5 DW_TAG_pointer_type
	.long	493                             # DW_AT_type
	.byte	5                               # Abbrev [5] 0x1ed:0x8 DW_TAG_typedef
	.long	501                             # DW_AT_type
	.byte	28                              # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.byte	25                              # DW_AT_decl_line
	.byte	20                              # Abbrev [20] 0x1f5:0x17 DW_TAG_structure_type
	.byte	8                               # DW_AT_byte_size
	.byte	4                               # DW_AT_decl_file
	.byte	22                              # DW_AT_decl_line
	.byte	17                              # Abbrev [17] 0x1f9:0x9 DW_TAG_member
	.byte	26                              # DW_AT_name
	.long	76                              # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	23                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	17                              # Abbrev [17] 0x202:0x9 DW_TAG_member
	.byte	27                              # DW_AT_name
	.long	76                              # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	24                              # DW_AT_decl_line
	.byte	4                               # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x20c:0x5 DW_TAG_pointer_type
	.long	529                             # DW_AT_type
	.byte	21                              # Abbrev [21] 0x211:0xc DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	19                              # Abbrev [19] 0x212:0x5 DW_TAG_formal_parameter
	.long	483                             # DW_AT_type
	.byte	19                              # Abbrev [19] 0x217:0x5 DW_TAG_formal_parameter
	.long	76                              # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x21d:0x5 DW_TAG_pointer_type
	.long	76                              # DW_AT_type
	.byte	22                              # Abbrev [22] 0x222:0x9 DW_TAG_typedef
	.long	51                              # DW_AT_type
	.byte	39                              # DW_AT_name
	.byte	1                               # DW_AT_decl_file
	.short	322                             # DW_AT_decl_line
	.byte	23                              # Abbrev [23] 0x22b:0xd DW_TAG_subprogram
	.byte	44                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	176                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_inline
	.byte	13                              # Abbrev [13] 0x22f:0x8 DW_TAG_formal_parameter
	.byte	11                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	176                             # DW_AT_decl_line
	.long	483                             # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	12                              # Abbrev [12] 0x238:0x11 DW_TAG_subprogram
	.byte	45                              # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.byte	222                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	585                             # DW_AT_type
                                        # DW_AT_inline
	.byte	13                              # Abbrev [13] 0x240:0x8 DW_TAG_formal_parameter
	.byte	11                              # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.byte	222                             # DW_AT_decl_line
	.long	206                             # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x249:0x5 DW_TAG_pointer_type
	.long	590                             # DW_AT_type
	.byte	15                              # Abbrev [15] 0x24e:0x5 DW_TAG_const_type
	.long	442                             # DW_AT_type
	.byte	23                              # Abbrev [23] 0x253:0xd DW_TAG_subprogram
	.byte	46                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	148                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_inline
	.byte	13                              # Abbrev [13] 0x257:0x8 DW_TAG_formal_parameter
	.byte	11                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	148                             # DW_AT_decl_line
	.long	483                             # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	23                              # Abbrev [23] 0x260:0x2f DW_TAG_subprogram
	.byte	47                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	109                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_inline
	.byte	13                              # Abbrev [13] 0x264:0x8 DW_TAG_formal_parameter
	.byte	11                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	109                             # DW_AT_decl_line
	.long	483                             # DW_AT_type
	.byte	10                              # Abbrev [10] 0x26c:0x8 DW_TAG_variable
	.byte	48                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	115                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	10                              # Abbrev [10] 0x274:0x8 DW_TAG_variable
	.byte	49                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	119                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	10                              # Abbrev [10] 0x27c:0x8 DW_TAG_variable
	.byte	30                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	120                             # DW_AT_decl_line
	.long	541                             # DW_AT_type
	.byte	24                              # Abbrev [24] 0x284:0xa DW_TAG_lexical_block
	.byte	10                              # Abbrev [10] 0x285:0x8 DW_TAG_variable
	.byte	50                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	122                             # DW_AT_decl_line
	.long	76                              # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	15                              # Abbrev [15] 0x28f:0x5 DW_TAG_const_type
	.long	76                              # DW_AT_type
	.byte	12                              # Abbrev [12] 0x294:0x7b DW_TAG_subprogram
	.byte	51                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	248                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	488                             # DW_AT_type
                                        # DW_AT_inline
	.byte	13                              # Abbrev [13] 0x29c:0x8 DW_TAG_formal_parameter
	.byte	52                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	249                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	13                              # Abbrev [13] 0x2a4:0x8 DW_TAG_formal_parameter
	.byte	53                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	250                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	13                              # Abbrev [13] 0x2ac:0x8 DW_TAG_formal_parameter
	.byte	54                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	251                             # DW_AT_decl_line
	.long	783                             # DW_AT_type
	.byte	13                              # Abbrev [13] 0x2b4:0x8 DW_TAG_formal_parameter
	.byte	55                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	252                             # DW_AT_decl_line
	.long	76                              # DW_AT_type
	.byte	13                              # Abbrev [13] 0x2bc:0x8 DW_TAG_formal_parameter
	.byte	35                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	253                             # DW_AT_decl_line
	.long	76                              # DW_AT_type
	.byte	13                              # Abbrev [13] 0x2c4:0x8 DW_TAG_formal_parameter
	.byte	31                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	254                             # DW_AT_decl_line
	.long	788                             # DW_AT_type
	.byte	13                              # Abbrev [13] 0x2cc:0x8 DW_TAG_formal_parameter
	.byte	32                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	255                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	25                              # Abbrev [25] 0x2d4:0x9 DW_TAG_formal_parameter
	.byte	33                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	256                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	25                              # Abbrev [25] 0x2dd:0x9 DW_TAG_formal_parameter
	.byte	56                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	257                             # DW_AT_decl_line
	.long	488                             # DW_AT_type
	.byte	25                              # Abbrev [25] 0x2e6:0x9 DW_TAG_formal_parameter
	.byte	57                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	258                             # DW_AT_decl_line
	.long	76                              # DW_AT_type
	.byte	24                              # Abbrev [24] 0x2ef:0x1f DW_TAG_lexical_block
	.byte	26                              # Abbrev [26] 0x2f0:0x9 DW_TAG_variable
	.byte	58                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	267                             # DW_AT_decl_line
	.long	783                             # DW_AT_type
	.byte	26                              # Abbrev [26] 0x2f9:0x9 DW_TAG_variable
	.byte	59                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	263                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	24                              # Abbrev [24] 0x302:0xb DW_TAG_lexical_block
	.byte	26                              # Abbrev [26] 0x303:0x9 DW_TAG_variable
	.byte	26                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	272                             # DW_AT_decl_line
	.long	76                              # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	15                              # Abbrev [15] 0x30f:0x5 DW_TAG_const_type
	.long	585                             # DW_AT_type
	.byte	15                              # Abbrev [15] 0x314:0x5 DW_TAG_const_type
	.long	541                             # DW_AT_type
	.byte	27                              # Abbrev [27] 0x319:0x19f DW_TAG_subprogram
	.byte	3                               # DW_AT_low_pc
	.long	.Lfunc_end1-.Lfunc_begin1       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	70                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	306                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	76                              # DW_AT_type
                                        # DW_AT_external
	.byte	28                              # Abbrev [28] 0x329:0xa DW_TAG_formal_parameter
	.byte	6                               # DW_AT_location
	.byte	11                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	306                             # DW_AT_decl_line
	.long	483                             # DW_AT_type
	.byte	28                              # Abbrev [28] 0x333:0xa DW_TAG_formal_parameter
	.byte	7                               # DW_AT_location
	.byte	56                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	306                             # DW_AT_decl_line
	.long	488                             # DW_AT_type
	.byte	29                              # Abbrev [29] 0x33d:0xa DW_TAG_variable
	.byte	8                               # DW_AT_location
	.byte	52                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	308                             # DW_AT_decl_line
	.long	76                              # DW_AT_type
	.byte	29                              # Abbrev [29] 0x347:0xa DW_TAG_variable
	.byte	9                               # DW_AT_location
	.byte	54                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	308                             # DW_AT_decl_line
	.long	585                             # DW_AT_type
	.byte	29                              # Abbrev [29] 0x351:0xa DW_TAG_variable
	.byte	10                              # DW_AT_location
	.byte	84                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	308                             # DW_AT_decl_line
	.long	76                              # DW_AT_type
	.byte	29                              # Abbrev [29] 0x35b:0xa DW_TAG_variable
	.byte	11                              # DW_AT_location
	.byte	85                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	310                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	29                              # Abbrev [29] 0x365:0xa DW_TAG_variable
	.byte	12                              # DW_AT_location
	.byte	86                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	310                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	29                              # Abbrev [29] 0x36f:0xa DW_TAG_variable
	.byte	13                              # DW_AT_location
	.byte	87                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	310                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	29                              # Abbrev [29] 0x379:0xa DW_TAG_variable
	.byte	14                              # DW_AT_location
	.byte	88                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	312                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	29                              # Abbrev [29] 0x383:0xa DW_TAG_variable
	.byte	15                              # DW_AT_location
	.byte	55                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	313                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	29                              # Abbrev [29] 0x38d:0xa DW_TAG_variable
	.byte	16                              # DW_AT_location
	.byte	57                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	318                             # DW_AT_decl_line
	.long	76                              # DW_AT_type
	.byte	26                              # Abbrev [26] 0x397:0x9 DW_TAG_variable
	.byte	53                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	308                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	30                              # Abbrev [30] 0x3a0:0xe DW_TAG_inlined_subroutine
	.long	189                             # DW_AT_abstract_origin
	.byte	4                               # DW_AT_low_pc
	.long	.Ltmp23-.Ltmp22                 # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	308                             # DW_AT_call_line
	.byte	2                               # DW_AT_call_column
	.byte	31                              # Abbrev [31] 0x3ae:0x16 DW_TAG_inlined_subroutine
	.long	555                             # DW_AT_abstract_origin
	.byte	5                               # DW_AT_low_pc
	.long	.Ltmp29-.Ltmp28                 # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	308                             # DW_AT_call_line
	.byte	2                               # DW_AT_call_column
	.byte	32                              # Abbrev [32] 0x3bc:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.long	559                             # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	30                              # Abbrev [30] 0x3c4:0xe DW_TAG_inlined_subroutine
	.long	568                             # DW_AT_abstract_origin
	.byte	6                               # DW_AT_low_pc
	.long	.Ltmp34-.Ltmp32                 # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	308                             # DW_AT_call_line
	.byte	2                               # DW_AT_call_column
	.byte	33                              # Abbrev [33] 0x3d2:0x3c DW_TAG_inlined_subroutine
	.long	595                             # DW_AT_abstract_origin
	.byte	0                               # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	330                             # DW_AT_call_line
	.byte	4                               # DW_AT_call_column
	.byte	34                              # Abbrev [34] 0x3dc:0x6 DW_TAG_formal_parameter
	.byte	17                              # DW_AT_location
	.long	599                             # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x3e2:0x2b DW_TAG_inlined_subroutine
	.long	608                             # DW_AT_abstract_origin
	.byte	1                               # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.byte	157                             # DW_AT_call_line
	.byte	3                               # DW_AT_call_column
	.byte	34                              # Abbrev [34] 0x3eb:0x6 DW_TAG_formal_parameter
	.byte	18                              # DW_AT_location
	.long	612                             # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x3f1:0x6 DW_TAG_variable
	.byte	19                              # DW_AT_location
	.long	620                             # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x3f7:0x6 DW_TAG_variable
	.byte	21                              # DW_AT_location
	.long	628                             # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x3fd:0x6 DW_TAG_variable
	.byte	22                              # DW_AT_location
	.long	636                             # DW_AT_abstract_origin
	.byte	37                              # Abbrev [37] 0x403:0x9 DW_TAG_lexical_block
	.byte	2                               # DW_AT_ranges
	.byte	36                              # Abbrev [36] 0x405:0x6 DW_TAG_variable
	.byte	20                              # DW_AT_location
	.long	645                             # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	31                              # Abbrev [31] 0x40e:0x61 DW_TAG_inlined_subroutine
	.long	660                             # DW_AT_abstract_origin
	.byte	7                               # DW_AT_low_pc
	.long	.Ltmp114-.Ltmp78                # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	335                             # DW_AT_call_line
	.byte	2                               # DW_AT_call_column
	.byte	34                              # Abbrev [34] 0x41c:0x6 DW_TAG_formal_parameter
	.byte	24                              # DW_AT_location
	.long	668                             # DW_AT_abstract_origin
	.byte	32                              # Abbrev [32] 0x422:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	82
	.long	684                             # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x429:0x6 DW_TAG_formal_parameter
	.byte	25                              # DW_AT_location
	.long	692                             # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x42f:0x6 DW_TAG_formal_parameter
	.byte	26                              # DW_AT_location
	.long	700                             # DW_AT_abstract_origin
	.byte	32                              # Abbrev [32] 0x435:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	83
	.long	708                             # DW_AT_abstract_origin
	.byte	32                              # Abbrev [32] 0x43c:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	94
	.long	716                             # DW_AT_abstract_origin
	.byte	32                              # Abbrev [32] 0x443:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	89
	.long	724                             # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x44a:0x6 DW_TAG_formal_parameter
	.byte	23                              # DW_AT_location
	.long	733                             # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x450:0x6 DW_TAG_formal_parameter
	.byte	27                              # DW_AT_location
	.long	742                             # DW_AT_abstract_origin
	.byte	37                              # Abbrev [37] 0x456:0x18 DW_TAG_lexical_block
	.byte	3                               # DW_AT_ranges
	.byte	36                              # Abbrev [36] 0x458:0x6 DW_TAG_variable
	.byte	28                              # DW_AT_location
	.long	752                             # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x45e:0x6 DW_TAG_variable
	.byte	30                              # DW_AT_location
	.long	761                             # DW_AT_abstract_origin
	.byte	37                              # Abbrev [37] 0x464:0x9 DW_TAG_lexical_block
	.byte	4                               # DW_AT_ranges
	.byte	36                              # Abbrev [36] 0x466:0x6 DW_TAG_variable
	.byte	29                              # DW_AT_location
	.long	771                             # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	31                              # Abbrev [31] 0x46f:0x48 DW_TAG_inlined_subroutine
	.long	595                             # DW_AT_abstract_origin
	.byte	8                               # DW_AT_low_pc
	.long	.Ltmp147-.Ltmp116               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	335                             # DW_AT_call_line
	.byte	2                               # DW_AT_call_column
	.byte	32                              # Abbrev [32] 0x47d:0x8 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_location
	.byte	145
	.byte	120
	.long	599                             # DW_AT_abstract_origin
	.byte	38                              # Abbrev [38] 0x485:0x31 DW_TAG_inlined_subroutine
	.long	608                             # DW_AT_abstract_origin
	.byte	9                               # DW_AT_low_pc
	.long	.Ltmp147-.Ltmp123               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	157                             # DW_AT_call_line
	.byte	3                               # DW_AT_call_column
	.byte	32                              # Abbrev [32] 0x492:0x8 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_location
	.byte	145
	.byte	120
	.long	612                             # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x49a:0x6 DW_TAG_variable
	.byte	31                              # DW_AT_location
	.long	620                             # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x4a0:0x6 DW_TAG_variable
	.byte	33                              # DW_AT_location
	.long	628                             # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x4a6:0x6 DW_TAG_variable
	.byte	34                              # DW_AT_location
	.long	636                             # DW_AT_abstract_origin
	.byte	37                              # Abbrev [37] 0x4ac:0x9 DW_TAG_lexical_block
	.byte	5                               # DW_AT_ranges
	.byte	36                              # Abbrev [36] 0x4ae:0x6 DW_TAG_variable
	.byte	32                              # DW_AT_location
	.long	645                             # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	39                              # Abbrev [39] 0x4b8:0xcb DW_TAG_subprogram
	.byte	10                              # DW_AT_low_pc
	.long	.Lfunc_end2-.Lfunc_begin2       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	71                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	340                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	40                              # Abbrev [40] 0x4c4:0xb DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.byte	11                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	340                             # DW_AT_decl_line
	.long	483                             # DW_AT_type
	.byte	40                              # Abbrev [40] 0x4cf:0xb DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	84
	.byte	89                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	340                             # DW_AT_decl_line
	.long	76                              # DW_AT_type
	.byte	37                              # Abbrev [37] 0x4da:0xa8 DW_TAG_lexical_block
	.byte	6                               # DW_AT_ranges
	.byte	29                              # Abbrev [29] 0x4dc:0xa DW_TAG_variable
	.byte	35                              # DW_AT_location
	.byte	54                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	348                             # DW_AT_decl_line
	.long	585                             # DW_AT_type
	.byte	29                              # Abbrev [29] 0x4e6:0xa DW_TAG_variable
	.byte	36                              # DW_AT_location
	.byte	85                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	351                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	29                              # Abbrev [29] 0x4f0:0xa DW_TAG_variable
	.byte	37                              # DW_AT_location
	.byte	86                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	351                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	29                              # Abbrev [29] 0x4fa:0xa DW_TAG_variable
	.byte	38                              # DW_AT_location
	.byte	87                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	351                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	29                              # Abbrev [29] 0x504:0xa DW_TAG_variable
	.byte	39                              # DW_AT_location
	.byte	55                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	353                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	26                              # Abbrev [26] 0x50e:0x9 DW_TAG_variable
	.byte	53                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	349                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	31                              # Abbrev [31] 0x517:0x16 DW_TAG_inlined_subroutine
	.long	555                             # DW_AT_abstract_origin
	.byte	11                              # DW_AT_low_pc
	.long	.Ltmp170-.Ltmp169               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	344                             # DW_AT_call_line
	.byte	4                               # DW_AT_call_column
	.byte	32                              # Abbrev [32] 0x525:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.long	559                             # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	30                              # Abbrev [30] 0x52d:0xe DW_TAG_inlined_subroutine
	.long	189                             # DW_AT_abstract_origin
	.byte	12                              # DW_AT_low_pc
	.long	.Ltmp174-.Ltmp173               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	343                             # DW_AT_call_line
	.byte	7                               # DW_AT_call_column
	.byte	31                              # Abbrev [31] 0x53b:0x46 DW_TAG_inlined_subroutine
	.long	595                             # DW_AT_abstract_origin
	.byte	13                              # DW_AT_low_pc
	.long	.Ltmp215-.Ltmp186               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	359                             # DW_AT_call_line
	.byte	3                               # DW_AT_call_column
	.byte	32                              # Abbrev [32] 0x549:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.long	599                             # DW_AT_abstract_origin
	.byte	38                              # Abbrev [38] 0x550:0x30 DW_TAG_inlined_subroutine
	.long	608                             # DW_AT_abstract_origin
	.byte	14                              # DW_AT_low_pc
	.long	.Ltmp215-.Ltmp193               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	157                             # DW_AT_call_line
	.byte	3                               # DW_AT_call_column
	.byte	32                              # Abbrev [32] 0x55d:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.long	612                             # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x564:0x6 DW_TAG_variable
	.byte	40                              # DW_AT_location
	.long	620                             # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x56a:0x6 DW_TAG_variable
	.byte	42                              # DW_AT_location
	.long	628                             # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x570:0x6 DW_TAG_variable
	.byte	43                              # DW_AT_location
	.long	636                             # DW_AT_abstract_origin
	.byte	37                              # Abbrev [37] 0x576:0x9 DW_TAG_lexical_block
	.byte	7                               # DW_AT_ranges
	.byte	36                              # Abbrev [36] 0x578:0x6 DW_TAG_variable
	.byte	41                              # DW_AT_location
	.long	645                             # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x583:0x1af DW_TAG_subprogram
	.byte	15                              # DW_AT_low_pc
	.long	.Lfunc_end3-.Lfunc_begin3       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	72                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	368                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	76                              # DW_AT_type
                                        # DW_AT_external
	.byte	28                              # Abbrev [28] 0x593:0xa DW_TAG_formal_parameter
	.byte	44                              # DW_AT_location
	.byte	11                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	368                             # DW_AT_decl_line
	.long	483                             # DW_AT_type
	.byte	28                              # Abbrev [28] 0x59d:0xa DW_TAG_formal_parameter
	.byte	45                              # DW_AT_location
	.byte	56                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	368                             # DW_AT_decl_line
	.long	488                             # DW_AT_type
	.byte	29                              # Abbrev [29] 0x5a7:0xa DW_TAG_variable
	.byte	46                              # DW_AT_location
	.byte	52                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	370                             # DW_AT_decl_line
	.long	76                              # DW_AT_type
	.byte	29                              # Abbrev [29] 0x5b1:0xa DW_TAG_variable
	.byte	47                              # DW_AT_location
	.byte	54                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	370                             # DW_AT_decl_line
	.long	585                             # DW_AT_type
	.byte	29                              # Abbrev [29] 0x5bb:0xa DW_TAG_variable
	.byte	48                              # DW_AT_location
	.byte	84                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	370                             # DW_AT_decl_line
	.long	76                              # DW_AT_type
	.byte	29                              # Abbrev [29] 0x5c5:0xa DW_TAG_variable
	.byte	49                              # DW_AT_location
	.byte	85                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	372                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	29                              # Abbrev [29] 0x5cf:0xa DW_TAG_variable
	.byte	50                              # DW_AT_location
	.byte	86                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	372                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	29                              # Abbrev [29] 0x5d9:0xa DW_TAG_variable
	.byte	51                              # DW_AT_location
	.byte	90                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	372                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	29                              # Abbrev [29] 0x5e3:0xa DW_TAG_variable
	.byte	52                              # DW_AT_location
	.byte	87                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	372                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	29                              # Abbrev [29] 0x5ed:0xa DW_TAG_variable
	.byte	53                              # DW_AT_location
	.byte	88                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	374                             # DW_AT_decl_line
	.long	76                              # DW_AT_type
	.byte	29                              # Abbrev [29] 0x5f7:0xa DW_TAG_variable
	.byte	54                              # DW_AT_location
	.byte	91                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	375                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	29                              # Abbrev [29] 0x601:0xa DW_TAG_variable
	.byte	55                              # DW_AT_location
	.byte	55                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	377                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	29                              # Abbrev [29] 0x60b:0xa DW_TAG_variable
	.byte	56                              # DW_AT_location
	.byte	57                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	383                             # DW_AT_decl_line
	.long	76                              # DW_AT_type
	.byte	26                              # Abbrev [26] 0x615:0x9 DW_TAG_variable
	.byte	53                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	370                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	30                              # Abbrev [30] 0x61e:0xe DW_TAG_inlined_subroutine
	.long	189                             # DW_AT_abstract_origin
	.byte	16                              # DW_AT_low_pc
	.long	.Ltmp218-.Ltmp217               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	370                             # DW_AT_call_line
	.byte	2                               # DW_AT_call_column
	.byte	31                              # Abbrev [31] 0x62c:0x16 DW_TAG_inlined_subroutine
	.long	555                             # DW_AT_abstract_origin
	.byte	17                              # DW_AT_low_pc
	.long	.Ltmp224-.Ltmp223               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	370                             # DW_AT_call_line
	.byte	2                               # DW_AT_call_column
	.byte	32                              # Abbrev [32] 0x63a:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.long	559                             # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	30                              # Abbrev [30] 0x642:0xe DW_TAG_inlined_subroutine
	.long	568                             # DW_AT_abstract_origin
	.byte	18                              # DW_AT_low_pc
	.long	.Ltmp229-.Ltmp227               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	370                             # DW_AT_call_line
	.byte	2                               # DW_AT_call_column
	.byte	33                              # Abbrev [33] 0x650:0x3c DW_TAG_inlined_subroutine
	.long	595                             # DW_AT_abstract_origin
	.byte	8                               # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	407                             # DW_AT_call_line
	.byte	4                               # DW_AT_call_column
	.byte	34                              # Abbrev [34] 0x65a:0x6 DW_TAG_formal_parameter
	.byte	57                              # DW_AT_location
	.long	599                             # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x660:0x2b DW_TAG_inlined_subroutine
	.long	608                             # DW_AT_abstract_origin
	.byte	9                               # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.byte	157                             # DW_AT_call_line
	.byte	3                               # DW_AT_call_column
	.byte	34                              # Abbrev [34] 0x669:0x6 DW_TAG_formal_parameter
	.byte	58                              # DW_AT_location
	.long	612                             # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x66f:0x6 DW_TAG_variable
	.byte	59                              # DW_AT_location
	.long	620                             # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x675:0x6 DW_TAG_variable
	.byte	61                              # DW_AT_location
	.long	628                             # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x67b:0x6 DW_TAG_variable
	.byte	62                              # DW_AT_location
	.long	636                             # DW_AT_abstract_origin
	.byte	37                              # Abbrev [37] 0x681:0x9 DW_TAG_lexical_block
	.byte	10                              # DW_AT_ranges
	.byte	36                              # Abbrev [36] 0x683:0x6 DW_TAG_variable
	.byte	60                              # DW_AT_location
	.long	645                             # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0x68c:0x5d DW_TAG_inlined_subroutine
	.long	660                             # DW_AT_abstract_origin
	.byte	11                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	415                             # DW_AT_call_line
	.byte	2                               # DW_AT_call_column
	.byte	34                              # Abbrev [34] 0x696:0x6 DW_TAG_formal_parameter
	.byte	64                              # DW_AT_location
	.long	668                             # DW_AT_abstract_origin
	.byte	32                              # Abbrev [32] 0x69c:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	82
	.long	684                             # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x6a3:0x6 DW_TAG_formal_parameter
	.byte	65                              # DW_AT_location
	.long	692                             # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x6a9:0x6 DW_TAG_formal_parameter
	.byte	66                              # DW_AT_location
	.long	700                             # DW_AT_abstract_origin
	.byte	32                              # Abbrev [32] 0x6af:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	83
	.long	708                             # DW_AT_abstract_origin
	.byte	32                              # Abbrev [32] 0x6b6:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	94
	.long	716                             # DW_AT_abstract_origin
	.byte	32                              # Abbrev [32] 0x6bd:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	86
	.long	724                             # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x6c4:0x6 DW_TAG_formal_parameter
	.byte	63                              # DW_AT_location
	.long	733                             # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x6ca:0x6 DW_TAG_formal_parameter
	.byte	67                              # DW_AT_location
	.long	742                             # DW_AT_abstract_origin
	.byte	37                              # Abbrev [37] 0x6d0:0x18 DW_TAG_lexical_block
	.byte	12                              # DW_AT_ranges
	.byte	36                              # Abbrev [36] 0x6d2:0x6 DW_TAG_variable
	.byte	68                              # DW_AT_location
	.long	752                             # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x6d8:0x6 DW_TAG_variable
	.byte	70                              # DW_AT_location
	.long	761                             # DW_AT_abstract_origin
	.byte	37                              # Abbrev [37] 0x6de:0x9 DW_TAG_lexical_block
	.byte	13                              # DW_AT_ranges
	.byte	36                              # Abbrev [36] 0x6e0:0x6 DW_TAG_variable
	.byte	69                              # DW_AT_location
	.long	771                             # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	31                              # Abbrev [31] 0x6e9:0x48 DW_TAG_inlined_subroutine
	.long	595                             # DW_AT_abstract_origin
	.byte	19                              # DW_AT_low_pc
	.long	.Ltmp361-.Ltmp330               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	415                             # DW_AT_call_line
	.byte	2                               # DW_AT_call_column
	.byte	32                              # Abbrev [32] 0x6f7:0x8 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_location
	.byte	145
	.byte	112
	.long	599                             # DW_AT_abstract_origin
	.byte	38                              # Abbrev [38] 0x6ff:0x31 DW_TAG_inlined_subroutine
	.long	608                             # DW_AT_abstract_origin
	.byte	20                              # DW_AT_low_pc
	.long	.Ltmp361-.Ltmp337               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	157                             # DW_AT_call_line
	.byte	3                               # DW_AT_call_column
	.byte	32                              # Abbrev [32] 0x70c:0x8 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_location
	.byte	145
	.byte	112
	.long	612                             # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x714:0x6 DW_TAG_variable
	.byte	71                              # DW_AT_location
	.long	620                             # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x71a:0x6 DW_TAG_variable
	.byte	73                              # DW_AT_location
	.long	628                             # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x720:0x6 DW_TAG_variable
	.byte	74                              # DW_AT_location
	.long	636                             # DW_AT_abstract_origin
	.byte	37                              # Abbrev [37] 0x726:0x9 DW_TAG_lexical_block
	.byte	14                              # DW_AT_ranges
	.byte	36                              # Abbrev [36] 0x728:0x6 DW_TAG_variable
	.byte	72                              # DW_AT_location
	.long	645                             # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	39                              # Abbrev [39] 0x732:0xd5 DW_TAG_subprogram
	.byte	21                              # DW_AT_low_pc
	.long	.Lfunc_end4-.Lfunc_begin4       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	73                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	420                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	40                              # Abbrev [40] 0x73e:0xb DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.byte	11                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	420                             # DW_AT_decl_line
	.long	483                             # DW_AT_type
	.byte	40                              # Abbrev [40] 0x749:0xb DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	84
	.byte	89                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	420                             # DW_AT_decl_line
	.long	76                              # DW_AT_type
	.byte	37                              # Abbrev [37] 0x754:0xb2 DW_TAG_lexical_block
	.byte	15                              # DW_AT_ranges
	.byte	29                              # Abbrev [29] 0x756:0xa DW_TAG_variable
	.byte	75                              # DW_AT_location
	.byte	54                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	428                             # DW_AT_decl_line
	.long	585                             # DW_AT_type
	.byte	29                              # Abbrev [29] 0x760:0xa DW_TAG_variable
	.byte	76                              # DW_AT_location
	.byte	85                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	431                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	29                              # Abbrev [29] 0x76a:0xa DW_TAG_variable
	.byte	77                              # DW_AT_location
	.byte	86                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	431                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	29                              # Abbrev [29] 0x774:0xa DW_TAG_variable
	.byte	78                              # DW_AT_location
	.byte	90                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	431                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	29                              # Abbrev [29] 0x77e:0xa DW_TAG_variable
	.byte	79                              # DW_AT_location
	.byte	87                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	431                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	29                              # Abbrev [29] 0x788:0xa DW_TAG_variable
	.byte	80                              # DW_AT_location
	.byte	55                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	433                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	26                              # Abbrev [26] 0x792:0x9 DW_TAG_variable
	.byte	53                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	429                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	31                              # Abbrev [31] 0x79b:0x16 DW_TAG_inlined_subroutine
	.long	555                             # DW_AT_abstract_origin
	.byte	22                              # DW_AT_low_pc
	.long	.Ltmp380-.Ltmp379               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	424                             # DW_AT_call_line
	.byte	4                               # DW_AT_call_column
	.byte	32                              # Abbrev [32] 0x7a9:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.long	559                             # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	30                              # Abbrev [30] 0x7b1:0xe DW_TAG_inlined_subroutine
	.long	189                             # DW_AT_abstract_origin
	.byte	23                              # DW_AT_low_pc
	.long	.Ltmp384-.Ltmp383               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	423                             # DW_AT_call_line
	.byte	7                               # DW_AT_call_column
	.byte	31                              # Abbrev [31] 0x7bf:0x46 DW_TAG_inlined_subroutine
	.long	595                             # DW_AT_abstract_origin
	.byte	24                              # DW_AT_low_pc
	.long	.Ltmp426-.Ltmp397               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	440                             # DW_AT_call_line
	.byte	3                               # DW_AT_call_column
	.byte	32                              # Abbrev [32] 0x7cd:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.long	599                             # DW_AT_abstract_origin
	.byte	38                              # Abbrev [38] 0x7d4:0x30 DW_TAG_inlined_subroutine
	.long	608                             # DW_AT_abstract_origin
	.byte	25                              # DW_AT_low_pc
	.long	.Ltmp426-.Ltmp404               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	157                             # DW_AT_call_line
	.byte	3                               # DW_AT_call_column
	.byte	32                              # Abbrev [32] 0x7e1:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.long	612                             # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x7e8:0x6 DW_TAG_variable
	.byte	81                              # DW_AT_location
	.long	620                             # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x7ee:0x6 DW_TAG_variable
	.byte	83                              # DW_AT_location
	.long	628                             # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x7f4:0x6 DW_TAG_variable
	.byte	84                              # DW_AT_location
	.long	636                             # DW_AT_abstract_origin
	.byte	37                              # Abbrev [37] 0x7fa:0x9 DW_TAG_lexical_block
	.byte	16                              # DW_AT_ranges
	.byte	36                              # Abbrev [36] 0x7fc:0x6 DW_TAG_variable
	.byte	82                              # DW_AT_location
	.long	645                             # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	41                              # Abbrev [41] 0x807:0xae DW_TAG_subprogram
	.byte	60                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	453                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	488                             # DW_AT_type
                                        # DW_AT_inline
	.byte	25                              # Abbrev [25] 0x810:0x9 DW_TAG_formal_parameter
	.byte	52                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	454                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	25                              # Abbrev [25] 0x819:0x9 DW_TAG_formal_parameter
	.byte	53                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	455                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	25                              # Abbrev [25] 0x822:0x9 DW_TAG_formal_parameter
	.byte	54                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	456                             # DW_AT_decl_line
	.long	783                             # DW_AT_type
	.byte	25                              # Abbrev [25] 0x82b:0x9 DW_TAG_formal_parameter
	.byte	55                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	457                             # DW_AT_decl_line
	.long	76                              # DW_AT_type
	.byte	25                              # Abbrev [25] 0x834:0x9 DW_TAG_formal_parameter
	.byte	35                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	458                             # DW_AT_decl_line
	.long	76                              # DW_AT_type
	.byte	25                              # Abbrev [25] 0x83d:0x9 DW_TAG_formal_parameter
	.byte	31                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	459                             # DW_AT_decl_line
	.long	788                             # DW_AT_type
	.byte	25                              # Abbrev [25] 0x846:0x9 DW_TAG_formal_parameter
	.byte	32                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	460                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	25                              # Abbrev [25] 0x84f:0x9 DW_TAG_formal_parameter
	.byte	33                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	461                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	25                              # Abbrev [25] 0x858:0x9 DW_TAG_formal_parameter
	.byte	56                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	462                             # DW_AT_decl_line
	.long	488                             # DW_AT_type
	.byte	25                              # Abbrev [25] 0x861:0x9 DW_TAG_formal_parameter
	.byte	57                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	463                             # DW_AT_decl_line
	.long	76                              # DW_AT_type
	.byte	26                              # Abbrev [26] 0x86a:0x9 DW_TAG_variable
	.byte	61                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	465                             # DW_AT_decl_line
	.long	541                             # DW_AT_type
	.byte	26                              # Abbrev [26] 0x873:0x9 DW_TAG_variable
	.byte	62                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	466                             # DW_AT_decl_line
	.long	541                             # DW_AT_type
	.byte	26                              # Abbrev [26] 0x87c:0x9 DW_TAG_variable
	.byte	63                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	468                             # DW_AT_decl_line
	.long	76                              # DW_AT_type
	.byte	26                              # Abbrev [26] 0x885:0x9 DW_TAG_variable
	.byte	64                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	469                             # DW_AT_decl_line
	.long	76                              # DW_AT_type
	.byte	24                              # Abbrev [24] 0x88e:0x26 DW_TAG_lexical_block
	.byte	26                              # Abbrev [26] 0x88f:0x9 DW_TAG_variable
	.byte	65                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	479                             # DW_AT_decl_line
	.long	788                             # DW_AT_type
	.byte	26                              # Abbrev [26] 0x898:0x9 DW_TAG_variable
	.byte	58                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	483                             # DW_AT_decl_line
	.long	783                             # DW_AT_type
	.byte	26                              # Abbrev [26] 0x8a1:0x9 DW_TAG_variable
	.byte	26                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	484                             # DW_AT_decl_line
	.long	76                              # DW_AT_type
	.byte	26                              # Abbrev [26] 0x8aa:0x9 DW_TAG_variable
	.byte	59                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	472                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x8b5:0x13f DW_TAG_subprogram
	.byte	26                              # DW_AT_low_pc
	.long	.Lfunc_end5-.Lfunc_begin5       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	74                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	594                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	76                              # DW_AT_type
                                        # DW_AT_external
	.byte	28                              # Abbrev [28] 0x8c5:0xa DW_TAG_formal_parameter
	.byte	85                              # DW_AT_location
	.byte	11                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	594                             # DW_AT_decl_line
	.long	483                             # DW_AT_type
	.byte	28                              # Abbrev [28] 0x8cf:0xa DW_TAG_formal_parameter
	.byte	86                              # DW_AT_location
	.byte	56                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	594                             # DW_AT_decl_line
	.long	488                             # DW_AT_type
	.byte	29                              # Abbrev [29] 0x8d9:0xa DW_TAG_variable
	.byte	87                              # DW_AT_location
	.byte	52                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	596                             # DW_AT_decl_line
	.long	76                              # DW_AT_type
	.byte	29                              # Abbrev [29] 0x8e3:0xa DW_TAG_variable
	.byte	88                              # DW_AT_location
	.byte	54                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	596                             # DW_AT_decl_line
	.long	585                             # DW_AT_type
	.byte	29                              # Abbrev [29] 0x8ed:0xa DW_TAG_variable
	.byte	89                              # DW_AT_location
	.byte	84                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	596                             # DW_AT_decl_line
	.long	76                              # DW_AT_type
	.byte	29                              # Abbrev [29] 0x8f7:0xa DW_TAG_variable
	.byte	90                              # DW_AT_location
	.byte	55                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	600                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	26                              # Abbrev [26] 0x901:0x9 DW_TAG_variable
	.byte	53                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	596                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	26                              # Abbrev [26] 0x90a:0x9 DW_TAG_variable
	.byte	87                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	598                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	30                              # Abbrev [30] 0x913:0xe DW_TAG_inlined_subroutine
	.long	189                             # DW_AT_abstract_origin
	.byte	27                              # DW_AT_low_pc
	.long	.Ltmp429-.Ltmp428               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	596                             # DW_AT_call_line
	.byte	2                               # DW_AT_call_column
	.byte	31                              # Abbrev [31] 0x921:0x16 DW_TAG_inlined_subroutine
	.long	555                             # DW_AT_abstract_origin
	.byte	28                              # DW_AT_low_pc
	.long	.Ltmp435-.Ltmp434               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	596                             # DW_AT_call_line
	.byte	2                               # DW_AT_call_column
	.byte	32                              # Abbrev [32] 0x92f:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.long	559                             # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0x937:0x74 DW_TAG_inlined_subroutine
	.long	2055                            # DW_AT_abstract_origin
	.byte	17                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	603                             # DW_AT_call_line
	.byte	2                               # DW_AT_call_column
	.byte	34                              # Abbrev [34] 0x941:0x6 DW_TAG_formal_parameter
	.byte	92                              # DW_AT_location
	.long	2064                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x947:0x6 DW_TAG_formal_parameter
	.byte	93                              # DW_AT_location
	.long	2082                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x94d:0x6 DW_TAG_formal_parameter
	.byte	94                              # DW_AT_location
	.long	2091                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x953:0x6 DW_TAG_formal_parameter
	.byte	95                              # DW_AT_location
	.long	2100                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x959:0x6 DW_TAG_formal_parameter
	.byte	96                              # DW_AT_location
	.long	2109                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x95f:0x6 DW_TAG_formal_parameter
	.byte	97                              # DW_AT_location
	.long	2118                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x965:0x6 DW_TAG_formal_parameter
	.byte	91                              # DW_AT_location
	.long	2127                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x96b:0x6 DW_TAG_formal_parameter
	.byte	98                              # DW_AT_location
	.long	2136                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x971:0x6 DW_TAG_formal_parameter
	.byte	99                              # DW_AT_location
	.long	2145                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x977:0x6 DW_TAG_variable
	.byte	100                             # DW_AT_location
	.long	2154                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x97d:0x6 DW_TAG_variable
	.byte	101                             # DW_AT_location
	.long	2163                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x983:0x6 DW_TAG_variable
	.byte	102                             # DW_AT_location
	.long	2172                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x989:0x6 DW_TAG_variable
	.byte	103                             # DW_AT_location
	.long	2181                            # DW_AT_abstract_origin
	.byte	37                              # Abbrev [37] 0x98f:0x1b DW_TAG_lexical_block
	.byte	18                              # DW_AT_ranges
	.byte	36                              # Abbrev [36] 0x991:0x6 DW_TAG_variable
	.byte	104                             # DW_AT_location
	.long	2191                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x997:0x6 DW_TAG_variable
	.byte	105                             # DW_AT_location
	.long	2200                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x99d:0x6 DW_TAG_variable
	.byte	106                             # DW_AT_location
	.long	2209                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x9a3:0x6 DW_TAG_variable
	.byte	107                             # DW_AT_location
	.long	2218                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	31                              # Abbrev [31] 0x9ab:0x48 DW_TAG_inlined_subroutine
	.long	595                             # DW_AT_abstract_origin
	.byte	29                              # DW_AT_low_pc
	.long	.Ltmp533-.Ltmp504               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	603                             # DW_AT_call_line
	.byte	2                               # DW_AT_call_column
	.byte	32                              # Abbrev [32] 0x9b9:0x8 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_location
	.byte	145
	.byte	88
	.long	599                             # DW_AT_abstract_origin
	.byte	38                              # Abbrev [38] 0x9c1:0x31 DW_TAG_inlined_subroutine
	.long	608                             # DW_AT_abstract_origin
	.byte	30                              # DW_AT_low_pc
	.long	.Ltmp533-.Ltmp510               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	157                             # DW_AT_call_line
	.byte	3                               # DW_AT_call_column
	.byte	32                              # Abbrev [32] 0x9ce:0x8 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_location
	.byte	145
	.byte	88
	.long	612                             # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x9d6:0x6 DW_TAG_variable
	.byte	108                             # DW_AT_location
	.long	620                             # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x9dc:0x6 DW_TAG_variable
	.byte	110                             # DW_AT_location
	.long	628                             # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x9e2:0x6 DW_TAG_variable
	.byte	111                             # DW_AT_location
	.long	636                             # DW_AT_abstract_origin
	.byte	37                              # Abbrev [37] 0x9e8:0x9 DW_TAG_lexical_block
	.byte	19                              # DW_AT_ranges
	.byte	36                              # Abbrev [36] 0x9ea:0x6 DW_TAG_variable
	.byte	109                             # DW_AT_location
	.long	645                             # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	42                              # Abbrev [42] 0x9f4:0x98 DW_TAG_subprogram
	.byte	66                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	521                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_inline
	.byte	25                              # Abbrev [25] 0x9f9:0x9 DW_TAG_formal_parameter
	.byte	52                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	522                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	25                              # Abbrev [25] 0xa02:0x9 DW_TAG_formal_parameter
	.byte	53                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	523                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	25                              # Abbrev [25] 0xa0b:0x9 DW_TAG_formal_parameter
	.byte	54                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	524                             # DW_AT_decl_line
	.long	783                             # DW_AT_type
	.byte	25                              # Abbrev [25] 0xa14:0x9 DW_TAG_formal_parameter
	.byte	55                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	525                             # DW_AT_decl_line
	.long	76                              # DW_AT_type
	.byte	25                              # Abbrev [25] 0xa1d:0x9 DW_TAG_formal_parameter
	.byte	35                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	526                             # DW_AT_decl_line
	.long	76                              # DW_AT_type
	.byte	25                              # Abbrev [25] 0xa26:0x9 DW_TAG_formal_parameter
	.byte	31                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	527                             # DW_AT_decl_line
	.long	788                             # DW_AT_type
	.byte	25                              # Abbrev [25] 0xa2f:0x9 DW_TAG_formal_parameter
	.byte	32                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	528                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	25                              # Abbrev [25] 0xa38:0x9 DW_TAG_formal_parameter
	.byte	33                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	529                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	26                              # Abbrev [26] 0xa41:0x9 DW_TAG_variable
	.byte	61                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	531                             # DW_AT_decl_line
	.long	541                             # DW_AT_type
	.byte	26                              # Abbrev [26] 0xa4a:0x9 DW_TAG_variable
	.byte	62                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	532                             # DW_AT_decl_line
	.long	541                             # DW_AT_type
	.byte	26                              # Abbrev [26] 0xa53:0x9 DW_TAG_variable
	.byte	63                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	534                             # DW_AT_decl_line
	.long	76                              # DW_AT_type
	.byte	26                              # Abbrev [26] 0xa5c:0x9 DW_TAG_variable
	.byte	64                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	535                             # DW_AT_decl_line
	.long	76                              # DW_AT_type
	.byte	24                              # Abbrev [24] 0xa65:0x26 DW_TAG_lexical_block
	.byte	26                              # Abbrev [26] 0xa66:0x9 DW_TAG_variable
	.byte	65                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	545                             # DW_AT_decl_line
	.long	541                             # DW_AT_type
	.byte	26                              # Abbrev [26] 0xa6f:0x9 DW_TAG_variable
	.byte	58                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	548                             # DW_AT_decl_line
	.long	585                             # DW_AT_type
	.byte	26                              # Abbrev [26] 0xa78:0x9 DW_TAG_variable
	.byte	26                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	549                             # DW_AT_decl_line
	.long	76                              # DW_AT_type
	.byte	26                              # Abbrev [26] 0xa81:0x9 DW_TAG_variable
	.byte	59                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	538                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	39                              # Abbrev [39] 0xa8c:0x12f DW_TAG_subprogram
	.byte	31                              # DW_AT_low_pc
	.long	.Lfunc_end6-.Lfunc_begin6       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	75                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	608                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	40                              # Abbrev [40] 0xa98:0xb DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.byte	11                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	608                             # DW_AT_decl_line
	.long	483                             # DW_AT_type
	.byte	28                              # Abbrev [28] 0xaa3:0xa DW_TAG_formal_parameter
	.byte	112                             # DW_AT_location
	.byte	89                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	608                             # DW_AT_decl_line
	.long	76                              # DW_AT_type
	.byte	37                              # Abbrev [37] 0xaad:0x10d DW_TAG_lexical_block
	.byte	20                              # DW_AT_ranges
	.byte	29                              # Abbrev [29] 0xaaf:0xa DW_TAG_variable
	.byte	113                             # DW_AT_location
	.byte	52                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	611                             # DW_AT_decl_line
	.long	76                              # DW_AT_type
	.byte	29                              # Abbrev [29] 0xab9:0xa DW_TAG_variable
	.byte	114                             # DW_AT_location
	.byte	54                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	611                             # DW_AT_decl_line
	.long	585                             # DW_AT_type
	.byte	29                              # Abbrev [29] 0xac3:0xa DW_TAG_variable
	.byte	115                             # DW_AT_location
	.byte	55                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	615                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	26                              # Abbrev [26] 0xacd:0x9 DW_TAG_variable
	.byte	53                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	611                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	26                              # Abbrev [26] 0xad6:0x9 DW_TAG_variable
	.byte	87                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	613                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	31                              # Abbrev [31] 0xadf:0x16 DW_TAG_inlined_subroutine
	.long	555                             # DW_AT_abstract_origin
	.byte	32                              # DW_AT_low_pc
	.long	.Ltmp540-.Ltmp539               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	611                             # DW_AT_call_line
	.byte	3                               # DW_AT_call_column
	.byte	32                              # Abbrev [32] 0xaed:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.long	559                             # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	30                              # Abbrev [30] 0xaf5:0xe DW_TAG_inlined_subroutine
	.long	189                             # DW_AT_abstract_origin
	.byte	33                              # DW_AT_low_pc
	.long	.Ltmp544-.Ltmp543               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	611                             # DW_AT_call_line
	.byte	3                               # DW_AT_call_column
	.byte	33                              # Abbrev [33] 0xb03:0x6c DW_TAG_inlined_subroutine
	.long	2548                            # DW_AT_abstract_origin
	.byte	21                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	618                             # DW_AT_call_line
	.byte	3                               # DW_AT_call_column
	.byte	34                              # Abbrev [34] 0xb0d:0x6 DW_TAG_formal_parameter
	.byte	117                             # DW_AT_location
	.long	2553                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0xb13:0x6 DW_TAG_formal_parameter
	.byte	118                             # DW_AT_location
	.long	2571                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0xb19:0x6 DW_TAG_formal_parameter
	.byte	119                             # DW_AT_location
	.long	2580                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0xb1f:0x6 DW_TAG_formal_parameter
	.byte	120                             # DW_AT_location
	.long	2589                            # DW_AT_abstract_origin
	.byte	32                              # Abbrev [32] 0xb25:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	84
	.long	2598                            # DW_AT_abstract_origin
	.byte	32                              # Abbrev [32] 0xb2c:0x8 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_location
	.byte	145
	.byte	120
	.long	2607                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0xb34:0x6 DW_TAG_formal_parameter
	.byte	116                             # DW_AT_location
	.long	2616                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0xb3a:0x6 DW_TAG_variable
	.byte	121                             # DW_AT_location
	.long	2625                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0xb40:0x6 DW_TAG_variable
	.byte	122                             # DW_AT_location
	.long	2634                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0xb46:0x6 DW_TAG_variable
	.byte	123                             # DW_AT_location
	.long	2643                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0xb4c:0x6 DW_TAG_variable
	.byte	124                             # DW_AT_location
	.long	2652                            # DW_AT_abstract_origin
	.byte	37                              # Abbrev [37] 0xb52:0x1c DW_TAG_lexical_block
	.byte	22                              # DW_AT_ranges
	.byte	36                              # Abbrev [36] 0xb54:0x6 DW_TAG_variable
	.byte	125                             # DW_AT_location
	.long	2662                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0xb5a:0x6 DW_TAG_variable
	.byte	126                             # DW_AT_location
	.long	2671                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0xb60:0x6 DW_TAG_variable
	.byte	127                             # DW_AT_location
	.long	2680                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0xb66:0x7 DW_TAG_variable
	.ascii	"\200\001"                      # DW_AT_location
	.long	2689                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	31                              # Abbrev [31] 0xb6f:0x4a DW_TAG_inlined_subroutine
	.long	595                             # DW_AT_abstract_origin
	.byte	34                              # DW_AT_low_pc
	.long	.Ltmp628-.Ltmp598               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	618                             # DW_AT_call_line
	.byte	3                               # DW_AT_call_column
	.byte	32                              # Abbrev [32] 0xb7d:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.long	599                             # DW_AT_abstract_origin
	.byte	38                              # Abbrev [38] 0xb84:0x34 DW_TAG_inlined_subroutine
	.long	608                             # DW_AT_abstract_origin
	.byte	35                              # DW_AT_low_pc
	.long	.Ltmp628-.Ltmp604               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	157                             # DW_AT_call_line
	.byte	3                               # DW_AT_call_column
	.byte	32                              # Abbrev [32] 0xb91:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.long	612                             # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0xb98:0x7 DW_TAG_variable
	.ascii	"\201\001"                      # DW_AT_location
	.long	620                             # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0xb9f:0x7 DW_TAG_variable
	.ascii	"\203\001"                      # DW_AT_location
	.long	628                             # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0xba6:0x7 DW_TAG_variable
	.ascii	"\204\001"                      # DW_AT_location
	.long	636                             # DW_AT_abstract_origin
	.byte	37                              # Abbrev [37] 0xbad:0xa DW_TAG_lexical_block
	.byte	23                              # DW_AT_ranges
	.byte	36                              # Abbrev [36] 0xbaf:0x7 DW_TAG_variable
	.ascii	"\202\001"                      # DW_AT_location
	.long	645                             # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0xbbb:0x269 DW_TAG_subprogram
	.byte	36                              # DW_AT_low_pc
	.long	.Lfunc_end7-.Lfunc_begin7       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	76                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	627                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	76                              # DW_AT_type
                                        # DW_AT_external
	.byte	28                              # Abbrev [28] 0xbcb:0xb DW_TAG_formal_parameter
	.ascii	"\205\001"                      # DW_AT_location
	.byte	11                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	627                             # DW_AT_decl_line
	.long	483                             # DW_AT_type
	.byte	28                              # Abbrev [28] 0xbd6:0xb DW_TAG_formal_parameter
	.ascii	"\206\001"                      # DW_AT_location
	.byte	56                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	627                             # DW_AT_decl_line
	.long	488                             # DW_AT_type
	.byte	29                              # Abbrev [29] 0xbe1:0xb DW_TAG_variable
	.ascii	"\207\001"                      # DW_AT_location
	.byte	52                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	629                             # DW_AT_decl_line
	.long	76                              # DW_AT_type
	.byte	29                              # Abbrev [29] 0xbec:0xb DW_TAG_variable
	.ascii	"\210\001"                      # DW_AT_location
	.byte	54                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	629                             # DW_AT_decl_line
	.long	585                             # DW_AT_type
	.byte	29                              # Abbrev [29] 0xbf7:0xb DW_TAG_variable
	.ascii	"\211\001"                      # DW_AT_location
	.byte	84                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	629                             # DW_AT_decl_line
	.long	76                              # DW_AT_type
	.byte	29                              # Abbrev [29] 0xc02:0xb DW_TAG_variable
	.ascii	"\212\001"                      # DW_AT_location
	.byte	85                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	631                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	29                              # Abbrev [29] 0xc0d:0xb DW_TAG_variable
	.ascii	"\213\001"                      # DW_AT_location
	.byte	86                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	631                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	29                              # Abbrev [29] 0xc18:0xb DW_TAG_variable
	.ascii	"\214\001"                      # DW_AT_location
	.byte	87                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	631                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	29                              # Abbrev [29] 0xc23:0xb DW_TAG_variable
	.ascii	"\215\001"                      # DW_AT_location
	.byte	88                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	633                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	29                              # Abbrev [29] 0xc2e:0xb DW_TAG_variable
	.ascii	"\216\001"                      # DW_AT_location
	.byte	55                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	634                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	29                              # Abbrev [29] 0xc39:0xb DW_TAG_variable
	.ascii	"\217\001"                      # DW_AT_location
	.byte	57                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	639                             # DW_AT_decl_line
	.long	76                              # DW_AT_type
	.byte	26                              # Abbrev [26] 0xc44:0x9 DW_TAG_variable
	.byte	53                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	629                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	30                              # Abbrev [30] 0xc4d:0xe DW_TAG_inlined_subroutine
	.long	189                             # DW_AT_abstract_origin
	.byte	37                              # DW_AT_low_pc
	.long	.Ltmp631-.Ltmp630               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	629                             # DW_AT_call_line
	.byte	2                               # DW_AT_call_column
	.byte	31                              # Abbrev [31] 0xc5b:0x16 DW_TAG_inlined_subroutine
	.long	555                             # DW_AT_abstract_origin
	.byte	38                              # DW_AT_low_pc
	.long	.Ltmp637-.Ltmp636               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	629                             # DW_AT_call_line
	.byte	2                               # DW_AT_call_column
	.byte	32                              # Abbrev [32] 0xc69:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.long	559                             # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	30                              # Abbrev [30] 0xc71:0xe DW_TAG_inlined_subroutine
	.long	568                             # DW_AT_abstract_origin
	.byte	39                              # DW_AT_low_pc
	.long	.Ltmp641-.Ltmp639               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	629                             # DW_AT_call_line
	.byte	2                               # DW_AT_call_column
	.byte	33                              # Abbrev [33] 0xc7f:0x77 DW_TAG_inlined_subroutine
	.long	2548                            # DW_AT_abstract_origin
	.byte	24                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	651                             # DW_AT_call_line
	.byte	4                               # DW_AT_call_column
	.byte	34                              # Abbrev [34] 0xc89:0x7 DW_TAG_formal_parameter
	.ascii	"\221\001"                      # DW_AT_location
	.long	2553                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0xc90:0x7 DW_TAG_formal_parameter
	.ascii	"\222\001"                      # DW_AT_location
	.long	2571                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0xc97:0x7 DW_TAG_formal_parameter
	.ascii	"\223\001"                      # DW_AT_location
	.long	2580                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0xc9e:0x7 DW_TAG_formal_parameter
	.ascii	"\224\001"                      # DW_AT_location
	.long	2589                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0xca5:0x7 DW_TAG_formal_parameter
	.ascii	"\225\001"                      # DW_AT_location
	.long	2598                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0xcac:0x7 DW_TAG_formal_parameter
	.ascii	"\226\001"                      # DW_AT_location
	.long	2607                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0xcb3:0x7 DW_TAG_formal_parameter
	.ascii	"\220\001"                      # DW_AT_location
	.long	2616                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0xcba:0x7 DW_TAG_variable
	.ascii	"\227\001"                      # DW_AT_location
	.long	2625                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0xcc1:0x7 DW_TAG_variable
	.ascii	"\230\001"                      # DW_AT_location
	.long	2634                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0xcc8:0x7 DW_TAG_variable
	.ascii	"\231\001"                      # DW_AT_location
	.long	2643                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0xccf:0x7 DW_TAG_variable
	.ascii	"\232\001"                      # DW_AT_location
	.long	2652                            # DW_AT_abstract_origin
	.byte	37                              # Abbrev [37] 0xcd6:0x1f DW_TAG_lexical_block
	.byte	25                              # DW_AT_ranges
	.byte	36                              # Abbrev [36] 0xcd8:0x7 DW_TAG_variable
	.ascii	"\233\001"                      # DW_AT_location
	.long	2662                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0xcdf:0x7 DW_TAG_variable
	.ascii	"\234\001"                      # DW_AT_location
	.long	2671                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0xce6:0x7 DW_TAG_variable
	.ascii	"\235\001"                      # DW_AT_location
	.long	2680                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0xced:0x7 DW_TAG_variable
	.ascii	"\236\001"                      # DW_AT_location
	.long	2689                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0xcf6:0x42 DW_TAG_inlined_subroutine
	.long	595                             # DW_AT_abstract_origin
	.byte	26                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	651                             # DW_AT_call_line
	.byte	4                               # DW_AT_call_column
	.byte	34                              # Abbrev [34] 0xd00:0x7 DW_TAG_formal_parameter
	.ascii	"\264\001"                      # DW_AT_location
	.long	599                             # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0xd07:0x30 DW_TAG_inlined_subroutine
	.long	608                             # DW_AT_abstract_origin
	.byte	27                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.byte	157                             # DW_AT_call_line
	.byte	3                               # DW_AT_call_column
	.byte	34                              # Abbrev [34] 0xd10:0x7 DW_TAG_formal_parameter
	.ascii	"\265\001"                      # DW_AT_location
	.long	612                             # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0xd17:0x7 DW_TAG_variable
	.ascii	"\266\001"                      # DW_AT_location
	.long	620                             # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0xd1e:0x7 DW_TAG_variable
	.ascii	"\270\001"                      # DW_AT_location
	.long	628                             # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0xd25:0x7 DW_TAG_variable
	.ascii	"\271\001"                      # DW_AT_location
	.long	636                             # DW_AT_abstract_origin
	.byte	37                              # Abbrev [37] 0xd2c:0xa DW_TAG_lexical_block
	.byte	28                              # DW_AT_ranges
	.byte	36                              # Abbrev [36] 0xd2e:0x7 DW_TAG_variable
	.ascii	"\267\001"                      # DW_AT_location
	.long	645                             # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0xd38:0x85 DW_TAG_inlined_subroutine
	.long	2055                            # DW_AT_abstract_origin
	.byte	29                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	656                             # DW_AT_call_line
	.byte	2                               # DW_AT_call_column
	.byte	34                              # Abbrev [34] 0xd42:0x7 DW_TAG_formal_parameter
	.ascii	"\240\001"                      # DW_AT_location
	.long	2064                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0xd49:0x7 DW_TAG_formal_parameter
	.ascii	"\241\001"                      # DW_AT_location
	.long	2082                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0xd50:0x7 DW_TAG_formal_parameter
	.ascii	"\242\001"                      # DW_AT_location
	.long	2091                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0xd57:0x7 DW_TAG_formal_parameter
	.ascii	"\243\001"                      # DW_AT_location
	.long	2100                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0xd5e:0x7 DW_TAG_formal_parameter
	.ascii	"\244\001"                      # DW_AT_location
	.long	2109                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0xd65:0x7 DW_TAG_formal_parameter
	.ascii	"\245\001"                      # DW_AT_location
	.long	2118                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0xd6c:0x7 DW_TAG_formal_parameter
	.ascii	"\246\001"                      # DW_AT_location
	.long	2127                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0xd73:0x7 DW_TAG_formal_parameter
	.ascii	"\237\001"                      # DW_AT_location
	.long	2136                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0xd7a:0x7 DW_TAG_formal_parameter
	.ascii	"\247\001"                      # DW_AT_location
	.long	2145                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0xd81:0x7 DW_TAG_variable
	.ascii	"\250\001"                      # DW_AT_location
	.long	2154                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0xd88:0x7 DW_TAG_variable
	.ascii	"\251\001"                      # DW_AT_location
	.long	2163                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0xd8f:0x7 DW_TAG_variable
	.ascii	"\252\001"                      # DW_AT_location
	.long	2172                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0xd96:0x7 DW_TAG_variable
	.ascii	"\253\001"                      # DW_AT_location
	.long	2181                            # DW_AT_abstract_origin
	.byte	37                              # Abbrev [37] 0xd9d:0x1f DW_TAG_lexical_block
	.byte	30                              # DW_AT_ranges
	.byte	36                              # Abbrev [36] 0xd9f:0x7 DW_TAG_variable
	.ascii	"\254\001"                      # DW_AT_location
	.long	2191                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0xda6:0x7 DW_TAG_variable
	.ascii	"\255\001"                      # DW_AT_location
	.long	2209                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0xdad:0x7 DW_TAG_variable
	.ascii	"\256\001"                      # DW_AT_location
	.long	2218                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0xdb4:0x7 DW_TAG_variable
	.ascii	"\257\001"                      # DW_AT_location
	.long	2200                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	31                              # Abbrev [31] 0xdbd:0x4c DW_TAG_inlined_subroutine
	.long	595                             # DW_AT_abstract_origin
	.byte	40                              # DW_AT_low_pc
	.long	.Ltmp787-.Ltmp759               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	656                             # DW_AT_call_line
	.byte	2                               # DW_AT_call_column
	.byte	32                              # Abbrev [32] 0xdcb:0x8 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_location
	.byte	145
	.byte	96
	.long	599                             # DW_AT_abstract_origin
	.byte	38                              # Abbrev [38] 0xdd3:0x35 DW_TAG_inlined_subroutine
	.long	608                             # DW_AT_abstract_origin
	.byte	41                              # DW_AT_low_pc
	.long	.Ltmp787-.Ltmp765               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	157                             # DW_AT_call_line
	.byte	3                               # DW_AT_call_column
	.byte	32                              # Abbrev [32] 0xde0:0x8 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_location
	.byte	145
	.byte	96
	.long	612                             # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0xde8:0x7 DW_TAG_variable
	.ascii	"\260\001"                      # DW_AT_location
	.long	620                             # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0xdef:0x7 DW_TAG_variable
	.ascii	"\262\001"                      # DW_AT_location
	.long	628                             # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0xdf6:0x7 DW_TAG_variable
	.ascii	"\263\001"                      # DW_AT_location
	.long	636                             # DW_AT_abstract_origin
	.byte	37                              # Abbrev [37] 0xdfd:0xa DW_TAG_lexical_block
	.byte	31                              # DW_AT_ranges
	.byte	36                              # Abbrev [36] 0xdff:0x7 DW_TAG_variable
	.ascii	"\261\001"                      # DW_AT_location
	.long	645                             # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	43                              # Abbrev [43] 0xe09:0x1a DW_TAG_inlined_subroutine
	.long	595                             # DW_AT_abstract_origin
	.byte	42                              # DW_AT_low_pc
	.long	.Ltmp789-.Ltmp787               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	0                               # DW_AT_call_line
	.byte	44                              # Abbrev [44] 0xe15:0xd DW_TAG_inlined_subroutine
	.long	608                             # DW_AT_abstract_origin
	.byte	42                              # DW_AT_low_pc
	.long	.Ltmp789-.Ltmp787               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	157                             # DW_AT_call_line
	.byte	3                               # DW_AT_call_column
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	39                              # Abbrev [39] 0xe24:0x157 DW_TAG_subprogram
	.byte	43                              # DW_AT_low_pc
	.long	.Lfunc_end8-.Lfunc_begin8       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	77                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	661                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	40                              # Abbrev [40] 0xe30:0xb DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.byte	11                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	661                             # DW_AT_decl_line
	.long	483                             # DW_AT_type
	.byte	28                              # Abbrev [28] 0xe3b:0xb DW_TAG_formal_parameter
	.ascii	"\272\001"                      # DW_AT_location
	.byte	89                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	661                             # DW_AT_decl_line
	.long	76                              # DW_AT_type
	.byte	37                              # Abbrev [37] 0xe46:0x134 DW_TAG_lexical_block
	.byte	32                              # DW_AT_ranges
	.byte	29                              # Abbrev [29] 0xe48:0xb DW_TAG_variable
	.ascii	"\273\001"                      # DW_AT_location
	.byte	52                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	664                             # DW_AT_decl_line
	.long	76                              # DW_AT_type
	.byte	29                              # Abbrev [29] 0xe53:0xb DW_TAG_variable
	.ascii	"\274\001"                      # DW_AT_location
	.byte	54                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	664                             # DW_AT_decl_line
	.long	585                             # DW_AT_type
	.byte	29                              # Abbrev [29] 0xe5e:0xb DW_TAG_variable
	.ascii	"\275\001"                      # DW_AT_location
	.byte	85                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	666                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	29                              # Abbrev [29] 0xe69:0xb DW_TAG_variable
	.ascii	"\276\001"                      # DW_AT_location
	.byte	86                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	666                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	29                              # Abbrev [29] 0xe74:0xb DW_TAG_variable
	.ascii	"\277\001"                      # DW_AT_location
	.byte	87                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	666                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	29                              # Abbrev [29] 0xe7f:0xb DW_TAG_variable
	.ascii	"\300\001"                      # DW_AT_location
	.byte	55                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	668                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	26                              # Abbrev [26] 0xe8a:0x9 DW_TAG_variable
	.byte	53                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	664                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	31                              # Abbrev [31] 0xe93:0x16 DW_TAG_inlined_subroutine
	.long	555                             # DW_AT_abstract_origin
	.byte	44                              # DW_AT_low_pc
	.long	.Ltmp832-.Ltmp831               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	664                             # DW_AT_call_line
	.byte	3                               # DW_AT_call_column
	.byte	32                              # Abbrev [32] 0xea1:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.long	559                             # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	30                              # Abbrev [30] 0xea9:0xe DW_TAG_inlined_subroutine
	.long	189                             # DW_AT_abstract_origin
	.byte	45                              # DW_AT_low_pc
	.long	.Ltmp836-.Ltmp835               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	664                             # DW_AT_call_line
	.byte	3                               # DW_AT_call_column
	.byte	33                              # Abbrev [33] 0xeb7:0x78 DW_TAG_inlined_subroutine
	.long	2548                            # DW_AT_abstract_origin
	.byte	33                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	674                             # DW_AT_call_line
	.byte	3                               # DW_AT_call_column
	.byte	34                              # Abbrev [34] 0xec1:0x7 DW_TAG_formal_parameter
	.ascii	"\302\001"                      # DW_AT_location
	.long	2553                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0xec8:0x7 DW_TAG_formal_parameter
	.ascii	"\303\001"                      # DW_AT_location
	.long	2571                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0xecf:0x7 DW_TAG_formal_parameter
	.ascii	"\304\001"                      # DW_AT_location
	.long	2580                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0xed6:0x7 DW_TAG_formal_parameter
	.ascii	"\305\001"                      # DW_AT_location
	.long	2589                            # DW_AT_abstract_origin
	.byte	32                              # Abbrev [32] 0xedd:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	84
	.long	2598                            # DW_AT_abstract_origin
	.byte	32                              # Abbrev [32] 0xee4:0x8 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_location
	.byte	145
	.byte	120
	.long	2607                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0xeec:0x7 DW_TAG_formal_parameter
	.ascii	"\301\001"                      # DW_AT_location
	.long	2616                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0xef3:0x7 DW_TAG_variable
	.ascii	"\306\001"                      # DW_AT_location
	.long	2625                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0xefa:0x7 DW_TAG_variable
	.ascii	"\307\001"                      # DW_AT_location
	.long	2634                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0xf01:0x7 DW_TAG_variable
	.ascii	"\310\001"                      # DW_AT_location
	.long	2643                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0xf08:0x7 DW_TAG_variable
	.ascii	"\311\001"                      # DW_AT_location
	.long	2652                            # DW_AT_abstract_origin
	.byte	37                              # Abbrev [37] 0xf0f:0x1f DW_TAG_lexical_block
	.byte	34                              # DW_AT_ranges
	.byte	36                              # Abbrev [36] 0xf11:0x7 DW_TAG_variable
	.ascii	"\312\001"                      # DW_AT_location
	.long	2662                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0xf18:0x7 DW_TAG_variable
	.ascii	"\313\001"                      # DW_AT_location
	.long	2671                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0xf1f:0x7 DW_TAG_variable
	.ascii	"\314\001"                      # DW_AT_location
	.long	2680                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0xf26:0x7 DW_TAG_variable
	.ascii	"\315\001"                      # DW_AT_location
	.long	2689                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	31                              # Abbrev [31] 0xf2f:0x4a DW_TAG_inlined_subroutine
	.long	595                             # DW_AT_abstract_origin
	.byte	46                              # DW_AT_low_pc
	.long	.Ltmp922-.Ltmp894               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	674                             # DW_AT_call_line
	.byte	3                               # DW_AT_call_column
	.byte	32                              # Abbrev [32] 0xf3d:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.long	599                             # DW_AT_abstract_origin
	.byte	38                              # Abbrev [38] 0xf44:0x34 DW_TAG_inlined_subroutine
	.long	608                             # DW_AT_abstract_origin
	.byte	47                              # DW_AT_low_pc
	.long	.Ltmp922-.Ltmp900               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	157                             # DW_AT_call_line
	.byte	3                               # DW_AT_call_column
	.byte	32                              # Abbrev [32] 0xf51:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.long	612                             # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0xf58:0x7 DW_TAG_variable
	.ascii	"\316\001"                      # DW_AT_location
	.long	620                             # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0xf5f:0x7 DW_TAG_variable
	.ascii	"\320\001"                      # DW_AT_location
	.long	628                             # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0xf66:0x7 DW_TAG_variable
	.ascii	"\321\001"                      # DW_AT_location
	.long	636                             # DW_AT_abstract_origin
	.byte	37                              # Abbrev [37] 0xf6d:0xa DW_TAG_lexical_block
	.byte	35                              # DW_AT_ranges
	.byte	36                              # Abbrev [36] 0xf6f:0x7 DW_TAG_variable
	.ascii	"\317\001"                      # DW_AT_location
	.long	645                             # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0xf7b:0x280 DW_TAG_subprogram
	.byte	48                              # DW_AT_low_pc
	.long	.Lfunc_end9-.Lfunc_begin9       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	78                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	683                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	76                              # DW_AT_type
                                        # DW_AT_external
	.byte	28                              # Abbrev [28] 0xf8b:0xb DW_TAG_formal_parameter
	.ascii	"\322\001"                      # DW_AT_location
	.byte	11                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	683                             # DW_AT_decl_line
	.long	483                             # DW_AT_type
	.byte	28                              # Abbrev [28] 0xf96:0xb DW_TAG_formal_parameter
	.ascii	"\323\001"                      # DW_AT_location
	.byte	56                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	683                             # DW_AT_decl_line
	.long	488                             # DW_AT_type
	.byte	29                              # Abbrev [29] 0xfa1:0xb DW_TAG_variable
	.ascii	"\324\001"                      # DW_AT_location
	.byte	52                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	685                             # DW_AT_decl_line
	.long	76                              # DW_AT_type
	.byte	29                              # Abbrev [29] 0xfac:0xb DW_TAG_variable
	.ascii	"\325\001"                      # DW_AT_location
	.byte	54                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	685                             # DW_AT_decl_line
	.long	585                             # DW_AT_type
	.byte	29                              # Abbrev [29] 0xfb7:0xb DW_TAG_variable
	.ascii	"\326\001"                      # DW_AT_location
	.byte	84                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	685                             # DW_AT_decl_line
	.long	76                              # DW_AT_type
	.byte	29                              # Abbrev [29] 0xfc2:0xb DW_TAG_variable
	.ascii	"\327\001"                      # DW_AT_location
	.byte	85                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	687                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	29                              # Abbrev [29] 0xfcd:0xb DW_TAG_variable
	.ascii	"\330\001"                      # DW_AT_location
	.byte	86                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	687                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	29                              # Abbrev [29] 0xfd8:0xb DW_TAG_variable
	.ascii	"\331\001"                      # DW_AT_location
	.byte	90                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	687                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	29                              # Abbrev [29] 0xfe3:0xb DW_TAG_variable
	.ascii	"\332\001"                      # DW_AT_location
	.byte	87                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	687                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	29                              # Abbrev [29] 0xfee:0xb DW_TAG_variable
	.ascii	"\333\001"                      # DW_AT_location
	.byte	88                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	689                             # DW_AT_decl_line
	.long	76                              # DW_AT_type
	.byte	29                              # Abbrev [29] 0xff9:0xb DW_TAG_variable
	.ascii	"\334\001"                      # DW_AT_location
	.byte	91                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	690                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	29                              # Abbrev [29] 0x1004:0xb DW_TAG_variable
	.ascii	"\335\001"                      # DW_AT_location
	.byte	55                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	692                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	29                              # Abbrev [29] 0x100f:0xb DW_TAG_variable
	.ascii	"\336\001"                      # DW_AT_location
	.byte	57                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	698                             # DW_AT_decl_line
	.long	76                              # DW_AT_type
	.byte	26                              # Abbrev [26] 0x101a:0x9 DW_TAG_variable
	.byte	53                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	685                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	30                              # Abbrev [30] 0x1023:0xe DW_TAG_inlined_subroutine
	.long	189                             # DW_AT_abstract_origin
	.byte	49                              # DW_AT_low_pc
	.long	.Ltmp925-.Ltmp924               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	685                             # DW_AT_call_line
	.byte	2                               # DW_AT_call_column
	.byte	31                              # Abbrev [31] 0x1031:0x16 DW_TAG_inlined_subroutine
	.long	555                             # DW_AT_abstract_origin
	.byte	50                              # DW_AT_low_pc
	.long	.Ltmp931-.Ltmp930               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	685                             # DW_AT_call_line
	.byte	2                               # DW_AT_call_column
	.byte	32                              # Abbrev [32] 0x103f:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.long	559                             # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	30                              # Abbrev [30] 0x1047:0xe DW_TAG_inlined_subroutine
	.long	568                             # DW_AT_abstract_origin
	.byte	51                              # DW_AT_low_pc
	.long	.Ltmp935-.Ltmp933               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	685                             # DW_AT_call_line
	.byte	2                               # DW_AT_call_column
	.byte	33                              # Abbrev [33] 0x1055:0x78 DW_TAG_inlined_subroutine
	.long	2548                            # DW_AT_abstract_origin
	.byte	36                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	722                             # DW_AT_call_line
	.byte	4                               # DW_AT_call_column
	.byte	32                              # Abbrev [32] 0x105f:0x8 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_location
	.byte	145
	.byte	104
	.long	2553                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x1067:0x7 DW_TAG_formal_parameter
	.ascii	"\340\001"                      # DW_AT_location
	.long	2571                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x106e:0x7 DW_TAG_formal_parameter
	.ascii	"\341\001"                      # DW_AT_location
	.long	2580                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x1075:0x7 DW_TAG_formal_parameter
	.ascii	"\342\001"                      # DW_AT_location
	.long	2589                            # DW_AT_abstract_origin
	.byte	32                              # Abbrev [32] 0x107c:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	91
	.long	2598                            # DW_AT_abstract_origin
	.byte	32                              # Abbrev [32] 0x1083:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	83
	.long	2607                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x108a:0x7 DW_TAG_formal_parameter
	.ascii	"\337\001"                      # DW_AT_location
	.long	2616                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x1091:0x7 DW_TAG_variable
	.ascii	"\343\001"                      # DW_AT_location
	.long	2625                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x1098:0x7 DW_TAG_variable
	.ascii	"\344\001"                      # DW_AT_location
	.long	2634                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x109f:0x7 DW_TAG_variable
	.ascii	"\345\001"                      # DW_AT_location
	.long	2643                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x10a6:0x7 DW_TAG_variable
	.ascii	"\346\001"                      # DW_AT_location
	.long	2652                            # DW_AT_abstract_origin
	.byte	37                              # Abbrev [37] 0x10ad:0x1f DW_TAG_lexical_block
	.byte	37                              # DW_AT_ranges
	.byte	36                              # Abbrev [36] 0x10af:0x7 DW_TAG_variable
	.ascii	"\347\001"                      # DW_AT_location
	.long	2662                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x10b6:0x7 DW_TAG_variable
	.ascii	"\350\001"                      # DW_AT_location
	.long	2671                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x10bd:0x7 DW_TAG_variable
	.ascii	"\351\001"                      # DW_AT_location
	.long	2680                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x10c4:0x7 DW_TAG_variable
	.ascii	"\352\001"                      # DW_AT_location
	.long	2689                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0x10cd:0x42 DW_TAG_inlined_subroutine
	.long	595                             # DW_AT_abstract_origin
	.byte	38                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	722                             # DW_AT_call_line
	.byte	4                               # DW_AT_call_column
	.byte	34                              # Abbrev [34] 0x10d7:0x7 DW_TAG_formal_parameter
	.ascii	"\353\001"                      # DW_AT_location
	.long	599                             # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x10de:0x30 DW_TAG_inlined_subroutine
	.long	608                             # DW_AT_abstract_origin
	.byte	39                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.byte	157                             # DW_AT_call_line
	.byte	3                               # DW_AT_call_column
	.byte	34                              # Abbrev [34] 0x10e7:0x7 DW_TAG_formal_parameter
	.ascii	"\354\001"                      # DW_AT_location
	.long	612                             # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x10ee:0x7 DW_TAG_variable
	.ascii	"\355\001"                      # DW_AT_location
	.long	620                             # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x10f5:0x7 DW_TAG_variable
	.ascii	"\357\001"                      # DW_AT_location
	.long	628                             # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x10fc:0x7 DW_TAG_variable
	.ascii	"\360\001"                      # DW_AT_location
	.long	636                             # DW_AT_abstract_origin
	.byte	37                              # Abbrev [37] 0x1103:0xa DW_TAG_lexical_block
	.byte	40                              # DW_AT_ranges
	.byte	36                              # Abbrev [36] 0x1105:0x7 DW_TAG_variable
	.ascii	"\356\001"                      # DW_AT_location
	.long	645                             # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0x110f:0x85 DW_TAG_inlined_subroutine
	.long	2055                            # DW_AT_abstract_origin
	.byte	41                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	730                             # DW_AT_call_line
	.byte	2                               # DW_AT_call_column
	.byte	34                              # Abbrev [34] 0x1119:0x7 DW_TAG_formal_parameter
	.ascii	"\362\001"                      # DW_AT_location
	.long	2064                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x1120:0x7 DW_TAG_formal_parameter
	.ascii	"\363\001"                      # DW_AT_location
	.long	2082                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x1127:0x7 DW_TAG_formal_parameter
	.ascii	"\364\001"                      # DW_AT_location
	.long	2091                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x112e:0x7 DW_TAG_formal_parameter
	.ascii	"\365\001"                      # DW_AT_location
	.long	2100                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x1135:0x7 DW_TAG_formal_parameter
	.ascii	"\366\001"                      # DW_AT_location
	.long	2109                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x113c:0x7 DW_TAG_formal_parameter
	.ascii	"\367\001"                      # DW_AT_location
	.long	2118                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x1143:0x7 DW_TAG_formal_parameter
	.ascii	"\370\001"                      # DW_AT_location
	.long	2127                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x114a:0x7 DW_TAG_formal_parameter
	.ascii	"\361\001"                      # DW_AT_location
	.long	2136                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x1151:0x7 DW_TAG_formal_parameter
	.ascii	"\371\001"                      # DW_AT_location
	.long	2145                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x1158:0x7 DW_TAG_variable
	.ascii	"\372\001"                      # DW_AT_location
	.long	2154                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x115f:0x7 DW_TAG_variable
	.ascii	"\373\001"                      # DW_AT_location
	.long	2163                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x1166:0x7 DW_TAG_variable
	.ascii	"\374\001"                      # DW_AT_location
	.long	2172                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x116d:0x7 DW_TAG_variable
	.ascii	"\375\001"                      # DW_AT_location
	.long	2181                            # DW_AT_abstract_origin
	.byte	37                              # Abbrev [37] 0x1174:0x1f DW_TAG_lexical_block
	.byte	42                              # DW_AT_ranges
	.byte	36                              # Abbrev [36] 0x1176:0x7 DW_TAG_variable
	.ascii	"\376\001"                      # DW_AT_location
	.long	2191                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x117d:0x7 DW_TAG_variable
	.ascii	"\377\001"                      # DW_AT_location
	.long	2200                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x1184:0x7 DW_TAG_variable
	.ascii	"\200\002"                      # DW_AT_location
	.long	2209                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x118b:0x7 DW_TAG_variable
	.ascii	"\201\002"                      # DW_AT_location
	.long	2218                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	31                              # Abbrev [31] 0x1194:0x4c DW_TAG_inlined_subroutine
	.long	595                             # DW_AT_abstract_origin
	.byte	52                              # DW_AT_low_pc
	.long	.Ltmp1119-.Ltmp1091             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	730                             # DW_AT_call_line
	.byte	2                               # DW_AT_call_column
	.byte	32                              # Abbrev [32] 0x11a2:0x8 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_location
	.byte	145
	.byte	96
	.long	599                             # DW_AT_abstract_origin
	.byte	38                              # Abbrev [38] 0x11aa:0x35 DW_TAG_inlined_subroutine
	.long	608                             # DW_AT_abstract_origin
	.byte	53                              # DW_AT_low_pc
	.long	.Ltmp1119-.Ltmp1097             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	157                             # DW_AT_call_line
	.byte	3                               # DW_AT_call_column
	.byte	32                              # Abbrev [32] 0x11b7:0x8 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_location
	.byte	145
	.byte	96
	.long	612                             # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x11bf:0x7 DW_TAG_variable
	.ascii	"\202\002"                      # DW_AT_location
	.long	620                             # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x11c6:0x7 DW_TAG_variable
	.ascii	"\204\002"                      # DW_AT_location
	.long	628                             # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x11cd:0x7 DW_TAG_variable
	.ascii	"\205\002"                      # DW_AT_location
	.long	636                             # DW_AT_abstract_origin
	.byte	37                              # Abbrev [37] 0x11d4:0xa DW_TAG_lexical_block
	.byte	43                              # DW_AT_ranges
	.byte	36                              # Abbrev [36] 0x11d6:0x7 DW_TAG_variable
	.ascii	"\203\002"                      # DW_AT_location
	.long	645                             # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	43                              # Abbrev [43] 0x11e0:0x1a DW_TAG_inlined_subroutine
	.long	595                             # DW_AT_abstract_origin
	.byte	54                              # DW_AT_low_pc
	.long	.Ltmp1138-.Ltmp1136             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	0                               # DW_AT_call_line
	.byte	44                              # Abbrev [44] 0x11ec:0xd DW_TAG_inlined_subroutine
	.long	608                             # DW_AT_abstract_origin
	.byte	54                              # DW_AT_low_pc
	.long	.Ltmp1138-.Ltmp1136             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	157                             # DW_AT_call_line
	.byte	3                               # DW_AT_call_column
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	39                              # Abbrev [39] 0x11fb:0x162 DW_TAG_subprogram
	.byte	55                              # DW_AT_low_pc
	.long	.Lfunc_end10-.Lfunc_begin10     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	79                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	735                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	40                              # Abbrev [40] 0x1207:0xb DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.byte	11                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	735                             # DW_AT_decl_line
	.long	483                             # DW_AT_type
	.byte	28                              # Abbrev [28] 0x1212:0xb DW_TAG_formal_parameter
	.ascii	"\206\002"                      # DW_AT_location
	.byte	89                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	735                             # DW_AT_decl_line
	.long	76                              # DW_AT_type
	.byte	37                              # Abbrev [37] 0x121d:0x13f DW_TAG_lexical_block
	.byte	44                              # DW_AT_ranges
	.byte	29                              # Abbrev [29] 0x121f:0xb DW_TAG_variable
	.ascii	"\207\002"                      # DW_AT_location
	.byte	52                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	738                             # DW_AT_decl_line
	.long	76                              # DW_AT_type
	.byte	29                              # Abbrev [29] 0x122a:0xb DW_TAG_variable
	.ascii	"\210\002"                      # DW_AT_location
	.byte	54                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	738                             # DW_AT_decl_line
	.long	585                             # DW_AT_type
	.byte	29                              # Abbrev [29] 0x1235:0xb DW_TAG_variable
	.ascii	"\211\002"                      # DW_AT_location
	.byte	85                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	740                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	29                              # Abbrev [29] 0x1240:0xb DW_TAG_variable
	.ascii	"\212\002"                      # DW_AT_location
	.byte	86                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	740                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	29                              # Abbrev [29] 0x124b:0xb DW_TAG_variable
	.ascii	"\213\002"                      # DW_AT_location
	.byte	90                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	740                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	29                              # Abbrev [29] 0x1256:0xb DW_TAG_variable
	.ascii	"\214\002"                      # DW_AT_location
	.byte	87                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	740                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	29                              # Abbrev [29] 0x1261:0xb DW_TAG_variable
	.ascii	"\215\002"                      # DW_AT_location
	.byte	55                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	742                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	26                              # Abbrev [26] 0x126c:0x9 DW_TAG_variable
	.byte	53                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	738                             # DW_AT_decl_line
	.long	655                             # DW_AT_type
	.byte	31                              # Abbrev [31] 0x1275:0x16 DW_TAG_inlined_subroutine
	.long	555                             # DW_AT_abstract_origin
	.byte	56                              # DW_AT_low_pc
	.long	.Ltmp1141-.Ltmp1140             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	738                             # DW_AT_call_line
	.byte	3                               # DW_AT_call_column
	.byte	32                              # Abbrev [32] 0x1283:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.long	559                             # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	30                              # Abbrev [30] 0x128b:0xe DW_TAG_inlined_subroutine
	.long	189                             # DW_AT_abstract_origin
	.byte	57                              # DW_AT_low_pc
	.long	.Ltmp1145-.Ltmp1144             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	738                             # DW_AT_call_line
	.byte	3                               # DW_AT_call_column
	.byte	33                              # Abbrev [33] 0x1299:0x78 DW_TAG_inlined_subroutine
	.long	2548                            # DW_AT_abstract_origin
	.byte	45                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	749                             # DW_AT_call_line
	.byte	3                               # DW_AT_call_column
	.byte	34                              # Abbrev [34] 0x12a3:0x7 DW_TAG_formal_parameter
	.ascii	"\217\002"                      # DW_AT_location
	.long	2553                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x12aa:0x7 DW_TAG_formal_parameter
	.ascii	"\220\002"                      # DW_AT_location
	.long	2571                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x12b1:0x7 DW_TAG_formal_parameter
	.ascii	"\221\002"                      # DW_AT_location
	.long	2580                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x12b8:0x7 DW_TAG_formal_parameter
	.ascii	"\222\002"                      # DW_AT_location
	.long	2589                            # DW_AT_abstract_origin
	.byte	32                              # Abbrev [32] 0x12bf:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	84
	.long	2598                            # DW_AT_abstract_origin
	.byte	32                              # Abbrev [32] 0x12c6:0x8 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_location
	.byte	145
	.byte	120
	.long	2607                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x12ce:0x7 DW_TAG_formal_parameter
	.ascii	"\216\002"                      # DW_AT_location
	.long	2616                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x12d5:0x7 DW_TAG_variable
	.ascii	"\223\002"                      # DW_AT_location
	.long	2625                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x12dc:0x7 DW_TAG_variable
	.ascii	"\224\002"                      # DW_AT_location
	.long	2634                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x12e3:0x7 DW_TAG_variable
	.ascii	"\225\002"                      # DW_AT_location
	.long	2643                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x12ea:0x7 DW_TAG_variable
	.ascii	"\226\002"                      # DW_AT_location
	.long	2652                            # DW_AT_abstract_origin
	.byte	37                              # Abbrev [37] 0x12f1:0x1f DW_TAG_lexical_block
	.byte	46                              # DW_AT_ranges
	.byte	36                              # Abbrev [36] 0x12f3:0x7 DW_TAG_variable
	.ascii	"\227\002"                      # DW_AT_location
	.long	2662                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x12fa:0x7 DW_TAG_variable
	.ascii	"\230\002"                      # DW_AT_location
	.long	2671                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x1301:0x7 DW_TAG_variable
	.ascii	"\231\002"                      # DW_AT_location
	.long	2680                            # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x1308:0x7 DW_TAG_variable
	.ascii	"\232\002"                      # DW_AT_location
	.long	2689                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	31                              # Abbrev [31] 0x1311:0x4a DW_TAG_inlined_subroutine
	.long	595                             # DW_AT_abstract_origin
	.byte	58                              # DW_AT_low_pc
	.long	.Ltmp1233-.Ltmp1205             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	749                             # DW_AT_call_line
	.byte	3                               # DW_AT_call_column
	.byte	32                              # Abbrev [32] 0x131f:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.long	599                             # DW_AT_abstract_origin
	.byte	38                              # Abbrev [38] 0x1326:0x34 DW_TAG_inlined_subroutine
	.long	608                             # DW_AT_abstract_origin
	.byte	59                              # DW_AT_low_pc
	.long	.Ltmp1233-.Ltmp1211             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	157                             # DW_AT_call_line
	.byte	3                               # DW_AT_call_column
	.byte	32                              # Abbrev [32] 0x1333:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.long	612                             # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x133a:0x7 DW_TAG_variable
	.ascii	"\233\002"                      # DW_AT_location
	.long	620                             # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x1341:0x7 DW_TAG_variable
	.ascii	"\235\002"                      # DW_AT_location
	.long	628                             # DW_AT_abstract_origin
	.byte	36                              # Abbrev [36] 0x1348:0x7 DW_TAG_variable
	.ascii	"\236\002"                      # DW_AT_location
	.long	636                             # DW_AT_abstract_origin
	.byte	37                              # Abbrev [37] 0x134f:0xa DW_TAG_lexical_block
	.byte	47                              # DW_AT_ranges
	.byte	36                              # Abbrev [36] 0x1351:0x7 DW_TAG_variable
	.ascii	"\234\002"                      # DW_AT_location
	.long	645                             # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
.Ldebug_info_end0:
	.section	.debug_rnglists,"",@progbits
	.long	.Ldebug_list_header_end1-.Ldebug_list_header_start1 # Length
.Ldebug_list_header_start1:
	.short	5                               # Version
	.byte	8                               # Address size
	.byte	0                               # Segment selector size
	.long	48                              # Offset entry count
.Lrnglists_table_base0:
	.long	.Ldebug_ranges0-.Lrnglists_table_base0
	.long	.Ldebug_ranges1-.Lrnglists_table_base0
	.long	.Ldebug_ranges2-.Lrnglists_table_base0
	.long	.Ldebug_ranges3-.Lrnglists_table_base0
	.long	.Ldebug_ranges4-.Lrnglists_table_base0
	.long	.Ldebug_ranges5-.Lrnglists_table_base0
	.long	.Ldebug_ranges6-.Lrnglists_table_base0
	.long	.Ldebug_ranges7-.Lrnglists_table_base0
	.long	.Ldebug_ranges8-.Lrnglists_table_base0
	.long	.Ldebug_ranges9-.Lrnglists_table_base0
	.long	.Ldebug_ranges10-.Lrnglists_table_base0
	.long	.Ldebug_ranges11-.Lrnglists_table_base0
	.long	.Ldebug_ranges12-.Lrnglists_table_base0
	.long	.Ldebug_ranges13-.Lrnglists_table_base0
	.long	.Ldebug_ranges14-.Lrnglists_table_base0
	.long	.Ldebug_ranges15-.Lrnglists_table_base0
	.long	.Ldebug_ranges16-.Lrnglists_table_base0
	.long	.Ldebug_ranges17-.Lrnglists_table_base0
	.long	.Ldebug_ranges18-.Lrnglists_table_base0
	.long	.Ldebug_ranges19-.Lrnglists_table_base0
	.long	.Ldebug_ranges20-.Lrnglists_table_base0
	.long	.Ldebug_ranges21-.Lrnglists_table_base0
	.long	.Ldebug_ranges22-.Lrnglists_table_base0
	.long	.Ldebug_ranges23-.Lrnglists_table_base0
	.long	.Ldebug_ranges24-.Lrnglists_table_base0
	.long	.Ldebug_ranges25-.Lrnglists_table_base0
	.long	.Ldebug_ranges26-.Lrnglists_table_base0
	.long	.Ldebug_ranges27-.Lrnglists_table_base0
	.long	.Ldebug_ranges28-.Lrnglists_table_base0
	.long	.Ldebug_ranges29-.Lrnglists_table_base0
	.long	.Ldebug_ranges30-.Lrnglists_table_base0
	.long	.Ldebug_ranges31-.Lrnglists_table_base0
	.long	.Ldebug_ranges32-.Lrnglists_table_base0
	.long	.Ldebug_ranges33-.Lrnglists_table_base0
	.long	.Ldebug_ranges34-.Lrnglists_table_base0
	.long	.Ldebug_ranges35-.Lrnglists_table_base0
	.long	.Ldebug_ranges36-.Lrnglists_table_base0
	.long	.Ldebug_ranges37-.Lrnglists_table_base0
	.long	.Ldebug_ranges38-.Lrnglists_table_base0
	.long	.Ldebug_ranges39-.Lrnglists_table_base0
	.long	.Ldebug_ranges40-.Lrnglists_table_base0
	.long	.Ldebug_ranges41-.Lrnglists_table_base0
	.long	.Ldebug_ranges42-.Lrnglists_table_base0
	.long	.Ldebug_ranges43-.Lrnglists_table_base0
	.long	.Ldebug_ranges44-.Lrnglists_table_base0
	.long	.Ldebug_ranges45-.Lrnglists_table_base0
	.long	.Ldebug_ranges46-.Lrnglists_table_base0
	.long	.Ldebug_ranges47-.Lrnglists_table_base0
.Ldebug_ranges0:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp57-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp73-.Lfunc_begin0          #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp152-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp168-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges1:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp64-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp73-.Lfunc_begin0          #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp152-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp167-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges2:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp66-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp68-.Lfunc_begin0          #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp69-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp73-.Lfunc_begin0          #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp152-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp165-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges3:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp79-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp102-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp106-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp108-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp110-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp114-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges4:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp92-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp102-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp106-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp108-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges5:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp125-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp127-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp128-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp145-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges6:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp169-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp170-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp171-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp215-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges7:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp195-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp197-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp198-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp213-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges8:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp269-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp286-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp361-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp377-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges9:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp277-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp286-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp361-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp377-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges10:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp279-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp281-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp282-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp286-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp361-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp375-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges11:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp290-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp296-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp298-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp328-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges12:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp291-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp296-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp298-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp316-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp320-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp322-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp324-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp328-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges13:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp306-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp316-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp320-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp322-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges14:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp339-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp341-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp342-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp359-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges15:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp379-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp380-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp381-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp426-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges16:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp406-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp408-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp409-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp424-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges17:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp444-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp450-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp451-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp502-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp534-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp538-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges18:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp447-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp450-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp451-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp453-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp457-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp502-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp534-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp538-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges19:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp512-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp514-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp515-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp531-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges20:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp539-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp540-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp541-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp628-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges21:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp557-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp560-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp561-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp563-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp564-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp598-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges22:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp559-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp560-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp561-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp563-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp567-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp598-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges23:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp606-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp608-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp609-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp626-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges24:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp666-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp669-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp670-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp698-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp789-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp791-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges25:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp668-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp669-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp670-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp672-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp674-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp698-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp789-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp791-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges26:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp792-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp798-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp804-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp813-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp817-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp830-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges27:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp804-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp813-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp817-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp830-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges28:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp806-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp808-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp809-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp813-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp817-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp830-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges29:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp702-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp757-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp800-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp804-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges30:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp704-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp708-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp710-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp757-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp800-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp804-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges31:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp767-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp769-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp770-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp787-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges32:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp831-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp832-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp833-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp922-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges33:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp852-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp856-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp857-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp859-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp860-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp894-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges34:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp855-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp856-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp857-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp859-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp863-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp894-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges35:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp902-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp904-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp905-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp920-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges36:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp976-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp978-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp980-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp1011-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges37:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp977-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp978-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp980-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp982-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp983-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp1011-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges38:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1012-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1027-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1123-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1136-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges39:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1018-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1027-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1123-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1136-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges40:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1020-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1022-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1023-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1027-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1123-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1136-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges41:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1031-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1035-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1037-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1039-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1042-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1089-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1120-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1123-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges42:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1033-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1035-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1037-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1039-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1043-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1089-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1120-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1123-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges43:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1099-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1101-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1102-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1119-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges44:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1140-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1141-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1142-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1233-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges45:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1162-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1166-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1167-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1170-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1171-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1205-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges46:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1165-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1166-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1167-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1170-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1174-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1205-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges47:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1213-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1215-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1216-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1231-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_list_header_end1:
	.section	.debug_str_offsets,"",@progbits
	.long	372                             # Length of String Offsets Set
	.short	5
	.short	0
.Lstr_offsets_base0:
	.section	.debug_str,"MS",@progbits,1
.Linfo_string0:
	.asciz	"clang version 19.0.0git (git@github.com:QuqqU/GPUISel-llvm.git ed922481952e7fbe7b5da8613bc5ccf78f796536)" # string offset=0
.Linfo_string1:
	.asciz	"liblzma/lz/lz_encoder_mf.c"    # string offset=105
.Linfo_string2:
	.asciz	"/home/yjs/workspace/xz-test/src" # string offset=132
.Linfo_string3:
	.asciz	"unsigned int"                  # string offset=164
.Linfo_string4:
	.asciz	"LZMA_RUN"                      # string offset=177
.Linfo_string5:
	.asciz	"LZMA_SYNC_FLUSH"               # string offset=186
.Linfo_string6:
	.asciz	"LZMA_FULL_FLUSH"               # string offset=202
.Linfo_string7:
	.asciz	"LZMA_FINISH"                   # string offset=218
.Linfo_string8:
	.asciz	"__uint32_t"                    # string offset=230
.Linfo_string9:
	.asciz	"uint32_t"                      # string offset=241
.Linfo_string10:
	.asciz	"mf_avail"                      # string offset=250
.Linfo_string11:
	.asciz	"mf"                            # string offset=259
.Linfo_string12:
	.asciz	"buffer"                        # string offset=262
.Linfo_string13:
	.asciz	"unsigned char"                 # string offset=269
.Linfo_string14:
	.asciz	"__uint8_t"                     # string offset=283
.Linfo_string15:
	.asciz	"uint8_t"                       # string offset=293
.Linfo_string16:
	.asciz	"size"                          # string offset=301
.Linfo_string17:
	.asciz	"keep_size_before"              # string offset=306
.Linfo_string18:
	.asciz	"keep_size_after"               # string offset=323
.Linfo_string19:
	.asciz	"offset"                        # string offset=339
.Linfo_string20:
	.asciz	"read_pos"                      # string offset=346
.Linfo_string21:
	.asciz	"read_ahead"                    # string offset=355
.Linfo_string22:
	.asciz	"read_limit"                    # string offset=366
.Linfo_string23:
	.asciz	"write_pos"                     # string offset=377
.Linfo_string24:
	.asciz	"pending"                       # string offset=387
.Linfo_string25:
	.asciz	"find"                          # string offset=395
.Linfo_string26:
	.asciz	"len"                           # string offset=400
.Linfo_string27:
	.asciz	"dist"                          # string offset=404
.Linfo_string28:
	.asciz	"lzma_match"                    # string offset=409
.Linfo_string29:
	.asciz	"skip"                          # string offset=420
.Linfo_string30:
	.asciz	"hash"                          # string offset=425
.Linfo_string31:
	.asciz	"son"                           # string offset=430
.Linfo_string32:
	.asciz	"cyclic_pos"                    # string offset=434
.Linfo_string33:
	.asciz	"cyclic_size"                   # string offset=445
.Linfo_string34:
	.asciz	"hash_mask"                     # string offset=457
.Linfo_string35:
	.asciz	"depth"                         # string offset=467
.Linfo_string36:
	.asciz	"nice_len"                      # string offset=473
.Linfo_string37:
	.asciz	"match_len_max"                 # string offset=482
.Linfo_string38:
	.asciz	"action"                        # string offset=496
.Linfo_string39:
	.asciz	"lzma_action"                   # string offset=503
.Linfo_string40:
	.asciz	"hash_size_sum"                 # string offset=515
.Linfo_string41:
	.asciz	"sons_count"                    # string offset=529
.Linfo_string42:
	.asciz	"lzma_mf_s"                     # string offset=540
.Linfo_string43:
	.asciz	"lzma_mf"                       # string offset=550
.Linfo_string44:
	.asciz	"move_pending"                  # string offset=558
.Linfo_string45:
	.asciz	"mf_ptr"                        # string offset=571
.Linfo_string46:
	.asciz	"move_pos"                      # string offset=578
.Linfo_string47:
	.asciz	"normalize"                     # string offset=587
.Linfo_string48:
	.asciz	"subvalue"                      # string offset=597
.Linfo_string49:
	.asciz	"count"                         # string offset=606
.Linfo_string50:
	.asciz	"i"                             # string offset=612
.Linfo_string51:
	.asciz	"hc_find_func"                  # string offset=614
.Linfo_string52:
	.asciz	"len_limit"                     # string offset=627
.Linfo_string53:
	.asciz	"pos"                           # string offset=637
.Linfo_string54:
	.asciz	"cur"                           # string offset=641
.Linfo_string55:
	.asciz	"cur_match"                     # string offset=645
.Linfo_string56:
	.asciz	"matches"                       # string offset=655
.Linfo_string57:
	.asciz	"len_best"                      # string offset=663
.Linfo_string58:
	.asciz	"pb"                            # string offset=672
.Linfo_string59:
	.asciz	"delta"                         # string offset=675
.Linfo_string60:
	.asciz	"bt_find_func"                  # string offset=681
.Linfo_string61:
	.asciz	"ptr0"                          # string offset=694
.Linfo_string62:
	.asciz	"ptr1"                          # string offset=699
.Linfo_string63:
	.asciz	"len0"                          # string offset=704
.Linfo_string64:
	.asciz	"len1"                          # string offset=709
.Linfo_string65:
	.asciz	"pair"                          # string offset=714
.Linfo_string66:
	.asciz	"bt_skip_func"                  # string offset=719
.Linfo_string67:
	.asciz	"DW_ATE_unsigned_32"            # string offset=732
.Linfo_string68:
	.asciz	"DW_ATE_unsigned_64"            # string offset=751
.Linfo_string69:
	.asciz	"lzma_mf_find"                  # string offset=770
.Linfo_string70:
	.asciz	"lzma_mf_hc3_find"              # string offset=783
.Linfo_string71:
	.asciz	"lzma_mf_hc3_skip"              # string offset=800
.Linfo_string72:
	.asciz	"lzma_mf_hc4_find"              # string offset=817
.Linfo_string73:
	.asciz	"lzma_mf_hc4_skip"              # string offset=834
.Linfo_string74:
	.asciz	"lzma_mf_bt2_find"              # string offset=851
.Linfo_string75:
	.asciz	"lzma_mf_bt2_skip"              # string offset=868
.Linfo_string76:
	.asciz	"lzma_mf_bt3_find"              # string offset=885
.Linfo_string77:
	.asciz	"lzma_mf_bt3_skip"              # string offset=902
.Linfo_string78:
	.asciz	"lzma_mf_bt4_find"              # string offset=919
.Linfo_string79:
	.asciz	"lzma_mf_bt4_skip"              # string offset=936
.Linfo_string80:
	.asciz	"count_ptr"                     # string offset=953
.Linfo_string81:
	.asciz	"limit"                         # string offset=963
.Linfo_string82:
	.asciz	"p1"                            # string offset=969
.Linfo_string83:
	.asciz	"p2"                            # string offset=972
.Linfo_string84:
	.asciz	"matches_count"                 # string offset=975
.Linfo_string85:
	.asciz	"temp"                          # string offset=989
.Linfo_string86:
	.asciz	"hash_2_value"                  # string offset=994
.Linfo_string87:
	.asciz	"hash_value"                    # string offset=1007
.Linfo_string88:
	.asciz	"delta2"                        # string offset=1018
.Linfo_string89:
	.asciz	"amount"                        # string offset=1025
.Linfo_string90:
	.asciz	"hash_3_value"                  # string offset=1032
.Linfo_string91:
	.asciz	"delta3"                        # string offset=1045
	.section	.debug_str_offsets,"",@progbits
	.long	.Linfo_string0
	.long	.Linfo_string1
	.long	.Linfo_string2
	.long	.Linfo_string3
	.long	.Linfo_string4
	.long	.Linfo_string5
	.long	.Linfo_string6
	.long	.Linfo_string7
	.long	.Linfo_string8
	.long	.Linfo_string9
	.long	.Linfo_string10
	.long	.Linfo_string11
	.long	.Linfo_string12
	.long	.Linfo_string13
	.long	.Linfo_string14
	.long	.Linfo_string15
	.long	.Linfo_string16
	.long	.Linfo_string17
	.long	.Linfo_string18
	.long	.Linfo_string19
	.long	.Linfo_string20
	.long	.Linfo_string21
	.long	.Linfo_string22
	.long	.Linfo_string23
	.long	.Linfo_string24
	.long	.Linfo_string25
	.long	.Linfo_string26
	.long	.Linfo_string27
	.long	.Linfo_string28
	.long	.Linfo_string29
	.long	.Linfo_string30
	.long	.Linfo_string31
	.long	.Linfo_string32
	.long	.Linfo_string33
	.long	.Linfo_string34
	.long	.Linfo_string35
	.long	.Linfo_string36
	.long	.Linfo_string37
	.long	.Linfo_string38
	.long	.Linfo_string39
	.long	.Linfo_string40
	.long	.Linfo_string41
	.long	.Linfo_string42
	.long	.Linfo_string43
	.long	.Linfo_string44
	.long	.Linfo_string45
	.long	.Linfo_string46
	.long	.Linfo_string47
	.long	.Linfo_string48
	.long	.Linfo_string49
	.long	.Linfo_string50
	.long	.Linfo_string51
	.long	.Linfo_string52
	.long	.Linfo_string53
	.long	.Linfo_string54
	.long	.Linfo_string55
	.long	.Linfo_string56
	.long	.Linfo_string57
	.long	.Linfo_string58
	.long	.Linfo_string59
	.long	.Linfo_string60
	.long	.Linfo_string61
	.long	.Linfo_string62
	.long	.Linfo_string63
	.long	.Linfo_string64
	.long	.Linfo_string65
	.long	.Linfo_string66
	.long	.Linfo_string67
	.long	.Linfo_string68
	.long	.Linfo_string69
	.long	.Linfo_string70
	.long	.Linfo_string71
	.long	.Linfo_string72
	.long	.Linfo_string73
	.long	.Linfo_string74
	.long	.Linfo_string75
	.long	.Linfo_string76
	.long	.Linfo_string77
	.long	.Linfo_string78
	.long	.Linfo_string79
	.long	.Linfo_string80
	.long	.Linfo_string81
	.long	.Linfo_string82
	.long	.Linfo_string83
	.long	.Linfo_string84
	.long	.Linfo_string85
	.long	.Linfo_string86
	.long	.Linfo_string87
	.long	.Linfo_string88
	.long	.Linfo_string89
	.long	.Linfo_string90
	.long	.Linfo_string91
	.section	.debug_addr,"",@progbits
	.long	.Ldebug_addr_end0-.Ldebug_addr_start0 # Length of contribution
.Ldebug_addr_start0:
	.short	5                               # DWARF version number
	.byte	8                               # Address size
	.byte	0                               # Segment selector size
.Laddr_table_base0:
	.quad	.Lfunc_begin0
	.quad	.Ltmp7
	.quad	.Ltmp2
	.quad	.Lfunc_begin1
	.quad	.Ltmp22
	.quad	.Ltmp28
	.quad	.Ltmp32
	.quad	.Ltmp78
	.quad	.Ltmp116
	.quad	.Ltmp123
	.quad	.Lfunc_begin2
	.quad	.Ltmp169
	.quad	.Ltmp173
	.quad	.Ltmp186
	.quad	.Ltmp193
	.quad	.Lfunc_begin3
	.quad	.Ltmp217
	.quad	.Ltmp223
	.quad	.Ltmp227
	.quad	.Ltmp330
	.quad	.Ltmp337
	.quad	.Lfunc_begin4
	.quad	.Ltmp379
	.quad	.Ltmp383
	.quad	.Ltmp397
	.quad	.Ltmp404
	.quad	.Lfunc_begin5
	.quad	.Ltmp428
	.quad	.Ltmp434
	.quad	.Ltmp504
	.quad	.Ltmp510
	.quad	.Lfunc_begin6
	.quad	.Ltmp539
	.quad	.Ltmp543
	.quad	.Ltmp598
	.quad	.Ltmp604
	.quad	.Lfunc_begin7
	.quad	.Ltmp630
	.quad	.Ltmp636
	.quad	.Ltmp639
	.quad	.Ltmp759
	.quad	.Ltmp765
	.quad	.Ltmp787
	.quad	.Lfunc_begin8
	.quad	.Ltmp831
	.quad	.Ltmp835
	.quad	.Ltmp894
	.quad	.Ltmp900
	.quad	.Lfunc_begin9
	.quad	.Ltmp924
	.quad	.Ltmp930
	.quad	.Ltmp933
	.quad	.Ltmp1091
	.quad	.Ltmp1097
	.quad	.Ltmp1136
	.quad	.Lfunc_begin10
	.quad	.Ltmp1140
	.quad	.Ltmp1144
	.quad	.Ltmp1205
	.quad	.Ltmp1211
.Ldebug_addr_end0:
	.ident	"clang version 19.0.0git (git@github.com:QuqqU/GPUISel-llvm.git ed922481952e7fbe7b5da8613bc5ccf78f796536)"
	.section	".note.GNU-stack","",@progbits
	.section	.debug_line,"",@progbits
.Lline_table_start0:
