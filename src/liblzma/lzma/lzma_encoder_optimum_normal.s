	.text
	.file	"lzma_encoder_optimum_normal.c"
	.file	0 "/home/yjs/workspace/xz-test/src" "liblzma/lzma/lzma_encoder_optimum_normal.c" md5 0x028fd9e067aa234247a048911b07b4da
	.file	1 "liblzma/api/lzma" "base.h" md5 0x81a3070447cc5b61b56cfbed076853db
	.file	2 "/usr/include/x86_64-linux-gnu/bits" "types.h" md5 0xd108b5f93a74c50510d7d9bc0ab36df9
	.file	3 "/usr/include/x86_64-linux-gnu/bits" "stdint-uintn.h" md5 0x2bf2ae53c58c01b1a1b9383b5195125c
	.file	4 "liblzma/rangecoder" "range_encoder.h" md5 0xe02ad9079871d268a82b8ebf2e7d385d
	.file	5 "/home/yjs/workspace" "GPUISel-llvm/build/lib/clang/19/include/__stddef_size_t.h" md5 0x2c44e821a2b1951cde2eb0fb2e656867
	.file	6 "liblzma/rangecoder" "range_common.h" md5 0x7d3e93a1bf35640522f499de026cfdad
	.file	7 "liblzma/lzma" "lzma_common.h" md5 0xce364754aa91e57f603599f25328df33
	.globl	lzma_lzma_optimum_normal        # -- Begin function lzma_lzma_optimum_normal
	.p2align	4, 0x90
	.type	lzma_lzma_optimum_normal,@function
lzma_lzma_optimum_normal:               # @lzma_lzma_optimum_normal
.Lfunc_begin0:
	.loc	0 827 0                         # liblzma/lzma/lzma_encoder_optimum_normal.c:827:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- $rdi
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- $rsi
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- $rdx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- $r8d
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$408, %rsp                      # imm = 0x198
	.cfi_def_cfa_offset 464
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
                                        # kill: def $r8d killed $r8d def $r8
	movq	%r8, 304(%rsp)                  # 8-byte Spill
.Ltmp0:
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	movq	%rcx, %r9
	movq	%rdx, %r15
	movq	%rdi, %r12
.Ltmp1:
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- $r12
	.loc	0 830 38 prologue_end           # liblzma/lzma/lzma_encoder_optimum_normal.c:830:38
	movl	69344(%rdi), %eax
	.loc	0 830 28 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:830:28
	cmpl	%eax, 69340(%rdi)
.Ltmp2:
	.loc	0 830 6                         # liblzma/lzma/lzma_encoder_optimum_normal.c:830:6
	jne	.LBB0_3
.Ltmp3:
# %bb.1:                                # %if.end
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- $r12
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- $rsi
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- $r15
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- $r12
	.loc	0 843 21 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:843:21
	cmpl	$0, 28(%rsi)
	movq	%r12, 136(%rsp)                 # 8-byte Spill
.Ltmp4:
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	.loc	0 0 21 is_stmt 0                # liblzma/lzma/lzma_encoder_optimum_normal.c:0:21
	movq	%r15, 200(%rsp)                 # 8-byte Spill
.Ltmp5:
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	movq	%rsi, 248(%rsp)                 # 8-byte Spill
.Ltmp6:
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	.loc	0 843 6                         # liblzma/lzma/lzma_encoder_optimum_normal.c:843:6
	je	.LBB0_5
.Ltmp7:
# %bb.2:                                # %if.end21.thread
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_res <- $rcx
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	.loc	0 286 32 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:286:32
	movl	96(%rsi), %r14d
.Ltmp8:
	#DEBUG_VALUE: helper1:nice_len <- $r14d
	.loc	0 296 26                        # liblzma/lzma/lzma_encoder_optimum_normal.c:296:26
	movl	2948(%r12), %ecx
.Ltmp9:
	#DEBUG_VALUE: helper1:len_res <- $r9
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $r9
	.loc	0 295 21                        # liblzma/lzma/lzma_encoder_optimum_normal.c:295:21
	movl	2952(%r12), %eax
.Ltmp10:
	#DEBUG_VALUE: helper1:len_main <- $eax
	.loc	0 0 21 is_stmt 0                # liblzma/lzma/lzma_encoder_optimum_normal.c:0:21
	movl	%eax, 12(%rsp)                  # 4-byte Spill
.Ltmp11:
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	.loc	0 296 17 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:296:17
	movl	%ecx, 196(%rsp)
	jmp	.LBB0_53
.Ltmp12:
.LBB0_3:                                # %if.then
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- $r12
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- $rsi
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- $r15
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- $r12
	.loc	0 832 53                        # liblzma/lzma/lzma_encoder_optimum_normal.c:832:53
	imulq	$44, %rax, %rcx
.Ltmp13:
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $r9
	movl	69368(%r12,%rcx), %edx
	.loc	0 833 5                         # liblzma/lzma/lzma_encoder_optimum_normal.c:833:5
	movl	%edx, %esi
.Ltmp14:
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_LLVM_entry_value 1] $rsi
	subl	%eax, %esi
	.loc	0 832 12                        # liblzma/lzma/lzma_encoder_optimum_normal.c:832:12
	movl	%esi, (%r9)
	.loc	0 834 54                        # liblzma/lzma/lzma_encoder_optimum_normal.c:834:54
	movl	69372(%r12,%rcx), %eax
	.loc	0 834 13 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:834:13
	movl	%eax, (%r15)
	.loc	0 835 29 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:835:29
	movl	%edx, 69344(%r12)
.Ltmp15:
.LBB0_4:                                # %cleanup45
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	.loc	0 879 1 epilogue_begin          # liblzma/lzma/lzma_encoder_optimum_normal.c:879:1
	addq	$408, %rsp                      # imm = 0x198
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp16:
.LBB0_5:                                # %if.then14
	.cfi_def_cfa_offset 464
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	.loc	0 844 32                        # liblzma/lzma/lzma_encoder_optimum_normal.c:844:32
	cmpl	$128, 69268(%r12)
.Ltmp17:
	.loc	0 844 7 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:844:7
	jb	.LBB0_48
.Ltmp18:
# %bb.6:                                # %if.then16
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_to_pos_state <- 0
	#DEBUG_VALUE: len_to_pos_state <- 0
	#DEBUG_VALUE: pos_slot_prices <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 66192, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: pos_slot <- 0
	.loc	0 0 7                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:7
	xorl	%eax, %eax
.Ltmp19:
	.loc	0 149 14 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:149:14
	cmpl	$0, 69264(%r12)
	movl	$0, %esi
.Ltmp20:
	.loc	0 148 3                         # liblzma/lzma/lzma_encoder_optimum_normal.c:148:3
	je	.LBB0_14
.Ltmp21:
# %bb.7:                                # %for.body5.i.preheader
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_to_pos_state <- 0
	#DEBUG_VALUE: pos_slot_prices <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 66192, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: pos_slot <- 0
	.loc	0 0 3 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:3
	movq	%r9, %r10
	xorl	%ecx, %ecx
.Ltmp22:
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $r10
	movq	lzma_rc_prices@GOTPCREL(%rip), %rdx
.Ltmp23:
	.p2align	4, 0x90
.LBB0_8:                                # %for.body5.i
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB0_9 Depth 2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $r10
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_to_pos_state <- 0
	#DEBUG_VALUE: pos_slot_prices <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 66192, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: pos_slot <- $rcx
	#DEBUG_VALUE: rc_bittree_price:probs <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 28412, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: rc_bittree_price:bit_levels <- 6
	#DEBUG_VALUE: rc_bittree_price:symbol <- $rcx
	#DEBUG_VALUE: rc_bittree_price:price <- 0
	.file	8 "liblzma/rangecoder" "price.h" md5 0x97acd9ecb91079df77ddfdfaeeb4fcaf
	.loc	8 56 9 is_stmt 1                # liblzma/rangecoder/price.h:56:9
	leal	64(%rcx), %r8d
.Ltmp24:
	#DEBUG_VALUE: rc_bittree_price:symbol <- $r8d
	.loc	8 0 9 is_stmt 0                 # liblzma/rangecoder/price.h:0:9
	xorl	%esi, %esi
.Ltmp25:
	.loc	8 60 10 is_stmt 1               # liblzma/rangecoder/price.h:60:10
	movl	%r8d, %edi
.Ltmp26:
	.p2align	4, 0x90
.LBB0_9:                                # %do.body.i.i
                                        #   Parent Loop BB0_8 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $r10
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_to_pos_state <- 0
	#DEBUG_VALUE: pos_slot_prices <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 66192, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: pos_slot <- $rcx
	#DEBUG_VALUE: rc_bittree_price:probs <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 28412, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: rc_bittree_price:bit_levels <- 6
	#DEBUG_VALUE: rc_bittree_price:symbol <- $r8d
	#DEBUG_VALUE: rc_bittree_price:symbol <- $r8d
	#DEBUG_VALUE: rc_bittree_price:price <- $esi
	.loc	8 59 31                         # liblzma/rangecoder/price.h:59:31
	movl	%r8d, %r9d
	andl	$1, %r9d
	negl	%r9d
.Ltmp27:
	#DEBUG_VALUE: bit <- undef
	.loc	8 60 10                         # liblzma/rangecoder/price.h:60:10
	shrl	%edi
.Ltmp28:
	#DEBUG_VALUE: rc_bittree_price:symbol <- $edi
	.loc	8 61 25                         # liblzma/rangecoder/price.h:61:25
	andl	$-2, %r8d
	movzwl	28412(%r12,%r8), %r8d
.Ltmp29:
	#DEBUG_VALUE: rc_bit_price:prob <- undef
	#DEBUG_VALUE: rc_bit_price:bit <- undef
	.loc	8 31 30                         # liblzma/rangecoder/price.h:31:30
	andl	$2032, %r9d                     # imm = 0x7F0
	xorl	%r8d, %r9d
	.loc	8 32 33                         # liblzma/rangecoder/price.h:32:33
	shrl	$4, %r9d
	.loc	8 31 9                          # liblzma/rangecoder/price.h:31:9
	movzbl	(%rdx,%r9), %r8d
.Ltmp30:
	.loc	8 61 9                          # liblzma/rangecoder/price.h:61:9
	addl	%r8d, %esi
.Ltmp31:
	#DEBUG_VALUE: rc_bittree_price:price <- $esi
	.loc	8 0 9 is_stmt 0                 # liblzma/rangecoder/price.h:0:9
	movl	%edi, %r8d
.Ltmp32:
	.loc	8 62 18 is_stmt 1               # liblzma/rangecoder/price.h:62:18
	cmpl	$1, %edi
.Ltmp33:
	.loc	8 62 2 is_stmt 0                # liblzma/rangecoder/price.h:62:2
	jne	.LBB0_9
.Ltmp34:
# %bb.10:                               # %rc_bittree_price.exit.i
                                        #   in Loop: Header=BB0_8 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $r10
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_to_pos_state <- 0
	#DEBUG_VALUE: pos_slot_prices <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 66192, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: pos_slot <- $rcx
	.loc	0 150 30 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:150:30
	movl	%esi, 66192(%r12,%rcx,4)
	.loc	0 149 40                        # liblzma/lzma/lzma_encoder_optimum_normal.c:149:40
	incq	%rcx
.Ltmp35:
	#DEBUG_VALUE: pos_slot <- $rcx
	.loc	0 149 23 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:149:23
	movl	69264(%r12), %esi
	.loc	0 149 14                        # liblzma/lzma/lzma_encoder_optimum_normal.c:149:14
	cmpq	%rsi, %rcx
.Ltmp36:
	.loc	0 148 3 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:148:3
	jb	.LBB0_8
.Ltmp37:
# %bb.11:                               # %for.cond13.preheader.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $r10
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_to_pos_state <- 0
	#DEBUG_VALUE: pos_slot_prices <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 66192, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: pos_slot <- 14
	.loc	0 158 14                        # liblzma/lzma/lzma_encoder_optimum_normal.c:158:14
	cmpl	$15, %esi
	movq	%r10, %r9
.Ltmp38:
	.loc	0 157 3                         # liblzma/lzma/lzma_encoder_optimum_normal.c:157:3
	jb	.LBB0_14
.Ltmp39:
# %bb.12:                               # %for.body17.i.preheader
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $r9
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_to_pos_state <- 0
	#DEBUG_VALUE: pos_slot_prices <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 66192, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: pos_slot <- 14
	.loc	0 0 3 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:3
	movl	$16562, %edx                    # imm = 0x40B2
	movl	$112, %ecx
.Ltmp40:
	.p2align	4, 0x90
.LBB0_13:                               # %for.body17.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $r9
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_to_pos_state <- 0
	#DEBUG_VALUE: pos_slot_prices <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 66192, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: pos_slot <- [DW_OP_constu 16548, DW_OP_minus, DW_OP_stack_value] $rdx
	#DEBUG_VALUE: rc_direct_price:bits <- [DW_OP_constu 1, DW_OP_shr, DW_OP_plus_uconst 268435451, DW_OP_stack_value] $rdx
	.loc	8 89 15 is_stmt 1               # liblzma/rangecoder/price.h:89:15
	movl	%ecx, %esi
	andl	$-16, %esi
.Ltmp41:
	.loc	0 159 30                        # liblzma/lzma/lzma_encoder_optimum_normal.c:159:30
	movl	(%r12,%rdx,4), %edi
	addl	%edi, %esi
	addl	$-80, %esi
	movl	%esi, (%r12,%rdx,4)
.Ltmp42:
	#DEBUG_VALUE: pos_slot <- [DW_OP_constu 16547, DW_OP_minus, DW_OP_stack_value] $rdx
	.loc	0 158 23                        # liblzma/lzma/lzma_encoder_optimum_normal.c:158:23
	movl	69264(%r12), %esi
	.loc	0 158 14 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:158:14
	leaq	1(%rdx), %rdi
	addq	$-16547, %rdx                   # imm = 0xBF5D
.Ltmp43:
	addl	$8, %ecx
	cmpq	%rsi, %rdx
	movq	%rdi, %rdx
.Ltmp44:
	.loc	0 157 3 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:157:3
	jb	.LBB0_13
.Ltmp45:
.LBB0_14:                               # %for.cond25.preheader.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $r9
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_to_pos_state <- 0
	#DEBUG_VALUE: pos_slot_prices <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 66192, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- 3
	.loc	0 167 8                         # liblzma/lzma/lzma_encoder_optimum_normal.c:167:8
	movups	66192(%r12), %xmm0
	.loc	0 167 6 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:167:6
	movups	%xmm0, 67216(%r12)
.Ltmp46:
	#DEBUG_VALUE: i <- 4
	#DEBUG_VALUE: len_to_pos_state <- 1
	#DEBUG_VALUE: pos_slot_prices <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 66448, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: pos_slot <- 0
	.loc	0 149 14 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:149:14
	testl	%esi, %esi
.Ltmp47:
	.loc	0 148 3                         # liblzma/lzma/lzma_encoder_optimum_normal.c:148:3
	je	.LBB0_22
.Ltmp48:
# %bb.15:                               # %for.body5.lr.ph.1.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $r9
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_to_pos_state <- 1
	#DEBUG_VALUE: pos_slot_prices <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 66448, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: pos_slot <- 0
	#DEBUG_VALUE: i <- 4
	.loc	0 0 3 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:3
	xorl	%ecx, %ecx
	movq	lzma_rc_prices@GOTPCREL(%rip), %rdx
.Ltmp49:
	.p2align	4, 0x90
.LBB0_16:                               # %for.body5.1.i
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB0_17 Depth 2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $r9
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_to_pos_state <- 1
	#DEBUG_VALUE: pos_slot_prices <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 66448, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: pos_slot <- $rcx
	#DEBUG_VALUE: rc_bittree_price:probs <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 28540, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: rc_bittree_price:bit_levels <- 6
	#DEBUG_VALUE: rc_bittree_price:symbol <- $rcx
	#DEBUG_VALUE: rc_bittree_price:price <- 0
	.loc	8 56 9 is_stmt 1                # liblzma/rangecoder/price.h:56:9
	leal	64(%rcx), %edi
.Ltmp50:
	#DEBUG_VALUE: rc_bittree_price:symbol <- $edi
	.loc	8 0 9 is_stmt 0                 # liblzma/rangecoder/price.h:0:9
	xorl	%eax, %eax
.Ltmp51:
	.loc	8 60 10 is_stmt 1               # liblzma/rangecoder/price.h:60:10
	movl	%edi, %esi
.Ltmp52:
	.p2align	4, 0x90
.LBB0_17:                               # %do.body.i.1.i
                                        #   Parent Loop BB0_16 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $r9
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_to_pos_state <- 1
	#DEBUG_VALUE: pos_slot_prices <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 66448, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: pos_slot <- $rcx
	#DEBUG_VALUE: rc_bittree_price:probs <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 28540, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: rc_bittree_price:bit_levels <- 6
	#DEBUG_VALUE: rc_bittree_price:symbol <- $esi
	#DEBUG_VALUE: rc_bittree_price:symbol <- $edi
	#DEBUG_VALUE: rc_bittree_price:price <- $eax
	.loc	8 59 31                         # liblzma/rangecoder/price.h:59:31
	movl	%edi, %r8d
	andl	$1, %r8d
	negl	%r8d
.Ltmp53:
	#DEBUG_VALUE: bit <- undef
	.loc	8 60 10                         # liblzma/rangecoder/price.h:60:10
	shrl	%esi
.Ltmp54:
	#DEBUG_VALUE: rc_bittree_price:symbol <- $esi
	.loc	8 61 25                         # liblzma/rangecoder/price.h:61:25
	andl	$-2, %edi
	movzwl	28540(%r12,%rdi), %edi
.Ltmp55:
	#DEBUG_VALUE: rc_bit_price:prob <- undef
	#DEBUG_VALUE: rc_bit_price:bit <- undef
	.loc	8 31 30                         # liblzma/rangecoder/price.h:31:30
	andl	$2032, %r8d                     # imm = 0x7F0
	xorl	%edi, %r8d
	.loc	8 32 33                         # liblzma/rangecoder/price.h:32:33
	shrl	$4, %r8d
	.loc	8 31 9                          # liblzma/rangecoder/price.h:31:9
	movzbl	(%rdx,%r8), %edi
.Ltmp56:
	.loc	8 61 9                          # liblzma/rangecoder/price.h:61:9
	addl	%edi, %eax
.Ltmp57:
	#DEBUG_VALUE: rc_bittree_price:price <- $eax
	.loc	8 0 9 is_stmt 0                 # liblzma/rangecoder/price.h:0:9
	movl	%esi, %edi
.Ltmp58:
	.loc	8 62 18 is_stmt 1               # liblzma/rangecoder/price.h:62:18
	cmpl	$1, %esi
.Ltmp59:
	.loc	8 62 2 is_stmt 0                # liblzma/rangecoder/price.h:62:2
	jne	.LBB0_17
.Ltmp60:
# %bb.18:                               # %rc_bittree_price.exit.1.i
                                        #   in Loop: Header=BB0_16 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $r9
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_to_pos_state <- 1
	#DEBUG_VALUE: pos_slot_prices <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 66448, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: pos_slot <- $rcx
	.loc	0 150 30 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:150:30
	movl	%eax, 66448(%r12,%rcx,4)
	.loc	0 149 40                        # liblzma/lzma/lzma_encoder_optimum_normal.c:149:40
	incq	%rcx
.Ltmp61:
	#DEBUG_VALUE: pos_slot <- $rcx
	.loc	0 149 23 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:149:23
	movl	69264(%r12), %eax
	.loc	0 149 14                        # liblzma/lzma/lzma_encoder_optimum_normal.c:149:14
	cmpq	%rax, %rcx
.Ltmp62:
	.loc	0 148 3 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:148:3
	jb	.LBB0_16
.Ltmp63:
# %bb.19:                               # %for.cond13.preheader.1.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $r9
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_to_pos_state <- 1
	#DEBUG_VALUE: pos_slot_prices <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 66448, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: pos_slot <- 14
	.loc	0 158 14                        # liblzma/lzma/lzma_encoder_optimum_normal.c:158:14
	cmpl	$15, %eax
.Ltmp64:
	.loc	0 157 3                         # liblzma/lzma/lzma_encoder_optimum_normal.c:157:3
	jb	.LBB0_22
.Ltmp65:
# %bb.20:                               # %for.body17.1.i.preheader
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $r9
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_to_pos_state <- 1
	#DEBUG_VALUE: pos_slot_prices <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 66448, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: pos_slot <- 14
	.loc	0 0 3 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:3
	movl	$16626, %edx                    # imm = 0x40F2
	movl	$112, %ecx
.Ltmp66:
	.p2align	4, 0x90
.LBB0_21:                               # %for.body17.1.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $r9
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_to_pos_state <- 1
	#DEBUG_VALUE: pos_slot_prices <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 66448, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: pos_slot <- [DW_OP_constu 16612, DW_OP_minus, DW_OP_stack_value] $rdx
	#DEBUG_VALUE: rc_direct_price:bits <- [DW_OP_constu 1, DW_OP_shr, DW_OP_plus_uconst 268435451, DW_OP_stack_value] $rdx
	.loc	8 89 15 is_stmt 1               # liblzma/rangecoder/price.h:89:15
	movl	%ecx, %eax
	andl	$-16, %eax
.Ltmp67:
	.loc	0 159 30                        # liblzma/lzma/lzma_encoder_optimum_normal.c:159:30
	movl	(%r12,%rdx,4), %esi
	addl	%esi, %eax
	addl	$-80, %eax
	movl	%eax, (%r12,%rdx,4)
.Ltmp68:
	#DEBUG_VALUE: pos_slot <- [DW_OP_constu 16611, DW_OP_minus, DW_OP_stack_value] $rdx
	.loc	0 158 23                        # liblzma/lzma/lzma_encoder_optimum_normal.c:158:23
	movl	69264(%r12), %eax
	.loc	0 158 14 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:158:14
	leaq	1(%rdx), %rsi
	addq	$-16611, %rdx                   # imm = 0xBF1D
.Ltmp69:
	addl	$8, %ecx
	cmpq	%rax, %rdx
	movq	%rsi, %rdx
.Ltmp70:
	.loc	0 157 3 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:157:3
	jb	.LBB0_21
.Ltmp71:
.LBB0_22:                               # %for.cond25.preheader.1.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $r9
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_to_pos_state <- 1
	#DEBUG_VALUE: pos_slot_prices <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 66448, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: i <- 3
	.loc	0 167 8                         # liblzma/lzma/lzma_encoder_optimum_normal.c:167:8
	movups	66448(%r12), %xmm0
	.loc	0 167 6 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:167:6
	movups	%xmm0, 67728(%r12)
.Ltmp72:
	#DEBUG_VALUE: i <- 4
	#DEBUG_VALUE: len_to_pos_state <- 2
	#DEBUG_VALUE: pos_slot_prices <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 66704, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: pos_slot <- 0
	.loc	0 149 14 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:149:14
	testl	%eax, %eax
.Ltmp73:
	.loc	0 148 3                         # liblzma/lzma/lzma_encoder_optimum_normal.c:148:3
	je	.LBB0_30
.Ltmp74:
# %bb.23:                               # %for.body5.lr.ph.2.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $r9
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_to_pos_state <- 2
	#DEBUG_VALUE: pos_slot_prices <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 66704, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: pos_slot <- 0
	#DEBUG_VALUE: i <- 4
	.loc	0 0 3 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:3
	xorl	%eax, %eax
	movq	lzma_rc_prices@GOTPCREL(%rip), %rcx
.Ltmp75:
	.p2align	4, 0x90
.LBB0_24:                               # %for.body5.2.i
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB0_25 Depth 2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $r9
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_to_pos_state <- 2
	#DEBUG_VALUE: pos_slot_prices <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 66704, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: pos_slot <- $rax
	#DEBUG_VALUE: rc_bittree_price:probs <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 28668, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: rc_bittree_price:bit_levels <- 6
	#DEBUG_VALUE: rc_bittree_price:symbol <- $rax
	#DEBUG_VALUE: rc_bittree_price:price <- 0
	.loc	8 56 9 is_stmt 1                # liblzma/rangecoder/price.h:56:9
	leal	64(%rax), %edi
.Ltmp76:
	#DEBUG_VALUE: rc_bittree_price:symbol <- $edi
	.loc	8 0 9 is_stmt 0                 # liblzma/rangecoder/price.h:0:9
	xorl	%edx, %edx
.Ltmp77:
	.loc	8 60 10 is_stmt 1               # liblzma/rangecoder/price.h:60:10
	movl	%edi, %esi
.Ltmp78:
	.p2align	4, 0x90
.LBB0_25:                               # %do.body.i.2.i
                                        #   Parent Loop BB0_24 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $r9
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_to_pos_state <- 2
	#DEBUG_VALUE: pos_slot_prices <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 66704, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: pos_slot <- $rax
	#DEBUG_VALUE: rc_bittree_price:probs <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 28668, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: rc_bittree_price:bit_levels <- 6
	#DEBUG_VALUE: rc_bittree_price:symbol <- $esi
	#DEBUG_VALUE: rc_bittree_price:symbol <- $edi
	#DEBUG_VALUE: rc_bittree_price:price <- $edx
	.loc	8 59 31                         # liblzma/rangecoder/price.h:59:31
	movl	%edi, %r8d
	andl	$1, %r8d
	negl	%r8d
.Ltmp79:
	#DEBUG_VALUE: bit <- undef
	.loc	8 60 10                         # liblzma/rangecoder/price.h:60:10
	shrl	%esi
.Ltmp80:
	#DEBUG_VALUE: rc_bittree_price:symbol <- $esi
	.loc	8 61 25                         # liblzma/rangecoder/price.h:61:25
	andl	$-2, %edi
	movzwl	28668(%r12,%rdi), %edi
.Ltmp81:
	#DEBUG_VALUE: rc_bit_price:prob <- undef
	#DEBUG_VALUE: rc_bit_price:bit <- undef
	.loc	8 31 30                         # liblzma/rangecoder/price.h:31:30
	andl	$2032, %r8d                     # imm = 0x7F0
	xorl	%edi, %r8d
	.loc	8 32 33                         # liblzma/rangecoder/price.h:32:33
	shrl	$4, %r8d
	.loc	8 31 9                          # liblzma/rangecoder/price.h:31:9
	movzbl	(%rcx,%r8), %edi
.Ltmp82:
	.loc	8 61 9                          # liblzma/rangecoder/price.h:61:9
	addl	%edi, %edx
.Ltmp83:
	#DEBUG_VALUE: rc_bittree_price:price <- $edx
	.loc	8 0 9 is_stmt 0                 # liblzma/rangecoder/price.h:0:9
	movl	%esi, %edi
.Ltmp84:
	.loc	8 62 18 is_stmt 1               # liblzma/rangecoder/price.h:62:18
	cmpl	$1, %esi
.Ltmp85:
	.loc	8 62 2 is_stmt 0                # liblzma/rangecoder/price.h:62:2
	jne	.LBB0_25
.Ltmp86:
# %bb.26:                               # %rc_bittree_price.exit.2.i
                                        #   in Loop: Header=BB0_24 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $r9
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_to_pos_state <- 2
	#DEBUG_VALUE: pos_slot_prices <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 66704, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: pos_slot <- $rax
	.loc	0 150 30 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:150:30
	movl	%edx, 66704(%r12,%rax,4)
	.loc	0 149 40                        # liblzma/lzma/lzma_encoder_optimum_normal.c:149:40
	incq	%rax
.Ltmp87:
	#DEBUG_VALUE: pos_slot <- $rax
	.loc	0 149 23 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:149:23
	movl	69264(%r12), %edx
	.loc	0 149 14                        # liblzma/lzma/lzma_encoder_optimum_normal.c:149:14
	cmpq	%rdx, %rax
.Ltmp88:
	.loc	0 148 3 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:148:3
	jb	.LBB0_24
.Ltmp89:
# %bb.27:                               # %for.cond13.preheader.2.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $r9
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_to_pos_state <- 2
	#DEBUG_VALUE: pos_slot_prices <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 66704, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: pos_slot <- 14
	.loc	0 158 14                        # liblzma/lzma/lzma_encoder_optimum_normal.c:158:14
	cmpl	$15, %edx
.Ltmp90:
	.loc	0 157 3                         # liblzma/lzma/lzma_encoder_optimum_normal.c:157:3
	jb	.LBB0_31
.Ltmp91:
# %bb.28:                               # %for.body17.2.i.preheader
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $r9
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_to_pos_state <- 2
	#DEBUG_VALUE: pos_slot_prices <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 66704, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: pos_slot <- 14
	.loc	0 0 3 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:3
	movl	$16690, %ecx                    # imm = 0x4132
	movl	$112, %eax
.Ltmp92:
	.p2align	4, 0x90
.LBB0_29:                               # %for.body17.2.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $r9
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_to_pos_state <- 2
	#DEBUG_VALUE: pos_slot_prices <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 66704, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: pos_slot <- [DW_OP_constu 16676, DW_OP_minus, DW_OP_stack_value] $rcx
	#DEBUG_VALUE: rc_direct_price:bits <- [DW_OP_constu 1, DW_OP_shr, DW_OP_plus_uconst 268435451, DW_OP_stack_value] $rcx
	.loc	8 89 15 is_stmt 1               # liblzma/rangecoder/price.h:89:15
	movl	%eax, %edx
	andl	$-16, %edx
.Ltmp93:
	.loc	0 159 30                        # liblzma/lzma/lzma_encoder_optimum_normal.c:159:30
	movl	(%r12,%rcx,4), %esi
	addl	%esi, %edx
	addl	$-80, %edx
	movl	%edx, (%r12,%rcx,4)
.Ltmp94:
	#DEBUG_VALUE: pos_slot <- [DW_OP_constu 16675, DW_OP_minus, DW_OP_stack_value] $rcx
	.loc	0 158 23                        # liblzma/lzma/lzma_encoder_optimum_normal.c:158:23
	movl	69264(%r12), %edx
	.loc	0 158 14 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:158:14
	leaq	1(%rcx), %rsi
	addq	$-16675, %rcx                   # imm = 0xBEDD
.Ltmp95:
	addl	$8, %eax
	cmpq	%rdx, %rcx
	movq	%rsi, %rcx
.Ltmp96:
	.loc	0 157 3 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:157:3
	jb	.LBB0_29
	jmp	.LBB0_31
.Ltmp97:
.LBB0_30:
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $r9
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_to_pos_state <- 2
	#DEBUG_VALUE: pos_slot_prices <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 66704, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: pos_slot <- 0
	#DEBUG_VALUE: i <- 4
	.loc	0 0 3 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:3
	xorl	%edx, %edx
.Ltmp98:
.LBB0_31:                               # %for.cond25.preheader.2.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $r9
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_to_pos_state <- 2
	#DEBUG_VALUE: pos_slot_prices <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 66704, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: i <- 3
	.loc	0 167 8 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:167:8
	movups	66704(%r12), %xmm0
	.loc	0 167 6 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:167:6
	movups	%xmm0, 68240(%r12)
.Ltmp99:
	#DEBUG_VALUE: i <- 4
	#DEBUG_VALUE: len_to_pos_state <- 3
	#DEBUG_VALUE: pos_slot_prices <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 66960, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: pos_slot <- 0
	.loc	0 149 14 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:149:14
	testl	%edx, %edx
.Ltmp100:
	.loc	0 148 3                         # liblzma/lzma/lzma_encoder_optimum_normal.c:148:3
	je	.LBB0_39
.Ltmp101:
# %bb.32:                               # %for.body5.lr.ph.3.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $r9
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_to_pos_state <- 3
	#DEBUG_VALUE: pos_slot_prices <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 66960, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: pos_slot <- 0
	#DEBUG_VALUE: i <- 4
	.loc	0 0 3 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:3
	xorl	%eax, %eax
	movq	lzma_rc_prices@GOTPCREL(%rip), %rcx
.Ltmp102:
	.p2align	4, 0x90
.LBB0_33:                               # %for.body5.3.i
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB0_34 Depth 2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $r9
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_to_pos_state <- 3
	#DEBUG_VALUE: pos_slot_prices <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 66960, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: pos_slot <- $rax
	#DEBUG_VALUE: rc_bittree_price:probs <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 28796, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: rc_bittree_price:bit_levels <- 6
	#DEBUG_VALUE: rc_bittree_price:symbol <- $rax
	#DEBUG_VALUE: rc_bittree_price:price <- 0
	.loc	8 56 9 is_stmt 1                # liblzma/rangecoder/price.h:56:9
	leal	64(%rax), %edi
.Ltmp103:
	#DEBUG_VALUE: rc_bittree_price:symbol <- $edi
	.loc	8 0 9 is_stmt 0                 # liblzma/rangecoder/price.h:0:9
	xorl	%edx, %edx
.Ltmp104:
	.loc	8 60 10 is_stmt 1               # liblzma/rangecoder/price.h:60:10
	movl	%edi, %esi
.Ltmp105:
	.p2align	4, 0x90
.LBB0_34:                               # %do.body.i.3.i
                                        #   Parent Loop BB0_33 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $r9
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_to_pos_state <- 3
	#DEBUG_VALUE: pos_slot_prices <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 66960, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: pos_slot <- $rax
	#DEBUG_VALUE: rc_bittree_price:probs <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 28796, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: rc_bittree_price:bit_levels <- 6
	#DEBUG_VALUE: rc_bittree_price:symbol <- $esi
	#DEBUG_VALUE: rc_bittree_price:symbol <- $edi
	#DEBUG_VALUE: rc_bittree_price:price <- $edx
	.loc	8 59 31                         # liblzma/rangecoder/price.h:59:31
	movl	%edi, %r8d
	andl	$1, %r8d
	negl	%r8d
.Ltmp106:
	#DEBUG_VALUE: bit <- undef
	.loc	8 60 10                         # liblzma/rangecoder/price.h:60:10
	shrl	%esi
.Ltmp107:
	#DEBUG_VALUE: rc_bittree_price:symbol <- $esi
	.loc	8 61 25                         # liblzma/rangecoder/price.h:61:25
	andl	$-2, %edi
	movzwl	28796(%r12,%rdi), %edi
.Ltmp108:
	#DEBUG_VALUE: rc_bit_price:prob <- undef
	#DEBUG_VALUE: rc_bit_price:bit <- undef
	.loc	8 31 30                         # liblzma/rangecoder/price.h:31:30
	andl	$2032, %r8d                     # imm = 0x7F0
	xorl	%edi, %r8d
	.loc	8 32 33                         # liblzma/rangecoder/price.h:32:33
	shrl	$4, %r8d
	.loc	8 31 9                          # liblzma/rangecoder/price.h:31:9
	movzbl	(%rcx,%r8), %edi
.Ltmp109:
	.loc	8 61 9                          # liblzma/rangecoder/price.h:61:9
	addl	%edi, %edx
.Ltmp110:
	#DEBUG_VALUE: rc_bittree_price:price <- $edx
	.loc	8 0 9 is_stmt 0                 # liblzma/rangecoder/price.h:0:9
	movl	%esi, %edi
.Ltmp111:
	.loc	8 62 18 is_stmt 1               # liblzma/rangecoder/price.h:62:18
	cmpl	$1, %esi
.Ltmp112:
	.loc	8 62 2 is_stmt 0                # liblzma/rangecoder/price.h:62:2
	jne	.LBB0_34
.Ltmp113:
# %bb.35:                               # %rc_bittree_price.exit.3.i
                                        #   in Loop: Header=BB0_33 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $r9
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_to_pos_state <- 3
	#DEBUG_VALUE: pos_slot_prices <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 66960, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: pos_slot <- $rax
	.loc	0 150 30 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:150:30
	movl	%edx, 66960(%r12,%rax,4)
	.loc	0 149 40                        # liblzma/lzma/lzma_encoder_optimum_normal.c:149:40
	incq	%rax
.Ltmp114:
	#DEBUG_VALUE: pos_slot <- $rax
	.loc	0 149 23 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:149:23
	movl	69264(%r12), %edx
	.loc	0 149 14                        # liblzma/lzma/lzma_encoder_optimum_normal.c:149:14
	cmpq	%rdx, %rax
.Ltmp115:
	.loc	0 148 3 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:148:3
	jb	.LBB0_33
.Ltmp116:
# %bb.36:                               # %for.cond13.preheader.3.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $r9
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_to_pos_state <- 3
	#DEBUG_VALUE: pos_slot_prices <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 66960, DW_OP_stack_value] $rsp
	.loc	0 158 14                        # liblzma/lzma/lzma_encoder_optimum_normal.c:158:14
	cmpl	$15, %edx
.Ltmp117:
	#DEBUG_VALUE: pos_slot <- 14
	.loc	0 157 3                         # liblzma/lzma/lzma_encoder_optimum_normal.c:157:3
	jb	.LBB0_39
.Ltmp118:
# %bb.37:                               # %for.body17.3.i.preheader
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $r9
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_to_pos_state <- 3
	#DEBUG_VALUE: pos_slot_prices <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 66960, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: pos_slot <- 14
	.loc	0 0 3 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:3
	movl	$16754, %ecx                    # imm = 0x4172
	movl	$112, %eax
.Ltmp119:
	.p2align	4, 0x90
.LBB0_38:                               # %for.body17.3.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $r9
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_to_pos_state <- 3
	#DEBUG_VALUE: pos_slot_prices <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 66960, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: pos_slot <- [DW_OP_constu 16740, DW_OP_minus, DW_OP_stack_value] $rcx
	#DEBUG_VALUE: rc_direct_price:bits <- [DW_OP_constu 1, DW_OP_shr, DW_OP_plus_uconst 268435451, DW_OP_stack_value] $rcx
	.loc	8 89 15 is_stmt 1               # liblzma/rangecoder/price.h:89:15
	movl	%eax, %edx
	andl	$-16, %edx
.Ltmp120:
	.loc	0 159 30                        # liblzma/lzma/lzma_encoder_optimum_normal.c:159:30
	movl	(%r12,%rcx,4), %esi
	addl	%esi, %edx
	addl	$-80, %edx
	movl	%edx, (%r12,%rcx,4)
.Ltmp121:
	#DEBUG_VALUE: pos_slot <- [DW_OP_constu 16739, DW_OP_minus, DW_OP_stack_value] $rcx
	.loc	0 158 23                        # liblzma/lzma/lzma_encoder_optimum_normal.c:158:23
	movl	69264(%r12), %edx
	.loc	0 158 14 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:158:14
	leaq	1(%rcx), %rsi
	addq	$-16739, %rcx                   # imm = 0xBE9D
.Ltmp122:
	addl	$8, %eax
	cmpq	%rdx, %rcx
	movq	%rsi, %rcx
.Ltmp123:
	.loc	0 157 3 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:157:3
	jb	.LBB0_38
.Ltmp124:
.LBB0_39:                               # %for.cond25.preheader.3.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $r9
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_to_pos_state <- 3
	#DEBUG_VALUE: pos_slot_prices <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 66960, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: i <- 3
	.loc	0 0 3 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:3
	movq	%r9, %r14
.Ltmp125:
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $r14
	.loc	0 167 8 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:167:8
	movups	66960(%r12), %xmm0
	.loc	0 167 6 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:167:6
	movups	%xmm0, 68752(%r12)
.Ltmp126:
	#DEBUG_VALUE: i <- 4
	#DEBUG_VALUE: len_to_pos_state <- 4
	.loc	0 0 6                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:6
	leaq	28924(%r12), %rax
	movl	$4, %esi
	#DEBUG_VALUE: i <- 4
	movq	lzma_rc_prices@GOTPCREL(%rip), %rdi
	jmp	.LBB0_41
.Ltmp127:
	.p2align	4, 0x90
.LBB0_40:                               # %for.cond57.preheader.i
                                        #   in Loop: Header=BB0_41 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $r14
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $rsi
	#DEBUG_VALUE: pos_slot <- $r8d
	#DEBUG_VALUE: len_to_pos_state <- 0
	movq	136(%rsp), %r12                 # 8-byte Reload
	movl	66192(%r12,%r8,4), %ecx
.Ltmp128:
	.loc	0 185 14 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:185:14
	addl	%r11d, %ecx
	.loc	0 185 6 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:185:6
	movl	%ecx, 67216(%r12,%rsi,4)
.Ltmp129:
	#DEBUG_VALUE: len_to_pos_state <- 1
	.loc	0 0 6                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:6
	movl	66448(%r12,%r8,4), %ecx
	.loc	0 185 14                        # liblzma/lzma/lzma_encoder_optimum_normal.c:185:14
	addl	%r11d, %ecx
	.loc	0 185 6                         # liblzma/lzma/lzma_encoder_optimum_normal.c:185:6
	movl	%ecx, 67728(%r12,%rsi,4)
.Ltmp130:
	#DEBUG_VALUE: len_to_pos_state <- 2
	.loc	0 0 6                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:6
	movl	66704(%r12,%r8,4), %ecx
	.loc	0 185 14                        # liblzma/lzma/lzma_encoder_optimum_normal.c:185:14
	addl	%r11d, %ecx
	.loc	0 185 6                         # liblzma/lzma/lzma_encoder_optimum_normal.c:185:6
	movl	%ecx, 68240(%r12,%rsi,4)
.Ltmp131:
	#DEBUG_VALUE: len_to_pos_state <- 3
	.loc	0 185 14                        # liblzma/lzma/lzma_encoder_optimum_normal.c:185:14
	addl	66960(%r12,%r8,4), %r11d
	.loc	0 185 6                         # liblzma/lzma/lzma_encoder_optimum_normal.c:185:6
	movl	%r11d, 68752(%r12,%rsi,4)
.Ltmp132:
	#DEBUG_VALUE: len_to_pos_state <- 4
	.loc	0 173 63 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:173:63
	incq	%rsi
.Ltmp133:
	#DEBUG_VALUE: i <- $rsi
	.loc	0 173 45 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:173:45
	cmpq	$128, %rsi
.Ltmp134:
	.loc	0 173 2                         # liblzma/lzma/lzma_encoder_optimum_normal.c:173:2
	je	.LBB0_47
.Ltmp135:
.LBB0_41:                               # %for.body45.i
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB0_44 Depth 2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $r14
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $rsi
	#DEBUG_VALUE: get_pos_slot:pos <- $rsi
	.file	9 "liblzma/lzma" "fastpos.h" md5 0xcbaa9cd9040be4a8dee21ea4da47c8df
	.loc	9 113 10 is_stmt 1              # liblzma/lzma/fastpos.h:113:10
	movq	lzma_fastpos@GOTPCREL(%rip), %rcx
	movzbl	(%rcx,%rsi), %r8d
.Ltmp136:
	#DEBUG_VALUE: pos_slot <- $r8d
	.loc	0 175 43                        # liblzma/lzma/lzma_encoder_optimum_normal.c:175:43
	movl	%r8d, %r11d
	shrl	%r11d
	.loc	0 175 49 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:175:49
	leal	-1(%r11), %ecx
.Ltmp137:
	#DEBUG_VALUE: footer_bits <- $ecx
	.loc	0 176 40 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:176:40
	movl	%r8d, %ebx
	andl	$1, %ebx
	.loc	0 176 28 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:176:28
	orl	$2, %ebx
	.loc	0 176 46                        # liblzma/lzma/lzma_encoder_optimum_normal.c:176:46
	shll	%cl, %ebx
.Ltmp138:
	#DEBUG_VALUE: base <- $ebx
	.loc	0 178 24 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:178:24
	leaq	(%rax,%rbx,2), %r9
	.loc	0 178 31 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:178:31
	leal	(%r8,%r8), %r10d
	subq	%r10, %r9
	.loc	0 178 42                        # liblzma/lzma/lzma_encoder_optimum_normal.c:178:42
	addq	$-2, %r9
	.loc	0 179 20 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:179:20
	movl	%esi, %edx
	subl	%ebx, %edx
.Ltmp139:
	#DEBUG_VALUE: rc_bittree_reverse_price:symbol <- $edx
	#DEBUG_VALUE: rc_bittree_reverse_price:probs <- $r9
	#DEBUG_VALUE: rc_bittree_reverse_price:bit_levels <- $ecx
	#DEBUG_VALUE: rc_bittree_reverse_price:price <- 0
	#DEBUG_VALUE: rc_bittree_reverse_price:model_index <- 1
	.loc	8 75 2                          # liblzma/rangecoder/price.h:75:2
	cmpl	$2, %r11d
	jne	.LBB0_43
.Ltmp140:
# %bb.42:                               #   in Loop: Header=BB0_41 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $r14
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $rsi
	#DEBUG_VALUE: pos_slot <- $r8d
	#DEBUG_VALUE: footer_bits <- $ecx
	#DEBUG_VALUE: base <- $ebx
	#DEBUG_VALUE: rc_bittree_reverse_price:symbol <- $edx
	#DEBUG_VALUE: rc_bittree_reverse_price:probs <- $r9
	#DEBUG_VALUE: rc_bittree_reverse_price:bit_levels <- $ecx
	#DEBUG_VALUE: rc_bittree_reverse_price:price <- 0
	#DEBUG_VALUE: rc_bittree_reverse_price:model_index <- 1
	.loc	8 0 2 is_stmt 0                 # liblzma/rangecoder/price.h:0:2
	movl	$1, %r15d
	xorl	%r11d, %r11d
	.loc	8 75 2                          # liblzma/rangecoder/price.h:75:2
	jmp	.LBB0_45
.Ltmp141:
	.p2align	4, 0x90
.LBB0_43:                               # %for.body45.i.new
                                        #   in Loop: Header=BB0_41 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $r14
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $rsi
	#DEBUG_VALUE: pos_slot <- $r8d
	#DEBUG_VALUE: footer_bits <- $ecx
	#DEBUG_VALUE: base <- $ebx
	#DEBUG_VALUE: rc_bittree_reverse_price:symbol <- $edx
	#DEBUG_VALUE: rc_bittree_reverse_price:probs <- $r9
	#DEBUG_VALUE: rc_bittree_reverse_price:bit_levels <- $ecx
	#DEBUG_VALUE: rc_bittree_reverse_price:price <- 0
	#DEBUG_VALUE: rc_bittree_reverse_price:model_index <- 1
	movl	%ecx, %ebx
.Ltmp142:
	andl	$-2, %ebx
	movl	$1, %r15d
	xorl	%r11d, %r11d
.Ltmp143:
	.p2align	4, 0x90
.LBB0_44:                               # %do.body.i115.i
                                        #   Parent Loop BB0_41 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $r14
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $rsi
	#DEBUG_VALUE: pos_slot <- $r8d
	#DEBUG_VALUE: footer_bits <- $ecx
	#DEBUG_VALUE: rc_bittree_reverse_price:symbol <- $edx
	#DEBUG_VALUE: rc_bittree_reverse_price:probs <- $r9
	#DEBUG_VALUE: rc_bittree_reverse_price:bit_levels <- undef
	#DEBUG_VALUE: rc_bittree_reverse_price:model_index <- $r15d
	#DEBUG_VALUE: rc_bittree_reverse_price:price <- $r11d
	#DEBUG_VALUE: rc_bittree_reverse_price:symbol <- $edx
	.loc	8 76 31 is_stmt 1               # liblzma/rangecoder/price.h:76:31
	movl	%edx, %r13d
	andl	$1, %r13d
.Ltmp144:
	#DEBUG_VALUE: bit <- $r13d
	#DEBUG_VALUE: rc_bittree_reverse_price:symbol <- undef
	#DEBUG_VALUE: rc_bit_price:bit <- $r13d
	#DEBUG_VALUE: rc_bittree_reverse_price:price <- undef
	.loc	8 79 36                         # liblzma/rangecoder/price.h:79:36
	leal	(%r13,%r15,2), %r12d
.Ltmp145:
	#DEBUG_VALUE: rc_bittree_reverse_price:model_index <- $r12d
                                        # kill: def $r13d killed $r13d killed $r13 def $r13
	.loc	8 76 31                         # liblzma/rangecoder/price.h:76:31
	negl	%r13d
.Ltmp146:
	.loc	8 77 10                         # liblzma/rangecoder/price.h:77:10
	movl	%edx, %r10d
	shrl	%r10d
.Ltmp147:
	#DEBUG_VALUE: rc_bittree_reverse_price:symbol <- $r10d
	.loc	8 78 25                         # liblzma/rangecoder/price.h:78:25
	movl	%r15d, %r15d
	movzwl	(%r9,%r15,2), %ebp
.Ltmp148:
	#DEBUG_VALUE: rc_bit_price:prob <- undef
	.loc	8 31 30                         # liblzma/rangecoder/price.h:31:30
	andl	$2032, %r13d                    # imm = 0x7F0
	xorl	%ebp, %r13d
	.loc	8 32 33                         # liblzma/rangecoder/price.h:32:33
	shrl	$4, %r13d
	.loc	8 31 9                          # liblzma/rangecoder/price.h:31:9
	movzbl	(%rdi,%r13), %ebp
.Ltmp149:
	.loc	8 78 9                          # liblzma/rangecoder/price.h:78:9
	addl	%r11d, %ebp
.Ltmp150:
	#DEBUG_VALUE: rc_bittree_reverse_price:price <- $ebp
	.loc	8 76 31                         # liblzma/rangecoder/price.h:76:31
	andl	$1, %r10d
.Ltmp151:
	#DEBUG_VALUE: bit <- $r10d
	#DEBUG_VALUE: rc_bittree_reverse_price:symbol <- undef
	#DEBUG_VALUE: rc_bit_price:bit <- $r10d
	#DEBUG_VALUE: rc_bittree_reverse_price:price <- undef
	.loc	8 79 36                         # liblzma/rangecoder/price.h:79:36
	leal	(%r10,%r12,2), %r15d
.Ltmp152:
	#DEBUG_VALUE: rc_bittree_reverse_price:model_index <- $r15d
                                        # kill: def $r10d killed $r10d killed $r10 def $r10
	.loc	8 76 31                         # liblzma/rangecoder/price.h:76:31
	negl	%r10d
.Ltmp153:
	.loc	8 77 10                         # liblzma/rangecoder/price.h:77:10
	shrl	$2, %edx
.Ltmp154:
	#DEBUG_VALUE: rc_bittree_reverse_price:symbol <- $edx
	.loc	8 78 25                         # liblzma/rangecoder/price.h:78:25
	movzwl	(%r9,%r12,2), %r11d
.Ltmp155:
	.loc	8 31 30                         # liblzma/rangecoder/price.h:31:30
	andl	$2032, %r10d                    # imm = 0x7F0
	xorl	%r11d, %r10d
	.loc	8 32 33                         # liblzma/rangecoder/price.h:32:33
	shrl	$4, %r10d
	.loc	8 31 9                          # liblzma/rangecoder/price.h:31:9
	movzbl	(%rdi,%r10), %r11d
.Ltmp156:
	.loc	8 78 9                          # liblzma/rangecoder/price.h:78:9
	addl	%ebp, %r11d
.Ltmp157:
	#DEBUG_VALUE: rc_bittree_reverse_price:price <- $r11d
	.loc	8 80 2                          # liblzma/rangecoder/price.h:80:2
	addl	$-2, %ebx
	jne	.LBB0_44
.Ltmp158:
.LBB0_45:                               # %for.cond57.preheader.i.unr-lcssa
                                        #   in Loop: Header=BB0_41 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $r14
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $rsi
	#DEBUG_VALUE: pos_slot <- $r8d
	#DEBUG_VALUE: footer_bits <- $ecx
	#DEBUG_VALUE: rc_bittree_reverse_price:symbol <- $edx
	#DEBUG_VALUE: rc_bittree_reverse_price:probs <- $r9
	testb	$1, %cl
	je	.LBB0_40
.Ltmp159:
# %bb.46:                               # %do.body.i115.i.epil
                                        #   in Loop: Header=BB0_41 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $r14
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $rsi
	#DEBUG_VALUE: pos_slot <- $r8d
	#DEBUG_VALUE: footer_bits <- $ecx
	#DEBUG_VALUE: rc_bittree_reverse_price:symbol <- $edx
	#DEBUG_VALUE: rc_bittree_reverse_price:probs <- $r9
	#DEBUG_VALUE: rc_bittree_reverse_price:bit_levels <- undef
	#DEBUG_VALUE: rc_bittree_reverse_price:model_index <- $r15d
	#DEBUG_VALUE: rc_bittree_reverse_price:price <- $r11d
	#DEBUG_VALUE: rc_bittree_reverse_price:symbol <- $edx
	.loc	8 76 31                         # liblzma/rangecoder/price.h:76:31
	andl	$1, %edx
.Ltmp160:
	negl	%edx
.Ltmp161:
	#DEBUG_VALUE: bit <- undef
	#DEBUG_VALUE: rc_bittree_reverse_price:symbol <- [DW_OP_constu 1, DW_OP_shr, DW_OP_stack_value] undef
	.loc	8 78 25                         # liblzma/rangecoder/price.h:78:25
	movl	%r15d, %ecx
.Ltmp162:
	movzwl	(%r9,%rcx,2), %ecx
.Ltmp163:
	#DEBUG_VALUE: rc_bit_price:prob <- undef
	#DEBUG_VALUE: rc_bit_price:bit <- undef
	.loc	8 31 30                         # liblzma/rangecoder/price.h:31:30
	andl	$2032, %edx                     # imm = 0x7F0
	xorl	%ecx, %edx
	.loc	8 32 33                         # liblzma/rangecoder/price.h:32:33
	shrl	$4, %edx
	.loc	8 31 9                          # liblzma/rangecoder/price.h:31:9
	movzbl	(%rdi,%rdx), %ecx
.Ltmp164:
	.loc	8 78 9                          # liblzma/rangecoder/price.h:78:9
	addl	%ecx, %r11d
.Ltmp165:
	#DEBUG_VALUE: rc_bittree_reverse_price:price <- $r11d
	#DEBUG_VALUE: rc_bittree_reverse_price:model_index <- undef
	.loc	8 0 9 is_stmt 0                 # liblzma/rangecoder/price.h:0:9
	jmp	.LBB0_40
.Ltmp166:
.LBB0_47:                               # %fill_distances_prices.exit
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $r14
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_distances_prices:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	.loc	0 189 27 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:189:27
	movl	$0, 69268(%r12)
	movq	%r14, %r9
	movq	200(%rsp), %r15                 # 8-byte Reload
.Ltmp167:
.LBB0_48:                               # %if.end17
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $r9
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	.loc	0 0 27 is_stmt 0                # liblzma/lzma/lzma_encoder_optimum_normal.c:0:27
	movq	%r9, %rbx
.Ltmp168:
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $rbx
	.loc	0 847 32 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:847:32
	cmpl	$16, 69336(%r12)
.Ltmp169:
	.loc	0 847 7 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:847:7
	jb	.LBB0_52
.Ltmp170:
# %bb.49:                               # %if.then19
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $rbx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_align_prices:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_align_prices:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 0
	.loc	8 78 25 is_stmt 1               # liblzma/rangecoder/price.h:78:25
	movzwl	29154(%r12), %eax
	xorl	%ecx, %ecx
	movq	lzma_rc_prices@GOTPCREL(%rip), %rdx
.Ltmp171:
	.p2align	4, 0x90
.LBB0_50:                               # %for.body.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $rbx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_align_prices:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_align_prices:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $rcx
	#DEBUG_VALUE: rc_bittree_reverse_price:probs <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 29152, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: rc_bittree_reverse_price:bit_levels <- 4
	#DEBUG_VALUE: rc_bittree_reverse_price:model_index <- 1
	#DEBUG_VALUE: rc_bittree_reverse_price:price <- 0
	#DEBUG_VALUE: rc_bittree_reverse_price:symbol <- $rcx
	.loc	8 76 31                         # liblzma/rangecoder/price.h:76:31
	movl	%ecx, %r8d
	andl	$1, %r8d
.Ltmp172:
	#DEBUG_VALUE: rc_bittree_reverse_price:symbol <- undef
	#DEBUG_VALUE: bit <- $r8d
	.loc	8 77 10                         # liblzma/rangecoder/price.h:77:10
	movl	%ecx, %edi
	shrl	%edi
.Ltmp173:
	#DEBUG_VALUE: rc_bittree_reverse_price:symbol <- $edi
	#DEBUG_VALUE: rc_bit_price:bit <- $r8d
	#DEBUG_VALUE: rc_bittree_reverse_price:price <- undef
	#DEBUG_VALUE: rc_bittree_reverse_price:model_index <- undef
	#DEBUG_VALUE: rc_bittree_reverse_price:bit_levels <- 3
	.loc	8 76 31                         # liblzma/rangecoder/price.h:76:31
	andl	$1, %edi
.Ltmp174:
	#DEBUG_VALUE: rc_bittree_reverse_price:price <- undef
	#DEBUG_VALUE: bit <- $edi
	.loc	8 78 25                         # liblzma/rangecoder/price.h:78:25
	leal	4(,%r8,2), %r9d
.Ltmp175:
	#DEBUG_VALUE: rc_bit_price:bit <- $edi
	.loc	8 79 36                         # liblzma/rangecoder/price.h:79:36
	leal	(%rdi,%r8,2), %esi
	addl	$4, %esi
.Ltmp176:
	#DEBUG_VALUE: rc_bittree_reverse_price:model_index <- $esi
	#DEBUG_VALUE: rc_bittree_reverse_price:bit_levels <- 2
                                        # kill: def $r8d killed $r8d killed $r8 def $r8
	.loc	8 76 31                         # liblzma/rangecoder/price.h:76:31
	negl	%r8d
.Ltmp177:
	.loc	8 31 30                         # liblzma/rangecoder/price.h:31:30
	andl	$2032, %r8d                     # imm = 0x7F0
	xorl	%eax, %r8d
	.loc	8 32 33                         # liblzma/rangecoder/price.h:32:33
	shrl	$4, %r8d
	.loc	8 31 9                          # liblzma/rangecoder/price.h:31:9
	movzbl	(%rdx,%r8), %r8d
.Ltmp178:
	#DEBUG_VALUE: rc_bittree_reverse_price:price <- $r8d
                                        # kill: def $edi killed $edi killed $rdi def $rdi
	.loc	8 76 31                         # liblzma/rangecoder/price.h:76:31
	negl	%edi
.Ltmp179:
	.loc	8 77 10                         # liblzma/rangecoder/price.h:77:10
	movl	%ecx, %r10d
	shrl	$2, %r10d
	.loc	8 78 25                         # liblzma/rangecoder/price.h:78:25
	movzwl	29152(%r12,%r9), %r9d
.Ltmp180:
	#DEBUG_VALUE: rc_bit_price:prob <- undef
	.loc	8 31 30                         # liblzma/rangecoder/price.h:31:30
	andl	$2032, %edi                     # imm = 0x7F0
	xorl	%r9d, %edi
	.loc	8 32 33                         # liblzma/rangecoder/price.h:32:33
	shrl	$4, %edi
	.loc	8 31 9                          # liblzma/rangecoder/price.h:31:9
	movzbl	(%rdx,%rdi), %edi
.Ltmp181:
	.loc	8 78 9                          # liblzma/rangecoder/price.h:78:9
	addl	%r8d, %edi
.Ltmp182:
	#DEBUG_VALUE: rc_bittree_reverse_price:price <- $edi
	.loc	8 76 31                         # liblzma/rangecoder/price.h:76:31
	andl	$1, %r10d
.Ltmp183:
	#DEBUG_VALUE: bit <- $r10d
	#DEBUG_VALUE: rc_bittree_reverse_price:symbol <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 3, DW_OP_shr, DW_OP_stack_value] $rcx
	#DEBUG_VALUE: rc_bit_price:bit <- $r10d
	#DEBUG_VALUE: rc_bittree_reverse_price:price <- undef
	.loc	8 79 36                         # liblzma/rangecoder/price.h:79:36
	leal	(%r10,%rsi,2), %r8d
.Ltmp184:
	#DEBUG_VALUE: rc_bittree_reverse_price:model_index <- $r8d
	#DEBUG_VALUE: rc_bittree_reverse_price:model_index <- [DW_OP_LLVM_arg 0, DW_OP_constu 1, DW_OP_shl, DW_OP_LLVM_arg 1, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 3, DW_OP_shr, DW_OP_constu 1, DW_OP_and, DW_OP_or, DW_OP_stack_value] $r8d, $rcx
	#DEBUG_VALUE: rc_bittree_reverse_price:bit_levels <- 1
	#DEBUG_VALUE: bit <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 3, DW_OP_shr, DW_OP_constu 1, DW_OP_and, DW_OP_stack_value] $rcx
	#DEBUG_VALUE: rc_bittree_reverse_price:symbol <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 3, DW_OP_shr, DW_OP_constu 1, DW_OP_shr, DW_OP_stack_value] $rcx
                                        # kill: def $r10d killed $r10d killed $r10 def $r10
	.loc	8 76 31                         # liblzma/rangecoder/price.h:76:31
	negl	%r10d
	.loc	8 78 25                         # liblzma/rangecoder/price.h:78:25
	addl	%esi, %esi
	movzwl	29152(%r12,%rsi), %esi
.Ltmp185:
	.loc	8 31 30                         # liblzma/rangecoder/price.h:31:30
	andl	$2032, %r10d                    # imm = 0x7F0
	xorl	%esi, %r10d
	.loc	8 32 33                         # liblzma/rangecoder/price.h:32:33
	shrl	$4, %r10d
	.loc	8 31 9                          # liblzma/rangecoder/price.h:31:9
	movzbl	(%rdx,%r10), %esi
.Ltmp186:
	.loc	8 78 9                          # liblzma/rangecoder/price.h:78:9
	addl	%edi, %esi
.Ltmp187:
	#DEBUG_VALUE: rc_bittree_reverse_price:price <- $esi
	.loc	8 78 25 is_stmt 0               # liblzma/rangecoder/price.h:78:25
	movzwl	29152(%r12,%r8,2), %edi
.Ltmp188:
	#DEBUG_VALUE: rc_bit_price:bit <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 3, DW_OP_shr, DW_OP_constu 1, DW_OP_and, DW_OP_stack_value] $rcx
	.loc	8 32 4 is_stmt 1                # liblzma/rangecoder/price.h:32:4
	movl	%ecx, %r8d
.Ltmp189:
	shll	$28, %r8d
	sarl	$31, %r8d
	.loc	8 31 30                         # liblzma/rangecoder/price.h:31:30
	andl	$2032, %r8d                     # imm = 0x7F0
	xorl	%edi, %r8d
	.loc	8 32 33                         # liblzma/rangecoder/price.h:32:33
	shrl	$4, %r8d
	.loc	8 31 9                          # liblzma/rangecoder/price.h:31:9
	movzbl	(%rdx,%r8), %edi
.Ltmp190:
	.loc	8 78 9                          # liblzma/rangecoder/price.h:78:9
	addl	%esi, %edi
.Ltmp191:
	#DEBUG_VALUE: rc_bittree_reverse_price:price <- $edi
	#DEBUG_VALUE: rc_bittree_reverse_price:bit_levels <- 0
	.loc	0 199 26                        # liblzma/lzma/lzma_encoder_optimum_normal.c:199:26
	movl	%edi, 69272(%r12,%rcx,4)
	.loc	0 198 45                        # liblzma/lzma/lzma_encoder_optimum_normal.c:198:45
	incq	%rcx
.Ltmp192:
	#DEBUG_VALUE: i <- $rcx
	.loc	0 198 25 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:198:25
	cmpq	$16, %rcx
.Ltmp193:
	.loc	0 198 2                         # liblzma/lzma/lzma_encoder_optimum_normal.c:198:2
	jne	.LBB0_50
.Ltmp194:
# %bb.51:                               # %fill_align_prices.exit
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $rbx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_align_prices:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: fill_align_prices:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	.loc	0 202 27 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:202:27
	movl	$0, 69336(%r12)
.Ltmp195:
.LBB0_52:                               # %if.end21
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- $rbx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_res <- $rbx
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	.loc	0 0 27 is_stmt 0                # liblzma/lzma/lzma_encoder_optimum_normal.c:0:27
	movq	248(%rsp), %r13                 # 8-byte Reload
.Ltmp196:
	.loc	0 286 32 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:286:32
	movl	96(%r13), %r14d
.Ltmp197:
	#DEBUG_VALUE: helper1:nice_len <- $r14d
	.loc	0 292 49                        # liblzma/lzma/lzma_encoder_optimum_normal.c:292:49
	leaq	756(%r12), %rdx
	leaq	196(%rsp), %rsi
	.loc	0 292 14 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:292:14
	movq	%r13, %rdi
	callq	lzma_mf_find@PLT
.Ltmp198:
	.loc	0 0 14                          # liblzma/lzma/lzma_encoder_optimum_normal.c:0:14
	movl	%eax, 12(%rsp)                  # 4-byte Spill
.Ltmp199:
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	movq	%rbx, %r9
	movq	%r13, %rsi
.Ltmp200:
.LBB0_53:                               # %if.end.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:nice_len <- $r14d
	#DEBUG_VALUE: helper1:len_main <- $eax
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	.loc	0 299 29 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:299:29
	movl	24(%rsi), %eax
	movl	36(%rsi), %edx
.Ltmp201:
	#DEBUG_VALUE: mf_avail:mf <- undef
	.file	10 "liblzma/lz" "lz_encoder.h" md5 0x780f78e6e21a3ca52f57df68bfdc6f53
	.loc	10 232 23                       # liblzma/lz/lz_encoder.h:232:23
	subl	%eax, %edx
.Ltmp202:
	.loc	0 299 29                        # liblzma/lzma/lzma_encoder_optimum_normal.c:299:29
	incl	%edx
	movl	$273, %ecx                      # imm = 0x111
	cmpl	$272, %edx                      # imm = 0x110
	ja	.LBB0_56
.Ltmp203:
# %bb.54:                               # %cond.end.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:nice_len <- $r14d
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: mf_avail:mf <- undef
	#DEBUG_VALUE: helper1:buf_avail <- $edx
	.loc	0 0 29 is_stmt 0                # liblzma/lzma/lzma_encoder_optimum_normal.c:0:29
	movl	%edx, %ecx
.Ltmp204:
	.loc	0 300 16 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:300:16
	cmpl	$1, %edx
.Ltmp205:
	.loc	0 300 6 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:300:6
	ja	.LBB0_56
.Ltmp206:
# %bb.55:                               # %helper1.exit.thread
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:nice_len <- $r14d
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:buf_avail <- $ecx
	.loc	0 301 13 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:301:13
	movl	$-1, (%r15)
	.loc	0 302 12                        # liblzma/lzma/lzma_encoder_optimum_normal.c:302:12
	movl	$1, (%r9)
.Ltmp207:
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- -1
	.loc	0 856 6                         # liblzma/lzma/lzma_encoder_optimum_normal.c:856:6
	jmp	.LBB0_4
.Ltmp208:
.LBB0_56:                               # %if.end9.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:nice_len <- $r14d
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	.loc	0 0 6 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:6
	movq	%r9, 216(%rsp)                  # 8-byte Spill
.Ltmp209:
	.loc	0 306 29 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:306:29
	movq	(%rsi), %rdx
.Ltmp210:
	#DEBUG_VALUE: mf_ptr:mf <- undef
	.loc	10 224 20                       # liblzma/lz/lz_encoder.h:224:20
	leaq	(%rdx,%rax), %rsi
.Ltmp211:
	.loc	0 306 40                        # liblzma/lzma/lzma_encoder_optimum_normal.c:306:40
	leaq	(%rdx,%rax), %r10
	decq	%r10
.Ltmp212:
	#DEBUG_VALUE: helper1:buf <- $r10
	#DEBUG_VALUE: helper1:rep_max_index <- 0
	#DEBUG_VALUE: i <- 0
	.loc	0 0 40 is_stmt 0                # liblzma/lzma/lzma_encoder_optimum_normal.c:0:40
	movzbl	-1(%rdx,%rax), %ebx
	#DEBUG_VALUE: i <- 0
.Ltmp213:
	.loc	0 312 41 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:312:41
	movl	740(%r12), %r12d
	.loc	0 312 56 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:312:56
	movq	%r12, %rdi
	notq	%rdi
.Ltmp214:
	#DEBUG_VALUE: buf_back <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdi, $r10
	.loc	0 314 7 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:314:7
	movzbl	-1(%rdi,%rsi), %r13d
	xorl	%edi, %edi
.Ltmp215:
	cmpb	%r13b, %bl
	jne	.LBB0_63
.Ltmp216:
# %bb.57:                               # %lor.lhs.false.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:nice_len <- $r14d
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:buf <- $r10
	#DEBUG_VALUE: helper1:rep_max_index <- 0
	#DEBUG_VALUE: i <- 0
	.loc	0 0 0 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:0
	movq	%r12, %rdi
	negq	%rdi
.Ltmp217:
	.loc	0 314 7                         # liblzma/lzma/lzma_encoder_optimum_normal.c:314:7
	movzbl	(%rsi), %r8d
	movzbl	-1(%rsi,%rdi), %r9d
	xorl	%edi, %edi
	cmpb	%r9b, %r8b
	sete	%dil
.Ltmp218:
	.loc	0 314 7                         # liblzma/lzma/lzma_encoder_optimum_normal.c:314:7
	addl	%edi, %edi
	cmpl	$3, %ecx
	jb	.LBB0_63
.Ltmp219:
# %bb.58:                               # %lor.lhs.false.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:nice_len <- $r14d
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:buf <- $r10
	#DEBUG_VALUE: helper1:rep_max_index <- 0
	#DEBUG_VALUE: i <- 0
	cmpb	%r9b, %r8b
	jne	.LBB0_63
.Ltmp220:
# %bb.59:                               # %land.rhs.preheader.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:nice_len <- $r14d
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:buf <- $r10
	#DEBUG_VALUE: helper1:rep_max_index <- 0
	#DEBUG_VALUE: i <- 0
	.loc	0 320 31 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:320:31
	movl	%ecx, %r8d
.Ltmp221:
	.loc	0 320 3 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:320:3
	movq	%rax, %r9
	subq	%r12, %r9
	addq	%rdx, %r9
	movl	$2, %edi
.Ltmp222:
	.p2align	4, 0x90
.LBB0_60:                               # %land.rhs.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:nice_len <- $r14d
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:buf <- $r10
	#DEBUG_VALUE: helper1:rep_max_index <- 0
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: len_test <- $rdi
	.loc	0 321 8 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:321:8
	movzbl	-1(%rsi,%rdi), %r11d
	.loc	0 321 22 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:321:22
	cmpb	-2(%r9,%rdi), %r11b
.Ltmp223:
	.loc	0 320 3 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:320:3
	jne	.LBB0_63
.Ltmp224:
# %bb.61:                               # %for.inc.i
                                        #   in Loop: Header=BB0_60 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:nice_len <- $r14d
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:buf <- $r10
	#DEBUG_VALUE: helper1:rep_max_index <- 0
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: len_test <- $rdi
	.loc	0 322 5                         # liblzma/lzma/lzma_encoder_optimum_normal.c:322:5
	incq	%rdi
.Ltmp225:
	#DEBUG_VALUE: len_test <- $rdi
	.loc	0 320 31                        # liblzma/lzma/lzma_encoder_optimum_normal.c:320:31
	cmpq	%rdi, %r8
	.loc	0 321 5                         # liblzma/lzma/lzma_encoder_optimum_normal.c:321:5
	jne	.LBB0_60
.Ltmp226:
# %bb.62:
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:nice_len <- $r14d
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:buf <- $r10
	#DEBUG_VALUE: helper1:rep_max_index <- 0
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: len_test <- $rdi
	.loc	0 0 5 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:5
	movl	%ecx, %edi
.Ltmp227:
.LBB0_63:                               # %cleanup.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:nice_len <- $r14d
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:buf <- $r10
	#DEBUG_VALUE: helper1:rep_max_index <- 0
	#DEBUG_VALUE: i <- 0
	movl	%edi, 96(%rsp)
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_max_index <- 0
.Ltmp228:
	#DEBUG_VALUE: i <- 1
	movq	136(%rsp), %r8                  # 8-byte Reload
	.loc	0 312 41 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:312:41
	movl	744(%r8), %r11d
	.loc	0 312 56 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:312:56
	movq	%r11, %r8
	notq	%r8
.Ltmp229:
	#DEBUG_VALUE: buf_back <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r8, $r10
	.loc	0 314 7 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:314:7
	cmpb	(%r8,%r10), %bl
	movq	%r11, 168(%rsp)                 # 8-byte Spill
	jne	.LBB0_71
.Ltmp230:
# %bb.64:                               # %lor.lhs.false.1.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:nice_len <- $r14d
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:buf <- $r10
	#DEBUG_VALUE: helper1:rep_max_index <- 0
	#DEBUG_VALUE: i <- 1
	#DEBUG_VALUE: buf_back <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r8, $r10
	.loc	0 0 0 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:0
	movq	%r11, %r8
.Ltmp231:
	negq	%r8
.Ltmp232:
	.loc	0 314 7                         # liblzma/lzma/lzma_encoder_optimum_normal.c:314:7
	movzbl	(%rsi), %r9d
	cmpb	-1(%rsi,%r8), %r9b
.Ltmp233:
	.loc	0 314 7                         # liblzma/lzma/lzma_encoder_optimum_normal.c:314:7
	jne	.LBB0_71
.Ltmp234:
# %bb.65:                               # %for.cond29.preheader.1.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:nice_len <- $r14d
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:buf <- $r10
	#DEBUG_VALUE: helper1:rep_max_index <- 0
	#DEBUG_VALUE: i <- 1
	.loc	0 0 7                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:7
	movl	$2, %r9d
	cmpl	$3, %ecx
.Ltmp235:
	#DEBUG_VALUE: len_test <- 2
	.loc	0 321 5 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:321:5
	jb	.LBB0_70
.Ltmp236:
# %bb.66:                               # %land.rhs.preheader.1.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:nice_len <- $r14d
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:buf <- $r10
	#DEBUG_VALUE: helper1:rep_max_index <- 0
	#DEBUG_VALUE: i <- 1
	#DEBUG_VALUE: len_test <- 2
	.loc	0 320 31                        # liblzma/lzma/lzma_encoder_optimum_normal.c:320:31
	movl	%ecx, %r8d
.Ltmp237:
	.loc	0 320 3 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:320:3
	movq	%rax, %r11
	subq	168(%rsp), %r11                 # 8-byte Folded Reload
	addq	%rdx, %r11
	movl	$2, %r9d
.Ltmp238:
	.p2align	4, 0x90
.LBB0_67:                               # %land.rhs.1.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:nice_len <- $r14d
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:buf <- $r10
	#DEBUG_VALUE: helper1:rep_max_index <- 0
	#DEBUG_VALUE: i <- 1
	#DEBUG_VALUE: len_test <- $r9
	.loc	0 321 8 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:321:8
	movzbl	-1(%rsi,%r9), %ebp
	.loc	0 321 22 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:321:22
	cmpb	-2(%r11,%r9), %bpl
.Ltmp239:
	.loc	0 320 3 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:320:3
	jne	.LBB0_70
.Ltmp240:
# %bb.68:                               # %for.inc.1.i
                                        #   in Loop: Header=BB0_67 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:nice_len <- $r14d
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:buf <- $r10
	#DEBUG_VALUE: helper1:rep_max_index <- 0
	#DEBUG_VALUE: i <- 1
	#DEBUG_VALUE: len_test <- $r9
	.loc	0 322 5                         # liblzma/lzma/lzma_encoder_optimum_normal.c:322:5
	incq	%r9
.Ltmp241:
	#DEBUG_VALUE: len_test <- $r9
	.loc	0 320 31                        # liblzma/lzma/lzma_encoder_optimum_normal.c:320:31
	cmpq	%r9, %r8
	.loc	0 321 5                         # liblzma/lzma/lzma_encoder_optimum_normal.c:321:5
	jne	.LBB0_67
.Ltmp242:
# %bb.69:
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:nice_len <- $r14d
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:buf <- $r10
	#DEBUG_VALUE: helper1:rep_max_index <- 0
	#DEBUG_VALUE: i <- 1
	#DEBUG_VALUE: len_test <- $r9
	.loc	0 0 5 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:5
	movl	%ecx, %r9d
.Ltmp243:
.LBB0_70:                               # %for.end.1.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:nice_len <- $r14d
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:buf <- $r10
	#DEBUG_VALUE: helper1:rep_max_index <- 0
	#DEBUG_VALUE: i <- 1
	.loc	0 324 15 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:324:15
	movl	%r9d, 100(%rsp)
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
.Ltmp244:
	.loc	0 325 16                        # liblzma/lzma/lzma_encoder_optimum_normal.c:325:16
	xorl	%r15d, %r15d
	cmpl	%edi, %r9d
	seta	%r15b
.Ltmp245:
	#DEBUG_VALUE: helper1:rep_max_index <- undef
	.loc	0 0 16 is_stmt 0                # liblzma/lzma/lzma_encoder_optimum_normal.c:0:16
	jmp	.LBB0_72
.Ltmp246:
.LBB0_71:                               # %if.then25.1.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:nice_len <- $r14d
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:buf <- $r10
	#DEBUG_VALUE: helper1:rep_max_index <- 0
	#DEBUG_VALUE: i <- 1
	.loc	0 315 16 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:315:16
	movl	$0, 100(%rsp)
	xorl	%r9d, %r9d
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	xorl	%r15d, %r15d
.Ltmp247:
.LBB0_72:                               # %cleanup.1.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:nice_len <- $r14d
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:buf <- $r10
	#DEBUG_VALUE: i <- 1
	#DEBUG_VALUE: helper1:rep_max_index <- $r15d
	#DEBUG_VALUE: i <- 2
	.loc	0 0 16 is_stmt 0                # liblzma/lzma/lzma_encoder_optimum_normal.c:0:16
	movq	136(%rsp), %r8                  # 8-byte Reload
	.loc	0 312 41 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:312:41
	movl	748(%r8), %r8d
	.loc	0 312 56 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:312:56
	movq	%r8, %r11
	notq	%r11
.Ltmp248:
	#DEBUG_VALUE: buf_back <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r11, $r10
	.loc	0 314 7 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:314:7
	cmpb	(%r11,%r10), %bl
	movq	%r8, 288(%rsp)                  # 8-byte Spill
	jne	.LBB0_81
.Ltmp249:
# %bb.73:                               # %lor.lhs.false.2.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:nice_len <- $r14d
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:buf <- $r10
	#DEBUG_VALUE: helper1:rep_max_index <- $r15d
	#DEBUG_VALUE: i <- 2
	#DEBUG_VALUE: buf_back <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r11, $r10
	.loc	0 0 0 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:0
	movq	%r8, %r11
.Ltmp250:
	negq	%r11
.Ltmp251:
	.loc	0 314 7                         # liblzma/lzma/lzma_encoder_optimum_normal.c:314:7
	movzbl	(%rsi), %ebp
	cmpb	-1(%rsi,%r11), %bpl
.Ltmp252:
	.loc	0 314 7                         # liblzma/lzma/lzma_encoder_optimum_normal.c:314:7
	jne	.LBB0_81
.Ltmp253:
# %bb.74:                               # %for.cond29.preheader.2.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:nice_len <- $r14d
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:buf <- $r10
	#DEBUG_VALUE: helper1:rep_max_index <- $r15d
	#DEBUG_VALUE: i <- 2
	.loc	0 0 7                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:7
	movl	$2, %ebp
	movl	$2, %r11d
	cmpl	$3, %ecx
.Ltmp254:
	#DEBUG_VALUE: len_test <- 2
	.loc	0 321 5 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:321:5
	jb	.LBB0_80
.Ltmp255:
# %bb.75:                               # %land.rhs.preheader.2.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:nice_len <- $r14d
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:buf <- $r10
	#DEBUG_VALUE: helper1:rep_max_index <- $r15d
	#DEBUG_VALUE: i <- 2
	#DEBUG_VALUE: len_test <- 2
	.loc	0 0 5 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:5
	movl	%r13d, 40(%rsp)                 # 4-byte Spill
	.loc	0 320 31 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:320:31
	movl	%ecx, %ebp
.Ltmp256:
	.loc	0 320 3 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:320:3
	movq	%rax, %r13
	subq	288(%rsp), %r13                 # 8-byte Folded Reload
	addq	%rdx, %r13
	movl	$2, %r11d
.Ltmp257:
	.p2align	4, 0x90
.LBB0_76:                               # %land.rhs.2.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:nice_len <- $r14d
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:buf <- $r10
	#DEBUG_VALUE: helper1:rep_max_index <- $r15d
	#DEBUG_VALUE: i <- 2
	#DEBUG_VALUE: len_test <- $r11
	.loc	0 321 8 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:321:8
	movzbl	-1(%rsi,%r11), %r8d
	.loc	0 321 22 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:321:22
	cmpb	-2(%r13,%r11), %r8b
.Ltmp258:
	.loc	0 320 3 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:320:3
	jne	.LBB0_79
.Ltmp259:
# %bb.77:                               # %for.inc.2.i
                                        #   in Loop: Header=BB0_76 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:nice_len <- $r14d
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:buf <- $r10
	#DEBUG_VALUE: helper1:rep_max_index <- $r15d
	#DEBUG_VALUE: i <- 2
	#DEBUG_VALUE: len_test <- $r11
	.loc	0 322 5                         # liblzma/lzma/lzma_encoder_optimum_normal.c:322:5
	incq	%r11
.Ltmp260:
	#DEBUG_VALUE: len_test <- $r11
	.loc	0 320 31                        # liblzma/lzma/lzma_encoder_optimum_normal.c:320:31
	cmpq	%r11, %rbp
	.loc	0 321 5                         # liblzma/lzma/lzma_encoder_optimum_normal.c:321:5
	jne	.LBB0_76
.Ltmp261:
# %bb.78:
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:nice_len <- $r14d
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:buf <- $r10
	#DEBUG_VALUE: helper1:rep_max_index <- $r15d
	#DEBUG_VALUE: i <- 2
	#DEBUG_VALUE: len_test <- $r11
	.loc	0 0 5 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:5
	movl	%ecx, %r11d
.Ltmp262:
.LBB0_79:                               # %for.end.2.loopexit.split.loop.exit580.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:nice_len <- $r14d
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:buf <- $r10
	#DEBUG_VALUE: helper1:rep_max_index <- $r15d
	#DEBUG_VALUE: i <- 2
	movl	40(%rsp), %r13d                 # 4-byte Reload
	movl	$2, %ebp
.Ltmp263:
.LBB0_80:                               # %for.end.2.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:nice_len <- $r14d
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:buf <- $r10
	#DEBUG_VALUE: helper1:rep_max_index <- $r15d
	#DEBUG_VALUE: i <- 2
	.loc	0 324 15 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:324:15
	movl	%r11d, 104(%rsp)
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
.Ltmp264:
	.loc	0 325 18                        # liblzma/lzma/lzma_encoder_optimum_normal.c:325:18
	movl	%r15d, %r8d
	.loc	0 325 16 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:325:16
	cmpl	96(%rsp,%r8,4), %r11d
.Ltmp265:
	.loc	0 325 7                         # liblzma/lzma/lzma_encoder_optimum_normal.c:325:7
	cmoval	%ebp, %r15d
.Ltmp266:
	#DEBUG_VALUE: helper1:rep_max_index <- $r8d
	#DEBUG_VALUE: helper1:rep_max_index <- $r15d
	.loc	0 0 7                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:7
	jmp	.LBB0_82
.Ltmp267:
.LBB0_81:                               # %if.then25.2.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:nice_len <- $r14d
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:buf <- $r10
	#DEBUG_VALUE: helper1:rep_max_index <- $r15d
	#DEBUG_VALUE: i <- 2
	.loc	0 315 16 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:315:16
	movl	$0, 104(%rsp)
	xorl	%r11d, %r11d
.Ltmp268:
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
.LBB0_82:                               # %cleanup.2.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:nice_len <- $r14d
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:buf <- $r10
	#DEBUG_VALUE: helper1:rep_max_index <- $r15d
	#DEBUG_VALUE: i <- 2
	#DEBUG_VALUE: helper1:rep_max_index <- $r15d
	#DEBUG_VALUE: i <- 3
	.loc	0 0 16 is_stmt 0                # liblzma/lzma/lzma_encoder_optimum_normal.c:0:16
	movq	136(%rsp), %r8                  # 8-byte Reload
	.loc	0 312 41 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:312:41
	movl	752(%r8), %ebp
	.loc	0 312 56 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:312:56
	movq	%rbp, %r8
	notq	%r8
.Ltmp269:
	#DEBUG_VALUE: buf_back <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r8, $r10
	.loc	0 314 7 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:314:7
	cmpb	(%r8,%r10), %bl
	jne	.LBB0_93
.Ltmp270:
# %bb.83:                               # %lor.lhs.false.3.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:nice_len <- $r14d
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:buf <- $r10
	#DEBUG_VALUE: helper1:rep_max_index <- $r15d
	#DEBUG_VALUE: i <- 3
	#DEBUG_VALUE: buf_back <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r8, $r10
	.loc	0 0 0 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:0
	movq	%rbp, %r8
.Ltmp271:
	negq	%r8
.Ltmp272:
	.loc	0 314 7                         # liblzma/lzma/lzma_encoder_optimum_normal.c:314:7
	movzbl	(%rsi), %r10d
.Ltmp273:
	cmpb	-1(%rsi,%r8), %r10b
.Ltmp274:
	.loc	0 314 7                         # liblzma/lzma/lzma_encoder_optimum_normal.c:314:7
	jne	.LBB0_93
.Ltmp275:
# %bb.84:                               # %for.cond29.preheader.3.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:nice_len <- $r14d
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_max_index <- $r15d
	#DEBUG_VALUE: i <- 3
	.loc	0 0 7                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:7
	movl	$2, %r10d
	cmpl	$3, %ecx
.Ltmp276:
	#DEBUG_VALUE: len_test <- 2
	.loc	0 321 5 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:321:5
	jb	.LBB0_90
.Ltmp277:
# %bb.85:                               # %land.rhs.preheader.3.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:nice_len <- $r14d
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_max_index <- $r15d
	#DEBUG_VALUE: i <- 3
	#DEBUG_VALUE: len_test <- 2
	.loc	0 0 5 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:5
	movl	%r13d, %r8d
	.loc	0 320 31 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:320:31
	movl	%ecx, %r13d
.Ltmp278:
	.loc	0 320 3 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:320:3
	subq	%rbp, %rax
	addq	%rax, %rdx
	movl	$2, %r10d
.Ltmp279:
	.p2align	4, 0x90
.LBB0_86:                               # %land.rhs.3.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:nice_len <- $r14d
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_max_index <- $r15d
	#DEBUG_VALUE: i <- 3
	#DEBUG_VALUE: len_test <- $r10
	.loc	0 321 8 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:321:8
	movzbl	-1(%rsi,%r10), %eax
	.loc	0 321 22 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:321:22
	cmpb	-2(%rdx,%r10), %al
.Ltmp280:
	.loc	0 320 3 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:320:3
	jne	.LBB0_89
.Ltmp281:
# %bb.87:                               # %for.inc.3.i
                                        #   in Loop: Header=BB0_86 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:nice_len <- $r14d
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_max_index <- $r15d
	#DEBUG_VALUE: i <- 3
	#DEBUG_VALUE: len_test <- $r10
	.loc	0 322 5                         # liblzma/lzma/lzma_encoder_optimum_normal.c:322:5
	incq	%r10
.Ltmp282:
	#DEBUG_VALUE: len_test <- $r10
	.loc	0 320 31                        # liblzma/lzma/lzma_encoder_optimum_normal.c:320:31
	cmpq	%r10, %r13
	.loc	0 321 5                         # liblzma/lzma/lzma_encoder_optimum_normal.c:321:5
	jne	.LBB0_86
.Ltmp283:
# %bb.88:
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:nice_len <- $r14d
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_max_index <- $r15d
	#DEBUG_VALUE: i <- 3
	#DEBUG_VALUE: len_test <- $r10
	.loc	0 0 5 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:5
	movl	%ecx, %r10d
.Ltmp284:
.LBB0_89:                               # %for.end.3.loopexit.split.loop.exit582.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:nice_len <- $r14d
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_max_index <- $r15d
	#DEBUG_VALUE: i <- 3
	movl	%r8d, %r13d
.Ltmp285:
.LBB0_90:                               # %for.end.3.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:nice_len <- $r14d
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_max_index <- $r15d
	#DEBUG_VALUE: i <- 3
	.loc	0 324 15 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:324:15
	movl	%r10d, 108(%rsp)
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
.Ltmp286:
	.loc	0 325 18                        # liblzma/lzma/lzma_encoder_optimum_normal.c:325:18
	movl	%r15d, %eax
	.loc	0 325 16 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:325:16
	cmpl	96(%rsp,%rax,4), %r10d
	movl	$3, %eax
.Ltmp287:
	.loc	0 325 7                         # liblzma/lzma/lzma_encoder_optimum_normal.c:325:7
	cmoval	%eax, %r15d
.Ltmp288:
	#DEBUG_VALUE: helper1:rep_max_index <- $r15d
	#DEBUG_VALUE: helper1:rep_max_index <- $r15d
	#DEBUG_VALUE: i <- 4
	.loc	0 329 6 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:329:6
	movl	%r15d, %eax
	movl	96(%rsp,%rax,4), %ecx
	.loc	0 329 30 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:329:30
	cmpl	%r14d, %ecx
.Ltmp289:
	.loc	0 329 6                         # liblzma/lzma/lzma_encoder_optimum_normal.c:329:6
	jb	.LBB0_94
.Ltmp290:
.LBB0_91:                               # %if.then57.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:nice_len <- $r14d
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_max_index <- $r15d
	.loc	0 0 6                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:6
	movq	200(%rsp), %rax                 # 8-byte Reload
.Ltmp291:
	.loc	0 330 13 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:330:13
	movl	%r15d, (%rax)
	movq	216(%rsp), %rax                 # 8-byte Reload
	.loc	0 331 12                        # liblzma/lzma/lzma_encoder_optimum_normal.c:331:12
	movl	%ecx, (%rax)
.Ltmp292:
	#DEBUG_VALUE: mf_skip:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	.loc	10 270 13                       # liblzma/lz/lz_encoder.h:270:13
	decl	%ecx
.Ltmp293:
	#DEBUG_VALUE: mf_skip:amount <- $ecx
	.loc	10 270 6 is_stmt 0              # liblzma/lz/lz_encoder.h:270:6
	je	.LBB0_4
.Ltmp294:
# %bb.92:                               # %if.then.i.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:nice_len <- $r14d
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_max_index <- $r15d
	#DEBUG_VALUE: mf_skip:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: mf_skip:amount <- $ecx
	.loc	10 0 6                          # liblzma/lz/lz_encoder.h:0:6
	movq	248(%rsp), %rbx                 # 8-byte Reload
	movq	%rcx, %r14
.Ltmp295:
	.loc	10 271 3 is_stmt 1              # liblzma/lz/lz_encoder.h:271:3
	movq	%rbx, %rdi
	movl	%r14d, %esi
	callq	*56(%rbx)
.Ltmp296:
	#DEBUG_VALUE: mf_skip:amount <- $r14d
	.loc	10 272 18                       # liblzma/lz/lz_encoder.h:272:18
	addl	%r14d, 28(%rbx)
	.loc	10 273 2                        # liblzma/lz/lz_encoder.h:273:2
	jmp	.LBB0_4
.Ltmp297:
.LBB0_93:                               # %if.then25.3.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:nice_len <- $r14d
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_max_index <- $r15d
	#DEBUG_VALUE: i <- 3
	.loc	0 315 16                        # liblzma/lzma/lzma_encoder_optimum_normal.c:315:16
	movl	$0, 108(%rsp)
	xorl	%r10d, %r10d
.Ltmp298:
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_max_index <- $r15d
	#DEBUG_VALUE: i <- 4
	.loc	0 329 6                         # liblzma/lzma/lzma_encoder_optimum_normal.c:329:6
	movl	%r15d, %eax
	movl	96(%rsp,%rax,4), %ecx
	.loc	0 329 30 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:329:30
	cmpl	%r14d, %ecx
.Ltmp299:
	.loc	0 329 6                         # liblzma/lzma/lzma_encoder_optimum_normal.c:329:6
	jae	.LBB0_91
.Ltmp300:
.LBB0_94:                               # %if.end60.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:nice_len <- $r14d
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_max_index <- $r15d
	.loc	0 0 6                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:6
	movq	%rcx, (%rsp)                    # 8-byte Spill
.Ltmp301:
	.loc	0 337 15 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:337:15
	cmpl	%r14d, 12(%rsp)                 # 4-byte Folded Reload
.Ltmp302:
	.loc	0 337 6 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:337:6
	jae	.LBB0_98
.Ltmp303:
# %bb.95:                               # %if.end70.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:nice_len <- $r14d
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_max_index <- $r15d
	.loc	0 0 6                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:6
	cmpb	%r13b, %bl
.Ltmp304:
	#DEBUG_VALUE: helper1:current_byte <- undef
	#DEBUG_VALUE: helper1:match_byte <- undef
	.loc	0 348 19 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:348:19
	je	.LBB0_100
.Ltmp305:
# %bb.96:                               # %if.end70.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:nice_len <- $r14d
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_max_index <- $r15d
	.loc	0 0 19 is_stmt 0                # liblzma/lzma/lzma_encoder_optimum_normal.c:0:19
	movq	(%rsp), %rax                    # 8-byte Reload
                                        # kill: def $eax killed $eax killed $rax
	.loc	0 348 19                        # liblzma/lzma/lzma_encoder_optimum_normal.c:348:19
	orl	12(%rsp), %eax                  # 4-byte Folded Reload
	cmpl	$1, %eax
	ja	.LBB0_100
.Ltmp306:
# %bb.97:                               # %if.then88.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:nice_len <- $r14d
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_max_index <- $r15d
	.loc	0 0 19                          # liblzma/lzma/lzma_encoder_optimum_normal.c:0:19
	movq	200(%rsp), %rax                 # 8-byte Reload
.Ltmp307:
	.loc	0 350 13 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:350:13
	movl	$-1, (%rax)
	jmp	.LBB0_111
.Ltmp308:
.LBB0_98:                               # %if.then63.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:nice_len <- $r14d
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_max_index <- $r15d
	.loc	0 338 30                        # liblzma/lzma/lzma_encoder_optimum_normal.c:338:30
	movl	196(%rsp), %eax
	.loc	0 338 44 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:338:44
	decl	%eax
	movq	136(%rsp), %rcx                 # 8-byte Reload
	.loc	0 338 49                        # liblzma/lzma/lzma_encoder_optimum_normal.c:338:49
	movl	760(%rcx,%rax,8), %eax
	.loc	0 339 5 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:339:5
	addl	$4, %eax
	movq	200(%rsp), %rcx                 # 8-byte Reload
	.loc	0 338 13                        # liblzma/lzma/lzma_encoder_optimum_normal.c:338:13
	movl	%eax, (%rcx)
	movl	12(%rsp), %esi                  # 4-byte Reload
	movq	216(%rsp), %rax                 # 8-byte Reload
	.loc	0 340 12                        # liblzma/lzma/lzma_encoder_optimum_normal.c:340:12
	movl	%esi, (%rax)
.Ltmp309:
	#DEBUG_VALUE: mf_skip:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	.loc	10 270 13                       # liblzma/lz/lz_encoder.h:270:13
	decl	%esi
.Ltmp310:
	#DEBUG_VALUE: mf_skip:amount <- $esi
	.loc	10 270 6 is_stmt 0              # liblzma/lz/lz_encoder.h:270:6
	je	.LBB0_4
.Ltmp311:
# %bb.99:                               # %if.then.i490.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:nice_len <- $r14d
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_max_index <- $r15d
	#DEBUG_VALUE: mf_skip:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: mf_skip:amount <- $esi
	.loc	10 0 6                          # liblzma/lz/lz_encoder.h:0:6
	movq	248(%rsp), %r14                 # 8-byte Reload
.Ltmp312:
	.loc	10 271 3 is_stmt 1              # liblzma/lz/lz_encoder.h:271:3
	movq	%r14, %rdi
	movl	%esi, %ebx
	callq	*56(%r14)
.Ltmp313:
	#DEBUG_VALUE: mf_skip:amount <- $ebx
	.loc	10 272 18                       # liblzma/lz/lz_encoder.h:272:18
	addl	%ebx, 28(%r14)
	.loc	10 273 2                        # liblzma/lz/lz_encoder.h:273:2
	jmp	.LBB0_4
.Ltmp314:
.LBB0_100:                              # %if.end89.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:nice_len <- $r14d
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_max_index <- $r15d
	.loc	10 0 2 is_stmt 0                # liblzma/lz/lz_encoder.h:0:2
	movl	%r13d, 40(%rsp)                 # 4-byte Spill
	movq	%r12, 272(%rsp)                 # 8-byte Spill
	movq	136(%rsp), %r14                 # 8-byte Reload
.Ltmp315:
	.loc	0 355 32 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:355:32
	movl	736(%r14), %r13d
	.loc	0 355 23 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:355:23
	movl	%r13d, 69348(%r14)
	movl	2960(%r14), %r12d
	movq	304(%rsp), %rcx                 # 8-byte Reload
	.loc	0 357 38 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:357:38
	andl	%ecx, %r12d
.Ltmp316:
	#DEBUG_VALUE: helper1:pos_state <- undef
	.loc	0 360 5                         # liblzma/lzma/lzma_encoder_optimum_normal.c:360:5
	movq	%r13, %rax
	shlq	$5, %rax
	movq	%rax, 72(%rsp)                  # 8-byte Spill
	addq	%r14, %rax
	addq	$27548, %rax                    # imm = 0x6B9C
	movzwl	(%rax,%r12,2), %edx
.Ltmp317:
	#DEBUG_VALUE: rc_bit_0_price:prob <- undef
	.loc	8 39 29                         # liblzma/rangecoder/price.h:39:29
	shrl	$4, %edx
.Ltmp318:
	#DEBUG_VALUE: get_literal_price:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:pos <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:symbol <- $ebx
	#DEBUG_VALUE: get_literal_price:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:match_mode <- undef
	#DEBUG_VALUE: get_literal_price:prev_byte <- undef
	.loc	8 0 29 is_stmt 0                # liblzma/rangecoder/price.h:0:29
	movl	2968(%r14), %r8d
.Ltmp319:
	.loc	0 26 38 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:26:38
	andl	%ecx, %r8d
	movzbl	2964(%r14), %ecx
	shll	%cl, %r8d
.Ltmp320:
	.loc	0 361 41                        # liblzma/lzma/lzma_encoder_optimum_normal.c:361:41
	movzbl	-2(%rsi), %r15d
.Ltmp321:
	#DEBUG_VALUE: get_literal_price:prev_byte <- $r15d
	.loc	0 0 41 is_stmt 0                # liblzma/lzma/lzma_encoder_optimum_normal.c:0:41
	movb	$8, %sil
.Ltmp322:
	.loc	0 26 38 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:26:38
	subb	%cl, %sil
	movl	%esi, %ecx
	shrl	%cl, %r15d
.Ltmp323:
	addl	%r8d, %r15d
	leaq	(%r15,%r15,2), %rcx
	shlq	$9, %rcx
.Ltmp324:
	#DEBUG_VALUE: get_literal_price:price <- 0
	.loc	0 0 0 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:0
	leal	256(%rbx), %r15d
	movq	%r12, 280(%rsp)                 # 8-byte Spill
.Ltmp325:
	.loc	0 360 5 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:360:5
	leaq	(%rax,%r12,2), %rax
	movq	%rax, 48(%rsp)                  # 8-byte Spill
.Ltmp326:
	.loc	8 39 9                          # liblzma/rangecoder/price.h:39:9
	movq	lzma_rc_prices@GOTPCREL(%rip), %rax
	movzbl	(%rax,%rdx), %eax
	movl	%eax, 80(%rsp)                  # 4-byte Spill
.Ltmp327:
	.loc	0 26 38                         # liblzma/lzma/lzma_encoder_optimum_normal.c:26:38
	leaq	(%r14,%rcx), %rsi
	addq	$2972, %rsi                     # imm = 0xB9C
.Ltmp328:
	#DEBUG_VALUE: get_literal_price:subcoder <- $rsi
	#DEBUG_VALUE: get_literal_price:match_byte <- [DW_OP_LLVM_convert 8 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] undef
	.loc	0 0 38 is_stmt 0                # liblzma/lzma/lzma_encoder_optimum_normal.c:0:38
	movq	%r13, 32(%rsp)                  # 8-byte Spill
.Ltmp329:
	#DEBUG_VALUE: get_literal_price:match_byte <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	xorl	%eax, %eax
.Ltmp330:
	.loc	0 355 32 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:355:32
	cmpq	$6, %r13
.Ltmp331:
	.loc	0 32 6                          # liblzma/lzma/lzma_encoder_optimum_normal.c:32:6
	jbe	.LBB0_103
.Ltmp332:
# %bb.101:                              # %do.body.i.preheader.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:pos <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:symbol <- $ebx
	#DEBUG_VALUE: get_literal_price:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:price <- 0
	#DEBUG_VALUE: get_literal_price:subcoder <- $rsi
	#DEBUG_VALUE: get_literal_price:match_byte <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	.loc	0 0 6 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:6
	movl	$256, %ecx                      # imm = 0x100
	movl	40(%rsp), %edx                  # 4-byte Reload
	movq	lzma_rc_prices@GOTPCREL(%rip), %r12
.Ltmp333:
	.p2align	4, 0x90
.LBB0_102:                              # %do.body.i.i156
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:pos <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:subcoder <- $rsi
	#DEBUG_VALUE: get_literal_price:match_byte <- $edx
	#DEBUG_VALUE: get_literal_price:match_byte <- $edx
	#DEBUG_VALUE: get_literal_price:symbol <- $r15d
	#DEBUG_VALUE: get_literal_price:price <- $eax
	#DEBUG_VALUE: offset <- $ecx
	.loc	0 39 15 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:39:15
	addl	%edx, %edx
.Ltmp334:
	#DEBUG_VALUE: get_literal_price:match_byte <- $edx
	.loc	0 41 42                         # liblzma/lzma/lzma_encoder_optimum_normal.c:41:42
	movl	%edx, %r8d
	andl	%ecx, %r8d
.Ltmp335:
	#DEBUG_VALUE: match_bit <- $r8d
	.loc	0 43 37                         # liblzma/lzma/lzma_encoder_optimum_normal.c:43:37
	movl	%r15d, %r13d
	shrl	$8, %r13d
	.loc	0 43 15 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:43:15
	addl	%ecx, %r13d
	.loc	0 43 27                         # liblzma/lzma/lzma_encoder_optimum_normal.c:43:27
	addl	%r8d, %r13d
.Ltmp336:
	#DEBUG_VALUE: subcoder_index <- $r13d
	#DEBUG_VALUE: bit <- [DW_OP_constu 7, DW_OP_shr, DW_OP_constu 1, DW_OP_and, DW_OP_stack_value] $r15d
	.loc	0 45 26 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:45:26
	movzwl	(%rsi,%r13,2), %r8d
.Ltmp337:
	#DEBUG_VALUE: rc_bit_price:prob <- undef
	#DEBUG_VALUE: rc_bit_price:bit <- [DW_OP_constu 7, DW_OP_shr, DW_OP_constu 1, DW_OP_and, DW_OP_stack_value] $r15d
	.loc	8 32 4                          # liblzma/rangecoder/price.h:32:4
	movsbl	%r15b, %r13d
.Ltmp338:
	shrl	$7, %r13d
	.loc	8 31 30                         # liblzma/rangecoder/price.h:31:30
	andl	$2032, %r13d                    # imm = 0x7F0
	xorl	%r8d, %r13d
	.loc	8 32 33                         # liblzma/rangecoder/price.h:32:33
	shrl	$4, %r13d
	.loc	8 31 9                          # liblzma/rangecoder/price.h:31:9
	movzbl	(%r12,%r13), %r8d
.Ltmp339:
	.loc	0 45 10                         # liblzma/lzma/lzma_encoder_optimum_normal.c:45:10
	addl	%r8d, %eax
.Ltmp340:
	#DEBUG_VALUE: get_literal_price:price <- $eax
	.loc	0 47 11                         # liblzma/lzma/lzma_encoder_optimum_normal.c:47:11
	leal	(%r15,%r15), %r8d
.Ltmp341:
	#DEBUG_VALUE: get_literal_price:symbol <- $r8d
	.loc	0 48 14                         # liblzma/lzma/lzma_encoder_optimum_normal.c:48:14
	movl	%r8d, %r13d
	xorl	%edx, %r13d
	notl	%r13d
	.loc	0 48 11 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:48:11
	andl	%r13d, %ecx
.Ltmp342:
	#DEBUG_VALUE: offset <- $ecx
	.loc	0 50 19 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:50:19
	cmpl	$32768, %r15d                   # imm = 0x8000
	movl	%r8d, %r15d
.Ltmp343:
	#DEBUG_VALUE: get_literal_price:symbol <- $r15d
	.loc	0 50 3 is_stmt 0                # liblzma/lzma/lzma_encoder_optimum_normal.c:50:3
	jb	.LBB0_102
	jmp	.LBB0_105
.Ltmp344:
.LBB0_103:                              # %do.body.i.i.i.preheader
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:pos <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:symbol <- $ebx
	#DEBUG_VALUE: get_literal_price:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:price <- 0
	#DEBUG_VALUE: get_literal_price:subcoder <- $rsi
	#DEBUG_VALUE: get_literal_price:match_byte <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	.loc	8 60 10 is_stmt 1               # liblzma/rangecoder/price.h:60:10
	movl	%r15d, %ecx
	movq	lzma_rc_prices@GOTPCREL(%rip), %r12
.Ltmp345:
	.p2align	4, 0x90
.LBB0_104:                              # %do.body.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:pos <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:symbol <- $ebx
	#DEBUG_VALUE: get_literal_price:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:price <- 0
	#DEBUG_VALUE: get_literal_price:subcoder <- $rsi
	#DEBUG_VALUE: get_literal_price:match_byte <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: rc_bittree_price:symbol <- $r15d
	#DEBUG_VALUE: rc_bittree_price:price <- $eax
	.loc	8 59 31                         # liblzma/rangecoder/price.h:59:31
	movl	%r15d, %edx
	andl	$1, %edx
	negl	%edx
.Ltmp346:
	#DEBUG_VALUE: bit <- undef
	.loc	8 60 10                         # liblzma/rangecoder/price.h:60:10
	shrl	%ecx
.Ltmp347:
	#DEBUG_VALUE: rc_bittree_price:symbol <- $ecx
	.loc	8 61 25                         # liblzma/rangecoder/price.h:61:25
	andl	$-2, %r15d
	movzwl	(%rsi,%r15), %r8d
.Ltmp348:
	#DEBUG_VALUE: rc_bit_price:prob <- undef
	#DEBUG_VALUE: rc_bit_price:bit <- undef
	.loc	8 31 30                         # liblzma/rangecoder/price.h:31:30
	andl	$2032, %edx                     # imm = 0x7F0
	xorl	%r8d, %edx
	.loc	8 32 33                         # liblzma/rangecoder/price.h:32:33
	shrl	$4, %edx
	.loc	8 31 9                          # liblzma/rangecoder/price.h:31:9
	movzbl	(%r12,%rdx), %edx
.Ltmp349:
	.loc	8 61 9                          # liblzma/rangecoder/price.h:61:9
	addl	%edx, %eax
.Ltmp350:
	#DEBUG_VALUE: rc_bittree_price:price <- $eax
	.loc	8 0 9 is_stmt 0                 # liblzma/rangecoder/price.h:0:9
	movl	%ecx, %r15d
.Ltmp351:
	.loc	8 62 18 is_stmt 1               # liblzma/rangecoder/price.h:62:18
	cmpl	$1, %ecx
.Ltmp352:
	.loc	8 62 2 is_stmt 0                # liblzma/rangecoder/price.h:62:2
	jne	.LBB0_104
.Ltmp353:
.LBB0_105:                              # %get_literal_price.exit.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:pos <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:subcoder <- $rsi
	.loc	0 361 4 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:361:4
	addl	80(%rsp), %eax                  # 4-byte Folded Reload
	#DEBUG_VALUE: get_literal_price:price <- undef
	movq	136(%rsp), %r14                 # 8-byte Reload
	.loc	0 359 23                        # liblzma/lzma/lzma_encoder_optimum_normal.c:359:23
	movl	%eax, 69408(%r14)
.Ltmp354:
	#DEBUG_VALUE: make_literal:optimal <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 69392, DW_OP_stack_value] $rsp
	.loc	0 214 21                        # liblzma/lzma/lzma_encoder_optimum_normal.c:214:21
	movl	$-1, 69416(%r14)
	.loc	0 215 29                        # liblzma/lzma/lzma_encoder_optimum_normal.c:215:29
	movb	$0, 69396(%r14)
	movq	48(%rsp), %rcx                  # 8-byte Reload
.Ltmp355:
	.loc	0 368 4                         # liblzma/lzma/lzma_encoder_optimum_normal.c:368:4
	movzwl	(%rcx), %ecx
.Ltmp356:
	#DEBUG_VALUE: rc_bit_1_price:prob <- undef
	.loc	8 47 4                          # liblzma/rangecoder/price.h:47:4
	shrl	$4, %ecx
	xorq	$127, %rcx
	.loc	8 46 9                          # liblzma/rangecoder/price.h:46:9
	movzbl	(%r12,%rcx), %ecx
.Ltmp357:
	#DEBUG_VALUE: helper1:match_price <- $ecx
	.loc	8 0 9 is_stmt 0                 # liblzma/rangecoder/price.h:0:9
	movq	32(%rsp), %r13                  # 8-byte Reload
.Ltmp358:
	.loc	0 370 21 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:370:21
	movzwl	27932(%r14,%r13,2), %edx
.Ltmp359:
	#DEBUG_VALUE: rc_bit_1_price:prob <- undef
	.loc	8 47 4                          # liblzma/rangecoder/price.h:47:4
	shrl	$4, %edx
	xorq	$127, %rdx
	.loc	8 46 9                          # liblzma/rangecoder/price.h:46:9
	movzbl	(%r12,%rdx), %esi
.Ltmp360:
	.loc	0 370 4                         # liblzma/lzma/lzma_encoder_optimum_normal.c:370:4
	addl	%ecx, %esi
.Ltmp361:
	#DEBUG_VALUE: helper1:rep_match_price <- $esi
	.loc	0 0 4 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:4
	movl	$-1, %edx
	cmpb	40(%rsp), %bl                   # 1-byte Folded Reload
	.loc	0 372 6 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:372:6
	je	.LBB0_107
.Ltmp362:
# %bb.106:
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:match_price <- $ecx
	#DEBUG_VALUE: helper1:rep_match_price <- $esi
	.loc	0 0 6 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:6
	movq	272(%rsp), %r8                  # 8-byte Reload
	.loc	0 372 6                         # liblzma/lzma/lzma_encoder_optimum_normal.c:372:6
	jmp	.LBB0_109
.Ltmp363:
.LBB0_107:                              # %if.then127.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:match_price <- $ecx
	#DEBUG_VALUE: helper1:rep_match_price <- $esi
	#DEBUG_VALUE: get_short_rep_price:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_short_rep_price:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	.loc	0 72 24 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:72:24
	movzwl	27956(%r14,%r13,2), %r8d
.Ltmp364:
	#DEBUG_VALUE: rc_bit_0_price:prob <- undef
	.loc	8 39 29                         # liblzma/rangecoder/price.h:39:29
	shrl	$4, %r8d
	.loc	8 39 9 is_stmt 0                # liblzma/rangecoder/price.h:39:9
	movzbl	(%r12,%r8), %r15d
	movq	72(%rsp), %r8                   # 8-byte Reload
.Ltmp365:
	.loc	0 73 27 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:73:27
	addq	%r14, %r8
	movq	280(%rsp), %rbx                 # 8-byte Reload
	.loc	0 73 20 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:73:20
	movzwl	28028(%r8,%rbx,2), %r8d
.Ltmp366:
	#DEBUG_VALUE: rc_bit_0_price:prob <- undef
	.loc	8 39 29 is_stmt 1               # liblzma/rangecoder/price.h:39:29
	shrl	$4, %r8d
	.loc	8 39 9 is_stmt 0                # liblzma/rangecoder/price.h:39:9
	movzbl	(%r12,%r8), %r8d
.Ltmp367:
	.loc	0 73 3 is_stmt 1                # liblzma/lzma/lzma_encoder_optimum_normal.c:73:3
	addl	%esi, %r15d
.Ltmp368:
	.loc	0 374 5                         # liblzma/lzma/lzma_encoder_optimum_normal.c:374:5
	addl	%r8d, %r15d
.Ltmp369:
	#DEBUG_VALUE: short_rep_price <- $r15d
	.loc	0 377 23                        # liblzma/lzma/lzma_encoder_optimum_normal.c:377:23
	cmpl	%eax, %r15d
	#DEBUG_VALUE: get_short_rep_price:state <- undef
	#DEBUG_VALUE: get_short_rep_price:pos_state <- undef
	movq	272(%rsp), %r8                  # 8-byte Reload
.Ltmp370:
	.loc	0 377 7 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:377:7
	jae	.LBB0_109
.Ltmp371:
# %bb.108:                              # %if.then136.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:match_price <- $ecx
	#DEBUG_VALUE: helper1:rep_match_price <- $esi
	#DEBUG_VALUE: short_rep_price <- $r15d
	.loc	0 378 25 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:378:25
	movl	%r15d, 69408(%r14)
.Ltmp372:
	#DEBUG_VALUE: make_short_rep:optimal <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 69392, DW_OP_stack_value] $rsp
	.loc	0 222 21                        # liblzma/lzma/lzma_encoder_optimum_normal.c:222:21
	movl	$0, 69416(%r14)
	.loc	0 223 29                        # liblzma/lzma/lzma_encoder_optimum_normal.c:223:29
	movb	$0, 69396(%r14)
	xorl	%edx, %edx
.Ltmp373:
.LBB0_109:                              # %if.end143.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:match_price <- $ecx
	#DEBUG_VALUE: helper1:rep_match_price <- $esi
	.loc	0 0 29 is_stmt 0                # liblzma/lzma/lzma_encoder_optimum_normal.c:0:29
	movl	12(%rsp), %eax                  # 4-byte Reload
	movq	(%rsp), %rbx                    # 8-byte Reload
	.loc	0 383 27 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:383:27
	cmpl	%ebx, %eax
	cmoval	%eax, %ebx
.Ltmp374:
	#DEBUG_VALUE: helper1:len_end <- $ebx
	.loc	0 385 14                        # liblzma/lzma/lzma_encoder_optimum_normal.c:385:14
	cmpl	$1, %ebx
.Ltmp375:
	.loc	0 385 6 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:385:6
	ja	.LBB0_112
.Ltmp376:
# %bb.110:                              # %if.then156.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:match_price <- $ecx
	#DEBUG_VALUE: helper1:rep_match_price <- $esi
	#DEBUG_VALUE: helper1:len_end <- $ebx
	.loc	0 0 6                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:6
	movq	200(%rsp), %rax                 # 8-byte Reload
.Ltmp377:
	.loc	0 386 13 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:386:13
	movl	%edx, (%rax)
.Ltmp378:
.LBB0_111:                              # %helper1.exit.thread333
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	.loc	0 0 13 is_stmt 0                # liblzma/lzma/lzma_encoder_optimum_normal.c:0:13
	movq	216(%rsp), %rax                 # 8-byte Reload
	movl	$1, (%rax)
.Ltmp379:
	.loc	0 352 3 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:352:3
	jmp	.LBB0_4
.Ltmp380:
.LBB0_112:                              # %if.end159.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:match_price <- $ecx
	#DEBUG_VALUE: helper1:rep_match_price <- $esi
	#DEBUG_VALUE: helper1:len_end <- $ebx
	.loc	0 391 26                        # liblzma/lzma/lzma_encoder_optimum_normal.c:391:26
	movl	$0, 69412(%r14)
.Ltmp381:
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: i <- 0
	.loc	0 394 27                        # liblzma/lzma/lzma_encoder_optimum_normal.c:394:27
	movl	%r8d, 69376(%r14)
.Ltmp382:
	#DEBUG_VALUE: i <- 1
	.loc	0 0 27 is_stmt 0                # liblzma/lzma/lzma_encoder_optimum_normal.c:0:27
	movq	168(%rsp), %rax                 # 8-byte Reload
	.loc	0 394 27                        # liblzma/lzma/lzma_encoder_optimum_normal.c:394:27
	movl	%eax, 69380(%r14)
.Ltmp383:
	#DEBUG_VALUE: i <- 2
	.loc	0 0 27                          # liblzma/lzma/lzma_encoder_optimum_normal.c:0:27
	movq	288(%rsp), %rax                 # 8-byte Reload
	.loc	0 394 27                        # liblzma/lzma/lzma_encoder_optimum_normal.c:394:27
	movl	%eax, 69384(%r14)
.Ltmp384:
	#DEBUG_VALUE: i <- 3
	movl	%ebp, 69388(%r14)
.Ltmp385:
	#DEBUG_VALUE: i <- 4
	.loc	0 397 2 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:397:2
	movl	%ebx, %edx
	cmpl	$5, %ebx
	movq	%rbx, (%rsp)                    # 8-byte Spill
.Ltmp386:
	#DEBUG_VALUE: helper1:len_end <- [DW_OP_deref] $rsp
	jae	.LBB0_114
.Ltmp387:
# %bb.113:
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:match_price <- $ecx
	#DEBUG_VALUE: helper1:rep_match_price <- $esi
	#DEBUG_VALUE: helper1:len_end <- [DW_OP_deref] $rsp
	.loc	0 0 2 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:2
	movl	%ebx, %eax
	.loc	0 397 2                         # liblzma/lzma/lzma_encoder_optimum_normal.c:397:2
	jmp	.LBB0_117
.Ltmp388:
.LBB0_114:                              # %vector.ph
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:match_price <- $ecx
	#DEBUG_VALUE: helper1:rep_match_price <- $esi
	#DEBUG_VALUE: helper1:len_end <- [DW_OP_deref] $rsp
	leal	-1(%rbx), %r8d
	movl	%r8d, %r15d
	andl	$-4, %r15d
	movl	%ebx, %eax
	subl	%r15d, %eax
	imulq	$44, %rdx, %r12
	subq	%r15, %rdx
	addq	%r14, %r12
	addq	$69364, %r12                    # imm = 0x10EF4
	movq	%r15, %r13
.Ltmp389:
	.p2align	4, 0x90
.LBB0_115:                              # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:match_price <- $ecx
	#DEBUG_VALUE: helper1:rep_match_price <- $esi
	#DEBUG_VALUE: helper1:len_end <- [DW_OP_deref] $rsp
	.loc	0 398 26 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:398:26
	movl	$1073741824, (%r12)             # imm = 0x40000000
	movl	$1073741824, -44(%r12)          # imm = 0x40000000
	movl	$1073741824, -88(%r12)          # imm = 0x40000000
	movl	$1073741824, -132(%r12)         # imm = 0x40000000
	addq	$-176, %r12
	addq	$-4, %r13
	jne	.LBB0_115
.Ltmp390:
# %bb.116:                              # %middle.block
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:match_price <- $ecx
	#DEBUG_VALUE: helper1:rep_match_price <- $esi
	#DEBUG_VALUE: helper1:len_end <- [DW_OP_deref] $rsp
	.loc	0 399 2                         # liblzma/lzma/lzma_encoder_optimum_normal.c:399:2
	cmpl	%r8d, %r15d
	movq	136(%rsp), %r14                 # 8-byte Reload
	movq	32(%rsp), %r13                  # 8-byte Reload
	je	.LBB0_119
.Ltmp391:
.LBB0_117:                              # %do.body.i.preheader
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:match_price <- $ecx
	#DEBUG_VALUE: helper1:rep_match_price <- $esi
	#DEBUG_VALUE: helper1:len_end <- [DW_OP_deref] $rsp
	.loc	0 397 2                         # liblzma/lzma/lzma_encoder_optimum_normal.c:397:2
	imulq	$44, %rdx, %rdx
	addq	%r14, %rdx
	addq	$69364, %rdx                    # imm = 0x10EF4
.Ltmp392:
	.p2align	4, 0x90
.LBB0_118:                              # %do.body.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:match_price <- $ecx
	#DEBUG_VALUE: helper1:rep_match_price <- $esi
	#DEBUG_VALUE: helper1:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len <- [DW_OP_LLVM_arg 0, DW_OP_consts 69364, DW_OP_consts 44, DW_OP_LLVM_arg 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_minus, DW_OP_consts 18446744073709551572, DW_OP_div, DW_OP_consts 18446744073709551615, DW_OP_mul, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] undef, undef, undef
	.loc	0 398 26                        # liblzma/lzma/lzma_encoder_optimum_normal.c:398:26
	movl	$1073741824, (%rdx)             # imm = 0x40000000
.Ltmp393:
	.loc	0 399 11                        # liblzma/lzma/lzma_encoder_optimum_normal.c:399:11
	decl	%eax
.Ltmp394:
	#DEBUG_VALUE: helper1:len <- $eax
	.loc	0 399 17 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:399:17
	addq	$-44, %rdx
	cmpl	$1, %eax
.Ltmp395:
	.loc	0 399 2                         # liblzma/lzma/lzma_encoder_optimum_normal.c:399:2
	ja	.LBB0_118
.Ltmp396:
.LBB0_119:                              # %for.cond186.preheader.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:match_price <- $ecx
	#DEBUG_VALUE: helper1:rep_match_price <- $esi
	#DEBUG_VALUE: helper1:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: rep_len <- $edi
	.loc	0 404 15 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:404:15
	cmpl	$2, %edi
	movq	280(%rsp), %r12                 # 8-byte Reload
.Ltmp397:
	.loc	0 404 7 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:404:7
	jae	.LBB0_337
.Ltmp398:
.LBB0_120:                              # %cleanup232.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:match_price <- $ecx
	#DEBUG_VALUE: helper1:rep_match_price <- $esi
	#DEBUG_VALUE: helper1:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: i <- 1
	#DEBUG_VALUE: rep_len <- $r9d
	.loc	0 404 15                        # liblzma/lzma/lzma_encoder_optimum_normal.c:404:15
	cmpl	$2, %r9d
.Ltmp399:
	.loc	0 404 7                         # liblzma/lzma/lzma_encoder_optimum_normal.c:404:7
	jae	.LBB0_341
.Ltmp400:
.LBB0_121:                              # %cleanup232.1.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:match_price <- $ecx
	#DEBUG_VALUE: helper1:rep_match_price <- $esi
	#DEBUG_VALUE: helper1:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 1
	#DEBUG_VALUE: i <- 2
	#DEBUG_VALUE: rep_len <- $r11d
	.loc	0 404 15                        # liblzma/lzma/lzma_encoder_optimum_normal.c:404:15
	cmpl	$2, %r11d
.Ltmp401:
	.loc	0 404 7                         # liblzma/lzma/lzma_encoder_optimum_normal.c:404:7
	jae	.LBB0_345
.Ltmp402:
.LBB0_122:                              # %cleanup232.2.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:match_price <- $ecx
	#DEBUG_VALUE: helper1:rep_match_price <- $esi
	#DEBUG_VALUE: helper1:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 2
	#DEBUG_VALUE: i <- 3
	#DEBUG_VALUE: rep_len <- $r10d
	.loc	0 404 15                        # liblzma/lzma/lzma_encoder_optimum_normal.c:404:15
	cmpl	$2, %r10d
.Ltmp403:
	.loc	0 404 7                         # liblzma/lzma/lzma_encoder_optimum_normal.c:404:7
	jae	.LBB0_349
.Ltmp404:
.LBB0_123:                              # %cleanup232.3.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:match_price <- $ecx
	#DEBUG_VALUE: helper1:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 3
	.loc	0 0 7                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:7
	leaq	69348(%r14), %rbp
.Ltmp405:
	#DEBUG_VALUE: i <- 4
	#DEBUG_VALUE: rc_bit_0_price:prob <- undef
	#DEBUG_VALUE: helper1:normal_match_price <- undef
	.loc	0 429 8 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:429:8
	leal	1(%rdi), %eax
.Ltmp406:
	.loc	0 404 15                        # liblzma/lzma/lzma_encoder_optimum_normal.c:404:15
	cmpl	$2, %edi
	movl	$2, %r11d
.Ltmp407:
	.loc	0 429 8                         # liblzma/lzma/lzma_encoder_optimum_normal.c:429:8
	cmovael	%eax, %r11d
.Ltmp408:
	#DEBUG_VALUE: helper1:len <- $r11d
	.loc	0 430 10                        # liblzma/lzma/lzma_encoder_optimum_normal.c:430:10
	cmpl	12(%rsp), %r11d                 # 4-byte Folded Reload
	movq	%rbp, 64(%rsp)                  # 8-byte Spill
.Ltmp409:
	.loc	0 430 6 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:430:6
	ja	.LBB0_135
.Ltmp410:
# %bb.124:                              # %while.cond.preheader.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:match_price <- $ecx
	#DEBUG_VALUE: helper1:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len <- $r11d
	#DEBUG_VALUE: i <- 4
	.loc	0 0 6                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:6
	movzwl	27932(%r14,%r13,2), %eax
	shrl	$4, %eax
	movq	lzma_rc_prices@GOTPCREL(%rip), %rdx
	movzbl	(%rdx,%rax), %eax
	movl	$-1, %r10d
.Ltmp411:
	.p2align	4, 0x90
.LBB0_125:                              # %while.cond.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:match_price <- $ecx
	#DEBUG_VALUE: helper1:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len <- $r11d
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r10d
	.loc	0 432 16 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:432:16
	incl	%r10d
.Ltmp412:
	.loc	0 432 14 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:432:14
	cmpl	756(%r14,%r10,8), %r11d
.Ltmp413:
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 2, DW_OP_stack_value] undef
	.loc	0 432 3                         # liblzma/lzma/lzma_encoder_optimum_normal.c:432:3
	ja	.LBB0_125
.Ltmp414:
# %bb.126:                              # %for.cond265.preheader.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:match_price <- $ecx
	#DEBUG_VALUE: helper1:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len <- $r11d
	.loc	0 0 3                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:3
	leaq	30212(%r14), %r9
	addl	%ecx, %eax
	movl	196(%rsp), %edx
	leaq	66192(%r14), %rsi
	leaq	67216(%r14), %rdi
	imulq	$1088, %r12, %r8                # imm = 0x440
	addq	%r9, %r8
	movl	$18, %r12d
	jmp	.LBB0_128
.Ltmp415:
	.p2align	4, 0x90
.LBB0_127:                              # %for.inc316.i
                                        #   in Loop: Header=BB0_128 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_end <- [DW_OP_deref] $rsp
	.loc	0 449 12 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:449:12
	cmpl	%ecx, %r9d
.Ltmp416:
	.loc	0 449 8 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:449:8
	cmovnel	%r13d, %r10d
.Ltmp417:
	#DEBUG_VALUE: i <- $r10d
	#DEBUG_VALUE: helper1:len <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	0 435 3 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:435:3
	incl	%r9d
	movl	%r9d, %r11d
.Ltmp418:
.LBB0_128:                              # %for.cond265.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $r10d
	#DEBUG_VALUE: helper1:len <- $r11d
	.loc	0 436 26                        # liblzma/lzma/lzma_encoder_optimum_normal.c:436:26
	movl	%r10d, %r13d
	.loc	0 436 44 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:436:44
	movl	760(%r14,%r13,8), %r15d
.Ltmp419:
	.loc	0 119 36 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:119:36
	leal	-2(%r11), %r9d
.Ltmp420:
	#DEBUG_VALUE: dist <- undef
	#DEBUG_VALUE: get_pos_len_price:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_pos_len_price:pos <- undef
	#DEBUG_VALUE: get_pos_len_price:len <- $r11d
	#DEBUG_VALUE: get_pos_len_price:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	cmpl	$6, %r11d
	movl	$3, %ecx
	cmovbl	%r9d, %ecx
.Ltmp421:
	#DEBUG_VALUE: get_pos_len_price:len_to_pos_state <- $ecx
	.loc	0 0 36 is_stmt 0                # liblzma/lzma/lzma_encoder_optimum_normal.c:0:36
	movl	%ecx, %ebx
.Ltmp422:
	#DEBUG_VALUE: get_pos_len_price:len_to_pos_state <- $ebx
	.loc	0 436 44 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:436:44
	cmpq	$127, %r15
.Ltmp423:
	#DEBUG_VALUE: get_pos_len_price:pos_state <- undef
	.loc	0 122 6                         # liblzma/lzma/lzma_encoder_optimum_normal.c:122:6
	ja	.LBB0_130
.Ltmp424:
# %bb.129:                              # %if.then.i542.i
                                        #   in Loop: Header=BB0_128 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len <- $r11d
	#DEBUG_VALUE: i <- $r13d
	#DEBUG_VALUE: get_pos_len_price:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_pos_len_price:len <- $r11d
	#DEBUG_VALUE: get_pos_len_price:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_pos_len_price:len_to_pos_state <- $ebx
	.loc	0 123 11                        # liblzma/lzma/lzma_encoder_optimum_normal.c:123:11
	shlq	$9, %rbx
.Ltmp425:
	#DEBUG_VALUE: get_pos_len_price:len_to_pos_state <- $ecx
	addq	%rdi, %rbx
	movl	(%rbx,%r15,4), %ecx
.Ltmp426:
	#DEBUG_VALUE: get_pos_len_price:price <- $ecx
	.loc	0 124 2                         # liblzma/lzma/lzma_encoder_optimum_normal.c:124:2
	jmp	.LBB0_131
.Ltmp427:
.LBB0_130:                              # %if.else.i537.i
                                        #   in Loop: Header=BB0_128 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len <- $r11d
	#DEBUG_VALUE: i <- $r13d
	#DEBUG_VALUE: get_pos_len_price:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_pos_len_price:len <- $r11d
	#DEBUG_VALUE: get_pos_len_price:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_pos_len_price:len_to_pos_state <- $ebx
	.loc	9 128 6                         # liblzma/lzma/fastpos.h:128:6
	testl	%r15d, %r15d
	movl	$30, %ecx
	cmovnsl	%r12d, %ecx
	movl	$60, %ebp
	movl	$36, %r10d
	cmovnsl	%r10d, %ebp
.Ltmp428:
	.loc	9 128 10 is_stmt 0              # liblzma/lzma/fastpos.h:128:10
	cmpl	$524288, %r15d                  # imm = 0x80000
.Ltmp429:
	.loc	9 0 0                           # liblzma/lzma/fastpos.h:0:0
	movl	$6, %r10d
	cmovbl	%r10d, %ecx
	movl	$12, %r10d
	cmovbl	%r10d, %ebp
	movq	%r15, %r10
                                        # kill: def $cl killed $cl killed $ecx
	shrq	%cl, %r10
	movq	lzma_fastpos@GOTPCREL(%rip), %rcx
	movzbl	(%rcx,%r10), %r10d
	addl	%ebp, %r10d
.Ltmp430:
	#DEBUG_VALUE: pos_slot <- undef
	movq	64(%rsp), %rbp                  # 8-byte Reload
.Ltmp431:
	.loc	0 126 11 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:126:11
	shlq	$8, %rbx
.Ltmp432:
	addq	%rsi, %rbx
	.loc	0 127 31                        # liblzma/lzma/lzma_encoder_optimum_normal.c:127:31
	movl	%r15d, %ecx
	andl	$15, %ecx
	.loc	0 127 7 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:127:7
	movl	69272(%r14,%rcx,4), %ecx
	.loc	0 127 5                         # liblzma/lzma/lzma_encoder_optimum_normal.c:127:5
	addl	(%rbx,%r10,4), %ecx
.Ltmp433:
	#DEBUG_VALUE: get_pos_len_price:price <- $ecx
	#DEBUG_VALUE: get_pos_slot_2:pos <- undef
.LBB0_131:                              # %get_pos_len_price.exit.i
                                        #   in Loop: Header=BB0_128 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len <- $r11d
	#DEBUG_VALUE: i <- $r13d
	#DEBUG_VALUE: get_pos_len_price:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_pos_len_price:len <- $r11d
	#DEBUG_VALUE: get_pos_len_price:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_pos_len_price:price <- $ecx
	#DEBUG_VALUE: get_pos_len_price:price <- $ecx
	#DEBUG_VALUE: get_len_price:lencoder <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 29184, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: get_len_price:len <- $r11d
	.loc	0 427 4 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:427:4
	addl	%eax, %ecx
.Ltmp434:
	.loc	0 63 9                          # liblzma/lzma/lzma_encoder_optimum_normal.c:63:9
	movl	%r9d, %r10d
.Ltmp435:
	#DEBUG_VALUE: get_pos_len_price:price <- undef
	.loc	0 438 6                         # liblzma/lzma/lzma_encoder_optimum_normal.c:438:6
	addl	(%r8,%r10,4), %ecx
.Ltmp436:
	#DEBUG_VALUE: cur_and_len_price <- $ecx
	.loc	0 441 28                        # liblzma/lzma/lzma_encoder_optimum_normal.c:441:28
	movl	%r11d, %r10d
	imulq	$44, %r10, %r11
.Ltmp437:
	#DEBUG_VALUE: get_len_price:len <- $r10d
	#DEBUG_VALUE: get_pos_len_price:len <- $r10d
	#DEBUG_VALUE: helper1:len <- $r10d
	.loc	0 441 26 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:441:26
	cmpl	16(%rbp,%r11), %ecx
.Ltmp438:
	#DEBUG_VALUE: get_len_price:pos_state <- undef
	.loc	0 441 8                         # liblzma/lzma/lzma_encoder_optimum_normal.c:441:8
	jae	.LBB0_133
.Ltmp439:
# %bb.132:                              # %if.then280.i
                                        #   in Loop: Header=BB0_128 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len <- $r10d
	#DEBUG_VALUE: i <- $r13d
	#DEBUG_VALUE: cur_and_len_price <- $ecx
	.loc	0 0 8                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:8
	addq	%rbp, %r11
.Ltmp440:
	.loc	0 442 28 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:442:28
	movl	%ecx, 16(%r11)
	.loc	0 443 31                        # liblzma/lzma/lzma_encoder_optimum_normal.c:443:31
	movl	$0, 20(%r11)
	.loc	0 445 14                        # liblzma/lzma/lzma_encoder_optimum_normal.c:445:14
	leal	4(%r15), %ecx
.Ltmp441:
	.loc	0 445 7 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:445:7
	movl	%ecx, 24(%r11)
	.loc	0 446 40 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:446:40
	movb	$0, 4(%r11)
.Ltmp442:
.LBB0_133:                              # %if.end298.i
                                        #   in Loop: Header=BB0_128 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len <- $r10d
	#DEBUG_VALUE: i <- $r13d
	.loc	0 449 33                        # liblzma/lzma/lzma_encoder_optimum_normal.c:449:33
	movl	756(%r14,%r13,8), %ecx
	.loc	0 449 12 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:449:12
	addl	$2, %r9d
.Ltmp443:
	.loc	0 449 8                         # liblzma/lzma/lzma_encoder_optimum_normal.c:449:8
	leal	1(%r13), %r10d
.Ltmp444:
	.loc	0 449 12                        # liblzma/lzma/lzma_encoder_optimum_normal.c:449:12
	cmpl	%ecx, %r9d
.Ltmp445:
	#DEBUG_VALUE: i <- undef
	.loc	0 0 12                          # liblzma/lzma/lzma_encoder_optimum_normal.c:0:12
	jne	.LBB0_127
.Ltmp446:
# %bb.134:                              # %if.end298.i
                                        #   in Loop: Header=BB0_128 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_end <- [DW_OP_deref] $rsp
	cmpl	%edx, %r10d
	jne	.LBB0_127
.Ltmp447:
.LBB0_135:                              # %helper1.exit
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	movq	(%rsp), %rcx                    # 8-byte Reload
.Ltmp448:
	.loc	0 856 14 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:856:14
	cmpl	$-1, %ecx
.Ltmp449:
	.loc	0 856 6 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:856:6
	je	.LBB0_4
.Ltmp450:
# %bb.136:                              # %for.body.lr.ph
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	.loc	0 0 6                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:6
	leaq	740(%r14), %rax
	leaq	27548(%r14), %rdx
	movq	%rdx, 240(%rsp)                 # 8-byte Spill
	leaq	2972(%r14), %rdx
	movq	%rdx, 320(%rsp)                 # 8-byte Spill
	leaq	69376(%r14), %rdx
	movq	%rdx, 352(%rsp)                 # 8-byte Spill
	leaq	48716(%r14), %rdx
	movq	%rdx, 256(%rsp)                 # 8-byte Spill
	.loc	0 860 2 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:860:2
	movups	(%rax), %xmm0
	movaps	%xmm0, 96(%rsp)
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
.Ltmp451:
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- 1
	.loc	0 867 17                        # liblzma/lzma/lzma_encoder_optimum_normal.c:867:17
	leaq	2948(%r14), %rax
	movq	%rax, 384(%rsp)                 # 8-byte Spill
	.loc	0 867 39 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:867:39
	leaq	756(%r14), %r15
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	leaq	28028(%r14), %rax
	movq	%rax, 296(%rsp)                 # 8-byte Spill
	leaq	30212(%r14), %rax
	movq	%rax, 288(%rsp)                 # 8-byte Spill
	leaq	66192(%r14), %rax
	movq	%rax, 280(%rsp)                 # 8-byte Spill
	leaq	67216(%r14), %rax
	movq	%rax, 272(%rsp)                 # 8-byte Spill
.Ltmp452:
	.loc	0 863 2 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:863:2
	leaq	69424(%r14), %rax
	movq	%rax, 376(%rsp)                 # 8-byte Spill
	leaq	69540(%r14), %rax
	movq	%rax, 120(%rsp)                 # 8-byte Spill
	leaq	69408(%r14), %rax
	movq	%rax, 208(%rsp)                 # 8-byte Spill
	movq	304(%rsp), %rax                 # 8-byte Reload
	incl	%eax
	movq	%rax, 312(%rsp)                 # 8-byte Spill
	movl	$1, %r13d
	movl	$4094, %r12d                    # imm = 0xFFE
	movl	$1, %eax
	movq	%rax, 56(%rsp)                  # 8-byte Spill
	movq	$0, 328(%rsp)                   # 8-byte Folded Spill
	movq	%r15, 40(%rsp)                  # 8-byte Spill
	jmp	.LBB0_139
.Ltmp453:
.LBB0_137:                              #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:current_byte <- $r10b
	#DEBUG_VALUE: helper2:pos_state <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur_and_1_price <- $ecx
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	.loc	0 0 2 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:2
	movq	40(%rsp), %r15                  # 8-byte Reload
.Ltmp454:
.LBB0_138:                              # %helper2.exit
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 360, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	movq	(%rsp), %rcx                    # 8-byte Reload
.Ltmp455:
	.loc	0 863 20                        # liblzma/lzma/lzma_encoder_optimum_normal.c:863:20
	movl	%ecx, %eax
	movq	176(%rsp), %rdx                 # 8-byte Reload
.Ltmp456:
	.loc	0 863 2                         # liblzma/lzma/lzma_encoder_optimum_normal.c:863:2
	leal	-1(%rdx), %r12d
	movq	56(%rsp), %rdx                  # 8-byte Reload
	incl	%edx
	movq	%rdx, 56(%rsp)                  # 8-byte Spill
	movq	312(%rsp), %rdx                 # 8-byte Reload
	incl	%edx
	movq	%rdx, 312(%rsp)                 # 8-byte Spill
	movq	328(%rsp), %rdx                 # 8-byte Reload
	incl	%edx
	movq	%rdx, 328(%rsp)                 # 8-byte Spill
	movq	360(%rsp), %r13                 # 8-byte Reload
.Ltmp457:
	.loc	0 863 20                        # liblzma/lzma/lzma_encoder_optimum_normal.c:863:20
	cmpq	%rax, %r13
.Ltmp458:
	.loc	0 863 2                         # liblzma/lzma/lzma_encoder_optimum_normal.c:863:2
	jae	.LBB0_354
.Ltmp459:
.LBB0_139:                              # %for.body
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB0_318 Depth 2
                                        #     Child Loop BB0_162 Depth 2
                                        #     Child Loop BB0_168 Depth 2
                                        #     Child Loop BB0_166 Depth 2
                                        #     Child Loop BB0_183 Depth 2
                                        #     Child Loop BB0_323 Depth 2
                                        #     Child Loop BB0_327 Depth 2
                                        #     Child Loop BB0_332 Depth 2
                                        #     Child Loop BB0_189 Depth 2
                                        #       Child Loop BB0_193 Depth 3
                                        #       Child Loop BB0_200 Depth 3
                                        #       Child Loop BB0_204 Depth 3
                                        #       Child Loop BB0_208 Depth 3
                                        #       Child Loop BB0_217 Depth 3
                                        #       Child Loop BB0_221 Depth 3
                                        #       Child Loop BB0_228 Depth 3
                                        #       Child Loop BB0_234 Depth 3
                                        #       Child Loop BB0_239 Depth 3
                                        #       Child Loop BB0_244 Depth 3
                                        #     Child Loop BB0_253 Depth 2
                                        #     Child Loop BB0_267 Depth 2
                                        #     Child Loop BB0_272 Depth 2
                                        #     Child Loop BB0_276 Depth 2
                                        #     Child Loop BB0_279 Depth 2
                                        #     Child Loop BB0_282 Depth 2
                                        #       Child Loop BB0_283 Depth 3
                                        #       Child Loop BB0_292 Depth 3
                                        #       Child Loop BB0_296 Depth 3
                                        #       Child Loop BB0_302 Depth 3
                                        #       Child Loop BB0_307 Depth 3
                                        #       Child Loop BB0_311 Depth 3
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- $ecx
	.loc	0 0 2                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:2
	movq	%rcx, (%rsp)                    # 8-byte Spill
.Ltmp460:
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- $r13
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	movq	248(%rsp), %rbx                 # 8-byte Reload
.Ltmp461:
	.loc	0 866 33 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:866:33
	movq	%rbx, %rdi
	movq	%r15, %rdx
	movq	384(%rsp), %r15                 # 8-byte Reload
	movq	%r15, %rsi
	callq	lzma_mf_find@PLT
.Ltmp462:
                                        # kill: def $eax killed $eax def $rax
	.loc	0 866 31 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:866:31
	movl	%eax, 2952(%r14)
.Ltmp463:
	.loc	0 869 42 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:869:42
	movl	96(%rbx), %edx
	movq	%rax, 232(%rsp)                 # 8-byte Spill
	.loc	0 869 35 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:869:35
	cmpl	%edx, %eax
.Ltmp464:
	.loc	0 869 7                         # liblzma/lzma/lzma_encoder_optimum_normal.c:869:7
	jae	.LBB0_353
.Ltmp465:
# %bb.140:                              # %if.end33
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- $r13
	.loc	0 0 7                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:7
	movl	%r12d, 48(%rsp)                 # 4-byte Spill
	.loc	0 872 34 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:872:34
	movq	(%rbx), %r12
	movl	24(%rbx), %r9d
.Ltmp466:
	#DEBUG_VALUE: mf_ptr:mf <- undef
	.loc	0 874 5                         # liblzma/lzma/lzma_encoder_optimum_normal.c:874:5
	movl	36(%rbx), %ecx
.Ltmp467:
	#DEBUG_VALUE: mf_avail:mf <- undef
	subl	%r9d, %ecx
	incl	%ecx
	movl	$4095, %eax                     # imm = 0xFFF
	subl	%r13d, %eax
	cmpl	%eax, %ecx
	movl	%ecx, 88(%rsp)                  # 4-byte Spill
	cmovbl	%ecx, %eax
	#DEBUG_VALUE: helper2:buf_avail_full <- $eax
.Ltmp468:
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- undef
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- undef
	#DEBUG_VALUE: helper2:cur <- $r13
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	.loc	0 0 5 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:5
	movl	%eax, 192(%rsp)                 # 4-byte Spill
.Ltmp469:
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	.loc	0 465 34 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:465:34
	movl	(%r15), %eax
.Ltmp470:
	#DEBUG_VALUE: helper2:matches_count <- $eax
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	.loc	0 0 34 is_stmt 0                # liblzma/lzma/lzma_encoder_optimum_normal.c:0:34
	movl	%eax, 156(%rsp)                 # 4-byte Spill
.Ltmp471:
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	.loc	0 467 22 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:467:22
	imulq	$44, %r13, %rax
	leaq	(%rax,%rbp), %rbx
	.loc	0 467 39 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:467:39
	movl	20(%rbp,%rax), %ecx
.Ltmp472:
	#DEBUG_VALUE: helper2:pos_prev <- $ecx
	.loc	0 470 6 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:470:6
	cmpb	$1, 4(%rbp,%rax)
.Ltmp473:
	#DEBUG_VALUE: helper2:nice_len <- undef
	.loc	0 0 6 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:6
	movq	%r13, 32(%rsp)                  # 8-byte Spill
.Ltmp474:
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	movq	%rdx, 72(%rsp)                  # 8-byte Spill
	movq	%r9, 16(%rsp)                   # 8-byte Spill
	.loc	0 470 6                         # liblzma/lzma/lzma_encoder_optimum_normal.c:470:6
	jne	.LBB0_144
.Ltmp475:
# %bb.141:                              # %if.then.i308
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pos_prev <- $ecx
	#DEBUG_VALUE: helper2:pos_prev <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $ecx
	.loc	0 473 7 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:473:7
	cmpb	$1, 5(%rbx)
	jne	.LBB0_147
.Ltmp476:
# %bb.142:                              # %if.then10.i
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pos_prev <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $ecx
	.loc	0 474 41                        # liblzma/lzma/lzma_encoder_optimum_normal.c:474:41
	movl	8(%rbx), %eax
	.loc	0 474 12 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:474:12
	imulq	$44, %rax, %rdx
.Ltmp477:
	#DEBUG_VALUE: helper2:state <- undef
	.loc	0 0 0                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:0
	xorl	%esi, %esi
	xorl	%edi, %edi
	cmpl	$7, (%rbp,%rdx)
	movq	%r13, %r8
	.loc	0 476 25 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:476:25
	movl	12(%rbx), %r13d
	.loc	0 0 0 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:0
	setb	%sil
	setae	%dil
	.loc	0 476 37                        # liblzma/lzma/lzma_encoder_optimum_normal.c:476:37
	cmpl	$4, %r13d
.Ltmp478:
	.loc	0 476 8                         # liblzma/lzma/lzma_encoder_optimum_normal.c:476:8
	leal	8(%rdi,%rdi,2), %edx
	leal	7(%rdi,%rdi,2), %edi
	cmovbl	%edx, %edi
.Ltmp479:
	#DEBUG_VALUE: helper2:state <- $edi
	.loc	0 485 3 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:485:3
	leal	(%rsi,%rsi,2), %edx
	addl	%edi, %edx
	addl	$-6, %edx
.Ltmp480:
	#DEBUG_VALUE: helper2:state <- $edx
	#DEBUG_VALUE: helper2:pos_prev <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $ecx
	.loc	0 491 15                        # liblzma/lzma/lzma_encoder_optimum_normal.c:491:15
	cmpq	%rcx, %r8
.Ltmp481:
	.loc	0 491 6 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:491:6
	jne	.LBB0_152
.Ltmp482:
# %bb.143:                              #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pos_prev <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $ecx
	#DEBUG_VALUE: helper2:state <- $edx
	.loc	0 0 6                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:6
	movq	32(%rsp), %r13                  # 8-byte Reload
	.loc	0 491 6                         # liblzma/lzma/lzma_encoder_optimum_normal.c:491:6
	jmp	.LBB0_145
.Ltmp483:
.LBB0_144:                              # %if.end44.thread.i
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pos_prev <- $ecx
	.loc	0 488 11 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:488:11
	imulq	$44, %rcx, %rax
	.loc	0 488 33 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:488:33
	movl	(%rbp,%rax), %edx
.Ltmp484:
	#DEBUG_VALUE: helper2:state <- $edx
	#DEBUG_VALUE: helper2:pos_prev <- $ecx
	.loc	0 491 22 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:491:22
	leaq	-1(%r13), %rax
	.loc	0 491 15 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:491:15
	cmpq	%rcx, %rax
.Ltmp485:
	.loc	0 491 6                         # liblzma/lzma/lzma_encoder_optimum_normal.c:491:6
	jne	.LBB0_148
.Ltmp486:
.LBB0_145:                              # %if.then47.i
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- $edx
	.loc	0 492 7 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:492:7
	cmpl	$0, 24(%rbx)
.Ltmp487:
	.loc	0 492 7 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:492:7
	je	.LBB0_150
.Ltmp488:
# %bb.146:                              # %if.else55.i
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- $edx
	.loc	0 495 4 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:495:4
	xorl	%eax, %eax
	cmpl	$10, %edx
	setb	%al
	cmpl	$4, %edx
	leal	(%rax,%rax,2), %eax
	leal	-6(%rdx,%rax), %r15d
.Ltmp489:
	#DEBUG_VALUE: helper2:state <- undef
	.loc	0 0 4 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:4
	movl	$0, %eax
	cmovbl	%eax, %r15d
	jmp	.LBB0_164
.Ltmp490:
.LBB0_147:                              # %if.end44.thread1698.i
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pos_prev <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $ecx
	.loc	0 471 3 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:471:3
	movl	%ecx, %eax
	decl	%eax
.Ltmp491:
	#DEBUG_VALUE: helper2:pos_prev <- $eax
	.loc	0 482 12                        # liblzma/lzma/lzma_encoder_optimum_normal.c:482:12
	imulq	$44, %rax, %rdx
	.loc	0 482 34 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:482:34
	movl	(%rbp,%rdx), %edx
.Ltmp492:
	#DEBUG_VALUE: helper2:state <- $edx
	.loc	0 485 3 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:485:3
	xorl	%esi, %esi
	cmpl	$10, %edx
	setb	%sil
	cmpl	$4, %edx
	leal	(%rsi,%rsi,2), %esi
	leal	-6(%rdx,%rsi), %edx
.Ltmp493:
	movl	$0, %esi
	cmovbl	%esi, %edx
.Ltmp494:
	#DEBUG_VALUE: helper2:state <- $edx
	.loc	0 491 15                        # liblzma/lzma/lzma_encoder_optimum_normal.c:491:15
	cmpq	%rcx, %r13
	movl	%eax, %ecx
.Ltmp495:
	.loc	0 491 6 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:491:6
	je	.LBB0_145
.Ltmp496:
.LBB0_148:                              # %if.else91.i
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pos_prev <- $ecx
	#DEBUG_VALUE: helper2:state <- $edx
	.loc	0 504 27 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:504:27
	movl	24(%rbx), %r13d
.Ltmp497:
	#DEBUG_VALUE: pos <- $r13d
	#DEBUG_VALUE: helper2:pos_prev <- $ecx
	.loc	0 0 27 is_stmt 0                # liblzma/lzma/lzma_encoder_optimum_normal.c:0:27
	movl	%ecx, %eax
.Ltmp498:
	xorl	%ecx, %ecx
.Ltmp499:
	#DEBUG_VALUE: helper2:pos_prev <- $eax
	.loc	0 505 12 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:505:12
	cmpl	$3, %r13d
.Ltmp500:
	.loc	0 505 8 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:505:8
	ja	.LBB0_151
.Ltmp501:
# %bb.149:                              # %if.end104.thread.i
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pos_prev <- $eax
	#DEBUG_VALUE: helper2:state <- $edx
	#DEBUG_VALUE: pos <- $r13d
	.loc	0 0 0                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:0
	cmpl	$7, %edx
	setae	%cl
	.loc	0 506 5 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:506:5
	leal	(%rcx,%rcx,2), %r15d
	addl	$8, %r15d
.Ltmp502:
	#DEBUG_VALUE: helper2:state <- $r15d
	.loc	0 511 7                         # liblzma/lzma/lzma_encoder_optimum_normal.c:511:7
	jmp	.LBB0_153
.Ltmp503:
.LBB0_150:                              # %if.then52.i
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- $edx
	.loc	0 493 4                         # liblzma/lzma/lzma_encoder_optimum_normal.c:493:4
	xorl	%eax, %eax
	cmpl	$7, %edx
	setae	%al
	leal	9(,%rax,2), %r15d
.Ltmp504:
	#DEBUG_VALUE: helper2:state <- $r15d
	jmp	.LBB0_164
.Ltmp505:
.LBB0_151:                              # %if.end104.thread1567.i
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pos_prev <- $eax
	#DEBUG_VALUE: helper2:state <- $edx
	#DEBUG_VALUE: pos <- $r13d
	.loc	0 0 0 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:0
	cmpl	$7, %edx
	setae	%cl
	.loc	0 508 5 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:508:5
	leal	(%rcx,%rcx,2), %r15d
	addl	$7, %r15d
.Ltmp506:
	#DEBUG_VALUE: helper2:state <- $r15d
	.loc	0 0 5 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:5
	jmp	.LBB0_156
.Ltmp507:
.LBB0_152:                              # %if.end104.i
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pos_prev <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $ecx
	#DEBUG_VALUE: helper2:state <- $edx
	#DEBUG_VALUE: pos <- $r13d
	.loc	0 502 4 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:502:4
	xorl	%ecx, %ecx
.Ltmp508:
	cmpl	$7, %edx
	setae	%cl
	leal	(%rcx,%rcx,2), %r15d
	addl	$8, %r15d
.Ltmp509:
	#DEBUG_VALUE: helper2:state <- $r15d
	#DEBUG_VALUE: helper2:pos_prev <- undef
	.loc	0 476 37                        # liblzma/lzma/lzma_encoder_optimum_normal.c:476:37
	cmpl	$3, %r13d
.Ltmp510:
	.loc	0 511 7                         # liblzma/lzma/lzma_encoder_optimum_normal.c:511:7
	ja	.LBB0_156
.Ltmp511:
.LBB0_153:                              # %if.then106.i
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- $r15d
	#DEBUG_VALUE: pos <- $r13d
	.loc	0 0 7 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:7
	movl	%r15d, 12(%rsp)                 # 4-byte Spill
.Ltmp512:
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	.loc	0 512 14 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:512:14
	movl	%r13d, %ecx
	imulq	$44, %rax, %r15
	leaq	(%r15,%rbp), %rax
	movl	28(%rax,%rcx,4), %eax
	.loc	0 512 12 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:512:12
	movl	%eax, 96(%rsp)
.Ltmp513:
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 1
	.loc	0 515 18 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:515:18
	testl	%r13d, %r13d
.Ltmp514:
	.loc	0 515 4 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:515:4
	je	.LBB0_157
.Ltmp515:
# %bb.154:                              # %for.body.preheader.i
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: pos <- $r13d
	#DEBUG_VALUE: i <- 1
	leal	1(%r13), %ebp
	movq	352(%rsp), %rax                 # 8-byte Reload
	leaq	(%rax,%r15), %rsi
	leaq	-4(,%rbp,4), %rdx
.Ltmp516:
	.loc	0 516 13 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:516:13
	leaq	100(%rsp), %rdi
	callq	memcpy@PLT
.Ltmp517:
	#DEBUG_VALUE: i <- $ebp
	.loc	0 518 13                        # liblzma/lzma/lzma_encoder_optimum_normal.c:518:13
	cmpl	$2, %r13d
.Ltmp518:
	.loc	0 518 4 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:518:4
	jbe	.LBB0_158
.Ltmp519:
# %bb.155:                              #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: pos <- $r13d
	#DEBUG_VALUE: i <- $ebp
	.loc	0 0 4                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:4
	movq	32(%rsp), %r13                  # 8-byte Reload
.Ltmp520:
	movq	16(%rsp), %r9                   # 8-byte Reload
	jmp	.LBB0_163
.Ltmp521:
.LBB0_156:                              # %if.else137.i
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- $r15d
	#DEBUG_VALUE: pos <- $r13d
	.loc	0 522 18 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:522:18
	addl	$-4, %r13d
.Ltmp522:
	.loc	0 522 12 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:522:12
	movl	%r13d, 96(%rsp)
.Ltmp523:
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 1
	.loc	0 525 15 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:525:15
	imulq	$44, %rax, %rax
.Ltmp524:
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_LLVM_fragment 32 32] undef
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref, DW_OP_LLVM_fragment 0 32] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_plus_uconst 8, DW_OP_deref, DW_OP_LLVM_fragment 64 64] $rsp
	#DEBUG_VALUE: i <- 2
	movq	28(%rbp,%rax), %rcx
	.loc	0 525 13 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:525:13
	movq	%rcx, 100(%rsp)
.Ltmp525:
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 3
	.loc	0 525 15                        # liblzma/lzma/lzma_encoder_optimum_normal.c:525:15
	movl	36(%rbp,%rax), %eax
	.loc	0 525 13                        # liblzma/lzma/lzma_encoder_optimum_normal.c:525:13
	movl	%eax, 108(%rsp)
.Ltmp526:
	#DEBUG_VALUE: i <- 4
	.loc	0 0 13                          # liblzma/lzma/lzma_encoder_optimum_normal.c:0:13
	movq	32(%rsp), %r13                  # 8-byte Reload
	jmp	.LBB0_164
.Ltmp527:
.LBB0_157:                              #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: pos <- $r13d
	#DEBUG_VALUE: i <- 1
	movl	$1, %ebp
.Ltmp528:
.LBB0_158:                              # %for.body125.preheader.i
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: pos <- $r13d
	.loc	0 518 4 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:518:4
	movl	%ebp, %edx
	leal	2(%r13), %ecx
	movl	$5, %eax
	subq	%rcx, %rax
	cmpq	$16, %rax
	jb	.LBB0_160
.Ltmp529:
# %bb.159:                              # %vector.scevcheck
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: pos <- $r13d
	movl	$4, %esi
	subq	%rcx, %rsi
	movl	$-3, %ecx
	subl	%r13d, %ecx
	cmpl	%esi, %ecx
	setb	%cl
	shrq	$32, %rsi
	setne	%sil
	orb	%cl, %sil
	je	.LBB0_317
.Ltmp530:
.LBB0_160:                              #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: pos <- $r13d
	.loc	0 0 4 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:4
	movq	%rdx, %rcx
	movq	32(%rsp), %r13                  # 8-byte Reload
.Ltmp531:
	movq	16(%rsp), %r9                   # 8-byte Reload
.Ltmp532:
.LBB0_161:                              # %for.body125.i.preheader
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	.loc	0 518 4                         # liblzma/lzma/lzma_encoder_optimum_normal.c:518:4
	addq	352(%rsp), %r15                 # 8-byte Folded Reload
.Ltmp533:
	.p2align	4, 0x90
.LBB0_162:                              # %for.body125.i
                                        #   Parent Loop BB0_139 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $rcx
	.loc	0 519 15 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:519:15
	movl	(%r15,%rcx,4), %eax
	.loc	0 519 13 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:519:13
	movl	%eax, 96(%rsp,%rcx,4)
	.loc	0 518 30 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:518:30
	incq	%rcx
.Ltmp534:
	#DEBUG_VALUE: i <- $rcx
	.loc	0 518 13 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:518:13
	cmpl	$4, %ecx
.Ltmp535:
	.loc	0 518 4                         # liblzma/lzma/lzma_encoder_optimum_normal.c:518:4
	jne	.LBB0_162
.Ltmp536:
.LBB0_163:                              #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	.loc	0 0 4                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:4
	movl	12(%rsp), %r15d                 # 4-byte Reload
.Ltmp537:
.LBB0_164:                              # %if.end157.i
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	movq	%r12, 264(%rsp)                 # 8-byte Spill
	leaq	(%r12,%r9), %r8
	movq	304(%rsp), %rax                 # 8-byte Reload
	leal	(%rax,%r13), %ecx
.Ltmp538:
	#DEBUG_VALUE: helper2:position <- $ecx
	#DEBUG_VALUE: helper2:state <- $r15d
	.loc	0 529 25 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:529:25
	movl	%r15d, (%rbx)
	#DEBUG_VALUE: i <- 0
.Ltmp539:
	#DEBUG_VALUE: i <- 3
	.loc	0 532 31                        # liblzma/lzma/lzma_encoder_optimum_normal.c:532:31
	movl	96(%rsp), %edx
	movl	96(%rsp), %eax
	movl	%eax, 28(%rbx)
	movq	100(%rsp), %rax
	movq	%rax, 32(%rbx)
	movl	108(%rsp), %eax
	movl	%eax, 40(%rbx)
.Ltmp540:
	#DEBUG_VALUE: i <- 4
	.loc	0 534 46                        # liblzma/lzma/lzma_encoder_optimum_normal.c:534:46
	movl	16(%rbx), %edi
.Ltmp541:
	#DEBUG_VALUE: helper2:cur_price <- $edi
	#DEBUG_VALUE: helper2:current_byte <- undef
	.loc	0 537 29                        # liblzma/lzma/lzma_encoder_optimum_normal.c:537:29
	movq	%r8, %rax
	movq	%rdx, 128(%rsp)                 # 8-byte Spill
	subq	%rdx, %rax
	movzbl	-2(%rax), %r9d
.Ltmp542:
	#DEBUG_VALUE: helper2:match_byte <- undef
	.loc	0 539 47                        # liblzma/lzma/lzma_encoder_optimum_normal.c:539:47
	movl	2960(%r14), %eax
.Ltmp543:
	.loc	0 26 38                         # liblzma/lzma/lzma_encoder_optimum_normal.c:26:38
	movl	2964(%r14), %r11d
	movl	%eax, 92(%rsp)                  # 4-byte Spill
.Ltmp544:
	.loc	0 539 38                        # liblzma/lzma/lzma_encoder_optimum_normal.c:539:38
	movl	%eax, %ebx
	andl	%ecx, %ebx
.Ltmp545:
	#DEBUG_VALUE: helper2:pos_state <- $ebx
	.loc	0 542 21                        # liblzma/lzma/lzma_encoder_optimum_normal.c:542:21
	movl	%r15d, %edx
.Ltmp546:
	#DEBUG_VALUE: get_literal_price:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:pos <- $ecx
	#DEBUG_VALUE: get_literal_price:match_byte <- undef
	#DEBUG_VALUE: get_literal_price:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:symbol <- undef
	#DEBUG_VALUE: get_literal_price:prev_byte <- undef
	#DEBUG_VALUE: get_literal_price:match_mode <- undef
	.loc	0 26 38                         # liblzma/lzma/lzma_encoder_optimum_normal.c:26:38
	movl	2968(%r14), %eax
	movl	%eax, 228(%rsp)                 # 4-byte Spill
	movq	%rcx, 368(%rsp)                 # 8-byte Spill
.Ltmp547:
	#DEBUG_VALUE: get_literal_price:pos <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	andl	%ecx, %eax
	movl	%r11d, %ecx
.Ltmp548:
	shll	%cl, %eax
	movq	%rdx, 24(%rsp)                  # 8-byte Spill
.Ltmp549:
	.loc	0 543 41                        # liblzma/lzma/lzma_encoder_optimum_normal.c:543:41
	movzbl	-2(%r8), %r10d
.Ltmp550:
	#DEBUG_VALUE: get_literal_price:prev_byte <- $r10d
	.loc	0 26 38                         # liblzma/lzma/lzma_encoder_optimum_normal.c:26:38
	movl	$8, %ecx
	movl	%r11d, 340(%rsp)                # 4-byte Spill
	subl	%r11d, %ecx
	movl	%ecx, 336(%rsp)                 # 4-byte Spill
                                        # kill: def $cl killed $cl killed $ecx
	shrl	%cl, %r10d
.Ltmp551:
	.loc	0 542 21                        # liblzma/lzma/lzma_encoder_optimum_normal.c:542:21
	shlq	$5, %rdx
.Ltmp552:
	.loc	0 26 38                         # liblzma/lzma/lzma_encoder_optimum_normal.c:26:38
	addl	%eax, %r10d
	movq	240(%rsp), %rax                 # 8-byte Reload
	movq	%rdx, 80(%rsp)                  # 8-byte Spill
.Ltmp553:
	.loc	0 542 21                        # liblzma/lzma/lzma_encoder_optimum_normal.c:542:21
	leaq	(%rax,%rdx), %rsi
	movq	%rbx, 168(%rsp)                 # 8-byte Spill
.Ltmp554:
	#DEBUG_VALUE: helper2:pos_state <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	movzwl	(%rsi,%rbx,2), %r11d
.Ltmp555:
	#DEBUG_VALUE: rc_bit_0_price:prob <- undef
	.loc	8 39 29                         # liblzma/rangecoder/price.h:39:29
	shrl	$4, %r11d
.Ltmp556:
	.loc	0 26 38                         # liblzma/lzma/lzma_encoder_optimum_normal.c:26:38
	leaq	(%r10,%r10,2), %rbx
	shlq	$9, %rbx
	addq	320(%rsp), %rbx                 # 8-byte Folded Reload
.Ltmp557:
	#DEBUG_VALUE: get_literal_price:subcoder <- $rbx
	#DEBUG_VALUE: get_literal_price:price <- 0
	.loc	0 0 38 is_stmt 0                # liblzma/lzma/lzma_encoder_optimum_normal.c:0:38
	movq	%r8, 184(%rsp)                  # 8-byte Spill
.Ltmp558:
	.loc	0 536 31 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:536:31
	movzbl	-1(%r8), %r10d
.Ltmp559:
	#DEBUG_VALUE: get_literal_price:symbol <- $r10d
	#DEBUG_VALUE: helper2:current_byte <- $r10b
	.loc	8 39 9                          # liblzma/rangecoder/price.h:39:9
	movq	lzma_rc_prices@GOTPCREL(%rip), %rax
	movzbl	(%rax,%r11), %ecx
.Ltmp560:
	.loc	0 0 0 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:0
	leal	256(%r10), %edx
.Ltmp561:
	.loc	0 544 5 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:544:5
	cmpl	$6, %r15d
.Ltmp562:
	.loc	0 32 6                          # liblzma/lzma/lzma_encoder_optimum_normal.c:32:6
	jbe	.LBB0_167
.Ltmp563:
# %bb.165:                              # %do.body.i.preheader.i276
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 4
	#DEBUG_VALUE: helper2:cur_price <- $edi
	#DEBUG_VALUE: helper2:current_byte <- $r10b
	#DEBUG_VALUE: helper2:pos_state <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:pos <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:symbol <- $r10d
	#DEBUG_VALUE: get_literal_price:subcoder <- $rbx
	#DEBUG_VALUE: get_literal_price:price <- 0
	#DEBUG_VALUE: get_literal_price:match_byte <- $r9d
	.loc	0 0 6 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:6
	xorl	%r15d, %r15d
	movl	$256, %eax                      # imm = 0x100
	movl	%r9d, %r8d
	movq	lzma_rc_prices@GOTPCREL(%rip), %r12
.Ltmp564:
	.p2align	4, 0x90
.LBB0_166:                              # %do.body.i.i277
                                        #   Parent Loop BB0_139 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur_price <- $edi
	#DEBUG_VALUE: helper2:current_byte <- $r10b
	#DEBUG_VALUE: helper2:pos_state <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:pos <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:match_byte <- $r8d
	#DEBUG_VALUE: get_literal_price:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:subcoder <- $rbx
	#DEBUG_VALUE: get_literal_price:match_byte <- $r8d
	#DEBUG_VALUE: get_literal_price:symbol <- $edx
	#DEBUG_VALUE: get_literal_price:price <- $r15d
	#DEBUG_VALUE: offset <- $eax
	.loc	0 39 15 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:39:15
	addl	%r8d, %r8d
.Ltmp565:
	#DEBUG_VALUE: get_literal_price:match_byte <- $r8d
	.loc	0 41 42                         # liblzma/lzma/lzma_encoder_optimum_normal.c:41:42
	movl	%r8d, %ebp
	andl	%eax, %ebp
.Ltmp566:
	#DEBUG_VALUE: match_bit <- $ebp
	.loc	0 43 37                         # liblzma/lzma/lzma_encoder_optimum_normal.c:43:37
	movl	%edx, %r13d
	shrl	$8, %r13d
	.loc	0 43 15 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:43:15
	addl	%eax, %r13d
	.loc	0 43 27                         # liblzma/lzma/lzma_encoder_optimum_normal.c:43:27
	addl	%ebp, %r13d
.Ltmp567:
	#DEBUG_VALUE: subcoder_index <- $r13d
	#DEBUG_VALUE: bit <- [DW_OP_constu 7, DW_OP_shr, DW_OP_constu 1, DW_OP_and, DW_OP_stack_value] $edx
	.loc	0 45 26 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:45:26
	movzwl	(%rbx,%r13,2), %ebp
.Ltmp568:
	#DEBUG_VALUE: rc_bit_price:prob <- undef
	#DEBUG_VALUE: rc_bit_price:bit <- [DW_OP_constu 7, DW_OP_shr, DW_OP_constu 1, DW_OP_and, DW_OP_stack_value] $edx
	.loc	8 32 4                          # liblzma/rangecoder/price.h:32:4
	movsbl	%dl, %r13d
.Ltmp569:
	shrl	$7, %r13d
	.loc	8 31 30                         # liblzma/rangecoder/price.h:31:30
	andl	$2032, %r13d                    # imm = 0x7F0
	xorl	%ebp, %r13d
	.loc	8 32 33                         # liblzma/rangecoder/price.h:32:33
	shrl	$4, %r13d
	.loc	8 31 9                          # liblzma/rangecoder/price.h:31:9
	movzbl	(%r12,%r13), %ebp
.Ltmp570:
	.loc	0 45 10                         # liblzma/lzma/lzma_encoder_optimum_normal.c:45:10
	addl	%ebp, %r15d
.Ltmp571:
	#DEBUG_VALUE: get_literal_price:price <- $r15d
	.loc	0 47 11                         # liblzma/lzma/lzma_encoder_optimum_normal.c:47:11
	leal	(%rdx,%rdx), %ebp
.Ltmp572:
	#DEBUG_VALUE: get_literal_price:symbol <- $ebp
	.loc	0 48 14                         # liblzma/lzma/lzma_encoder_optimum_normal.c:48:14
	movl	%ebp, %r13d
	xorl	%r8d, %r13d
	notl	%r13d
	.loc	0 48 11 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:48:11
	andl	%r13d, %eax
.Ltmp573:
	#DEBUG_VALUE: offset <- $eax
	.loc	0 50 19 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:50:19
	cmpl	$32768, %edx                    # imm = 0x8000
	movl	%ebp, %edx
.Ltmp574:
	.loc	0 50 3 is_stmt 0                # liblzma/lzma/lzma_encoder_optimum_normal.c:50:3
	jb	.LBB0_166
	jmp	.LBB0_169
.Ltmp575:
.LBB0_167:                              # %do.body.i.i.i202.preheader
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur_price <- $edi
	#DEBUG_VALUE: helper2:current_byte <- $r10b
	#DEBUG_VALUE: helper2:pos_state <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:pos <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:symbol <- $r10d
	#DEBUG_VALUE: get_literal_price:subcoder <- $rbx
	#DEBUG_VALUE: get_literal_price:price <- 0
	.loc	0 0 3                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:3
	xorl	%r15d, %r15d
.Ltmp576:
	.loc	8 60 10 is_stmt 1               # liblzma/rangecoder/price.h:60:10
	movl	%edx, %eax
	movq	lzma_rc_prices@GOTPCREL(%rip), %r8
.Ltmp577:
	.p2align	4, 0x90
.LBB0_168:                              # %do.body.i.i.i202
                                        #   Parent Loop BB0_139 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur_price <- $edi
	#DEBUG_VALUE: helper2:current_byte <- $r10b
	#DEBUG_VALUE: helper2:pos_state <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:pos <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:symbol <- $r10d
	#DEBUG_VALUE: get_literal_price:subcoder <- $rbx
	#DEBUG_VALUE: get_literal_price:price <- 0
	#DEBUG_VALUE: rc_bittree_price:symbol <- $edx
	#DEBUG_VALUE: rc_bittree_price:price <- $r15d
	.loc	8 59 31                         # liblzma/rangecoder/price.h:59:31
	movl	%edx, %ebp
	andl	$1, %ebp
	negl	%ebp
.Ltmp578:
	#DEBUG_VALUE: bit <- undef
	.loc	8 60 10                         # liblzma/rangecoder/price.h:60:10
	shrl	%eax
.Ltmp579:
	#DEBUG_VALUE: rc_bittree_price:symbol <- $eax
	.loc	8 61 25                         # liblzma/rangecoder/price.h:61:25
	andl	$-2, %edx
	movzwl	(%rbx,%rdx), %r13d
.Ltmp580:
	#DEBUG_VALUE: rc_bit_price:prob <- undef
	#DEBUG_VALUE: rc_bit_price:bit <- undef
	.loc	8 31 30                         # liblzma/rangecoder/price.h:31:30
	andl	$2032, %ebp                     # imm = 0x7F0
	xorl	%r13d, %ebp
	.loc	8 32 33                         # liblzma/rangecoder/price.h:32:33
	shrl	$4, %ebp
	.loc	8 31 9                          # liblzma/rangecoder/price.h:31:9
	movzbl	(%r8,%rbp), %ebp
.Ltmp581:
	.loc	8 61 9                          # liblzma/rangecoder/price.h:61:9
	addl	%ebp, %r15d
.Ltmp582:
	#DEBUG_VALUE: rc_bittree_price:price <- $r15d
	.loc	8 0 9 is_stmt 0                 # liblzma/rangecoder/price.h:0:9
	movl	%eax, %edx
.Ltmp583:
	.loc	8 62 18 is_stmt 1               # liblzma/rangecoder/price.h:62:18
	cmpl	$1, %eax
.Ltmp584:
	.loc	8 62 2 is_stmt 0                # liblzma/rangecoder/price.h:62:2
	jne	.LBB0_168
.Ltmp585:
.LBB0_169:                              # %get_literal_price.exit.i217
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur_price <- $edi
	#DEBUG_VALUE: helper2:current_byte <- $r10b
	#DEBUG_VALUE: helper2:pos_state <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:pos <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:subcoder <- $rbx
	.loc	0 0 0                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:0
	addl	%edi, %ecx
	#DEBUG_VALUE: get_literal_price:price <- $r15d
	.loc	0 543 4 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:543:4
	addl	%r15d, %ecx
.Ltmp586:
	#DEBUG_VALUE: helper2:cur_and_1_price <- $ecx
	#DEBUG_VALUE: helper2:next_is_literal <- 0
	.loc	0 0 4 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:4
	movq	32(%rsp), %r13                  # 8-byte Reload
.Ltmp587:
	.loc	0 548 40 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:548:40
	leaq	1(%r13), %rdx
	movq	%rdx, 360(%rsp)                 # 8-byte Spill
	.loc	0 548 24 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:548:24
	imulq	$44, %rdx, %rax
	movq	64(%rsp), %rbp                  # 8-byte Reload
	leaq	(%rax,%rbp), %r15
	.loc	0 548 45                        # liblzma/lzma/lzma_encoder_optimum_normal.c:548:45
	movl	16(%rbp,%rax), %eax
	.loc	0 548 22                        # liblzma/lzma/lzma_encoder_optimum_normal.c:548:22
	cmpl	%eax, %ecx
	setb	%bl
.Ltmp588:
	.loc	0 548 6                         # liblzma/lzma/lzma_encoder_optimum_normal.c:548:6
	jae	.LBB0_171
.Ltmp589:
# %bb.170:                              # %if.then201.i
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur_price <- $edi
	#DEBUG_VALUE: helper2:current_byte <- $r10b
	#DEBUG_VALUE: helper2:pos_state <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur_and_1_price <- $ecx
	#DEBUG_VALUE: helper2:next_is_literal <- 0
	.loc	0 0 6                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:6
	movq	168(%rsp), %rax                 # 8-byte Reload
	leaq	(%rsi,%rax,2), %rax
.Ltmp590:
	.loc	0 549 30 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:549:30
	movl	%ecx, 16(%r15)
	.loc	0 550 33                        # liblzma/lzma/lzma_encoder_optimum_normal.c:550:33
	movl	%r13d, 20(%r15)
.Ltmp591:
	#DEBUG_VALUE: make_literal:optimal <- $r15
	.loc	0 214 21                        # liblzma/lzma/lzma_encoder_optimum_normal.c:214:21
	movl	$-1, 24(%r15)
	.loc	0 215 29                        # liblzma/lzma/lzma_encoder_optimum_normal.c:215:29
	movb	$0, 4(%r15)
.Ltmp592:
	#DEBUG_VALUE: helper2:next_is_literal <- 1
	.loc	0 556 21                        # liblzma/lzma/lzma_encoder_optimum_normal.c:556:21
	movzwl	(%rax), %r11d
.Ltmp593:
	.loc	8 47 4                          # liblzma/rangecoder/price.h:47:4
	shrl	$4, %r11d
	movl	%ecx, %eax
.Ltmp594:
.LBB0_171:                              # %if.end216.i
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur_price <- $edi
	#DEBUG_VALUE: helper2:current_byte <- $r10b
	#DEBUG_VALUE: helper2:pos_state <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur_and_1_price <- $ecx
	#DEBUG_VALUE: helper2:next_is_literal <- undef
	#DEBUG_VALUE: rc_bit_1_price:prob <- undef
	.loc	8 0 4 is_stmt 0                 # liblzma/rangecoder/price.h:0:4
	movzwl	%r11w, %edx
	.loc	8 47 4                          # liblzma/rangecoder/price.h:47:4
	xorq	$127, %rdx
	movq	lzma_rc_prices@GOTPCREL(%rip), %rsi
	.loc	8 46 9 is_stmt 1                # liblzma/rangecoder/price.h:46:9
	movzbl	(%rsi,%rdx), %edx
.Ltmp595:
	.loc	0 556 4                         # liblzma/lzma/lzma_encoder_optimum_normal.c:556:4
	addl	%edx, %edi
.Ltmp596:
	#DEBUG_VALUE: helper2:match_price <- $edi
	.loc	0 0 4 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:4
	movq	24(%rsp), %rdx                  # 8-byte Reload
	.loc	0 558 21 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:558:21
	movzwl	27932(%r14,%rdx,2), %edx
.Ltmp597:
	#DEBUG_VALUE: rc_bit_1_price:prob <- undef
	.loc	8 47 4                          # liblzma/rangecoder/price.h:47:4
	shrl	$4, %edx
	xorq	$127, %rdx
	.loc	8 46 9                          # liblzma/rangecoder/price.h:46:9
	movzbl	(%rsi,%rdx), %edx
	movl	%edi, 12(%rsp)                  # 4-byte Spill
.Ltmp598:
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	.loc	0 558 4                         # liblzma/lzma/lzma_encoder_optimum_normal.c:558:4
	addl	%edi, %edx
.Ltmp599:
	#DEBUG_VALUE: helper2:rep_match_price <- $edx
	.loc	0 0 4 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:4
	movl	%edx, 152(%rsp)                 # 4-byte Spill
.Ltmp600:
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	.loc	0 560 17 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:560:17
	cmpb	%r10b, %r9b
	movq	184(%rsp), %r12                 # 8-byte Reload
	.loc	0 561 4                         # liblzma/lzma/lzma_encoder_optimum_normal.c:561:4
	jne	.LBB0_176
.Ltmp601:
# %bb.172:                              # %land.lhs.true232.i
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:current_byte <- $r10b
	#DEBUG_VALUE: helper2:pos_state <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur_and_1_price <- $ecx
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	.loc	0 561 30 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:561:30
	movl	20(%r15), %edx
	.loc	0 561 39                        # liblzma/lzma/lzma_encoder_optimum_normal.c:561:39
	cmpq	%rdx, %r13
	movq	72(%rsp), %r11                  # 8-byte Reload
	.loc	0 562 5 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:562:5
	jbe	.LBB0_174
.Ltmp602:
# %bb.173:                              # %land.lhs.true240.i
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:current_byte <- $r10b
	#DEBUG_VALUE: helper2:pos_state <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur_and_1_price <- $ecx
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	.loc	0 562 39 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:562:39
	cmpl	$0, 24(%r15)
.Ltmp603:
	.loc	0 560 6 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:560:6
	je	.LBB0_177
.Ltmp604:
.LBB0_174:                              # %if.then248.i
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:current_byte <- $r10b
	#DEBUG_VALUE: helper2:pos_state <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur_and_1_price <- $ecx
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_short_rep_price:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_short_rep_price:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_short_rep_price:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	.loc	0 0 6 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:6
	movq	24(%rsp), %rdx                  # 8-byte Reload
.Ltmp605:
	.loc	0 72 24 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:72:24
	movzwl	27956(%r14,%rdx,2), %edx
.Ltmp606:
	#DEBUG_VALUE: rc_bit_0_price:prob <- undef
	.loc	8 39 29                         # liblzma/rangecoder/price.h:39:29
	shrl	$4, %edx
	movq	%rsi, %rdi
	.loc	8 39 9 is_stmt 0                # liblzma/rangecoder/price.h:39:9
	movzbl	(%rsi,%rdx), %esi
	movq	296(%rsp), %rdx                 # 8-byte Reload
	movq	80(%rsp), %r8                   # 8-byte Reload
.Ltmp607:
	.loc	0 73 20 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:73:20
	addq	%r8, %rdx
	movq	168(%rsp), %r8                  # 8-byte Reload
	movzwl	(%rdx,%r8,2), %edx
.Ltmp608:
	#DEBUG_VALUE: rc_bit_0_price:prob <- undef
	.loc	8 39 29                         # liblzma/rangecoder/price.h:39:29
	shrl	$4, %edx
	.loc	8 39 9 is_stmt 0                # liblzma/rangecoder/price.h:39:9
	movzbl	(%rdi,%rdx), %edx
.Ltmp609:
	.loc	0 73 3 is_stmt 1                # liblzma/lzma/lzma_encoder_optimum_normal.c:73:3
	addl	152(%rsp), %esi                 # 4-byte Folded Reload
.Ltmp610:
	.loc	0 565 5                         # liblzma/lzma/lzma_encoder_optimum_normal.c:565:5
	addl	%edx, %esi
.Ltmp611:
	#DEBUG_VALUE: short_rep_price <- $esi
	.loc	0 567 23                        # liblzma/lzma/lzma_encoder_optimum_normal.c:567:23
	cmpl	%eax, %esi
.Ltmp612:
	#DEBUG_VALUE: get_short_rep_price:pos_state <- undef
	.loc	0 567 7 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:567:7
	ja	.LBB0_177
.Ltmp613:
# %bb.175:                              # %if.then258.i
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:current_byte <- $r10b
	#DEBUG_VALUE: helper2:pos_state <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur_and_1_price <- $ecx
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: short_rep_price <- $esi
	.loc	0 568 31 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:568:31
	movl	%esi, 16(%r15)
	.loc	0 569 34                        # liblzma/lzma/lzma_encoder_optimum_normal.c:569:34
	movl	%r13d, 20(%r15)
.Ltmp614:
	#DEBUG_VALUE: make_short_rep:optimal <- $r15
	.loc	0 222 21                        # liblzma/lzma/lzma_encoder_optimum_normal.c:222:21
	movl	$0, 24(%r15)
	.loc	0 223 29                        # liblzma/lzma/lzma_encoder_optimum_normal.c:223:29
	movb	$0, 4(%r15)
	movb	$1, %bl
.Ltmp615:
	#DEBUG_VALUE: helper2:next_is_literal <- 1
	.loc	0 0 29 is_stmt 0                # liblzma/lzma/lzma_encoder_optimum_normal.c:0:29
	jmp	.LBB0_177
.Ltmp616:
.LBB0_176:                              #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:current_byte <- $r10b
	#DEBUG_VALUE: helper2:pos_state <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur_and_1_price <- $ecx
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	movq	72(%rsp), %r11                  # 8-byte Reload
.Ltmp617:
.LBB0_177:                              # %if.end274.i
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:current_byte <- $r10b
	#DEBUG_VALUE: helper2:pos_state <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur_and_1_price <- $ecx
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	movl	48(%rsp), %eax                  # 4-byte Reload
.Ltmp618:
	#DEBUG_VALUE: helper2:next_is_literal <- undef
	movq	%rax, 176(%rsp)                 # 8-byte Spill
	movl	192(%rsp), %edx                 # 4-byte Reload
.Ltmp619:
	.loc	0 575 21 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:575:21
	cmpl	$2, %edx
.Ltmp620:
	.loc	0 575 6 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:575:6
	jb	.LBB0_137
.Ltmp621:
# %bb.178:                              # %if.end278.i
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:current_byte <- $r10b
	#DEBUG_VALUE: helper2:pos_state <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur_and_1_price <- $ecx
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	.loc	0 560 17 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:560:17
	cmpb	%r10b, %r9b
	sete	%al
.Ltmp622:
	.loc	0 578 29                        # liblzma/lzma/lzma_encoder_optimum_normal.c:578:29
	cmpl	%r11d, %edx
	movl	%r11d, %esi
	cmovbl	%edx, %esi
.Ltmp623:
	#DEBUG_VALUE: helper2:buf_avail <- $esi
	.loc	0 0 29 is_stmt 0                # liblzma/lzma/lzma_encoder_optimum_normal.c:0:29
	movl	%esi, 148(%rsp)                 # 4-byte Spill
.Ltmp624:
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	.loc	0 580 23 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:580:23
	orb	%bl, %al
	movl	88(%rsp), %r8d                  # 4-byte Reload
	movq	40(%rsp), %r15                  # 8-byte Reload
	je	.LBB0_181
.Ltmp625:
.LBB0_179:                              #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pos_state <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur_and_1_price <- $ecx
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	.loc	0 0 23 is_stmt 0                # liblzma/lzma/lzma_encoder_optimum_normal.c:0:23
	movq	24(%rsp), %r10                  # 8-byte Reload
.Ltmp626:
.LBB0_180:                              # %if.end393.i
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pos_state <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	movq	16(%rsp), %rdi                  # 8-byte Reload
	jmp	.LBB0_186
.Ltmp627:
.LBB0_181:                              # %if.then291.i
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:current_byte <- $r10b
	#DEBUG_VALUE: helper2:pos_state <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur_and_1_price <- $ecx
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: buf_back <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 0, DW_OP_plus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
	.loc	0 583 26 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:583:26
	leal	1(%r11), %esi
	cmpl	%edx, %esi
	movl	%edx, %r10d
.Ltmp628:
	cmovbl	%esi, %r10d
.Ltmp629:
	#DEBUG_VALUE: limit <- $r10d
	#DEBUG_VALUE: len_test <- 1
	.loc	0 586 19                        # liblzma/lzma/lzma_encoder_optimum_normal.c:586:19
	cmpl	$2, %r10d
	movq	16(%rsp), %rdi                  # 8-byte Reload
	.loc	0 586 27 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:586:27
	jb	.LBB0_185
.Ltmp630:
# %bb.182:                              # %land.rhs.preheader.i261
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pos_state <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur_and_1_price <- $ecx
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: limit <- $r10d
	#DEBUG_VALUE: len_test <- 1
	.loc	0 0 27                          # liblzma/lzma/lzma_encoder_optimum_normal.c:0:27
	movq	176(%rsp), %rdx                 # 8-byte Reload
	.loc	0 586 3                         # liblzma/lzma/lzma_encoder_optimum_normal.c:586:3
	cmpq	%r8, %rdx
	movq	%r8, %rax
	cmovbq	%rdx, %rax
	movl	%esi, %edx
	cmpq	%rdx, %rax
	cmovaeq	%rdx, %rax
	movq	%rdi, %rsi
	subq	128(%rsp), %rsi                 # 8-byte Folded Reload
	addq	264(%rsp), %rsi                 # 8-byte Folded Reload
	movl	$1, %r9d
.Ltmp631:
	.p2align	4, 0x90
.LBB0_183:                              # %land.rhs.i262
                                        #   Parent Loop BB0_139 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pos_state <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur_and_1_price <- $ecx
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: limit <- $r10d
	#DEBUG_VALUE: len_test <- $r9
	.loc	0 586 30                        # liblzma/lzma/lzma_encoder_optimum_normal.c:586:30
	movzbl	-1(%r12,%r9), %edx
	.loc	0 586 44                        # liblzma/lzma/lzma_encoder_optimum_normal.c:586:44
	cmpb	-2(%rsi,%r9), %dl
	.loc	0 586 3                         # liblzma/lzma/lzma_encoder_optimum_normal.c:586:3
	jne	.LBB0_261
.Ltmp632:
# %bb.184:                              # %while.body.i
                                        #   in Loop: Header=BB0_183 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pos_state <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur_and_1_price <- $ecx
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: limit <- $r10d
	#DEBUG_VALUE: len_test <- $r9
	.loc	0 587 4 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:587:4
	incq	%r9
.Ltmp633:
	#DEBUG_VALUE: len_test <- $r9
	.loc	0 586 19                        # liblzma/lzma/lzma_encoder_optimum_normal.c:586:19
	cmpq	%r9, %rax
	.loc	0 586 27 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:586:27
	jne	.LBB0_183
	jmp	.LBB0_262
.Ltmp634:
.LBB0_185:                              #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pos_state <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur_and_1_price <- $ecx
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: limit <- $r10d
	#DEBUG_VALUE: len_test <- 1
	.loc	0 0 27                          # liblzma/lzma/lzma_encoder_optimum_normal.c:0:27
	movq	24(%rsp), %r10                  # 8-byte Reload
.Ltmp635:
.LBB0_186:                              # %if.end393.i
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pos_state <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	movq	264(%rsp), %rax                 # 8-byte Reload
	leaq	(%rax,%rdi), %rsi
	decq	%rsi
.Ltmp636:
	#DEBUG_VALUE: helper2:buf <- $rsi
	leaq	-2(%r12), %rax
	movq	%rax, 264(%rsp)                 # 8-byte Spill
	.loc	0 544 5 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:544:5
	xorl	%eax, %eax
	cmpl	$7, %r10d
	setae	%al
.Ltmp637:
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- 2
	#DEBUG_VALUE: rep_index <- 0
	.loc	0 0 5 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:5
	movq	80(%rsp), %rcx                  # 8-byte Reload
	addq	296(%rsp), %rcx                 # 8-byte Folded Reload
	movq	168(%rsp), %rdi                 # 8-byte Reload
	leaq	(%rcx,%rdi,2), %rcx
	movq	%rcx, 392(%rsp)                 # 8-byte Spill
	leaq	(%rax,%rax,2), %rdx
	addq	$8, %rdx
	movq	176(%rsp), %rax                 # 8-byte Reload
.Ltmp638:
	.loc	0 624 2 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:624:2
	cmpq	%rax, %r11
	movq	%rax, %rbx
	cmovbq	%r11, %rbx
	cmpq	%r8, %rbx
	cmovaeq	%r8, %rbx
	imulq	$1088, %rdi, %rcx               # imm = 0x440
	movq	256(%rsp), %rax                 # 8-byte Reload
	movq	%rcx, 168(%rsp)                 # 8-byte Spill
.Ltmp639:
	#DEBUG_VALUE: helper2:pos_state <- $edi
	addq	%rcx, %rax
	movq	%rax, 128(%rsp)                 # 8-byte Spill
	movl	$2, %r9d
	shll	$5, %edx
	addq	240(%rsp), %rdx                 # 8-byte Folded Reload
	movq	%rdx, 400(%rsp)                 # 8-byte Spill
	xorl	%r11d, %r11d
	movq	(%rsp), %rdi                    # 8-byte Reload
.Ltmp640:
	.loc	0 0 2 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:2
	movq	%rsi, 80(%rsp)                  # 8-byte Spill
	movq	%rbx, 160(%rsp)                 # 8-byte Spill
	jmp	.LBB0_189
.Ltmp641:
.LBB0_187:                              #   in Loop: Header=BB0_189 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	#DEBUG_VALUE: buf_back <- $rcx
	#DEBUG_VALUE: len_test <- $r8d
	#DEBUG_VALUE: len_test_temp <- $r8d
	#DEBUG_VALUE: price <- $r10d
	#DEBUG_VALUE: len_test_2 <- $r9d
	#DEBUG_VALUE: limit <- $edx
	movq	40(%rsp), %r15                  # 8-byte Reload
	movq	24(%rsp), %r10                  # 8-byte Reload
	movq	80(%rsp), %rsi                  # 8-byte Reload
	movq	48(%rsp), %r9                   # 8-byte Reload
	movq	160(%rsp), %rbx                 # 8-byte Reload
.Ltmp642:
	.p2align	4, 0x90
.LBB0_188:                              # %cleanup.i225
                                        #   in Loop: Header=BB0_189 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- $r9d
	#DEBUG_VALUE: rep_index <- $r11
	#DEBUG_VALUE: helper2:len_end <- $edi
	#DEBUG_VALUE: helper2:start_len <- $r9d
	.loc	0 624 58                        # liblzma/lzma/lzma_encoder_optimum_normal.c:624:58
	incq	%r11
.Ltmp643:
	#DEBUG_VALUE: rep_index <- $r11
	.loc	0 624 41                        # liblzma/lzma/lzma_encoder_optimum_normal.c:624:41
	cmpq	$4, %r11
.Ltmp644:
	.loc	0 624 2                         # liblzma/lzma/lzma_encoder_optimum_normal.c:624:2
	je	.LBB0_251
.Ltmp645:
.LBB0_189:                              # %for.body398.i
                                        #   Parent Loop BB0_139 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB0_193 Depth 3
                                        #       Child Loop BB0_200 Depth 3
                                        #       Child Loop BB0_204 Depth 3
                                        #       Child Loop BB0_208 Depth 3
                                        #       Child Loop BB0_217 Depth 3
                                        #       Child Loop BB0_221 Depth 3
                                        #       Child Loop BB0_228 Depth 3
                                        #       Child Loop BB0_234 Depth 3
                                        #       Child Loop BB0_239 Depth 3
                                        #       Child Loop BB0_244 Depth 3
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- $edi
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- $edi
	#DEBUG_VALUE: helper2:start_len <- $r9d
	#DEBUG_VALUE: rep_index <- $r11
	.loc	0 625 41 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:625:41
	movl	96(%rsp,%r11,4), %eax
	.loc	0 625 39 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:625:39
	movq	%rsi, %rcx
	subq	%rax, %rcx
.Ltmp646:
	#DEBUG_VALUE: buf_back <- undef
	.loc	0 626 7 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:626:7
	movzbl	(%rsi), %edx
	cmpb	-1(%rcx), %dl
	jne	.LBB0_188
.Ltmp647:
# %bb.190:                              # %lor.lhs.false.i252
                                        #   in Loop: Header=BB0_189 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- $edi
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- $r9d
	#DEBUG_VALUE: rep_index <- $r11
	movzbl	(%r12), %edx
	cmpb	(%rcx), %dl
	jne	.LBB0_188
.Ltmp648:
# %bb.191:                              # %for.cond421.preheader.i
                                        #   in Loop: Header=BB0_189 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- $edi
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- $r9d
	#DEBUG_VALUE: rep_index <- $r11
	.loc	0 0 7 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:7
	movl	$2, %r8d
	movl	148(%rsp), %esi                 # 4-byte Reload
	cmpl	$3, %esi
.Ltmp649:
	#DEBUG_VALUE: len_test <- 2
	movq	56(%rsp), %r15                  # 8-byte Reload
.Ltmp650:
	.loc	0 631 5 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:631:5
	jb	.LBB0_196
.Ltmp651:
# %bb.192:                              # %land.rhs424.i.preheader
                                        #   in Loop: Header=BB0_189 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- $edi
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- $r9d
	#DEBUG_VALUE: rep_index <- $r11
	#DEBUG_VALUE: len_test <- 2
	.loc	0 0 5 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:5
	negq	%rax
	.loc	0 630 3 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:630:3
	addq	%r12, %rax
	movl	$2, %r8d
.Ltmp652:
	.p2align	4, 0x90
.LBB0_193:                              # %land.rhs424.i
                                        #   Parent Loop BB0_139 Depth=1
                                        #     Parent Loop BB0_189 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- $edi
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- $r9d
	#DEBUG_VALUE: rep_index <- $r11
	#DEBUG_VALUE: len_test <- $r8
	.loc	0 631 8                         # liblzma/lzma/lzma_encoder_optimum_normal.c:631:8
	movzbl	-1(%r12,%r8), %edx
	.loc	0 631 22 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:631:22
	cmpb	-2(%rax,%r8), %dl
.Ltmp653:
	.loc	0 630 3 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:630:3
	jne	.LBB0_196
.Ltmp654:
# %bb.194:                              # %for.inc435.i
                                        #   in Loop: Header=BB0_193 Depth=3
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- $edi
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- $r9d
	#DEBUG_VALUE: rep_index <- $r11
	#DEBUG_VALUE: len_test <- $r8
	.loc	0 632 5                         # liblzma/lzma/lzma_encoder_optimum_normal.c:632:5
	incq	%r8
.Ltmp655:
	#DEBUG_VALUE: len_test <- $r8
	.loc	0 630 31                        # liblzma/lzma/lzma_encoder_optimum_normal.c:630:31
	cmpq	%r8, %rbx
	.loc	0 631 5                         # liblzma/lzma/lzma_encoder_optimum_normal.c:631:5
	jne	.LBB0_193
.Ltmp656:
# %bb.195:                              #   in Loop: Header=BB0_189 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- $edi
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- $r9d
	#DEBUG_VALUE: rep_index <- $r11
	#DEBUG_VALUE: len_test <- $r8
	.loc	0 0 5 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:5
	movl	%esi, %r8d
.Ltmp657:
.LBB0_196:                              # %for.end437.i
                                        #   in Loop: Header=BB0_189 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- $edi
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- $r9d
	#DEBUG_VALUE: rep_index <- $r11
	leal	(%r8,%r13), %eax
	#DEBUG_VALUE: helper2:len_end <- $edi
	.loc	0 634 18 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:634:18
	cmpl	%eax, %edi
	movq	%r9, 48(%rsp)                   # 8-byte Spill
.Ltmp658:
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	.loc	0 0 18 is_stmt 0                # liblzma/lzma/lzma_encoder_optimum_normal.c:0:18
	movq	%rax, 16(%rsp)                  # 8-byte Spill
	jae	.LBB0_210
.Ltmp659:
# %bb.197:                              # %while.body442.preheader.i
                                        #   in Loop: Header=BB0_189 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- $edi
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	.loc	0 634 3                         # liblzma/lzma/lzma_encoder_optimum_normal.c:634:3
	movl	%edi, %ebx
	.loc	0 634 18                        # liblzma/lzma/lzma_encoder_optimum_normal.c:634:18
	movl	%eax, %esi
	.loc	0 634 3                         # liblzma/lzma/lzma_encoder_optimum_normal.c:634:3
	movq	%rsi, %rax
	subq	%rbx, %rax
	cmpq	$4, %rax
	jae	.LBB0_199
.Ltmp660:
# %bb.198:                              #   in Loop: Header=BB0_189 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- $ebx
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	.loc	0 0 3                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:3
	movq	%rbx, %r9
	.loc	0 634 3                         # liblzma/lzma/lzma_encoder_optimum_normal.c:634:3
	jmp	.LBB0_202
.Ltmp661:
.LBB0_199:                              # %vector.ph474
                                        #   in Loop: Header=BB0_189 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- $ebx
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	movq	%rax, %rdx
	andq	$-4, %rdx
	leaq	(%rdx,%rbx), %r9
	leal	(%r15,%r8), %r10d
	subq	%rbx, %r10
	andq	$-4, %r10
	imulq	$44, %rbx, %rbx
.Ltmp662:
	#DEBUG_VALUE: helper2:len_end <- $edi
	addq	120(%rsp), %rbx                 # 8-byte Folded Reload
.Ltmp663:
	.p2align	4, 0x90
.LBB0_200:                              # %vector.body479
                                        #   Parent Loop BB0_139 Depth=1
                                        #     Parent Loop BB0_189 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- $edi
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	.loc	0 635 33 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:635:33
	movl	$1073741824, -132(%rbx)         # imm = 0x40000000
	movl	$1073741824, -88(%rbx)          # imm = 0x40000000
	movl	$1073741824, -44(%rbx)          # imm = 0x40000000
	movl	$1073741824, (%rbx)             # imm = 0x40000000
	addq	$176, %rbx
	addq	$-4, %r10
	jne	.LBB0_200
.Ltmp664:
# %bb.201:                              # %middle.block471
                                        #   in Loop: Header=BB0_189 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- $edi
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	.loc	0 0 33 is_stmt 0                # liblzma/lzma/lzma_encoder_optimum_normal.c:0:33
	movq	16(%rsp), %rdi                  # 8-byte Reload
.Ltmp665:
                                        # kill: def $edi killed $edi killed $rdi def $rdi
	.loc	0 634 3 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:634:3
	cmpq	%rdx, %rax
	movq	24(%rsp), %r10                  # 8-byte Reload
	je	.LBB0_210
.Ltmp666:
.LBB0_202:                              # %while.body442.i.preheader
                                        #   in Loop: Header=BB0_189 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	movl	%esi, %edx
	subl	%r9d, %edx
	movq	%r9, %rax
	testb	$3, %dl
	je	.LBB0_206
.Ltmp667:
# %bb.203:                              # %while.body442.i.prol.preheader
                                        #   in Loop: Header=BB0_189 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	imulq	$44, %r9, %rax
	addq	208(%rsp), %rax                 # 8-byte Folded Reload
	leal	(%r15,%r8), %edx
	subb	%r9b, %dl
	movzbl	%dl, %edx
	andl	$3, %edx
	negq	%rdx
	xorl	%r10d, %r10d
.Ltmp668:
	.p2align	4, 0x90
.LBB0_204:                              # %while.body442.i.prol
                                        #   Parent Loop BB0_139 Depth=1
                                        #     Parent Loop BB0_189 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_LLVM_arg 0, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 1, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $r10, $r9
	.loc	0 635 33                        # liblzma/lzma/lzma_encoder_optimum_normal.c:635:33
	movl	$1073741824, (%rax)             # imm = 0x40000000
	.loc	0 634 3                         # liblzma/lzma/lzma_encoder_optimum_normal.c:634:3
	decq	%r10
.Ltmp669:
	addq	$44, %rax
	cmpq	%r10, %rdx
	jne	.LBB0_204
.Ltmp670:
# %bb.205:                              # %while.body442.i.prol.loopexit.loopexit
                                        #   in Loop: Header=BB0_189 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	movq	%r9, %rax
	subq	%r10, %rax
	movq	24(%rsp), %r10                  # 8-byte Reload
.Ltmp671:
.LBB0_206:                              # %while.body442.i.prol.loopexit
                                        #   in Loop: Header=BB0_189 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	subq	%rsi, %r9
	movq	16(%rsp), %rdi                  # 8-byte Reload
                                        # kill: def $edi killed $edi killed $rdi def $rdi
	cmpq	$-4, %r9
	ja	.LBB0_210
.Ltmp672:
# %bb.207:                              # %while.body442.i.preheader3
                                        #   in Loop: Header=BB0_189 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	leal	(%r15,%r8), %edx
	subq	%rax, %rdx
	imulq	$44, %rax, %rax
	addq	120(%rsp), %rax                 # 8-byte Folded Reload
.Ltmp673:
	.p2align	4, 0x90
.LBB0_208:                              # %while.body442.i
                                        #   Parent Loop BB0_139 Depth=1
                                        #     Parent Loop BB0_189 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	#DEBUG_VALUE: helper2:len_end <- undef
	.loc	0 635 33                        # liblzma/lzma/lzma_encoder_optimum_normal.c:635:33
	movl	$1073741824, -132(%rax)         # imm = 0x40000000
	movl	$1073741824, -88(%rax)          # imm = 0x40000000
	movl	$1073741824, -44(%rax)          # imm = 0x40000000
	movl	$1073741824, (%rax)             # imm = 0x40000000
	.loc	0 634 18                        # liblzma/lzma/lzma_encoder_optimum_normal.c:634:18
	addq	$176, %rax
	addq	$-4, %rdx
	.loc	0 634 3 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:634:3
	jne	.LBB0_208
.Ltmp674:
# %bb.209:                              #   in Loop: Header=BB0_189 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	.loc	0 0 3                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:3
	movq	16(%rsp), %rdi                  # 8-byte Reload
                                        # kill: def $edi killed $edi killed $rdi def $rdi
.Ltmp675:
	.p2align	4, 0x90
.LBB0_210:                              # %while.end448.i
                                        #   in Loop: Header=BB0_189 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	#DEBUG_VALUE: len_test_temp <- $r8d
	#DEBUG_VALUE: get_pure_rep_price:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_pure_rep_price:rep_index <- $r11
	#DEBUG_VALUE: get_pure_rep_price:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_pure_rep_price:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	movzwl	27956(%r14,%r10,2), %eax
	shrl	$4, %eax
	.loc	0 84 16 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:84:16
	testq	%r11, %r11
.Ltmp676:
	#DEBUG_VALUE: get_pure_rep_price:pos_state <- undef
	.loc	0 84 6 is_stmt 0                # liblzma/lzma/lzma_encoder_optimum_normal.c:84:6
	je	.LBB0_213
.Ltmp677:
# %bb.211:                              # %if.else.i.i
                                        #   in Loop: Header=BB0_189 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	#DEBUG_VALUE: len_test_temp <- $r8d
	#DEBUG_VALUE: get_pure_rep_price:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_pure_rep_price:rep_index <- $r11
	#DEBUG_VALUE: get_pure_rep_price:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_pure_rep_price:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	.loc	0 0 6                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:6
	movzwl	%ax, %eax
.Ltmp678:
	.loc	8 47 4 is_stmt 1                # liblzma/rangecoder/price.h:47:4
	xorq	$127, %rax
	movq	lzma_rc_prices@GOTPCREL(%rip), %rsi
	.loc	8 46 9                          # liblzma/rangecoder/price.h:46:9
	movzbl	(%rsi,%rax), %eax
.Ltmp679:
	.loc	0 0 0 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:0
	movzwl	27980(%r14,%r10,2), %edx
	shrl	$4, %edx
.Ltmp680:
	#DEBUG_VALUE: get_pure_rep_price:price <- $eax
	.loc	0 90 17 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:90:17
	cmpq	$1, %r11
.Ltmp681:
	#DEBUG_VALUE: rc_bit_1_price:prob <- undef
	.loc	0 90 7 is_stmt 0                # liblzma/lzma/lzma_encoder_optimum_normal.c:90:7
	je	.LBB0_214
.Ltmp682:
# %bb.212:                              # %if.else16.i.i
                                        #   in Loop: Header=BB0_189 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	#DEBUG_VALUE: len_test_temp <- $r8d
	#DEBUG_VALUE: get_pure_rep_price:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_pure_rep_price:rep_index <- $r11
	#DEBUG_VALUE: get_pure_rep_price:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_pure_rep_price:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_pure_rep_price:price <- $eax
	.loc	0 0 7                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:7
	movzwl	%dx, %edx
.Ltmp683:
	.loc	8 47 4 is_stmt 1                # liblzma/rangecoder/price.h:47:4
	xorq	$127, %rdx
	.loc	8 46 9                          # liblzma/rangecoder/price.h:46:9
	movzbl	(%rsi,%rdx), %edx
.Ltmp684:
	.loc	0 93 10                         # liblzma/lzma/lzma_encoder_optimum_normal.c:93:10
	addl	%eax, %edx
.Ltmp685:
	#DEBUG_VALUE: get_pure_rep_price:price <- $edx
	.loc	0 94 26                         # liblzma/lzma/lzma_encoder_optimum_normal.c:94:26
	movzwl	28004(%r14,%r10,2), %eax
.Ltmp686:
	#DEBUG_VALUE: rc_bit_price:prob <- undef
	#DEBUG_VALUE: rc_bit_price:bit <- [DW_OP_constu 2, DW_OP_minus, DW_OP_stack_value] $r11
	.loc	0 0 26 is_stmt 0                # liblzma/lzma/lzma_encoder_optimum_normal.c:0:26
	movq	%rsi, %r9
.Ltmp687:
	.loc	8 32 4 is_stmt 1                # liblzma/rangecoder/price.h:32:4
	movl	$2, %esi
	subl	%r11d, %esi
	andl	$2032, %esi                     # imm = 0x7F0
	.loc	8 31 30                         # liblzma/rangecoder/price.h:31:30
	xorl	%eax, %esi
	.loc	8 32 33                         # liblzma/rangecoder/price.h:32:33
	shrl	$4, %esi
	.loc	8 31 9                          # liblzma/rangecoder/price.h:31:9
	movzbl	(%r9,%rsi), %r10d
.Ltmp688:
	.loc	0 94 10                         # liblzma/lzma/lzma_encoder_optimum_normal.c:94:10
	addl	%edx, %r10d
.Ltmp689:
	#DEBUG_VALUE: get_pure_rep_price:price <- $r10d
	#DEBUG_VALUE: rc_bit_1_price:prob <- undef
	.loc	0 0 10 is_stmt 0                # liblzma/lzma/lzma_encoder_optimum_normal.c:0:10
	jmp	.LBB0_215
.Ltmp690:
.LBB0_213:                              # %if.then.i.i257
                                        #   in Loop: Header=BB0_189 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	#DEBUG_VALUE: len_test_temp <- $r8d
	#DEBUG_VALUE: get_pure_rep_price:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_pure_rep_price:rep_index <- $r11
	#DEBUG_VALUE: get_pure_rep_price:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_pure_rep_price:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	movq	lzma_rc_prices@GOTPCREL(%rip), %rsi
.Ltmp691:
	.loc	8 39 9 is_stmt 1                # liblzma/rangecoder/price.h:39:9
	movzbl	(%rsi,%rax), %eax
.Ltmp692:
	#DEBUG_VALUE: get_pure_rep_price:price <- $eax
	.loc	8 0 9 is_stmt 0                 # liblzma/rangecoder/price.h:0:9
	movq	392(%rsp), %rdx                 # 8-byte Reload
.Ltmp693:
	.loc	0 86 27 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:86:27
	movzwl	(%rdx), %edx
.Ltmp694:
	#DEBUG_VALUE: rc_bit_1_price:prob <- undef
	.loc	8 47 4                          # liblzma/rangecoder/price.h:47:4
	shrl	$4, %edx
	xorq	$127, %rdx
.Ltmp695:
.LBB0_214:                              # %if.then11.i.i
                                        #   in Loop: Header=BB0_189 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	#DEBUG_VALUE: len_test_temp <- $r8d
	#DEBUG_VALUE: get_pure_rep_price:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_pure_rep_price:rep_index <- $r11
	#DEBUG_VALUE: get_pure_rep_price:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_pure_rep_price:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_pure_rep_price:price <- $eax
	.loc	0 0 0 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:0
	movzbl	(%rsi,%rdx), %r10d
	addl	%eax, %r10d
.Ltmp696:
	#DEBUG_VALUE: get_pure_rep_price:price <- $r10d
	#DEBUG_VALUE: rc_bit_0_price:prob <- undef
.LBB0_215:                              # %get_pure_rep_price.exit.i253
                                        #   in Loop: Header=BB0_189 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	#DEBUG_VALUE: len_test_temp <- $r8d
	#DEBUG_VALUE: get_pure_rep_price:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_pure_rep_price:rep_index <- $r11
	#DEBUG_VALUE: get_pure_rep_price:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_pure_rep_price:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_pure_rep_price:price <- $r10d
	decq	%rcx
.Ltmp697:
	#DEBUG_VALUE: buf_back <- $rcx
	#DEBUG_VALUE: get_pure_rep_price:price <- $r10d
	.loc	0 638 42 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:638:42
	addl	152(%rsp), %r10d                # 4-byte Folded Reload
.Ltmp698:
	#DEBUG_VALUE: price <- $r10d
	.loc	0 641 3                         # liblzma/lzma/lzma_encoder_optimum_normal.c:641:3
	leal	-2(%r8), %esi
	movq	128(%rsp), %rax                 # 8-byte Reload
	leaq	(%rax,%rsi,4), %rax
	movl	%r8d, %edx
	jmp	.LBB0_217
.Ltmp699:
	.p2align	4, 0x90
.LBB0_216:                              # %if.end483.i
                                        #   in Loop: Header=BB0_217 Depth=3
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	#DEBUG_VALUE: buf_back <- $rcx
	#DEBUG_VALUE: len_test <- $edx
	#DEBUG_VALUE: len_test_temp <- $r8d
	#DEBUG_VALUE: price <- $r10d
	.loc	0 652 12                        # liblzma/lzma/lzma_encoder_optimum_normal.c:652:12
	decl	%edx
.Ltmp700:
	#DEBUG_VALUE: len_test <- $edx
	.loc	0 652 23 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:652:23
	addq	$-4, %rax
	cmpl	$1, %edx
.Ltmp701:
	.loc	0 652 3                         # liblzma/lzma/lzma_encoder_optimum_normal.c:652:3
	jbe	.LBB0_219
.Ltmp702:
.LBB0_217:                              # %do.body.i254
                                        #   Parent Loop BB0_139 Depth=1
                                        #     Parent Loop BB0_189 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	#DEBUG_VALUE: buf_back <- $rcx
	#DEBUG_VALUE: len_test_temp <- $r8d
	#DEBUG_VALUE: price <- $r10d
	#DEBUG_VALUE: len_test <- $edx
	.loc	0 0 3                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:3
	movl	(%rax), %r9d
	.loc	0 643 6 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:643:6
	addl	%r10d, %r9d
.Ltmp703:
	#DEBUG_VALUE: cur_and_len_price <- undef
	.loc	0 646 28                        # liblzma/lzma/lzma_encoder_optimum_normal.c:646:28
	leal	(%r15,%rdx), %ebx
	imulq	$44, %rbx, %rbx
	.loc	0 646 26 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:646:26
	cmpl	16(%rbp,%rbx), %r9d
.Ltmp704:
	#DEBUG_VALUE: get_len_price:pos_state <- undef
	.loc	0 646 8                         # liblzma/lzma/lzma_encoder_optimum_normal.c:646:8
	jae	.LBB0_216
.Ltmp705:
# %bb.218:                              # %if.then462.i
                                        #   in Loop: Header=BB0_217 Depth=3
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	#DEBUG_VALUE: buf_back <- $rcx
	#DEBUG_VALUE: len_test <- $edx
	#DEBUG_VALUE: len_test_temp <- $r8d
	#DEBUG_VALUE: price <- $r10d
	.loc	0 0 0                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:0
	addq	%rbp, %rbx
.Ltmp706:
	.loc	0 647 39 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:647:39
	movl	%r9d, 16(%rbx)
	.loc	0 648 42                        # liblzma/lzma/lzma_encoder_optimum_normal.c:648:42
	movl	%r13d, 20(%rbx)
	.loc	0 649 43                        # liblzma/lzma/lzma_encoder_optimum_normal.c:649:43
	movl	%r11d, 24(%rbx)
	.loc	0 650 51                        # liblzma/lzma/lzma_encoder_optimum_normal.c:650:51
	movb	$0, 4(%rbx)
	jmp	.LBB0_216
.Ltmp707:
	.p2align	4, 0x90
.LBB0_219:                              # %do.end.i
                                        #   in Loop: Header=BB0_189 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	#DEBUG_VALUE: buf_back <- $rcx
	#DEBUG_VALUE: len_test <- $edx
	#DEBUG_VALUE: len_test_temp <- $r8d
	#DEBUG_VALUE: get_pure_rep_price:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_pure_rep_price:rep_index <- $r11
	#DEBUG_VALUE: get_pure_rep_price:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_pure_rep_price:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: price <- $r10d
	#DEBUG_VALUE: len_test <- $r8d
	.loc	0 0 51 is_stmt 0                # liblzma/lzma/lzma_encoder_optimum_normal.c:0:51
	leal	1(%r8), %r15d
.Ltmp708:
	.loc	0 84 16 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:84:16
	testq	%r11, %r11
	movq	48(%rsp), %rax                  # 8-byte Reload
.Ltmp709:
	.loc	0 656 7                         # liblzma/lzma/lzma_encoder_optimum_normal.c:656:7
	cmovel	%r15d, %eax
.Ltmp710:
	#DEBUG_VALUE: helper2:start_len <- $eax
	#DEBUG_VALUE: len_test_2 <- $r15d
	.loc	0 0 7 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:7
	movq	%rax, 48(%rsp)                  # 8-byte Spill
.Ltmp711:
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	movq	72(%rsp), %rax                  # 8-byte Reload
	.loc	0 661 26 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:661:26
	addl	%r8d, %eax
	incl	%eax
	movl	192(%rsp), %edx                 # 4-byte Reload
	cmpl	%edx, %eax
	cmovbl	%eax, %edx
.Ltmp712:
	#DEBUG_VALUE: limit <- $edx
	.loc	0 0 26 is_stmt 0                # liblzma/lzma/lzma_encoder_optimum_normal.c:0:26
	movl	%r15d, %ebx
.Ltmp713:
	.loc	0 663 21 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:663:21
	cmpl	%edx, %r15d
	.loc	0 664 5                         # liblzma/lzma/lzma_encoder_optimum_normal.c:664:5
	jae	.LBB0_226
.Ltmp714:
# %bb.220:                              # %land.rhs505.preheader.i
                                        #   in Loop: Header=BB0_189 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	#DEBUG_VALUE: buf_back <- $rcx
	#DEBUG_VALUE: len_test <- $r8d
	#DEBUG_VALUE: len_test_temp <- $r8d
	#DEBUG_VALUE: price <- $r10d
	#DEBUG_VALUE: len_test_2 <- $r15d
	#DEBUG_VALUE: limit <- $edx
	.loc	0 0 5 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:5
	movq	%rdi, %r12
	.loc	0 663 3 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:663:3
	movl	%r15d, %ebx
	movq	176(%rsp), %rdi                 # 8-byte Reload
	cmpl	%eax, %edi
	cmovbl	%edi, %eax
	movl	88(%rsp), %edi                  # 4-byte Reload
	cmpl	%edi, %eax
	cmovael	%edi, %eax
	negl	%eax
.Ltmp715:
	.loc	0 663 21 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:663:21
	addq	%rbx, %rax
	movq	80(%rsp), %r13                  # 8-byte Reload
	movq	%rcx, %rbp
	xorl	%r9d, %r9d
.Ltmp716:
	.p2align	4, 0x90
.LBB0_221:                              # %land.rhs505.i
                                        #   Parent Loop BB0_139 Depth=1
                                        #     Parent Loop BB0_189 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	#DEBUG_VALUE: buf_back <- $rcx
	#DEBUG_VALUE: len_test <- $r8d
	#DEBUG_VALUE: len_test_temp <- $r8d
	#DEBUG_VALUE: price <- $r10d
	#DEBUG_VALUE: limit <- $edx
	#DEBUG_VALUE: len_test_2 <- [DW_OP_LLVM_arg 0, DW_OP_consts 1, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_LLVM_convert 64 7, DW_OP_plus, DW_OP_stack_value] $r9, $r8d
	.loc	0 664 8 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:664:8
	movzbl	(%r13,%rbx), %edi
	.loc	0 664 24 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:664:24
	cmpb	(%rbp,%rbx), %dil
.Ltmp717:
	.loc	0 663 3 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:663:3
	jne	.LBB0_224
.Ltmp718:
# %bb.222:                              # %for.inc516.i
                                        #   in Loop: Header=BB0_221 Depth=3
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	#DEBUG_VALUE: buf_back <- $rcx
	#DEBUG_VALUE: len_test <- $r8d
	#DEBUG_VALUE: len_test_temp <- $r8d
	#DEBUG_VALUE: price <- $r10d
	#DEBUG_VALUE: len_test_2 <- [DW_OP_LLVM_arg 0, DW_OP_consts 1, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_LLVM_convert 64 7, DW_OP_plus, DW_OP_stack_value] $r9, $r8d
	#DEBUG_VALUE: limit <- $edx
	#DEBUG_VALUE: len_test_2 <- [DW_OP_LLVM_arg 0, DW_OP_consts 1, DW_OP_consts 1, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_LLVM_convert 64 7, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $r9, $r8d
	.loc	0 663 21 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:663:21
	incq	%r9
.Ltmp719:
	incq	%rbp
	incq	%r13
	movl	%eax, %edi
	addl	%r9d, %edi
	.loc	0 664 5 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:664:5
	jne	.LBB0_221
.Ltmp720:
# %bb.223:                              #   in Loop: Header=BB0_189 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	#DEBUG_VALUE: buf_back <- $rcx
	#DEBUG_VALUE: len_test <- $r8d
	#DEBUG_VALUE: len_test_temp <- $r8d
	#DEBUG_VALUE: price <- $r10d
	#DEBUG_VALUE: limit <- $edx
	.loc	0 0 5 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:5
	movl	%edx, %ebx
.Ltmp721:
	#DEBUG_VALUE: limit <- $ebx
	jmp	.LBB0_225
.Ltmp722:
.LBB0_224:                              # %for.end518.loopexit.split.loop.exit1718.i
                                        #   in Loop: Header=BB0_189 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	#DEBUG_VALUE: buf_back <- $rcx
	#DEBUG_VALUE: len_test <- $r8d
	#DEBUG_VALUE: len_test_temp <- $r8d
	#DEBUG_VALUE: price <- $r10d
	#DEBUG_VALUE: len_test_2 <- [DW_OP_LLVM_arg 0, DW_OP_consts 1, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_LLVM_convert 64 7, DW_OP_plus, DW_OP_stack_value] $r9, $r8d
	#DEBUG_VALUE: limit <- $edx
	.loc	0 667 14 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:667:14
	addl	%r9d, %ebx
.Ltmp723:
.LBB0_225:                              # %for.end518.i
                                        #   in Loop: Header=BB0_189 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	#DEBUG_VALUE: buf_back <- $rcx
	#DEBUG_VALUE: len_test <- $r8d
	#DEBUG_VALUE: len_test_temp <- $r8d
	#DEBUG_VALUE: price <- $r10d
	#DEBUG_VALUE: limit <- $edx
	.loc	0 0 14 is_stmt 0                # liblzma/lzma/lzma_encoder_optimum_normal.c:0:14
	movq	64(%rsp), %rbp                  # 8-byte Reload
	movq	%r12, %rdi
	movq	32(%rsp), %r13                  # 8-byte Reload
	movq	184(%rsp), %r12                 # 8-byte Reload
.Ltmp724:
.LBB0_226:                              # %for.end518.i
                                        #   in Loop: Header=BB0_189 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	#DEBUG_VALUE: buf_back <- $rcx
	#DEBUG_VALUE: len_test <- $r8d
	#DEBUG_VALUE: len_test_temp <- $r8d
	#DEBUG_VALUE: price <- $r10d
	#DEBUG_VALUE: limit <- $edx
	.loc	0 667 14                        # liblzma/lzma/lzma_encoder_optimum_normal.c:667:14
	movl	%ebx, %r9d
	subl	%r15d, %r9d
.Ltmp725:
	#DEBUG_VALUE: len_test_2 <- $r9d
	.loc	0 669 18 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:669:18
	cmpl	$2, %r9d
.Ltmp726:
	.loc	0 669 7 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:669:7
	jb	.LBB0_187
.Ltmp727:
# %bb.227:                              # %if.then523.i
                                        #   in Loop: Header=BB0_189 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	#DEBUG_VALUE: buf_back <- $rcx
	#DEBUG_VALUE: len_test <- $r8d
	#DEBUG_VALUE: len_test_temp <- $r8d
	#DEBUG_VALUE: price <- $r10d
	#DEBUG_VALUE: len_test_2 <- $r9d
	#DEBUG_VALUE: limit <- $edx
	#DEBUG_VALUE: state_2 <- undef
	.loc	0 0 7                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:7
	movq	%rdi, (%rsp)                    # 8-byte Spill
	movq	368(%rsp), %rax                 # 8-byte Reload
.Ltmp728:
	.loc	0 673 40 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:673:40
	leal	(%r8,%rax), %r15d
	.loc	0 673 52 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:673:52
	movl	%r15d, %eax
	andl	92(%rsp), %eax                  # 4-byte Folded Reload
.Ltmp729:
	#DEBUG_VALUE: pos_state_next <- $eax
	#DEBUG_VALUE: get_len_price:lencoder <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 47688, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: get_len_price:len <- $r8d
	.loc	0 0 52                          # liblzma/lzma/lzma_encoder_optimum_normal.c:0:52
	movq	128(%rsp), %rdx                 # 8-byte Reload
.Ltmp730:
	.loc	0 63 9 is_stmt 1                # liblzma/lzma/lzma_encoder_optimum_normal.c:63:9
	movl	(%rdx,%rsi,4), %r13d
	movq	400(%rsp), %rdx                 # 8-byte Reload
.Ltmp731:
	.loc	0 678 23                        # liblzma/lzma/lzma_encoder_optimum_normal.c:678:23
	movzwl	(%rdx,%rax,2), %eax
.Ltmp732:
	#DEBUG_VALUE: rc_bit_0_price:prob <- undef
	.loc	8 39 29                         # liblzma/rangecoder/price.h:39:29
	shrl	$4, %eax
	movq	lzma_rc_prices@GOTPCREL(%rip), %r12
	.loc	8 39 9 is_stmt 0                # liblzma/rangecoder/price.h:39:9
	movzbl	(%r12,%rax), %eax
	movl	%eax, 144(%rsp)                 # 4-byte Spill
.Ltmp733:
	.loc	0 680 20 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:680:20
	leal	-1(%r8), %eax
	movq	80(%rsp), %rbp                  # 8-byte Reload
	.loc	0 680 7 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:680:7
	movzbl	(%rbp,%rax), %eax
	.loc	0 681 7 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:681:7
	movl	%r8d, %edx
.Ltmp734:
	#DEBUG_VALUE: limit <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	movzbl	(%rcx,%rdx), %esi
.Ltmp735:
	#DEBUG_VALUE: get_literal_price:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:pos <- $r15d
	#DEBUG_VALUE: get_literal_price:match_mode <- [DW_OP_stack_value] 1
	#DEBUG_VALUE: get_literal_price:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:symbol <- undef
	#DEBUG_VALUE: get_literal_price:match_byte <- $esi
	#DEBUG_VALUE: get_literal_price:prev_byte <- $eax
	.loc	0 26 38                         # liblzma/lzma/lzma_encoder_optimum_normal.c:26:38
	movl	%r15d, %edi
	andl	228(%rsp), %edi                 # 4-byte Folded Reload
	movl	340(%rsp), %ecx                 # 4-byte Reload
.Ltmp736:
                                        # kill: def $cl killed $cl killed $ecx
	shll	%cl, %edi
	movl	336(%rsp), %ecx                 # 4-byte Reload
                                        # kill: def $cl killed $cl killed $ecx
	shrl	%cl, %eax
.Ltmp737:
	.loc	0 681 27                        # liblzma/lzma/lzma_encoder_optimum_normal.c:681:27
	movzbl	(%rbp,%rdx), %r8d
.Ltmp738:
	#DEBUG_VALUE: get_literal_price:symbol <- $r8d
	#DEBUG_VALUE: get_len_price:len <- $edx
	#DEBUG_VALUE: len_test_temp <- $edx
	#DEBUG_VALUE: len_test <- $edx
	.loc	0 26 38                         # liblzma/lzma/lzma_encoder_optimum_normal.c:26:38
	addl	%edi, %eax
	leaq	(%rax,%rax,2), %rax
	shlq	$9, %rax
	addq	320(%rsp), %rax                 # 8-byte Folded Reload
.Ltmp739:
	#DEBUG_VALUE: get_literal_price:subcoder <- $rax
	#DEBUG_VALUE: get_literal_price:price <- 0
	.loc	0 0 0 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:0
	orl	$256, %r8d                      # imm = 0x100
.Ltmp740:
	xorl	%ecx, %ecx
	movl	$256, %edx                      # imm = 0x100
.Ltmp741:
	#DEBUG_VALUE: get_len_price:pos_state <- undef
	.p2align	4, 0x90
.LBB0_228:                              # %do.body.i1420.i
                                        #   Parent Loop BB0_139 Depth=1
                                        #     Parent Loop BB0_189 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	#DEBUG_VALUE: price <- $r10d
	#DEBUG_VALUE: len_test_2 <- $r9d
	#DEBUG_VALUE: get_literal_price:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:pos <- $r15d
	#DEBUG_VALUE: get_literal_price:match_mode <- [DW_OP_stack_value] 1
	#DEBUG_VALUE: get_literal_price:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:match_byte <- $esi
	#DEBUG_VALUE: get_literal_price:subcoder <- $rax
	#DEBUG_VALUE: get_literal_price:match_byte <- $esi
	#DEBUG_VALUE: get_literal_price:symbol <- $r8d
	#DEBUG_VALUE: get_literal_price:price <- $ecx
	#DEBUG_VALUE: offset <- $edx
	.loc	0 39 15 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:39:15
	addl	%esi, %esi
.Ltmp742:
	#DEBUG_VALUE: get_literal_price:match_byte <- $esi
	.loc	0 41 42                         # liblzma/lzma/lzma_encoder_optimum_normal.c:41:42
	movl	%esi, %edi
	andl	%edx, %edi
.Ltmp743:
	#DEBUG_VALUE: match_bit <- $edi
	.loc	0 43 37                         # liblzma/lzma/lzma_encoder_optimum_normal.c:43:37
	movl	%r8d, %ebp
	shrl	$8, %ebp
	.loc	0 43 15 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:43:15
	addl	%edx, %ebp
	.loc	0 43 27                         # liblzma/lzma/lzma_encoder_optimum_normal.c:43:27
	addl	%edi, %ebp
.Ltmp744:
	#DEBUG_VALUE: subcoder_index <- $ebp
	#DEBUG_VALUE: bit <- [DW_OP_constu 7, DW_OP_shr, DW_OP_constu 1, DW_OP_and, DW_OP_stack_value] $r8d
	.loc	0 45 26 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:45:26
	movzwl	(%rax,%rbp,2), %edi
.Ltmp745:
	#DEBUG_VALUE: rc_bit_price:prob <- undef
	#DEBUG_VALUE: rc_bit_price:bit <- [DW_OP_constu 7, DW_OP_shr, DW_OP_constu 1, DW_OP_and, DW_OP_stack_value] $r8d
	.loc	8 32 4                          # liblzma/rangecoder/price.h:32:4
	movsbl	%r8b, %ebp
.Ltmp746:
	shrl	$7, %ebp
	.loc	8 31 30                         # liblzma/rangecoder/price.h:31:30
	andl	$2032, %ebp                     # imm = 0x7F0
	xorl	%edi, %ebp
	.loc	8 32 33                         # liblzma/rangecoder/price.h:32:33
	shrl	$4, %ebp
	.loc	8 31 9                          # liblzma/rangecoder/price.h:31:9
	movzbl	(%r12,%rbp), %edi
.Ltmp747:
	.loc	0 45 10                         # liblzma/lzma/lzma_encoder_optimum_normal.c:45:10
	addl	%edi, %ecx
.Ltmp748:
	#DEBUG_VALUE: get_literal_price:price <- $ecx
	.loc	0 47 11                         # liblzma/lzma/lzma_encoder_optimum_normal.c:47:11
	leal	(%r8,%r8), %edi
.Ltmp749:
	#DEBUG_VALUE: get_literal_price:symbol <- $edi
	.loc	0 48 14                         # liblzma/lzma/lzma_encoder_optimum_normal.c:48:14
	movl	%edi, %ebp
	xorl	%esi, %ebp
	notl	%ebp
	.loc	0 48 11 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:48:11
	andl	%ebp, %edx
.Ltmp750:
	#DEBUG_VALUE: offset <- $edx
	.loc	0 50 19 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:50:19
	cmpl	$32768, %r8d                    # imm = 0x8000
	movl	%edi, %r8d
.Ltmp751:
	.loc	0 50 3 is_stmt 0                # liblzma/lzma/lzma_encoder_optimum_normal.c:50:3
	jb	.LBB0_228
.Ltmp752:
# %bb.229:                              # %get_literal_price.exit1446.i
                                        #   in Loop: Header=BB0_189 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	#DEBUG_VALUE: price <- $r10d
	#DEBUG_VALUE: len_test_2 <- $r9d
	#DEBUG_VALUE: get_literal_price:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:pos <- $r15d
	#DEBUG_VALUE: get_literal_price:match_mode <- [DW_OP_stack_value] 1
	#DEBUG_VALUE: get_literal_price:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:symbol <- $r8d
	#DEBUG_VALUE: get_literal_price:match_byte <- $esi
	#DEBUG_VALUE: get_literal_price:subcoder <- $rax
	#DEBUG_VALUE: get_literal_price:price <- $ecx
	#DEBUG_VALUE: get_literal_price:price <- $ecx
	#DEBUG_VALUE: cur_and_len_literal_price <- undef
	#DEBUG_VALUE: state_2 <- 5
	.loc	0 685 42 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:685:42
	incl	%r15d
	.loc	0 685 47 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:685:47
	andl	92(%rsp), %r15d                 # 4-byte Folded Reload
.Ltmp753:
	#DEBUG_VALUE: pos_state_next <- $r15d
	.loc	0 688 23 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:688:23
	movzwl	27708(%r14,%r15,2), %eax
.Ltmp754:
	#DEBUG_VALUE: rc_bit_1_price:prob <- undef
	.loc	8 47 4                          # liblzma/rangecoder/price.h:47:4
	shrl	$4, %eax
	xorq	$127, %rax
	.loc	8 46 9                          # liblzma/rangecoder/price.h:46:9
	movzbl	(%r12,%rax), %edx
.Ltmp755:
	.loc	0 689 23                        # liblzma/lzma/lzma_encoder_optimum_normal.c:689:23
	movzwl	27942(%r14), %eax
.Ltmp756:
	#DEBUG_VALUE: rc_bit_1_price:prob <- undef
	.loc	8 47 4                          # liblzma/rangecoder/price.h:47:4
	shrl	$4, %eax
	xorq	$127, %rax
	.loc	8 46 9                          # liblzma/rangecoder/price.h:46:9
	movzbl	(%r12,%rax), %esi
.Ltmp757:
	#DEBUG_VALUE: next_rep_match_price <- undef
	.loc	8 0 9 is_stmt 0                 # liblzma/rangecoder/price.h:0:9
	movq	16(%rsp), %rax                  # 8-byte Reload
.Ltmp758:
	.loc	0 692 47 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:692:47
	leal	(%r9,%rax), %r8d
	#DEBUG_VALUE: get_literal_price:symbol <- $edi
	incl	%r8d
.Ltmp759:
	#DEBUG_VALUE: offset <- $r8d
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	.loc	0 0 47 is_stmt 0                # liblzma/lzma/lzma_encoder_optimum_normal.c:0:47
	movq	(%rsp), %rdi                    # 8-byte Reload
	.loc	0 694 19 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:694:19
	cmpl	%r8d, %edi
	movl	%edx, 348(%rsp)                 # 4-byte Spill
	movl	%esi, 344(%rsp)                 # 4-byte Spill
	.loc	0 694 4 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:694:4
	jae	.LBB0_232
.Ltmp760:
# %bb.230:                              # %while.body593.preheader.i
                                        #   in Loop: Header=BB0_189 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	#DEBUG_VALUE: price <- $r10d
	#DEBUG_VALUE: len_test_2 <- $r9d
	#DEBUG_VALUE: state_2 <- 5
	#DEBUG_VALUE: pos_state_next <- $r15d
	#DEBUG_VALUE: offset <- $r8d
	movl	%edi, %esi
	movl	%r8d, (%rsp)                    # 4-byte Spill
.Ltmp761:
	#DEBUG_VALUE: offset <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- $edi
	.loc	0 694 19                        # liblzma/lzma/lzma_encoder_optimum_normal.c:694:19
	movl	%r8d, %r12d
	.loc	0 694 4                         # liblzma/lzma/lzma_encoder_optimum_normal.c:694:4
	movq	%r12, %rax
	subq	%rsi, %rax
	cmpq	$4, %rax
	jae	.LBB0_233
.Ltmp762:
# %bb.231:                              #   in Loop: Header=BB0_189 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- $esi
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	#DEBUG_VALUE: price <- $r10d
	#DEBUG_VALUE: len_test_2 <- $r9d
	#DEBUG_VALUE: state_2 <- 5
	#DEBUG_VALUE: pos_state_next <- $r15d
	#DEBUG_VALUE: offset <- [DW_OP_deref] $rsp
	.loc	0 0 4                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:4
	movq	%rsi, %r8
	movq	64(%rsp), %rbp                  # 8-byte Reload
	jmp	.LBB0_237
.Ltmp763:
.LBB0_232:                              # %get_literal_price.exit1446.while.end599_crit_edge.i
                                        #   in Loop: Header=BB0_189 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	#DEBUG_VALUE: price <- $r10d
	#DEBUG_VALUE: len_test_2 <- $r9d
	#DEBUG_VALUE: state_2 <- 5
	#DEBUG_VALUE: pos_state_next <- $r15d
	#DEBUG_VALUE: offset <- $r8d
	.loc	0 701 28 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:701:28
	movl	%r8d, %ebx
.Ltmp764:
	#DEBUG_VALUE: offset <- $ebx
	.loc	0 0 28 is_stmt 0                # liblzma/lzma/lzma_encoder_optimum_normal.c:0:28
	movq	64(%rsp), %rbp                  # 8-byte Reload
	movl	144(%rsp), %r8d                 # 4-byte Reload
.Ltmp765:
	.loc	0 694 4 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:694:4
	jmp	.LBB0_247
.Ltmp766:
.LBB0_233:                              # %vector.ph461
                                        #   in Loop: Header=BB0_189 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- $esi
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	#DEBUG_VALUE: price <- $r10d
	#DEBUG_VALUE: len_test_2 <- $r9d
	#DEBUG_VALUE: state_2 <- 5
	#DEBUG_VALUE: pos_state_next <- $r15d
	#DEBUG_VALUE: offset <- [DW_OP_deref] $rsp
	movq	%rax, %rdx
	andq	$-4, %rdx
	leaq	(%rdx,%rsi), %r8
	movq	56(%rsp), %rdi                  # 8-byte Reload
	leal	(%rdi,%rbx), %ebp
	subq	%rsi, %rbp
	andq	$-4, %rbp
	imulq	$44, %rsi, %rsi
.Ltmp767:
	addq	120(%rsp), %rsi                 # 8-byte Folded Reload
.Ltmp768:
	.p2align	4, 0x90
.LBB0_234:                              # %vector.body466
                                        #   Parent Loop BB0_139 Depth=1
                                        #     Parent Loop BB0_189 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	#DEBUG_VALUE: price <- $r10d
	#DEBUG_VALUE: len_test_2 <- $r9d
	#DEBUG_VALUE: state_2 <- 5
	#DEBUG_VALUE: pos_state_next <- $r15d
	#DEBUG_VALUE: offset <- [DW_OP_deref] $rsp
	.loc	0 695 34                        # liblzma/lzma/lzma_encoder_optimum_normal.c:695:34
	movl	$1073741824, -132(%rsi)         # imm = 0x40000000
	movl	$1073741824, -88(%rsi)          # imm = 0x40000000
	movl	$1073741824, -44(%rsi)          # imm = 0x40000000
	movl	$1073741824, (%rsi)             # imm = 0x40000000
	addq	$176, %rsi
	addq	$-4, %rbp
	jne	.LBB0_234
.Ltmp769:
# %bb.235:                              # %middle.block458
                                        #   in Loop: Header=BB0_189 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	#DEBUG_VALUE: price <- $r10d
	#DEBUG_VALUE: len_test_2 <- $r9d
	#DEBUG_VALUE: state_2 <- 5
	#DEBUG_VALUE: pos_state_next <- $r15d
	#DEBUG_VALUE: offset <- [DW_OP_deref] $rsp
	.loc	0 694 4                         # liblzma/lzma/lzma_encoder_optimum_normal.c:694:4
	cmpq	%rdx, %rax
	movq	64(%rsp), %rbp                  # 8-byte Reload
	jne	.LBB0_237
.Ltmp770:
# %bb.236:                              #   in Loop: Header=BB0_189 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	#DEBUG_VALUE: price <- $r10d
	#DEBUG_VALUE: len_test_2 <- $r9d
	#DEBUG_VALUE: state_2 <- 5
	#DEBUG_VALUE: pos_state_next <- $r15d
	#DEBUG_VALUE: offset <- [DW_OP_deref] $rsp
	.loc	0 0 4 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:4
	movl	(%rsp), %eax                    # 4-byte Reload
	movl	%eax, %edi
	movq	%r12, %rbx
	movq	lzma_rc_prices@GOTPCREL(%rip), %r12
	movl	144(%rsp), %r8d                 # 4-byte Reload
	.loc	0 694 4                         # liblzma/lzma/lzma_encoder_optimum_normal.c:694:4
	jmp	.LBB0_247
.Ltmp771:
.LBB0_237:                              # %while.body593.i.preheader
                                        #   in Loop: Header=BB0_189 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	#DEBUG_VALUE: price <- $r10d
	#DEBUG_VALUE: len_test_2 <- $r9d
	#DEBUG_VALUE: state_2 <- 5
	#DEBUG_VALUE: pos_state_next <- $r15d
	#DEBUG_VALUE: offset <- [DW_OP_deref] $rsp
	movl	%r12d, %edx
	subl	%r8d, %edx
	movq	%r8, %rax
	testb	$3, %dl
	je	.LBB0_241
.Ltmp772:
# %bb.238:                              # %while.body593.i.prol.preheader
                                        #   in Loop: Header=BB0_189 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	#DEBUG_VALUE: price <- $r10d
	#DEBUG_VALUE: len_test_2 <- $r9d
	#DEBUG_VALUE: state_2 <- 5
	#DEBUG_VALUE: pos_state_next <- $r15d
	#DEBUG_VALUE: offset <- [DW_OP_deref] $rsp
	imulq	$44, %r8, %rax
	addq	208(%rsp), %rax                 # 8-byte Folded Reload
	movq	56(%rsp), %rdx                  # 8-byte Reload
	addl	%ebx, %edx
	subb	%r8b, %dl
	movzbl	%dl, %edx
	andl	$3, %edx
	negq	%rdx
	xorl	%esi, %esi
.Ltmp773:
	.p2align	4, 0x90
.LBB0_239:                              # %while.body593.i.prol
                                        #   Parent Loop BB0_139 Depth=1
                                        #     Parent Loop BB0_189 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	#DEBUG_VALUE: price <- $r10d
	#DEBUG_VALUE: len_test_2 <- $r9d
	#DEBUG_VALUE: state_2 <- 5
	#DEBUG_VALUE: pos_state_next <- $r15d
	#DEBUG_VALUE: offset <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_LLVM_arg 0, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 1, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rsi, $r8
	.loc	0 695 34 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:695:34
	movl	$1073741824, (%rax)             # imm = 0x40000000
	.loc	0 694 4                         # liblzma/lzma/lzma_encoder_optimum_normal.c:694:4
	decq	%rsi
.Ltmp774:
	addq	$44, %rax
	cmpq	%rsi, %rdx
	jne	.LBB0_239
.Ltmp775:
# %bb.240:                              # %while.body593.i.prol.loopexit.loopexit
                                        #   in Loop: Header=BB0_189 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	#DEBUG_VALUE: price <- $r10d
	#DEBUG_VALUE: len_test_2 <- $r9d
	#DEBUG_VALUE: state_2 <- 5
	#DEBUG_VALUE: pos_state_next <- $r15d
	#DEBUG_VALUE: offset <- [DW_OP_deref] $rsp
	movq	%r8, %rax
	subq	%rsi, %rax
.Ltmp776:
.LBB0_241:                              # %while.body593.i.prol.loopexit
                                        #   in Loop: Header=BB0_189 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	#DEBUG_VALUE: price <- $r10d
	#DEBUG_VALUE: len_test_2 <- $r9d
	#DEBUG_VALUE: state_2 <- 5
	#DEBUG_VALUE: pos_state_next <- $r15d
	#DEBUG_VALUE: offset <- [DW_OP_deref] $rsp
	.loc	0 0 4 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:4
	movq	%r12, %rdx
	.loc	0 694 4                         # liblzma/lzma/lzma_encoder_optimum_normal.c:694:4
	subq	%r12, %r8
	cmpq	$-4, %r8
	jbe	.LBB0_243
.Ltmp777:
# %bb.242:                              #   in Loop: Header=BB0_189 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	#DEBUG_VALUE: price <- $r10d
	#DEBUG_VALUE: len_test_2 <- $r9d
	#DEBUG_VALUE: state_2 <- 5
	#DEBUG_VALUE: pos_state_next <- $r15d
	#DEBUG_VALUE: offset <- [DW_OP_deref] $rsp
	.loc	0 0 4                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:4
	movl	(%rsp), %eax                    # 4-byte Reload
	movl	%eax, %edi
	movq	lzma_rc_prices@GOTPCREL(%rip), %r12
	movl	144(%rsp), %r8d                 # 4-byte Reload
	jmp	.LBB0_246
.Ltmp778:
.LBB0_243:                              # %while.body593.i.preheader2
                                        #   in Loop: Header=BB0_189 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	#DEBUG_VALUE: price <- $r10d
	#DEBUG_VALUE: len_test_2 <- $r9d
	#DEBUG_VALUE: state_2 <- 5
	#DEBUG_VALUE: pos_state_next <- $r15d
	#DEBUG_VALUE: offset <- [DW_OP_deref] $rsp
	.loc	0 694 4                         # liblzma/lzma/lzma_encoder_optimum_normal.c:694:4
	addl	56(%rsp), %ebx                  # 4-byte Folded Reload
	subq	%rax, %rbx
	imulq	$44, %rax, %rax
	addq	120(%rsp), %rax                 # 8-byte Folded Reload
	movq	lzma_rc_prices@GOTPCREL(%rip), %r12
	movl	144(%rsp), %r8d                 # 4-byte Reload
.Ltmp779:
	.p2align	4, 0x90
.LBB0_244:                              # %while.body593.i
                                        #   Parent Loop BB0_139 Depth=1
                                        #     Parent Loop BB0_189 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	#DEBUG_VALUE: price <- $r10d
	#DEBUG_VALUE: len_test_2 <- $r9d
	#DEBUG_VALUE: state_2 <- 5
	#DEBUG_VALUE: pos_state_next <- $r15d
	#DEBUG_VALUE: offset <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- undef
	.loc	0 695 34 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:695:34
	movl	$1073741824, -132(%rax)         # imm = 0x40000000
	movl	$1073741824, -88(%rax)          # imm = 0x40000000
	movl	$1073741824, -44(%rax)          # imm = 0x40000000
	movl	$1073741824, (%rax)             # imm = 0x40000000
	.loc	0 694 19                        # liblzma/lzma/lzma_encoder_optimum_normal.c:694:19
	addq	$176, %rax
	addq	$-4, %rbx
	.loc	0 694 4 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:694:4
	jne	.LBB0_244
.Ltmp780:
# %bb.245:                              #   in Loop: Header=BB0_189 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	#DEBUG_VALUE: price <- $r10d
	#DEBUG_VALUE: len_test_2 <- $r9d
	#DEBUG_VALUE: state_2 <- 5
	#DEBUG_VALUE: pos_state_next <- $r15d
	#DEBUG_VALUE: offset <- [DW_OP_deref] $rsp
	.loc	0 0 4                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:4
	movl	(%rsp), %eax                    # 4-byte Reload
	movl	%eax, %edi
.Ltmp781:
.LBB0_246:                              # %while.end599.i
                                        #   in Loop: Header=BB0_189 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	#DEBUG_VALUE: price <- $r10d
	#DEBUG_VALUE: len_test_2 <- $r9d
	#DEBUG_VALUE: state_2 <- 5
	#DEBUG_VALUE: pos_state_next <- $r15d
	#DEBUG_VALUE: offset <- [DW_OP_deref] $rsp
	movq	%rdx, %rbx
.Ltmp782:
.LBB0_247:                              # %while.end599.i
                                        #   in Loop: Header=BB0_189 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	#DEBUG_VALUE: price <- $r10d
	#DEBUG_VALUE: len_test_2 <- $r9d
	#DEBUG_VALUE: state_2 <- 5
	#DEBUG_VALUE: pos_state_next <- $r15d
	#DEBUG_VALUE: offset <- $ebx
	#DEBUG_VALUE: get_rep_price:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_rep_price:rep_index <- 0
	#DEBUG_VALUE: get_rep_price:len <- $r9d
	#DEBUG_VALUE: get_rep_price:state <- 5
	#DEBUG_VALUE: get_rep_price:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_len_price:lencoder <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 47688, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: get_len_price:len <- $r9d
	.loc	0 63 41 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:63:41
	addl	$-2, %r9d
.Ltmp783:
	.loc	0 63 9 is_stmt 0                # liblzma/lzma/lzma_encoder_optimum_normal.c:63:9
	imulq	$1088, %r15, %rax               # imm = 0x440
	addq	256(%rsp), %rax                 # 8-byte Folded Reload
.Ltmp784:
	#DEBUG_VALUE: get_pure_rep_price:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_pure_rep_price:rep_index <- 0
	#DEBUG_VALUE: get_pure_rep_price:state <- 5
	#DEBUG_VALUE: get_pure_rep_price:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	.loc	0 0 0                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:0
	movzwl	27966(%r14), %edx
	shrl	$4, %edx
.Ltmp785:
	#DEBUG_VALUE: rc_bit_0_price:prob <- undef
	.loc	8 39 9 is_stmt 1                # liblzma/rangecoder/price.h:39:9
	movzbl	(%r12,%rdx), %edx
.Ltmp786:
	#DEBUG_VALUE: get_pure_rep_price:price <- $edx
	.loc	0 86 27                         # liblzma/lzma/lzma_encoder_optimum_normal.c:86:27
	movzwl	28188(%r14,%r15,2), %esi
.Ltmp787:
	#DEBUG_VALUE: rc_bit_1_price:prob <- undef
	.loc	8 47 4                          # liblzma/rangecoder/price.h:47:4
	shrl	$4, %esi
	xorq	$127, %rsi
	.loc	8 46 9                          # liblzma/rangecoder/price.h:46:9
	movzbl	(%r12,%rsi), %esi
.Ltmp788:
	#DEBUG_VALUE: get_pure_rep_price:price <- undef
	.loc	0 86 9                          # liblzma/lzma/lzma_encoder_optimum_normal.c:86:9
	addl	%r10d, %r13d
.Ltmp789:
	.loc	0 110 3                         # liblzma/lzma/lzma_encoder_optimum_normal.c:110:3
	addl	%r8d, %r13d
.Ltmp790:
	.loc	0 676 6                         # liblzma/lzma/lzma_encoder_optimum_normal.c:676:6
	addl	%ecx, %r13d
	.loc	0 678 6                         # liblzma/lzma/lzma_encoder_optimum_normal.c:678:6
	addl	348(%rsp), %r13d                # 4-byte Folded Reload
	.loc	0 679 6                         # liblzma/lzma/lzma_encoder_optimum_normal.c:679:6
	addl	344(%rsp), %r13d                # 4-byte Folded Reload
	.loc	0 688 6                         # liblzma/lzma/lzma_encoder_optimum_normal.c:688:6
	addl	(%rax,%r9,4), %r13d
	.loc	0 689 6                         # liblzma/lzma/lzma_encoder_optimum_normal.c:689:6
	addl	%edx, %r13d
	.loc	0 698 6                         # liblzma/lzma/lzma_encoder_optimum_normal.c:698:6
	addl	%esi, %r13d
.Ltmp791:
	#DEBUG_VALUE: cur_and_len_price <- $r13d
	.loc	0 701 28                        # liblzma/lzma/lzma_encoder_optimum_normal.c:701:28
	imulq	$44, %rbx, %rax
	.loc	0 701 26 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:701:26
	cmpl	16(%rbp,%rax), %r13d
	#DEBUG_VALUE: get_rep_price:pos_state <- undef
	#DEBUG_VALUE: get_len_price:pos_state <- undef
	#DEBUG_VALUE: get_pure_rep_price:pos_state <- undef
	movq	160(%rsp), %rbx                 # 8-byte Reload
.Ltmp792:
	.loc	0 701 8                         # liblzma/lzma/lzma_encoder_optimum_normal.c:701:8
	jae	.LBB0_249
.Ltmp793:
# %bb.248:                              # %if.then609.i
                                        #   in Loop: Header=BB0_189 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	#DEBUG_VALUE: price <- $r10d
	#DEBUG_VALUE: state_2 <- 5
	#DEBUG_VALUE: pos_state_next <- $r15d
	#DEBUG_VALUE: cur_and_len_price <- $r13d
	.loc	0 0 8                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:8
	movq	16(%rsp), %rcx                  # 8-byte Reload
	incl	%ecx
.Ltmp794:
	addq	%rbp, %rax
.Ltmp795:
	.loc	0 702 31 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:702:31
	movl	%r13d, 16(%rax)
	.loc	0 703 34                        # liblzma/lzma/lzma_encoder_optimum_normal.c:703:34
	movl	%ecx, 20(%rax)
	.loc	0 704 35                        # liblzma/lzma/lzma_encoder_optimum_normal.c:704:35
	movl	$0, 24(%rax)
	.loc	0 705 43                        # liblzma/lzma/lzma_encoder_optimum_normal.c:705:43
	movw	$257, 4(%rax)                   # imm = 0x101
	movq	32(%rsp), %r13                  # 8-byte Reload
.Ltmp796:
	.loc	0 707 36                        # liblzma/lzma/lzma_encoder_optimum_normal.c:707:36
	movl	%r13d, 8(%rax)
	.loc	0 708 37                        # liblzma/lzma/lzma_encoder_optimum_normal.c:708:37
	movl	%r11d, 12(%rax)
	movq	40(%rsp), %r15                  # 8-byte Reload
.Ltmp797:
	.loc	0 0 37 is_stmt 0                # liblzma/lzma/lzma_encoder_optimum_normal.c:0:37
	jmp	.LBB0_250
.Ltmp798:
.LBB0_249:                              #   in Loop: Header=BB0_189 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	#DEBUG_VALUE: price <- $r10d
	#DEBUG_VALUE: state_2 <- 5
	#DEBUG_VALUE: pos_state_next <- $r15d
	#DEBUG_VALUE: get_rep_price:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_rep_price:rep_index <- 0
	#DEBUG_VALUE: get_rep_price:state <- 5
	#DEBUG_VALUE: get_rep_price:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_len_price:lencoder <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 47688, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: get_pure_rep_price:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_pure_rep_price:rep_index <- 0
	#DEBUG_VALUE: get_pure_rep_price:state <- 5
	#DEBUG_VALUE: get_pure_rep_price:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: cur_and_len_price <- $r13d
	movq	40(%rsp), %r15                  # 8-byte Reload
	movq	32(%rsp), %r13                  # 8-byte Reload
.Ltmp799:
.LBB0_250:                              # %cleanup.i225
                                        #   in Loop: Header=BB0_189 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: rep_index <- $r11
	#DEBUG_VALUE: price <- $r10d
	#DEBUG_VALUE: state_2 <- 5
	#DEBUG_VALUE: get_rep_price:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_rep_price:rep_index <- 0
	#DEBUG_VALUE: get_rep_price:state <- 5
	#DEBUG_VALUE: get_rep_price:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_len_price:lencoder <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 47688, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: get_pure_rep_price:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_pure_rep_price:rep_index <- 0
	#DEBUG_VALUE: get_pure_rep_price:state <- 5
	#DEBUG_VALUE: get_pure_rep_price:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	movq	24(%rsp), %r10                  # 8-byte Reload
	movq	80(%rsp), %rsi                  # 8-byte Reload
	movq	48(%rsp), %r9                   # 8-byte Reload
	movq	184(%rsp), %r12                 # 8-byte Reload
	jmp	.LBB0_188
.Ltmp800:
.LBB0_251:                              # %for.cond.cleanup397.i
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- $edi
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- $r9d
	movq	232(%rsp), %rax                 # 8-byte Reload
	movl	%eax, %ecx
	movl	148(%rsp), %esi                 # 4-byte Reload
.Ltmp801:
	.loc	0 716 14 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:716:14
	cmpl	%esi, %eax
	movq	72(%rsp), %r11                  # 8-byte Reload
	movq	lzma_rc_prices@GOTPCREL(%rip), %rdx
.Ltmp802:
	.loc	0 716 6 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:716:6
	jbe	.LBB0_255
.Ltmp803:
# %bb.252:                              # %while.cond649.i.preheader
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- $edi
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- $r9d
	.loc	0 0 6                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:6
	xorl	%ecx, %ecx
.Ltmp804:
	.p2align	4, 0x90
.LBB0_253:                              # %while.cond649.i
                                        #   Parent Loop BB0_139 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- $edi
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- $r9d
	#DEBUG_VALUE: helper2:matches_count <- $ecx
	.loc	0 720 20 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:720:20
	movl	%ecx, %eax
	.loc	0 721 4                         # liblzma/lzma/lzma_encoder_optimum_normal.c:721:4
	incl	%ecx
.Ltmp805:
	#DEBUG_VALUE: helper2:matches_count <- $eax
	#DEBUG_VALUE: helper2:matches_count <- $ecx
	.loc	0 720 18                        # liblzma/lzma/lzma_encoder_optimum_normal.c:720:18
	cmpl	(%r15,%rax,8), %esi
	.loc	0 720 3 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:720:3
	ja	.LBB0_253
.Ltmp806:
# %bb.254:                              # %while.end656.i
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- $edi
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- $ecx
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- $r9d
	#DEBUG_VALUE: helper2:matches_count <- $ecx
	.loc	0 0 3                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:3
	movl	%ecx, 156(%rsp)                 # 4-byte Spill
.Ltmp807:
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	.loc	0 723 39 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:723:39
	movl	%esi, (%r15,%rax,8)
	movl	%esi, %ecx
.Ltmp808:
.LBB0_255:                              # %if.end662.i
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- $edi
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- $r9d
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- $ecx
	.loc	0 727 14                        # liblzma/lzma/lzma_encoder_optimum_normal.c:727:14
	cmpl	%r9d, %ecx
.Ltmp809:
	.loc	0 727 6 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:727:6
	jae	.LBB0_257
.Ltmp810:
# %bb.256:                              #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- $edi
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- $ecx
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- $r9d
	.loc	0 0 6                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:6
	movq	%rdi, (%rsp)                    # 8-byte Spill
.Ltmp811:
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	.loc	0 727 6                         # liblzma/lzma/lzma_encoder_optimum_normal.c:727:6
	jmp	.LBB0_138
.Ltmp812:
.LBB0_257:                              # %if.then665.i
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- $edi
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- $ecx
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- $r9d
	.loc	0 729 22 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:729:22
	movzwl	27932(%r14,%r10,2), %eax
.Ltmp813:
	#DEBUG_VALUE: rc_bit_0_price:prob <- undef
	.loc	8 39 29                         # liblzma/rangecoder/price.h:39:29
	shrl	$4, %eax
	.loc	8 39 9 is_stmt 0                # liblzma/rangecoder/price.h:39:9
	movzbl	(%rdx,%rax), %eax
.Ltmp814:
	#DEBUG_VALUE: normal_match_price <- undef
	.loc	8 0 9                           # liblzma/rangecoder/price.h:0:9
	addl	%r13d, %ecx
.Ltmp815:
	#DEBUG_VALUE: helper2:len_end <- $edi
	.loc	0 731 18 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:731:18
	cmpl	%ecx, %edi
	.loc	0 731 3 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:731:3
	jae	.LBB0_260
.Ltmp816:
# %bb.258:                              # %while.body675.preheader.i
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- $edi
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- $r9d
	movl	%edi, %r10d
	.loc	0 731 18                        # liblzma/lzma/lzma_encoder_optimum_normal.c:731:18
	movl	%ecx, %esi
	.loc	0 731 3                         # liblzma/lzma/lzma_encoder_optimum_normal.c:731:3
	movq	%rsi, %rdx
	subq	%r10, %rdx
	cmpq	$3, %rdx
	ja	.LBB0_266
.Ltmp817:
# %bb.259:                              #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- $edi
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- $r9d
	.loc	0 0 3                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:3
	movq	%r10, %rdi
.Ltmp818:
	#DEBUG_VALUE: helper2:len_end <- $r10d
	jmp	.LBB0_270
.Ltmp819:
.LBB0_260:                              #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- $edi
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- $r9d
	movq	%rdi, (%rsp)                    # 8-byte Spill
.Ltmp820:
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	.loc	0 731 3                         # liblzma/lzma/lzma_encoder_optimum_normal.c:731:3
	jmp	.LBB0_278
.Ltmp821:
.LBB0_261:                              # %while.end.split.loop.exit.i
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pos_state <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur_and_1_price <- $ecx
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: limit <- $r10d
	#DEBUG_VALUE: len_test <- $r9
	.loc	0 0 3                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:3
	movl	%r9d, %r10d
.Ltmp822:
.LBB0_262:                              # %while.end.i
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pos_state <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur_and_1_price <- $ecx
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_test <- $r9
	#DEBUG_VALUE: len_test <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r10d
	.loc	0 591 16 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:591:16
	leal	-3(%r10), %r9d
	cmpl	$-3, %r9d
.Ltmp823:
	.loc	0 591 7 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:591:7
	ja	.LBB0_179
.Ltmp824:
# %bb.263:                              # %if.then319.i
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pos_state <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur_and_1_price <- $ecx
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_test <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r10d
	.loc	0 593 4 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:593:4
	xorl	%eax, %eax
	movq	24(%rsp), %rdx                  # 8-byte Reload
	cmpl	$10, %edx
	setb	%al
.Ltmp825:
	#DEBUG_VALUE: state_2 <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	cmpl	$4, %edx
	leal	(%rax,%rax,2), %eax
	leal	-6(%rdx,%rax), %ebx
	movl	$0, %eax
	cmovbl	%eax, %ebx
.Ltmp826:
	#DEBUG_VALUE: state_2 <- $ebx
	.loc	0 0 4 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:4
	movq	368(%rsp), %rax                 # 8-byte Reload
	.loc	0 595 46 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:595:46
	leal	1(%rax), %r11d
	.loc	0 595 51 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:595:51
	andl	92(%rsp), %r11d                 # 4-byte Folded Reload
.Ltmp827:
	#DEBUG_VALUE: pos_state_next <- $r11d
	.loc	0 597 23 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:597:23
	movq	%rbx, %r15
	shlq	$5, %r15
	movq	240(%rsp), %rax                 # 8-byte Reload
	addq	%r15, %rax
	movzwl	(%rax,%r11,2), %eax
.Ltmp828:
	#DEBUG_VALUE: rc_bit_1_price:prob <- undef
	.loc	8 47 4                          # liblzma/rangecoder/price.h:47:4
	shrl	$4, %eax
	xorq	$127, %rax
	movq	lzma_rc_prices@GOTPCREL(%rip), %rdx
	.loc	8 46 9                          # liblzma/rangecoder/price.h:46:9
	movzbl	(%rdx,%rax), %edi
.Ltmp829:
	.loc	0 598 23                        # liblzma/lzma/lzma_encoder_optimum_normal.c:598:23
	movzwl	27932(%r14,%rbx,2), %eax
.Ltmp830:
	#DEBUG_VALUE: rc_bit_1_price:prob <- undef
	.loc	8 47 4                          # liblzma/rangecoder/price.h:47:4
	shrl	$4, %eax
	xorq	$127, %rax
	.loc	8 46 9                          # liblzma/rangecoder/price.h:46:9
	movzbl	(%rdx,%rax), %eax
.Ltmp831:
	#DEBUG_VALUE: next_rep_match_price <- undef
	.loc	8 0 9 is_stmt 0                 # liblzma/rangecoder/price.h:0:9
	movl	%eax, 128(%rsp)                 # 4-byte Spill
.Ltmp832:
	.loc	0 601 36 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:601:36
	leal	(%r10,%r13), %esi
.Ltmp833:
	#DEBUG_VALUE: offset <- $esi
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	.loc	0 0 36 is_stmt 0                # liblzma/lzma/lzma_encoder_optimum_normal.c:0:36
	movl	%esi, %edx
	movq	(%rsp), %rax                    # 8-byte Reload
	.loc	0 603 19 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:603:19
	cmpl	%eax, %esi
	movq	%rdx, 48(%rsp)                  # 8-byte Spill
	.loc	0 603 4 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:603:4
	jbe	.LBB0_321
.Ltmp834:
# %bb.264:                              # %while.body354.preheader.i
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pos_state <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur_and_1_price <- $ecx
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_test <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r10d
	#DEBUG_VALUE: state_2 <- $ebx
	#DEBUG_VALUE: pos_state_next <- $r11d
	#DEBUG_VALUE: offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	.loc	0 0 4                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:4
	movl	%esi, 160(%rsp)                 # 4-byte Spill
	.loc	0 603 4                         # liblzma/lzma/lzma_encoder_optimum_normal.c:603:4
	movl	%eax, %esi
	movq	%rdx, %rax
	subq	%rsi, %rax
	cmpq	$4, %rax
	jae	.LBB0_322
.Ltmp835:
# %bb.265:                              #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pos_state <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur_and_1_price <- $ecx
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_test <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r10d
	#DEBUG_VALUE: state_2 <- $ebx
	#DEBUG_VALUE: pos_state_next <- $r11d
	#DEBUG_VALUE: offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	.loc	0 0 4                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:4
	movq	%rsi, %rbp
	jmp	.LBB0_325
.Ltmp836:
.LBB0_266:                              # %vector.ph448
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- $edi
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- $r9d
	movq	%r9, %r12
.Ltmp837:
	.loc	0 731 3 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:731:3
	movq	%rdx, %r8
	andq	$-4, %r8
	movq	232(%rsp), %rdi                 # 8-byte Reload
.Ltmp838:
	cmpl	%r11d, %edi
	movl	%r11d, %r9d
.Ltmp839:
	#DEBUG_VALUE: helper2:start_len <- $r12d
	cmovbl	%edi, %r9d
	leaq	(%r8,%r10), %rdi
.Ltmp840:
	#DEBUG_VALUE: helper2:len_end <- $r10d
	.loc	0 0 3 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:3
	movq	176(%rsp), %rbx                 # 8-byte Reload
	.loc	0 731 3                         # liblzma/lzma/lzma_encoder_optimum_normal.c:731:3
	cmpl	%ebx, %r9d
	cmovael	%ebx, %r9d
	movl	88(%rsp), %ebx                  # 4-byte Reload
	cmpl	%ebx, %r9d
	cmovael	%ebx, %r9d
	addl	56(%rsp), %r9d                  # 4-byte Folded Reload
	subq	%r10, %r9
	andq	$-4, %r9
	imulq	$44, %r10, %r10
.Ltmp841:
	addq	120(%rsp), %r10                 # 8-byte Folded Reload
.Ltmp842:
	.p2align	4, 0x90
.LBB0_267:                              # %vector.body453
                                        #   Parent Loop BB0_139 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- $r12d
	.loc	0 732 33 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:732:33
	movl	$1073741824, -132(%r10)         # imm = 0x40000000
	movl	$1073741824, -88(%r10)          # imm = 0x40000000
	movl	$1073741824, -44(%r10)          # imm = 0x40000000
	movl	$1073741824, (%r10)             # imm = 0x40000000
	addq	$176, %r10
	addq	$-4, %r9
	jne	.LBB0_267
.Ltmp843:
# %bb.268:                              # %middle.block445
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- $r12d
	.loc	0 731 3                         # liblzma/lzma/lzma_encoder_optimum_normal.c:731:3
	cmpq	%r8, %rdx
	movq	%r12, %r9
	jne	.LBB0_270
.Ltmp844:
# %bb.269:                              #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- $r12d
                                        # kill: def $ecx killed $ecx def $rcx
	.loc	0 0 3 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:3
	movq	%rcx, (%rsp)                    # 8-byte Spill
	movq	24(%rsp), %r10                  # 8-byte Reload
	jmp	.LBB0_278
.Ltmp845:
.LBB0_270:                              # %while.body675.i.preheader
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- $r9d
	.loc	0 731 3                         # liblzma/lzma/lzma_encoder_optimum_normal.c:731:3
	movl	%esi, %r8d
	subl	%edi, %r8d
	movq	%rdi, %rdx
	testb	$3, %r8b
	movq	24(%rsp), %r10                  # 8-byte Reload
	je	.LBB0_274
.Ltmp846:
# %bb.271:                              # %while.body675.i.prol.preheader
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- $r9d
	.loc	0 0 3                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:3
	movq	%r9, %rbx
	.loc	0 731 3                         # liblzma/lzma/lzma_encoder_optimum_normal.c:731:3
	imulq	$44, %rdi, %rdx
	addq	208(%rsp), %rdx                 # 8-byte Folded Reload
	movq	232(%rsp), %r9                  # 8-byte Reload
.Ltmp847:
	cmpl	%r11d, %r9d
	movl	%r11d, %r8d
	cmovbl	%r9d, %r8d
	movq	176(%rsp), %r9                  # 8-byte Reload
	cmpl	%r9d, %r8d
	cmovael	%r9d, %r8d
	movl	88(%rsp), %r9d                  # 4-byte Reload
	cmpl	%r9d, %r8d
	cmovael	%r9d, %r8d
	addb	56(%rsp), %r8b                  # 1-byte Folded Reload
	subb	%dil, %r8b
	movzbl	%r8b, %r8d
	andl	$3, %r8d
	negq	%r8
	xorl	%r9d, %r9d
.Ltmp848:
	#DEBUG_VALUE: helper2:start_len <- $ebx
	.p2align	4, 0x90
.LBB0_272:                              # %while.body675.i.prol
                                        #   Parent Loop BB0_139 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- $ebx
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_LLVM_arg 0, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 1, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $r9, $rdi
	.loc	0 732 33 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:732:33
	movl	$1073741824, (%rdx)             # imm = 0x40000000
	.loc	0 731 3                         # liblzma/lzma/lzma_encoder_optimum_normal.c:731:3
	decq	%r9
.Ltmp849:
	addq	$44, %rdx
	cmpq	%r9, %r8
	jne	.LBB0_272
.Ltmp850:
# %bb.273:                              # %while.body675.i.prol.loopexit.loopexit
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- $ebx
	movq	%rdi, %rdx
	subq	%r9, %rdx
	movq	%rbx, %r9
.Ltmp851:
.LBB0_274:                              # %while.body675.i.prol.loopexit
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- $r9d
	subq	%rsi, %rdi
	cmpq	$-4, %rdi
	ja	.LBB0_277
.Ltmp852:
# %bb.275:                              # %while.body675.i.preheader4
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- $r9d
	.loc	0 0 3 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:3
	movq	232(%rsp), %rdi                 # 8-byte Reload
	.loc	0 731 3                         # liblzma/lzma/lzma_encoder_optimum_normal.c:731:3
	cmpl	%r11d, %edi
	cmovael	%r11d, %edi
	movq	176(%rsp), %rsi                 # 8-byte Reload
	cmpl	%esi, %edi
	cmovael	%esi, %edi
	movl	88(%rsp), %esi                  # 4-byte Reload
	cmpl	%esi, %edi
	cmovael	%esi, %edi
	addl	56(%rsp), %edi                  # 4-byte Folded Reload
	imulq	$44, %rdx, %rsi
	subq	%rdi, %rdx
	addq	120(%rsp), %rsi                 # 8-byte Folded Reload
.Ltmp853:
	.p2align	4, 0x90
.LBB0_276:                              # %while.body675.i
                                        #   Parent Loop BB0_139 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- $r9d
	#DEBUG_VALUE: helper2:len_end <- undef
	.loc	0 732 33 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:732:33
	movl	$1073741824, -132(%rsi)         # imm = 0x40000000
	movl	$1073741824, -88(%rsi)          # imm = 0x40000000
	movl	$1073741824, -44(%rsi)          # imm = 0x40000000
	movl	$1073741824, (%rsi)             # imm = 0x40000000
	.loc	0 731 18                        # liblzma/lzma/lzma_encoder_optimum_normal.c:731:18
	addq	$176, %rsi
	addq	$4, %rdx
	.loc	0 731 3 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:731:3
	jne	.LBB0_276
.Ltmp854:
.LBB0_277:                              #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- $r9d
                                        # kill: def $ecx killed $ecx def $rcx
	.loc	0 0 3                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:3
	movq	%rcx, (%rsp)                    # 8-byte Spill
.Ltmp855:
.LBB0_278:                              # %while.cond683.preheader.i
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- $r9d
	movl	$-1, %edi
.Ltmp856:
	.p2align	4, 0x90
.LBB0_279:                              # %while.cond683.i
                                        #   Parent Loop BB0_139 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- $r9d
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $edi
	.loc	0 735 22 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:735:22
	incl	%edi
.Ltmp857:
	.loc	0 735 20 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:735:20
	cmpl	(%r15,%rdi,8), %r9d
.Ltmp858:
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 2, DW_OP_stack_value] undef
	.loc	0 735 3                         # liblzma/lzma/lzma_encoder_optimum_normal.c:735:3
	ja	.LBB0_279
.Ltmp859:
# %bb.280:                              # %for.cond694.preheader.i
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:start_len <- $r9d
	.loc	0 544 5 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:544:5
	xorl	%ecx, %ecx
	cmpl	$7, %r10d
	setae	%cl
	addl	%eax, 12(%rsp)                  # 4-byte Folded Spill
.Ltmp860:
	#DEBUG_VALUE: helper2:match_price <- undef
	.loc	0 0 5 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:5
	leaq	(%rcx,%rcx,2), %rax
	addq	$7, %rax
.Ltmp861:
	.loc	0 756 28 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:756:28
	incl	%r11d
	movq	%r11, 72(%rsp)                  # 8-byte Spill
	shll	$5, %eax
	addq	240(%rsp), %rax                 # 8-byte Folded Reload
	movq	%rax, 160(%rsp)                 # 8-byte Spill
	movq	%r9, 48(%rsp)                   # 8-byte Spill
.Ltmp862:
	#DEBUG_VALUE: helper2:start_len <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	.loc	0 0 28 is_stmt 0                # liblzma/lzma/lzma_encoder_optimum_normal.c:0:28
	movl	%r9d, %r12d
	jmp	.LBB0_282
.Ltmp863:
	.p2align	4, 0x90
.LBB0_281:                              #   in Loop: Header=BB0_282 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $edi
	#DEBUG_VALUE: len_test <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r9d, $r13d
	#DEBUG_VALUE: cur_and_len_price <- $r8d
	#DEBUG_VALUE: buf_back <- $r15
	movq	40(%rsp), %r15                  # 8-byte Reload
.Ltmp864:
	movl	156(%rsp), %eax                 # 4-byte Reload
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
.Ltmp865:
	.loc	0 813 9 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:813:9
	incl	%edi
.Ltmp866:
	#DEBUG_VALUE: i <- $edi
	.loc	0 813 13 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:813:13
	cmpl	%eax, %edi
	je	.LBB0_138
.Ltmp867:
.LBB0_282:                              # %for.cond694.i.outer
                                        #   Parent Loop BB0_139 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB0_283 Depth 3
                                        #       Child Loop BB0_292 Depth 3
                                        #       Child Loop BB0_296 Depth 3
                                        #       Child Loop BB0_302 Depth 3
                                        #       Child Loop BB0_307 Depth 3
                                        #       Child Loop BB0_311 Depth 3
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	.loc	0 0 13                          # liblzma/lzma/lzma_encoder_optimum_normal.c:0:13
	movl	%r12d, %r13d
	movl	%edi, %edi
	movq	328(%rsp), %rax                 # 8-byte Reload
	.loc	0 738 3 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:738:3
	leal	(%rax,%r13), %r11d
	leal	-2(%r13), %esi
	xorl	%r9d, %r9d
.Ltmp868:
	.p2align	4, 0x90
.LBB0_283:                              # %for.cond694.i
                                        #   Parent Loop BB0_139 Depth=1
                                        #     Parent Loop BB0_282 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	.loc	0 0 0 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:0
	leal	(%r9,%r13), %eax
.Ltmp869:
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: len_test <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r9d, $r13d
	#DEBUG_VALUE: i <- $edi
	.loc	0 739 48 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:739:48
	movl	4(%r15,%rdi,8), %r10d
.Ltmp870:
	#DEBUG_VALUE: cur_back <- undef
	#DEBUG_VALUE: get_pos_len_price:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_pos_len_price:pos <- undef
	#DEBUG_VALUE: get_pos_len_price:len <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r9d, $r13d
	#DEBUG_VALUE: get_pos_len_price:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	.loc	0 119 36                        # liblzma/lzma/lzma_encoder_optimum_normal.c:119:36
	cmpl	$6, %eax
	leal	-2(%r13,%r9), %ebx
	movl	$3, %ecx
	cmovbl	%ebx, %ecx
.Ltmp871:
	#DEBUG_VALUE: get_pos_len_price:len_to_pos_state <- $ecx
	.loc	0 0 36 is_stmt 0                # liblzma/lzma/lzma_encoder_optimum_normal.c:0:36
	movl	%ecx, %edx
.Ltmp872:
	.loc	0 739 48 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:739:48
	cmpq	$127, %r10
.Ltmp873:
	#DEBUG_VALUE: get_pos_len_price:pos_state <- undef
	.loc	0 122 6                         # liblzma/lzma/lzma_encoder_optimum_normal.c:122:6
	ja	.LBB0_285
.Ltmp874:
# %bb.284:                              # %if.then.i1483.i
                                        #   in Loop: Header=BB0_283 Depth=3
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $edi
	#DEBUG_VALUE: len_test <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r9d, $r13d
	#DEBUG_VALUE: get_pos_len_price:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_pos_len_price:len <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r9d, $r13d
	#DEBUG_VALUE: get_pos_len_price:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_pos_len_price:len_to_pos_state <- $ecx
	.loc	0 123 11                        # liblzma/lzma/lzma_encoder_optimum_normal.c:123:11
	shlq	$9, %rdx
	addq	272(%rsp), %rdx                 # 8-byte Folded Reload
	movl	(%rdx,%r10,4), %r8d
.Ltmp875:
	#DEBUG_VALUE: get_pos_len_price:price <- $r8d
	.loc	0 124 2                         # liblzma/lzma/lzma_encoder_optimum_normal.c:124:2
	jmp	.LBB0_286
.Ltmp876:
	.p2align	4, 0x90
.LBB0_285:                              # %if.else.i1475.i
                                        #   in Loop: Header=BB0_283 Depth=3
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $edi
	#DEBUG_VALUE: len_test <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r9d, $r13d
	#DEBUG_VALUE: get_pos_len_price:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_pos_len_price:len <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r9d, $r13d
	#DEBUG_VALUE: get_pos_len_price:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_pos_len_price:len_to_pos_state <- $ecx
	.loc	9 128 6                         # liblzma/lzma/fastpos.h:128:6
	testl	%r10d, %r10d
	movl	$30, %ecx
.Ltmp877:
	#DEBUG_VALUE: get_pos_len_price:len_to_pos_state <- $edx
	movl	$18, %r8d
	cmovnsl	%r8d, %ecx
	movl	$60, %r8d
	movl	$36, %r15d
	cmovnsl	%r15d, %r8d
.Ltmp878:
	.loc	9 128 10 is_stmt 0              # liblzma/lzma/fastpos.h:128:10
	cmpl	$524288, %r10d                  # imm = 0x80000
.Ltmp879:
	.loc	9 0 0                           # liblzma/lzma/fastpos.h:0:0
	movl	$6, %r15d
	cmovbl	%r15d, %ecx
	movl	$12, %r15d
	cmovbl	%r15d, %r8d
	movq	%r10, %r15
                                        # kill: def $cl killed $cl killed $ecx
	shrq	%cl, %r15
	movq	lzma_fastpos@GOTPCREL(%rip), %rcx
	movzbl	(%rcx,%r15), %ecx
	movq	40(%rsp), %r15                  # 8-byte Reload
	addl	%r8d, %ecx
.Ltmp880:
	#DEBUG_VALUE: pos_slot <- undef
	.loc	0 126 11 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:126:11
	shlq	$8, %rdx
.Ltmp881:
	addq	280(%rsp), %rdx                 # 8-byte Folded Reload
	.loc	0 127 31                        # liblzma/lzma/lzma_encoder_optimum_normal.c:127:31
	movl	%r10d, %r8d
	andl	$15, %r8d
	.loc	0 127 7 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:127:7
	movl	69272(%r14,%r8,4), %r8d
	.loc	0 127 5                         # liblzma/lzma/lzma_encoder_optimum_normal.c:127:5
	addl	(%rdx,%rcx,4), %r8d
.Ltmp882:
	#DEBUG_VALUE: get_pos_len_price:price <- $r8d
	#DEBUG_VALUE: get_pos_slot_2:pos <- undef
.LBB0_286:                              # %get_pos_len_price.exit.i248
                                        #   in Loop: Header=BB0_283 Depth=3
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $edi
	#DEBUG_VALUE: len_test <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r9d, $r13d
	#DEBUG_VALUE: get_pos_len_price:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_pos_len_price:len <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r9d, $r13d
	#DEBUG_VALUE: get_pos_len_price:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_pos_len_price:price <- $r8d
	.loc	0 729 5 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:729:5
	addl	12(%rsp), %r8d                  # 4-byte Folded Reload
.Ltmp883:
	.loc	0 0 0 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:0
	leal	(%rsi,%r9), %ecx
.Ltmp884:
	#DEBUG_VALUE: get_pos_len_price:price <- undef
	#DEBUG_VALUE: get_len_price:lencoder <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 29184, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: get_len_price:len <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r9d, $r13d
	.loc	0 63 9 is_stmt 1                # liblzma/lzma/lzma_encoder_optimum_normal.c:63:9
	movl	%ecx, %ecx
	movq	288(%rsp), %rdx                 # 8-byte Reload
	movq	168(%rsp), %r12                 # 8-byte Reload
	addq	%r12, %rdx
.Ltmp885:
	#DEBUG_VALUE: get_pos_len_price:price <- undef
	.loc	0 741 6                         # liblzma/lzma/lzma_encoder_optimum_normal.c:741:6
	addl	(%rdx,%rcx,4), %r8d
.Ltmp886:
	#DEBUG_VALUE: cur_and_len_price <- $r8d
	.loc	0 744 28                        # liblzma/lzma/lzma_encoder_optimum_normal.c:744:28
	leal	(%r11,%r9), %ecx
	incl	%ecx
	imulq	$44, %rcx, %rcx
	.loc	0 744 26 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:744:26
	cmpl	16(%rbp,%rcx), %r8d
.Ltmp887:
	#DEBUG_VALUE: get_len_price:pos_state <- undef
	.loc	0 744 8                         # liblzma/lzma/lzma_encoder_optimum_normal.c:744:8
	jae	.LBB0_288
.Ltmp888:
# %bb.287:                              # %if.then708.i
                                        #   in Loop: Header=BB0_283 Depth=3
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $edi
	#DEBUG_VALUE: len_test <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r9d, $r13d
	#DEBUG_VALUE: cur_and_len_price <- $r8d
	.loc	0 0 8                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:8
	addq	%rbp, %rcx
.Ltmp889:
	.loc	0 745 39 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:745:39
	movl	%r8d, 16(%rcx)
	movq	32(%rsp), %rdx                  # 8-byte Reload
	.loc	0 746 42                        # liblzma/lzma/lzma_encoder_optimum_normal.c:746:42
	movl	%edx, 20(%rcx)
	.loc	0 748 18                        # liblzma/lzma/lzma_encoder_optimum_normal.c:748:18
	leal	4(%r10), %edx
	.loc	0 748 7 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:748:7
	movl	%edx, 24(%rcx)
	.loc	0 749 51 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:749:51
	movb	$0, 4(%rcx)
.Ltmp890:
.LBB0_288:                              # %if.end730.i
                                        #   in Loop: Header=BB0_283 Depth=3
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $edi
	#DEBUG_VALUE: len_test <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r9d, $r13d
	#DEBUG_VALUE: cur_and_len_price <- $r8d
	.loc	0 752 17                        # liblzma/lzma/lzma_encoder_optimum_normal.c:752:17
	addl	$2, %ebx
	cmpl	(%r15,%rdi,8), %ebx
.Ltmp891:
	.loc	0 752 8 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:752:8
	je	.LBB0_290
.Ltmp892:
# %bb.289:                              # %if.end730.for.inc906_crit_edge.i
                                        #   in Loop: Header=BB0_283 Depth=3
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $edi
	#DEBUG_VALUE: len_test <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r9d, $r13d
	#DEBUG_VALUE: cur_and_len_price <- $r8d
	incl	%r9d
.Ltmp893:
	jmp	.LBB0_283
.Ltmp894:
	.p2align	4, 0x90
.LBB0_290:                              # %if.then737.i
                                        #   in Loop: Header=BB0_282 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $edi
	#DEBUG_VALUE: len_test <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r9d, $r13d
	#DEBUG_VALUE: cur_and_len_price <- $r8d
	.loc	0 0 8                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:8
	movq	48(%rsp), %rcx                  # 8-byte Reload
	addl	%r9d, %ecx
	incl	%ecx
	movq	%rcx, 48(%rsp)                  # 8-byte Spill
	movq	264(%rsp), %r15                 # 8-byte Reload
.Ltmp895:
	.loc	0 754 52 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:754:52
	subq	%r10, %r15
.Ltmp896:
	#DEBUG_VALUE: buf_back <- $r15
	#DEBUG_VALUE: len_test_2 <- undef
	.loc	0 756 28                        # liblzma/lzma/lzma_encoder_optimum_normal.c:756:28
	leal	(%r9,%r13), %r12d
	incl	%r12d
	movq	72(%rsp), %rcx                  # 8-byte Reload
	addl	%eax, %ecx
	movl	192(%rsp), %edx                 # 4-byte Reload
	cmpl	%edx, %ecx
	cmovael	%edx, %ecx
.Ltmp897:
	#DEBUG_VALUE: limit <- $ecx
	.loc	0 0 28 is_stmt 0                # liblzma/lzma/lzma_encoder_optimum_normal.c:0:28
	movl	%r12d, %ebx
.Ltmp898:
	.loc	0 759 23 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:759:23
	cmpl	%ecx, %r12d
	movq	80(%rsp), %rsi                  # 8-byte Reload
	.loc	0 759 31 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:759:31
	jae	.LBB0_294
.Ltmp899:
# %bb.291:                              # %land.rhs757.preheader.i
                                        #   in Loop: Header=BB0_282 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $edi
	#DEBUG_VALUE: len_test <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r9d, $r13d
	#DEBUG_VALUE: cur_and_len_price <- $r8d
	#DEBUG_VALUE: buf_back <- $r15
	#DEBUG_VALUE: limit <- $ecx
	.loc	0 759 5                         # liblzma/lzma/lzma_encoder_optimum_normal.c:759:5
	movl	%ecx, %ecx
.Ltmp900:
	.loc	0 0 5                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:5
	movq	48(%rsp), %rbx                  # 8-byte Reload
.Ltmp901:
	.p2align	4, 0x90
.LBB0_292:                              # %land.rhs757.i
                                        #   Parent Loop BB0_139 Depth=1
                                        #     Parent Loop BB0_282 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $edi
	#DEBUG_VALUE: len_test <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r9d, $r13d
	#DEBUG_VALUE: cur_and_len_price <- $r8d
	#DEBUG_VALUE: buf_back <- $r15
	#DEBUG_VALUE: limit <- $ecx
	#DEBUG_VALUE: len_test_2 <- $rbx
	.loc	0 760 7 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:760:7
	movzbl	(%rsi,%rbx), %edx
	.loc	0 760 23 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:760:23
	cmpb	(%r15,%rbx), %dl
.Ltmp902:
	.loc	0 759 5 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:759:5
	jne	.LBB0_294
.Ltmp903:
# %bb.293:                              # %for.inc768.i
                                        #   in Loop: Header=BB0_292 Depth=3
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $edi
	#DEBUG_VALUE: len_test <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r9d, $r13d
	#DEBUG_VALUE: cur_and_len_price <- $r8d
	#DEBUG_VALUE: buf_back <- $r15
	#DEBUG_VALUE: len_test_2 <- $rbx
	#DEBUG_VALUE: limit <- $ecx
	.loc	0 761 7                         # liblzma/lzma/lzma_encoder_optimum_normal.c:761:7
	incq	%rbx
.Ltmp904:
	#DEBUG_VALUE: len_test_2 <- $rbx
	.loc	0 759 23                        # liblzma/lzma/lzma_encoder_optimum_normal.c:759:23
	cmpq	%rcx, %rbx
	.loc	0 759 31 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:759:31
	jb	.LBB0_292
.Ltmp905:
.LBB0_294:                              # %for.end770.i
                                        #   in Loop: Header=BB0_282 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $edi
	#DEBUG_VALUE: len_test <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r9d, $r13d
	#DEBUG_VALUE: cur_and_len_price <- $r8d
	#DEBUG_VALUE: buf_back <- $r15
	#DEBUG_VALUE: limit <- $ecx
	#DEBUG_VALUE: len_test_2 <- undef
	.loc	0 765 20 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:765:20
	movl	%r13d, %ecx
.Ltmp906:
	notl	%ecx
	addl	%ebx, %ecx
	subl	%r9d, %ecx
	cmpl	$2, %ecx
.Ltmp907:
	.loc	0 765 9 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:765:9
	jb	.LBB0_281
.Ltmp908:
# %bb.295:                              # %if.then775.i
                                        #   in Loop: Header=BB0_282 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $edi
	#DEBUG_VALUE: len_test <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r9d, $r13d
	#DEBUG_VALUE: cur_and_len_price <- $r8d
	#DEBUG_VALUE: buf_back <- $r15
	#DEBUG_VALUE: state_2 <- undef
	.loc	0 0 9                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:9
	movq	%rcx, 24(%rsp)                  # 8-byte Spill
	movl	%r12d, 128(%rsp)                # 4-byte Spill
	movq	312(%rsp), %rcx                 # 8-byte Reload
.Ltmp909:
	.loc	0 769 32 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:769:32
	leal	(%rax,%rcx), %edx
	movl	%edx, %r12d
	andl	92(%rsp), %r12d                 # 4-byte Folded Reload
.Ltmp910:
	#DEBUG_VALUE: pos_state_next <- $r12d
	.loc	0 0 32 is_stmt 0                # liblzma/lzma/lzma_encoder_optimum_normal.c:0:32
	movq	160(%rsp), %rcx                 # 8-byte Reload
	movq	%r12, 16(%rsp)                  # 8-byte Spill
.Ltmp911:
	#DEBUG_VALUE: pos_state_next <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	.loc	0 773 9 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:773:9
	movzwl	(%rcx,%r12,2), %ecx
.Ltmp912:
	#DEBUG_VALUE: rc_bit_0_price:prob <- undef
	.loc	8 39 29                         # liblzma/rangecoder/price.h:39:29
	shrl	$4, %ecx
	movq	lzma_rc_prices@GOTPCREL(%rip), %r12
	.loc	8 39 9 is_stmt 0                # liblzma/rangecoder/price.h:39:9
	movzbl	(%r12,%rcx), %ecx
	movl	%ecx, 184(%rsp)                 # 4-byte Spill
.Ltmp913:
	.loc	0 776 9 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:776:9
	leal	(%r9,%r13), %ecx
	decl	%ecx
	movzbl	(%rsi,%rcx), %ebp
.Ltmp914:
	#DEBUG_VALUE: get_literal_price:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:pos <- undef
	#DEBUG_VALUE: get_literal_price:match_mode <- [DW_OP_stack_value] 1
	#DEBUG_VALUE: get_literal_price:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:symbol <- undef
	#DEBUG_VALUE: get_literal_price:match_byte <- undef
	#DEBUG_VALUE: get_literal_price:prev_byte <- $ebp
	.loc	0 26 38                         # liblzma/lzma/lzma_encoder_optimum_normal.c:26:38
	andl	228(%rsp), %edx                 # 4-byte Folded Reload
	movzbl	2964(%r14), %ecx
	shll	%cl, %edx
	movq	%rsi, %r14
	movq	%r12, %rsi
.Ltmp915:
	.loc	0 778 9                         # liblzma/lzma/lzma_encoder_optimum_normal.c:778:9
	movl	%eax, %r12d
	movzbl	(%r15,%r12), %r15d
.Ltmp916:
	#DEBUG_VALUE: get_literal_price:match_byte <- $r15d
	.loc	0 26 38                         # liblzma/lzma/lzma_encoder_optimum_normal.c:26:38
	movb	$8, %al
	subb	%cl, %al
	movl	%eax, %ecx
	shrl	%cl, %ebp
.Ltmp917:
	.loc	0 779 9                         # liblzma/lzma/lzma_encoder_optimum_normal.c:779:9
	movzbl	(%r14,%r12), %r14d
.Ltmp918:
	#DEBUG_VALUE: get_literal_price:symbol <- $r14d
	.loc	0 26 38                         # liblzma/lzma/lzma_encoder_optimum_normal.c:26:38
	addl	%edx, %ebp
	leaq	(,%rbp,2), %rdx
	addq	%rbp, %rdx
	shlq	$9, %rdx
	addq	320(%rsp), %rdx                 # 8-byte Folded Reload
.Ltmp919:
	#DEBUG_VALUE: get_literal_price:subcoder <- $rdx
	#DEBUG_VALUE: get_literal_price:price <- 0
	.loc	0 0 0 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:0
	orl	$256, %r14d                     # imm = 0x100
.Ltmp920:
	xorl	%eax, %eax
	movl	$256, %ebp                      # imm = 0x100
.Ltmp921:
	.p2align	4, 0x90
.LBB0_296:                              # %do.body.i1499.i
                                        #   Parent Loop BB0_139 Depth=1
                                        #     Parent Loop BB0_282 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $edi
	#DEBUG_VALUE: len_test <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r9d, $r13d
	#DEBUG_VALUE: cur_and_len_price <- $r8d
	#DEBUG_VALUE: pos_state_next <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:match_mode <- [DW_OP_stack_value] 1
	#DEBUG_VALUE: get_literal_price:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:match_byte <- $r15d
	#DEBUG_VALUE: get_literal_price:subcoder <- $rdx
	#DEBUG_VALUE: get_literal_price:match_byte <- $r15d
	#DEBUG_VALUE: get_literal_price:symbol <- $r14d
	#DEBUG_VALUE: get_literal_price:price <- $eax
	#DEBUG_VALUE: offset <- $ebp
	.loc	0 39 15 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:39:15
	addl	%r15d, %r15d
.Ltmp922:
	#DEBUG_VALUE: get_literal_price:match_byte <- $r15d
	.loc	0 41 42                         # liblzma/lzma/lzma_encoder_optimum_normal.c:41:42
	movl	%r15d, %r12d
	andl	%ebp, %r12d
.Ltmp923:
	#DEBUG_VALUE: match_bit <- $r12d
	.loc	0 43 37                         # liblzma/lzma/lzma_encoder_optimum_normal.c:43:37
	movl	%r14d, %ecx
	shrl	$8, %ecx
	.loc	0 43 15 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:43:15
	addl	%ebp, %ecx
	.loc	0 43 27                         # liblzma/lzma/lzma_encoder_optimum_normal.c:43:27
	addl	%r12d, %ecx
.Ltmp924:
	#DEBUG_VALUE: subcoder_index <- $ecx
	#DEBUG_VALUE: bit <- [DW_OP_constu 7, DW_OP_shr, DW_OP_constu 1, DW_OP_and, DW_OP_stack_value] $r14d
	.loc	0 45 26 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:45:26
	movzwl	(%rdx,%rcx,2), %ecx
.Ltmp925:
	#DEBUG_VALUE: rc_bit_price:prob <- undef
	#DEBUG_VALUE: rc_bit_price:bit <- [DW_OP_constu 7, DW_OP_shr, DW_OP_constu 1, DW_OP_and, DW_OP_stack_value] $r14d
	.loc	8 32 4                          # liblzma/rangecoder/price.h:32:4
	movsbl	%r14b, %r12d
.Ltmp926:
	shrl	$7, %r12d
	.loc	8 31 30                         # liblzma/rangecoder/price.h:31:30
	andl	$2032, %r12d                    # imm = 0x7F0
	xorl	%ecx, %r12d
	.loc	8 32 33                         # liblzma/rangecoder/price.h:32:33
	shrl	$4, %r12d
	.loc	8 31 9                          # liblzma/rangecoder/price.h:31:9
	movzbl	(%rsi,%r12), %ecx
.Ltmp927:
	.loc	0 45 10                         # liblzma/lzma/lzma_encoder_optimum_normal.c:45:10
	addl	%ecx, %eax
.Ltmp928:
	#DEBUG_VALUE: get_literal_price:price <- $eax
	.loc	0 47 11                         # liblzma/lzma/lzma_encoder_optimum_normal.c:47:11
	leal	(%r14,%r14), %ecx
.Ltmp929:
	#DEBUG_VALUE: get_literal_price:symbol <- $ecx
	.loc	0 48 14                         # liblzma/lzma/lzma_encoder_optimum_normal.c:48:14
	movl	%ecx, %r12d
	xorl	%r15d, %r12d
	notl	%r12d
	.loc	0 48 11 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:48:11
	andl	%r12d, %ebp
.Ltmp930:
	#DEBUG_VALUE: offset <- $ebp
	.loc	0 50 19 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:50:19
	cmpl	$32768, %r14d                   # imm = 0x8000
	movl	%ecx, %r14d
.Ltmp931:
	#DEBUG_VALUE: get_literal_price:symbol <- $r14d
	.loc	0 50 3 is_stmt 0                # liblzma/lzma/lzma_encoder_optimum_normal.c:50:3
	jb	.LBB0_296
.Ltmp932:
# %bb.297:                              # %get_literal_price.exit1525.i
                                        #   in Loop: Header=BB0_282 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $edi
	#DEBUG_VALUE: len_test <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r9d, $r13d
	#DEBUG_VALUE: cur_and_len_price <- $r8d
	#DEBUG_VALUE: pos_state_next <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:match_mode <- [DW_OP_stack_value] 1
	#DEBUG_VALUE: get_literal_price:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_literal_price:symbol <- $r14d
	#DEBUG_VALUE: get_literal_price:match_byte <- $r15d
	#DEBUG_VALUE: get_literal_price:subcoder <- $rdx
	#DEBUG_VALUE: get_literal_price:price <- $eax
	#DEBUG_VALUE: get_literal_price:price <- $eax
	#DEBUG_VALUE: cur_and_len_literal_price <- undef
	#DEBUG_VALUE: state_2 <- 4
	.loc	0 0 3                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:3
	movq	16(%rsp), %rdx                  # 8-byte Reload
	.loc	0 782 39 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:782:39
	incl	%edx
	.loc	0 782 44 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:782:44
	andl	92(%rsp), %edx                  # 4-byte Folded Reload
.Ltmp933:
	#DEBUG_VALUE: pos_state_next <- $edx
	.loc	0 0 44                          # liblzma/lzma/lzma_encoder_optimum_normal.c:0:44
	movq	136(%rsp), %r14                 # 8-byte Reload
	.loc	0 787 9 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:787:9
	movzwl	27676(%r14,%rdx,2), %ecx
.Ltmp934:
	#DEBUG_VALUE: rc_bit_1_price:prob <- undef
	.loc	8 47 4                          # liblzma/rangecoder/price.h:47:4
	shrl	$4, %ecx
	xorq	$127, %rcx
	.loc	8 46 9                          # liblzma/rangecoder/price.h:46:9
	movzbl	(%rsi,%rcx), %ecx
	movl	%ecx, 152(%rsp)                 # 4-byte Spill
.Ltmp935:
	.loc	0 788 25                        # liblzma/lzma/lzma_encoder_optimum_normal.c:788:25
	movzwl	27940(%r14), %ecx
.Ltmp936:
	#DEBUG_VALUE: rc_bit_1_price:prob <- undef
	.loc	8 47 4                          # liblzma/rangecoder/price.h:47:4
	shrl	$4, %ecx
	xorq	$127, %rcx
	.loc	8 46 9                          # liblzma/rangecoder/price.h:46:9
	movzbl	(%rsi,%rcx), %ecx
.Ltmp937:
	#DEBUG_VALUE: next_rep_match_price <- undef
	.loc	8 0 9 is_stmt 0                 # liblzma/rangecoder/price.h:0:9
	movl	%ecx, 148(%rsp)                 # 4-byte Spill
.Ltmp938:
	.loc	0 791 49 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:791:49
	leal	(%r11,%r9), %ecx
	movq	24(%rsp), %r15                  # 8-byte Reload
	leal	(%r15,%rcx), %r12d
	addl	$2, %r12d
.Ltmp939:
	#DEBUG_VALUE: offset <- $r12d
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	.loc	0 0 49 is_stmt 0                # liblzma/lzma/lzma_encoder_optimum_normal.c:0:49
	movl	%r12d, %r15d
	#DEBUG_VALUE: get_literal_price:match_byte <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	movq	(%rsp), %rcx                    # 8-byte Reload
	.loc	0 793 21 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:793:21
	cmpl	%r12d, %ecx
	movq	64(%rsp), %rbp                  # 8-byte Reload
	movq	%r15, 24(%rsp)                  # 8-byte Spill
	#DEBUG_VALUE: get_literal_price:match_byte <- undef
	.loc	0 793 6 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:793:6
	jae	.LBB0_300
.Ltmp940:
# %bb.298:                              # %while.body842.preheader.i
                                        #   in Loop: Header=BB0_282 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $edi
	#DEBUG_VALUE: len_test <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r9d, $r13d
	#DEBUG_VALUE: cur_and_len_price <- $r8d
	#DEBUG_VALUE: state_2 <- 4
	#DEBUG_VALUE: pos_state_next <- $edx
	#DEBUG_VALUE: offset <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	.loc	0 0 6                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:6
	movq	%rdx, 16(%rsp)                  # 8-byte Spill
.Ltmp941:
	#DEBUG_VALUE: pos_state_next <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	.loc	0 793 6                         # liblzma/lzma/lzma_encoder_optimum_normal.c:793:6
	movl	%ecx, %esi
	movq	%r15, %rdx
	subq	%rsi, %rdx
	cmpq	$4, %rdx
	jae	.LBB0_301
.Ltmp942:
# %bb.299:                              #   in Loop: Header=BB0_282 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $edi
	#DEBUG_VALUE: len_test <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r9d, $r13d
	#DEBUG_VALUE: cur_and_len_price <- $r8d
	#DEBUG_VALUE: state_2 <- 4
	#DEBUG_VALUE: pos_state_next <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: offset <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	.loc	0 0 6                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:6
	movq	%rsi, %rcx
	jmp	.LBB0_305
.Ltmp943:
	.p2align	4, 0x90
.LBB0_300:                              # %get_literal_price.exit1525.while.end848_crit_edge.i
                                        #   in Loop: Header=BB0_282 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $edi
	#DEBUG_VALUE: len_test <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r9d, $r13d
	#DEBUG_VALUE: cur_and_len_price <- $r8d
	#DEBUG_VALUE: state_2 <- 4
	#DEBUG_VALUE: pos_state_next <- $edx
	#DEBUG_VALUE: offset <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	movq	40(%rsp), %r15                  # 8-byte Reload
	.loc	0 793 6                         # liblzma/lzma/lzma_encoder_optimum_normal.c:793:6
	jmp	.LBB0_314
.Ltmp944:
.LBB0_301:                              # %vector.ph435
                                        #   in Loop: Header=BB0_282 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $edi
	#DEBUG_VALUE: len_test <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r9d, $r13d
	#DEBUG_VALUE: cur_and_len_price <- $r8d
	#DEBUG_VALUE: state_2 <- 4
	#DEBUG_VALUE: pos_state_next <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: offset <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	movq	%rdx, %r15
	andq	$-4, %r15
	leaq	(%r15,%rsi), %rcx
	movq	56(%rsp), %rbp                  # 8-byte Reload
	addl	%ebx, %ebp
	subq	%rsi, %rbp
	andq	$-4, %rbp
	imulq	$44, %rsi, %rsi
	addq	120(%rsp), %rsi                 # 8-byte Folded Reload
.Ltmp945:
	.p2align	4, 0x90
.LBB0_302:                              # %vector.body440
                                        #   Parent Loop BB0_139 Depth=1
                                        #     Parent Loop BB0_282 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $edi
	#DEBUG_VALUE: len_test <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r9d, $r13d
	#DEBUG_VALUE: cur_and_len_price <- $r8d
	#DEBUG_VALUE: state_2 <- 4
	#DEBUG_VALUE: pos_state_next <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: offset <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	.loc	0 794 36 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:794:36
	movl	$1073741824, -132(%rsi)         # imm = 0x40000000
	movl	$1073741824, -88(%rsi)          # imm = 0x40000000
	movl	$1073741824, -44(%rsi)          # imm = 0x40000000
	movl	$1073741824, (%rsi)             # imm = 0x40000000
	addq	$176, %rsi
	addq	$-4, %rbp
	jne	.LBB0_302
.Ltmp946:
# %bb.303:                              # %middle.block432
                                        #   in Loop: Header=BB0_282 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $edi
	#DEBUG_VALUE: len_test <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r9d, $r13d
	#DEBUG_VALUE: cur_and_len_price <- $r8d
	#DEBUG_VALUE: state_2 <- 4
	#DEBUG_VALUE: pos_state_next <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: offset <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	.loc	0 793 6                         # liblzma/lzma/lzma_encoder_optimum_normal.c:793:6
	cmpq	%r15, %rdx
	movq	64(%rsp), %rbp                  # 8-byte Reload
	movq	24(%rsp), %r15                  # 8-byte Reload
	jne	.LBB0_305
.Ltmp947:
# %bb.304:                              #   in Loop: Header=BB0_282 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $edi
	#DEBUG_VALUE: len_test <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r9d, $r13d
	#DEBUG_VALUE: cur_and_len_price <- $r8d
	#DEBUG_VALUE: state_2 <- 4
	#DEBUG_VALUE: pos_state_next <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: offset <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	.loc	0 0 6 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:6
	movl	%r12d, %ecx
	movq	%rcx, (%rsp)                    # 8-byte Spill
.Ltmp948:
	#DEBUG_VALUE: helper2:len_end <- undef
	movq	40(%rsp), %r15                  # 8-byte Reload
	jmp	.LBB0_313
.Ltmp949:
.LBB0_305:                              # %while.body842.i.preheader
                                        #   in Loop: Header=BB0_282 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $edi
	#DEBUG_VALUE: len_test <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r9d, $r13d
	#DEBUG_VALUE: cur_and_len_price <- $r8d
	#DEBUG_VALUE: state_2 <- 4
	#DEBUG_VALUE: pos_state_next <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: offset <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	.loc	0 793 6                         # liblzma/lzma/lzma_encoder_optimum_normal.c:793:6
	movl	%r15d, %edx
	subl	%ecx, %edx
	movq	%rcx, %rsi
	testb	$3, %dl
	je	.LBB0_309
.Ltmp950:
# %bb.306:                              # %while.body842.i.prol.preheader
                                        #   in Loop: Header=BB0_282 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $edi
	#DEBUG_VALUE: len_test <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r9d, $r13d
	#DEBUG_VALUE: cur_and_len_price <- $r8d
	#DEBUG_VALUE: state_2 <- 4
	#DEBUG_VALUE: pos_state_next <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: offset <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	imulq	$44, %rcx, %rdx
	addq	208(%rsp), %rdx                 # 8-byte Folded Reload
	movq	56(%rsp), %rsi                  # 8-byte Reload
	addl	%ebx, %esi
	subb	%cl, %sil
	movzbl	%sil, %r15d
	andl	$3, %r15d
	negq	%r15
	xorl	%ebp, %ebp
.Ltmp951:
	.p2align	4, 0x90
.LBB0_307:                              # %while.body842.i.prol
                                        #   Parent Loop BB0_139 Depth=1
                                        #     Parent Loop BB0_282 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $edi
	#DEBUG_VALUE: len_test <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r9d, $r13d
	#DEBUG_VALUE: cur_and_len_price <- $r8d
	#DEBUG_VALUE: state_2 <- 4
	#DEBUG_VALUE: pos_state_next <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: offset <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_LLVM_arg 0, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 1, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rbp, $rcx
	.loc	0 794 36 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:794:36
	movl	$1073741824, (%rdx)             # imm = 0x40000000
	.loc	0 793 6                         # liblzma/lzma/lzma_encoder_optimum_normal.c:793:6
	decq	%rbp
.Ltmp952:
	addq	$44, %rdx
	cmpq	%rbp, %r15
	jne	.LBB0_307
.Ltmp953:
# %bb.308:                              # %while.body842.i.prol.loopexit.loopexit
                                        #   in Loop: Header=BB0_282 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $edi
	#DEBUG_VALUE: len_test <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r9d, $r13d
	#DEBUG_VALUE: cur_and_len_price <- $r8d
	#DEBUG_VALUE: state_2 <- 4
	#DEBUG_VALUE: pos_state_next <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: offset <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	movq	%rcx, %rsi
	subq	%rbp, %rsi
	movq	64(%rsp), %rbp                  # 8-byte Reload
	movq	24(%rsp), %r15                  # 8-byte Reload
.Ltmp954:
.LBB0_309:                              # %while.body842.i.prol.loopexit
                                        #   in Loop: Header=BB0_282 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $edi
	#DEBUG_VALUE: len_test <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r9d, $r13d
	#DEBUG_VALUE: cur_and_len_price <- $r8d
	#DEBUG_VALUE: state_2 <- 4
	#DEBUG_VALUE: pos_state_next <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: offset <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	subq	%r15, %rcx
	cmpq	$-4, %rcx
	movq	40(%rsp), %r15                  # 8-byte Reload
	ja	.LBB0_312
.Ltmp955:
# %bb.310:                              # %while.body842.i.preheader1
                                        #   in Loop: Header=BB0_282 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $edi
	#DEBUG_VALUE: len_test <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r9d, $r13d
	#DEBUG_VALUE: cur_and_len_price <- $r8d
	#DEBUG_VALUE: state_2 <- 4
	#DEBUG_VALUE: pos_state_next <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: offset <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	.loc	0 0 6 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:6
	movq	56(%rsp), %rcx                  # 8-byte Reload
	.loc	0 793 6                         # liblzma/lzma/lzma_encoder_optimum_normal.c:793:6
	leal	(%rcx,%rbx), %edx
	subq	%rsi, %rdx
	imulq	$44, %rsi, %rcx
	addq	120(%rsp), %rcx                 # 8-byte Folded Reload
.Ltmp956:
	.p2align	4, 0x90
.LBB0_311:                              # %while.body842.i
                                        #   Parent Loop BB0_139 Depth=1
                                        #     Parent Loop BB0_282 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $edi
	#DEBUG_VALUE: len_test <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r9d, $r13d
	#DEBUG_VALUE: cur_and_len_price <- $r8d
	#DEBUG_VALUE: state_2 <- 4
	#DEBUG_VALUE: pos_state_next <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: offset <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- undef
	.loc	0 794 36 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:794:36
	movl	$1073741824, -132(%rcx)         # imm = 0x40000000
	movl	$1073741824, -88(%rcx)          # imm = 0x40000000
	movl	$1073741824, -44(%rcx)          # imm = 0x40000000
	movl	$1073741824, (%rcx)             # imm = 0x40000000
	.loc	0 793 21                        # liblzma/lzma/lzma_encoder_optimum_normal.c:793:21
	addq	$176, %rcx
	addq	$-4, %rdx
	.loc	0 793 6 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:793:6
	jne	.LBB0_311
.Ltmp957:
.LBB0_312:                              #   in Loop: Header=BB0_282 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $edi
	#DEBUG_VALUE: len_test <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r9d, $r13d
	#DEBUG_VALUE: cur_and_len_price <- $r8d
	#DEBUG_VALUE: state_2 <- 4
	#DEBUG_VALUE: pos_state_next <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: offset <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	.loc	0 0 6                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:6
	movl	%r12d, %ecx
	movq	%rcx, (%rsp)                    # 8-byte Spill
.Ltmp958:
.LBB0_313:                              # %while.end848.i
                                        #   in Loop: Header=BB0_282 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $edi
	#DEBUG_VALUE: len_test <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r9d, $r13d
	#DEBUG_VALUE: cur_and_len_price <- $r8d
	#DEBUG_VALUE: state_2 <- 4
	#DEBUG_VALUE: pos_state_next <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: offset <- [DW_OP_deref] $rsp
	movq	lzma_rc_prices@GOTPCREL(%rip), %rsi
	movq	16(%rsp), %rdx                  # 8-byte Reload
.Ltmp959:
.LBB0_314:                              # %while.end848.i
                                        #   in Loop: Header=BB0_282 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $edi
	#DEBUG_VALUE: len_test <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r9d, $r13d
	#DEBUG_VALUE: cur_and_len_price <- $r8d
	#DEBUG_VALUE: state_2 <- 4
	#DEBUG_VALUE: pos_state_next <- $edx
	#DEBUG_VALUE: offset <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_rep_price:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_rep_price:rep_index <- 0
	#DEBUG_VALUE: get_rep_price:len <- undef
	#DEBUG_VALUE: get_rep_price:state <- 4
	#DEBUG_VALUE: get_rep_price:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_len_price:lencoder <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 47688, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: get_len_price:len <- undef
	.loc	0 63 9 is_stmt 1                # liblzma/lzma/lzma_encoder_optimum_normal.c:63:9
	subl	%r13d, %ebx
	subl	%r9d, %ebx
	addl	$-3, %ebx
	imulq	$1088, %rdx, %rcx               # imm = 0x440
	addq	256(%rsp), %rcx                 # 8-byte Folded Reload
.Ltmp960:
	#DEBUG_VALUE: get_pure_rep_price:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_pure_rep_price:rep_index <- 0
	#DEBUG_VALUE: get_pure_rep_price:state <- 4
	#DEBUG_VALUE: get_pure_rep_price:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	.loc	0 0 9 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:9
	movq	%rdx, %r13
.Ltmp961:
	movzwl	27964(%r14), %edx
.Ltmp962:
	#DEBUG_VALUE: pos_state_next <- $r13d
	shrl	$4, %edx
.Ltmp963:
	#DEBUG_VALUE: rc_bit_0_price:prob <- undef
	.loc	8 39 9 is_stmt 1                # liblzma/rangecoder/price.h:39:9
	movzbl	(%rsi,%rdx), %edx
.Ltmp964:
	#DEBUG_VALUE: get_pure_rep_price:price <- $edx
	.loc	8 0 9 is_stmt 0                 # liblzma/rangecoder/price.h:0:9
	movq	%rsi, %r12
.Ltmp965:
	.loc	0 86 27 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:86:27
	movzwl	28156(%r14,%r13,2), %esi
.Ltmp966:
	#DEBUG_VALUE: rc_bit_1_price:prob <- undef
	.loc	8 47 4                          # liblzma/rangecoder/price.h:47:4
	shrl	$4, %esi
	xorq	$127, %rsi
	.loc	8 46 9                          # liblzma/rangecoder/price.h:46:9
	movzbl	(%r12,%rsi), %esi
.Ltmp967:
	#DEBUG_VALUE: get_pure_rep_price:price <- undef
	.loc	0 86 9                          # liblzma/lzma/lzma_encoder_optimum_normal.c:86:9
	addl	184(%rsp), %r8d                 # 4-byte Folded Reload
.Ltmp968:
	.loc	0 110 3                         # liblzma/lzma/lzma_encoder_optimum_normal.c:110:3
	addl	%eax, %r8d
.Ltmp969:
	.loc	0 772 8                         # liblzma/lzma/lzma_encoder_optimum_normal.c:772:8
	addl	152(%rsp), %r8d                 # 4-byte Folded Reload
	.loc	0 774 8                         # liblzma/lzma/lzma_encoder_optimum_normal.c:774:8
	addl	148(%rsp), %r8d                 # 4-byte Folded Reload
	.loc	0 786 8                         # liblzma/lzma/lzma_encoder_optimum_normal.c:786:8
	addl	(%rcx,%rbx,4), %r8d
	.loc	0 788 8                         # liblzma/lzma/lzma_encoder_optimum_normal.c:788:8
	addl	%edx, %r8d
	.loc	0 797 8                         # liblzma/lzma/lzma_encoder_optimum_normal.c:797:8
	addl	%esi, %r8d
.Ltmp970:
	#DEBUG_VALUE: cur_and_len_price <- $r8d
	.loc	0 800 30                        # liblzma/lzma/lzma_encoder_optimum_normal.c:800:30
	imulq	$44, 24(%rsp), %rax             # 8-byte Folded Reload
	.loc	0 800 28 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:800:28
	cmpl	16(%rbp,%rax), %r8d
.Ltmp971:
	#DEBUG_VALUE: get_rep_price:pos_state <- undef
	#DEBUG_VALUE: get_len_price:pos_state <- undef
	#DEBUG_VALUE: get_pure_rep_price:pos_state <- undef
	.loc	0 800 10                        # liblzma/lzma/lzma_encoder_optimum_normal.c:800:10
	jae	.LBB0_316
.Ltmp972:
# %bb.315:                              # %if.then857.i
                                        #   in Loop: Header=BB0_282 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $edi
	#DEBUG_VALUE: cur_and_len_price <- $r8d
	#DEBUG_VALUE: state_2 <- 4
	#DEBUG_VALUE: pos_state_next <- $r13d
	#DEBUG_VALUE: offset <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	.loc	0 0 10                          # liblzma/lzma/lzma_encoder_optimum_normal.c:0:10
	leal	(%r9,%r11), %ecx
	addl	$2, %ecx
	addq	%rbp, %rax
.Ltmp973:
	.loc	0 801 33 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:801:33
	movl	%r8d, 16(%rax)
	.loc	0 802 36                        # liblzma/lzma/lzma_encoder_optimum_normal.c:802:36
	movl	%ecx, 20(%rax)
	.loc	0 803 37                        # liblzma/lzma/lzma_encoder_optimum_normal.c:803:37
	movl	$0, 24(%rax)
	.loc	0 804 45                        # liblzma/lzma/lzma_encoder_optimum_normal.c:804:45
	movw	$257, 4(%rax)                   # imm = 0x101
	movq	32(%rsp), %rcx                  # 8-byte Reload
	.loc	0 806 38                        # liblzma/lzma/lzma_encoder_optimum_normal.c:806:38
	movl	%ecx, 8(%rax)
	.loc	0 808 20                        # liblzma/lzma/lzma_encoder_optimum_normal.c:808:20
	leal	4(%r10), %ecx
	.loc	0 808 9 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:808:9
	movl	%ecx, 12(%rax)
.Ltmp974:
.LBB0_316:                              # %if.end890.i
                                        #   in Loop: Header=BB0_282 Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $edi
	#DEBUG_VALUE: cur_and_len_price <- $r8d
	.loc	0 0 9                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:9
	movl	156(%rsp), %eax                 # 4-byte Reload
	movl	128(%rsp), %r12d                # 4-byte Reload
.Ltmp975:
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	.loc	0 813 9 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:813:9
	incl	%edi
.Ltmp976:
	#DEBUG_VALUE: i <- undef
	.loc	0 813 13 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:813:13
	cmpl	%eax, %edi
	jne	.LBB0_282
	jmp	.LBB0_138
.Ltmp977:
.LBB0_317:                              # %vector.ph500
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: pos <- $r13d
	.loc	0 518 4 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:518:4
	movq	%rax, %rsi
	andq	$-16, %rsi
	leaq	(%rsi,%rdx), %rcx
	leaq	100(%rsp), %rdi
	leaq	(%rdi,%rdx,4), %rdi
	addq	$44, %rdi
	leaq	(%r15,%rdx,4), %rdx
	addq	376(%rsp), %rdx                 # 8-byte Folded Reload
	xorl	%r8d, %r8d
	movq	32(%rsp), %r13                  # 8-byte Reload
.Ltmp978:
	.loc	0 0 4 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:4
	movq	16(%rsp), %r9                   # 8-byte Reload
.Ltmp979:
	.p2align	4, 0x90
.LBB0_318:                              # %vector.body505
                                        #   Parent Loop BB0_139 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	.loc	0 519 15 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:519:15
	movups	-48(%rdx,%r8,4), %xmm0
	movups	-32(%rdx,%r8,4), %xmm1
	movups	-16(%rdx,%r8,4), %xmm2
	movups	(%rdx,%r8,4), %xmm3
	.loc	0 519 13 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:519:13
	movups	%xmm0, -48(%rdi,%r8,4)
	movups	%xmm1, -32(%rdi,%r8,4)
	movups	%xmm2, -16(%rdi,%r8,4)
	movups	%xmm3, (%rdi,%r8,4)
	addq	$16, %r8
	cmpq	%r8, %rsi
	jne	.LBB0_318
.Ltmp980:
# %bb.319:                              # %middle.block497
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	.loc	0 518 4 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:518:4
	cmpq	%rsi, %rax
	jne	.LBB0_161
	jmp	.LBB0_163
.Ltmp981:
.LBB0_321:                              # %if.then319.while.end360_crit_edge.i
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pos_state <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur_and_1_price <- $ecx
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_test <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r10d
	#DEBUG_VALUE: state_2 <- $ebx
	#DEBUG_VALUE: pos_state_next <- $r11d
	#DEBUG_VALUE: offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	.loc	0 0 4 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:4
	movl	%edi, %r10d
.Ltmp982:
	.loc	0 603 4 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:603:4
	jmp	.LBB0_334
.Ltmp983:
.LBB0_322:                              # %vector.ph487
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pos_state <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur_and_1_price <- $ecx
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_test <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r10d
	#DEBUG_VALUE: state_2 <- $ebx
	#DEBUG_VALUE: pos_state_next <- $r11d
	#DEBUG_VALUE: offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	movq	%rax, %rdx
	andq	$-4, %rdx
	movq	%rdx, (%rsp)                    # 8-byte Spill
.Ltmp984:
	#DEBUG_VALUE: helper2:len_end <- $esi
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- $esi
	leaq	(%rdx,%rsi), %rbp
	movq	56(%rsp), %rdx                  # 8-byte Reload
	leal	(%r10,%rdx), %r13d
	subq	%rsi, %r13
	andq	$-4, %r13
	imulq	$44, %rsi, %rsi
.Ltmp985:
	addq	120(%rsp), %rsi                 # 8-byte Folded Reload
.Ltmp986:
.LBB0_323:                              # %vector.body492
                                        #   Parent Loop BB0_139 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pos_state <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur_and_1_price <- $ecx
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_test <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r10d
	#DEBUG_VALUE: state_2 <- $ebx
	#DEBUG_VALUE: pos_state_next <- $r11d
	#DEBUG_VALUE: offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	.loc	0 604 34                        # liblzma/lzma/lzma_encoder_optimum_normal.c:604:34
	movl	$1073741824, -132(%rsi)         # imm = 0x40000000
	movl	$1073741824, -88(%rsi)          # imm = 0x40000000
	movl	$1073741824, -44(%rsi)          # imm = 0x40000000
	movl	$1073741824, (%rsi)             # imm = 0x40000000
	addq	$176, %rsi
	addq	$-4, %r13
	jne	.LBB0_323
.Ltmp987:
# %bb.324:                              # %middle.block484
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pos_state <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur_and_1_price <- $ecx
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_test <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r10d
	#DEBUG_VALUE: state_2 <- $ebx
	#DEBUG_VALUE: pos_state_next <- $r11d
	#DEBUG_VALUE: offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	.loc	0 603 4                         # liblzma/lzma/lzma_encoder_optimum_normal.c:603:4
	cmpq	(%rsp), %rax                    # 8-byte Folded Reload
	movq	32(%rsp), %r13                  # 8-byte Reload
	movq	48(%rsp), %rdx                  # 8-byte Reload
	je	.LBB0_330
.Ltmp988:
.LBB0_325:                              # %while.body354.i.preheader
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pos_state <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur_and_1_price <- $ecx
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_test <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r10d
	#DEBUG_VALUE: state_2 <- $ebx
	#DEBUG_VALUE: pos_state_next <- $r11d
	#DEBUG_VALUE: offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
                                        # kill: def $edx killed $edx killed $rdx
	subl	%ebp, %edx
	movq	%rbp, %rax
	testb	$3, %dl
	je	.LBB0_329
.Ltmp989:
# %bb.326:                              # %while.body354.i.prol.preheader
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pos_state <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur_and_1_price <- $ecx
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_test <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r10d
	#DEBUG_VALUE: state_2 <- $ebx
	#DEBUG_VALUE: pos_state_next <- $r11d
	#DEBUG_VALUE: offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	imulq	$44, %rbp, %rax
	addq	208(%rsp), %rax                 # 8-byte Folded Reload
	movq	56(%rsp), %rdx                  # 8-byte Reload
	addl	%r10d, %edx
	subb	%bpl, %dl
	movzbl	%dl, %r13d
	andl	$3, %r13d
	negq	%r13
	xorl	%esi, %esi
.Ltmp990:
.LBB0_327:                              # %while.body354.i.prol
                                        #   Parent Loop BB0_139 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pos_state <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur_and_1_price <- $ecx
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_test <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r10d
	#DEBUG_VALUE: state_2 <- $ebx
	#DEBUG_VALUE: pos_state_next <- $r11d
	#DEBUG_VALUE: offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- [DW_OP_LLVM_arg 0, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 1, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rsi, $rbp
	.loc	0 604 34                        # liblzma/lzma/lzma_encoder_optimum_normal.c:604:34
	movl	$1073741824, (%rax)             # imm = 0x40000000
	.loc	0 603 4                         # liblzma/lzma/lzma_encoder_optimum_normal.c:603:4
	decq	%rsi
.Ltmp991:
	addq	$44, %rax
	cmpq	%rsi, %r13
	jne	.LBB0_327
.Ltmp992:
# %bb.328:                              # %while.body354.i.prol.loopexit.loopexit
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pos_state <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur_and_1_price <- $ecx
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_test <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r10d
	#DEBUG_VALUE: state_2 <- $ebx
	#DEBUG_VALUE: pos_state_next <- $r11d
	#DEBUG_VALUE: offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	movq	%rbp, %rax
	subq	%rsi, %rax
	movq	32(%rsp), %r13                  # 8-byte Reload
.Ltmp993:
.LBB0_329:                              # %while.body354.i.prol.loopexit
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pos_state <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur_and_1_price <- $ecx
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_test <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r10d
	#DEBUG_VALUE: state_2 <- $ebx
	#DEBUG_VALUE: pos_state_next <- $r11d
	#DEBUG_VALUE: offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	subq	48(%rsp), %rbp                  # 8-byte Folded Reload
	cmpq	$-4, %rbp
	jbe	.LBB0_331
.Ltmp994:
.LBB0_330:                              #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pos_state <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur_and_1_price <- $ecx
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_test <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r10d
	#DEBUG_VALUE: state_2 <- $ebx
	#DEBUG_VALUE: pos_state_next <- $r11d
	#DEBUG_VALUE: offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	.loc	0 0 4 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:4
	movl	%edi, %r10d
.Ltmp995:
	movl	160(%rsp), %eax                 # 4-byte Reload
                                        # kill: def $eax killed $eax def $rax
	movq	%rax, (%rsp)                    # 8-byte Spill
	movq	64(%rsp), %rbp                  # 8-byte Reload
	jmp	.LBB0_334
.Ltmp996:
.LBB0_331:                              # %while.body354.i.preheader5
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pos_state <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur_and_1_price <- $ecx
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: len_test <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r10d
	#DEBUG_VALUE: state_2 <- $ebx
	#DEBUG_VALUE: pos_state_next <- $r11d
	#DEBUG_VALUE: offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	.loc	0 603 4                         # liblzma/lzma/lzma_encoder_optimum_normal.c:603:4
	addl	56(%rsp), %r10d                 # 4-byte Folded Reload
.Ltmp997:
	subq	%rax, %r10
	imulq	$44, %rax, %rax
	addq	120(%rsp), %rax                 # 8-byte Folded Reload
	movq	64(%rsp), %rbp                  # 8-byte Reload
	movl	160(%rsp), %edx                 # 4-byte Reload
.Ltmp998:
.LBB0_332:                              # %while.body354.i
                                        #   Parent Loop BB0_139 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pos_state <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur_and_1_price <- $ecx
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: state_2 <- $ebx
	#DEBUG_VALUE: pos_state_next <- $r11d
	#DEBUG_VALUE: offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:len_end <- undef
	.loc	0 604 34 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:604:34
	movl	$1073741824, -132(%rax)         # imm = 0x40000000
	movl	$1073741824, -88(%rax)          # imm = 0x40000000
	movl	$1073741824, -44(%rax)          # imm = 0x40000000
	movl	$1073741824, (%rax)             # imm = 0x40000000
	.loc	0 603 19                        # liblzma/lzma/lzma_encoder_optimum_normal.c:603:19
	addq	$176, %rax
	addq	$-4, %r10
	.loc	0 603 4 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:603:4
	jne	.LBB0_332
.Ltmp999:
# %bb.333:                              #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pos_state <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur_and_1_price <- $ecx
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: state_2 <- $ebx
	#DEBUG_VALUE: pos_state_next <- $r11d
	#DEBUG_VALUE: offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	.loc	0 0 4                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:4
	movl	%edi, %r10d
	movl	%edx, %eax
	movq	%rax, (%rsp)                    # 8-byte Spill
.Ltmp1000:
.LBB0_334:                              # %while.end360.i
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pos_state <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur_and_1_price <- $ecx
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: state_2 <- $ebx
	#DEBUG_VALUE: pos_state_next <- $r11d
	#DEBUG_VALUE: offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_rep_price:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_rep_price:rep_index <- 0
	#DEBUG_VALUE: get_rep_price:len <- undef
	#DEBUG_VALUE: get_rep_price:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_len_price:lencoder <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 47688, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: get_len_price:len <- undef
	.loc	0 63 9 is_stmt 1                # liblzma/lzma/lzma_encoder_optimum_normal.c:63:9
	movl	%r9d, %eax
	imulq	$1088, %r11, %rdx               # imm = 0x440
	addq	256(%rsp), %rdx                 # 8-byte Folded Reload
.Ltmp1001:
	#DEBUG_VALUE: get_pure_rep_price:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_pure_rep_price:rep_index <- 0
	#DEBUG_VALUE: get_pure_rep_price:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	.loc	0 0 0 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:0
	movzwl	27956(%r14,%rbx,2), %esi
	shrl	$4, %esi
.Ltmp1002:
	#DEBUG_VALUE: rc_bit_0_price:prob <- undef
	movq	lzma_rc_prices@GOTPCREL(%rip), %rdi
.Ltmp1003:
	.loc	8 39 9 is_stmt 1                # liblzma/rangecoder/price.h:39:9
	movzbl	(%rdi,%rsi), %esi
.Ltmp1004:
	#DEBUG_VALUE: get_pure_rep_price:price <- $esi
	.loc	0 86 27                         # liblzma/lzma/lzma_encoder_optimum_normal.c:86:27
	addq	296(%rsp), %r15                 # 8-byte Folded Reload
	movzwl	(%r15,%r11,2), %r9d
.Ltmp1005:
	#DEBUG_VALUE: rc_bit_1_price:prob <- undef
	.loc	8 47 4                          # liblzma/rangecoder/price.h:47:4
	shrl	$4, %r9d
	xorq	$127, %r9
	.loc	8 46 9                          # liblzma/rangecoder/price.h:46:9
	movzbl	(%rdi,%r9), %r9d
.Ltmp1006:
	#DEBUG_VALUE: get_pure_rep_price:price <- undef
	.loc	0 86 9                          # liblzma/lzma/lzma_encoder_optimum_normal.c:86:9
	addl	%r10d, %ecx
.Ltmp1007:
	.loc	0 110 3                         # liblzma/lzma/lzma_encoder_optimum_normal.c:110:3
	addl	128(%rsp), %ecx                 # 4-byte Folded Reload
.Ltmp1008:
	.loc	0 597 6                         # liblzma/lzma/lzma_encoder_optimum_normal.c:597:6
	addl	(%rdx,%rax,4), %ecx
	.loc	0 598 6                         # liblzma/lzma/lzma_encoder_optimum_normal.c:598:6
	addl	%esi, %ecx
	.loc	0 607 6                         # liblzma/lzma/lzma_encoder_optimum_normal.c:607:6
	addl	%r9d, %ecx
.Ltmp1009:
	#DEBUG_VALUE: cur_and_len_price <- $ecx
	.loc	0 610 28                        # liblzma/lzma/lzma_encoder_optimum_normal.c:610:28
	imulq	$44, 48(%rsp), %rax             # 8-byte Folded Reload
	.loc	0 610 26 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:610:26
	cmpl	16(%rbp,%rax), %ecx
	#DEBUG_VALUE: get_rep_price:state <- undef
	#DEBUG_VALUE: get_pure_rep_price:state <- undef
	#DEBUG_VALUE: get_rep_price:pos_state <- undef
	#DEBUG_VALUE: get_len_price:pos_state <- undef
	#DEBUG_VALUE: get_pure_rep_price:pos_state <- undef
	movq	24(%rsp), %r10                  # 8-byte Reload
.Ltmp1010:
	.loc	0 610 8                         # liblzma/lzma/lzma_encoder_optimum_normal.c:610:8
	jae	.LBB0_336
.Ltmp1011:
# %bb.335:                              # %if.then369.i
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pos_state <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: state_2 <- $ebx
	#DEBUG_VALUE: pos_state_next <- $r11d
	#DEBUG_VALUE: offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: cur_and_len_price <- $ecx
	.loc	0 0 0                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:0
	addq	%rbp, %rax
.Ltmp1012:
	.loc	0 611 31 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:611:31
	movl	%ecx, 16(%rax)
	movq	360(%rsp), %rcx                 # 8-byte Reload
.Ltmp1013:
	.loc	0 612 34                        # liblzma/lzma/lzma_encoder_optimum_normal.c:612:34
	movl	%ecx, 20(%rax)
	.loc	0 613 35                        # liblzma/lzma/lzma_encoder_optimum_normal.c:613:35
	movl	$0, 24(%rax)
	.loc	0 614 43                        # liblzma/lzma/lzma_encoder_optimum_normal.c:614:43
	movw	$1, 4(%rax)
.Ltmp1014:
.LBB0_336:                              # %if.end393.i
                                        #   in Loop: Header=BB0_139 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:buf_avail_full <- [DW_OP_plus_uconst 192, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:reps <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:position <- [DW_OP_plus_uconst 368, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:cur <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: helper2:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:matches_count <- [DW_OP_plus_uconst 156, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:new_len <- [DW_OP_plus_uconst 232, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:state <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:pos_state <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:match_price <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:rep_match_price <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper2:buf_avail <- [DW_OP_plus_uconst 148, DW_OP_deref] $rsp
	#DEBUG_VALUE: state_2 <- $ebx
	#DEBUG_VALUE: pos_state_next <- $r11d
	#DEBUG_VALUE: offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_rep_price:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_rep_price:rep_index <- 0
	#DEBUG_VALUE: get_rep_price:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_len_price:lencoder <- [DW_OP_plus_uconst 136, DW_OP_deref, DW_OP_plus_uconst 47688, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: get_pure_rep_price:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_pure_rep_price:rep_index <- 0
	#DEBUG_VALUE: get_pure_rep_price:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	.loc	0 0 43 is_stmt 0                # liblzma/lzma/lzma_encoder_optimum_normal.c:0:43
	movq	40(%rsp), %r15                  # 8-byte Reload
	movq	72(%rsp), %r11                  # 8-byte Reload
	jmp	.LBB0_180
.Ltmp1015:
.LBB0_337:                              # %get_pure_rep_price.exit.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:match_price <- $ecx
	#DEBUG_VALUE: helper1:rep_match_price <- $esi
	#DEBUG_VALUE: helper1:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: rep_len <- $edi
	movq	72(%rsp), %rax                  # 8-byte Reload
	addq	%r14, %rax
.Ltmp1016:
	#DEBUG_VALUE: get_pure_rep_price:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_pure_rep_price:rep_index <- 0
	#DEBUG_VALUE: get_pure_rep_price:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: rc_bit_0_price:prob <- undef
	#DEBUG_VALUE: rc_bit_1_price:prob <- undef
	#DEBUG_VALUE: get_pure_rep_price:price <- undef
	.loc	0 86 27 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:86:27
	movzwl	28028(%rax,%r12,2), %eax
.Ltmp1017:
	.loc	8 47 4                          # liblzma/rangecoder/price.h:47:4
	shrl	$4, %eax
	xorq	$127, %rax
	movq	lzma_rc_prices@GOTPCREL(%rip), %r8
	.loc	8 46 9                          # liblzma/rangecoder/price.h:46:9
	movzbl	(%r8,%rax), %edx
.Ltmp1018:
	.loc	0 0 0 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:0
	movzwl	27956(%r14,%r13,2), %eax
	shrl	$4, %eax
.Ltmp1019:
	.loc	8 39 9 is_stmt 1                # liblzma/rangecoder/price.h:39:9
	movzbl	(%r8,%rax), %eax
	addl	%esi, %eax
	addl	%edx, %eax
.Ltmp1020:
	#DEBUG_VALUE: price <- $eax
	.loc	0 410 3                         # liblzma/lzma/lzma_encoder_optimum_normal.c:410:3
	movl	%edi, %edx
	imulq	$44, %rdx, %r8
	decq	%rdx
	addq	%r14, %r8
	addq	$69372, %r8                     # imm = 0x10EFC
	imulq	$1088, %r12, %rbx               # imm = 0x440
	addq	%r14, %rbx
	addq	$48708, %rbx                    # imm = 0xBE44
	#DEBUG_VALUE: get_pure_rep_price:state <- undef
	#DEBUG_VALUE: get_pure_rep_price:pos_state <- undef
	jmp	.LBB0_339
.Ltmp1021:
	.p2align	4, 0x90
.LBB0_338:                              # %if.end226.i
                                        #   in Loop: Header=BB0_339 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:match_price <- $ecx
	#DEBUG_VALUE: helper1:rep_match_price <- $esi
	#DEBUG_VALUE: helper1:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: rep_len <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $rdx
	#DEBUG_VALUE: price <- $eax
	#DEBUG_VALUE: rep_len <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rdx
	.loc	0 422 3                         # liblzma/lzma/lzma_encoder_optimum_normal.c:422:3
	movq	%rdx, %r15
	decq	%r15
	addq	$-44, %r8
.Ltmp1022:
	.loc	0 422 22 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:422:22
	testl	$-2, %edx
	movq	%r15, %rdx
.Ltmp1023:
	.loc	0 422 3                         # liblzma/lzma/lzma_encoder_optimum_normal.c:422:3
	je	.LBB0_120
.Ltmp1024:
.LBB0_339:                              # %do.body201.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:match_price <- $ecx
	#DEBUG_VALUE: helper1:rep_match_price <- $esi
	#DEBUG_VALUE: helper1:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: price <- $eax
	#DEBUG_VALUE: rep_len <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $rdx
	.loc	0 0 3                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:3
	movl	4(%rbx,%rdx,4), %ebp
	.loc	0 412 6 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:412:6
	addl	%eax, %ebp
.Ltmp1025:
	#DEBUG_VALUE: cur_and_len_price <- undef
	.loc	0 416 26                        # liblzma/lzma/lzma_encoder_optimum_normal.c:416:26
	cmpl	-8(%r8), %ebp
.Ltmp1026:
	#DEBUG_VALUE: get_len_price:pos_state <- undef
	.loc	0 416 8 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:416:8
	jae	.LBB0_338
.Ltmp1027:
# %bb.340:                              # %if.then210.i
                                        #   in Loop: Header=BB0_339 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:match_price <- $ecx
	#DEBUG_VALUE: helper1:rep_match_price <- $esi
	#DEBUG_VALUE: helper1:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: rep_len <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $rdx
	#DEBUG_VALUE: price <- $eax
	.loc	0 417 32 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:417:32
	movl	%ebp, -8(%r8)
	.loc	0 418 35                        # liblzma/lzma/lzma_encoder_optimum_normal.c:418:35
	movq	$0, -4(%r8)
	.loc	0 420 44                        # liblzma/lzma/lzma_encoder_optimum_normal.c:420:44
	movb	$0, -20(%r8)
	jmp	.LBB0_338
.Ltmp1028:
.LBB0_341:                              # %get_pure_rep_price.exit.1.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:match_price <- $ecx
	#DEBUG_VALUE: helper1:rep_match_price <- $esi
	#DEBUG_VALUE: helper1:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 1
	#DEBUG_VALUE: rep_len <- $r9d
	#DEBUG_VALUE: get_pure_rep_price:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_pure_rep_price:rep_index <- 1
	#DEBUG_VALUE: get_pure_rep_price:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: rc_bit_1_price:prob <- undef
	#DEBUG_VALUE: rc_bit_0_price:prob <- undef
	#DEBUG_VALUE: get_pure_rep_price:price <- undef
	.loc	0 0 0 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:0
	movzwl	27980(%r14,%r13,2), %eax
	shrl	$4, %eax
	movq	lzma_rc_prices@GOTPCREL(%rip), %r8
.Ltmp1029:
	.loc	8 39 9 is_stmt 1                # liblzma/rangecoder/price.h:39:9
	movzbl	(%r8,%rax), %eax
.Ltmp1030:
	.loc	0 0 0 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:0
	movzwl	27956(%r14,%r13,2), %edx
	shrl	$4, %edx
.Ltmp1031:
	.loc	8 47 4 is_stmt 1                # liblzma/rangecoder/price.h:47:4
	xorq	$127, %rdx
	.loc	8 46 9                          # liblzma/rangecoder/price.h:46:9
	movzbl	(%r8,%rdx), %edx
	addl	%esi, %eax
	addl	%edx, %eax
.Ltmp1032:
	#DEBUG_VALUE: price <- $eax
	.loc	0 410 3                         # liblzma/lzma/lzma_encoder_optimum_normal.c:410:3
	movl	%r9d, %edx
	imulq	$44, %rdx, %r8
	decq	%rdx
	addq	%r14, %r8
	addq	$69372, %r8                     # imm = 0x10EFC
	imulq	$1088, %r12, %r9                # imm = 0x440
.Ltmp1033:
	addq	%r14, %r9
	addq	$48708, %r9                     # imm = 0xBE44
	#DEBUG_VALUE: get_pure_rep_price:state <- undef
	#DEBUG_VALUE: get_pure_rep_price:pos_state <- undef
	movabsq	$4294967296, %rbx               # imm = 0x100000000
	jmp	.LBB0_343
.Ltmp1034:
	.p2align	4, 0x90
.LBB0_342:                              # %if.end226.1.i
                                        #   in Loop: Header=BB0_343 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:match_price <- $ecx
	#DEBUG_VALUE: helper1:rep_match_price <- $esi
	#DEBUG_VALUE: helper1:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 1
	#DEBUG_VALUE: rep_len <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $rdx
	#DEBUG_VALUE: price <- $eax
	#DEBUG_VALUE: rep_len <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rdx
	.loc	0 422 3                         # liblzma/lzma/lzma_encoder_optimum_normal.c:422:3
	movq	%rdx, %r15
	decq	%r15
	addq	$-44, %r8
.Ltmp1035:
	.loc	0 422 22 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:422:22
	testl	$-2, %edx
	movq	%r15, %rdx
.Ltmp1036:
	.loc	0 422 3                         # liblzma/lzma/lzma_encoder_optimum_normal.c:422:3
	je	.LBB0_121
.Ltmp1037:
.LBB0_343:                              # %do.body201.1.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:match_price <- $ecx
	#DEBUG_VALUE: helper1:rep_match_price <- $esi
	#DEBUG_VALUE: helper1:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 1
	#DEBUG_VALUE: price <- $eax
	#DEBUG_VALUE: rep_len <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $rdx
	.loc	0 0 3                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:3
	movl	4(%r9,%rdx,4), %ebp
	.loc	0 412 6 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:412:6
	addl	%eax, %ebp
.Ltmp1038:
	#DEBUG_VALUE: cur_and_len_price <- undef
	.loc	0 416 26                        # liblzma/lzma/lzma_encoder_optimum_normal.c:416:26
	cmpl	-8(%r8), %ebp
.Ltmp1039:
	#DEBUG_VALUE: get_len_price:pos_state <- undef
	.loc	0 416 8 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:416:8
	jae	.LBB0_342
.Ltmp1040:
# %bb.344:                              # %if.then210.1.i
                                        #   in Loop: Header=BB0_343 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:match_price <- $ecx
	#DEBUG_VALUE: helper1:rep_match_price <- $esi
	#DEBUG_VALUE: helper1:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 1
	#DEBUG_VALUE: rep_len <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $rdx
	#DEBUG_VALUE: price <- $eax
	.loc	0 417 32 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:417:32
	movl	%ebp, -8(%r8)
	.loc	0 418 35                        # liblzma/lzma/lzma_encoder_optimum_normal.c:418:35
	movq	%rbx, -4(%r8)
	.loc	0 420 44                        # liblzma/lzma/lzma_encoder_optimum_normal.c:420:44
	movb	$0, -20(%r8)
	jmp	.LBB0_342
.Ltmp1041:
.LBB0_345:                              # %get_pure_rep_price.exit.2.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:match_price <- $ecx
	#DEBUG_VALUE: helper1:rep_match_price <- $esi
	#DEBUG_VALUE: helper1:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 2
	#DEBUG_VALUE: rep_len <- $r11d
	#DEBUG_VALUE: get_pure_rep_price:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_pure_rep_price:rep_index <- 2
	#DEBUG_VALUE: get_pure_rep_price:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: rc_bit_1_price:prob <- undef
	#DEBUG_VALUE: rc_bit_1_price:prob <- undef
	#DEBUG_VALUE: rc_bit_price:prob <- undef
	#DEBUG_VALUE: rc_bit_price:bit <- [DW_OP_constu 2, DW_OP_minus, DW_OP_stack_value] 2
	#DEBUG_VALUE: get_pure_rep_price:price <- undef
	.loc	0 0 0 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:0
	movzwl	27980(%r14,%r13,2), %eax
	shrl	$4, %eax
.Ltmp1042:
	.loc	8 47 4 is_stmt 1                # liblzma/rangecoder/price.h:47:4
	xorq	$127, %rax
	movq	lzma_rc_prices@GOTPCREL(%rip), %r9
	.loc	8 46 9                          # liblzma/rangecoder/price.h:46:9
	movzbl	(%r9,%rax), %eax
.Ltmp1043:
	.loc	0 0 0 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:0
	movzwl	27956(%r14,%r13,2), %edx
	shrl	$4, %edx
.Ltmp1044:
	.loc	8 47 4 is_stmt 1                # liblzma/rangecoder/price.h:47:4
	xorq	$127, %rdx
	.loc	8 46 9                          # liblzma/rangecoder/price.h:46:9
	movzbl	(%r9,%rdx), %edx
.Ltmp1045:
	.loc	0 94 26                         # liblzma/lzma/lzma_encoder_optimum_normal.c:94:26
	movzwl	28004(%r14,%r13,2), %r8d
.Ltmp1046:
	.loc	8 32 33                         # liblzma/rangecoder/price.h:32:33
	shrl	$4, %r8d
	.loc	8 31 9                          # liblzma/rangecoder/price.h:31:9
	movzbl	(%r9,%r8), %r8d
	addl	%edx, %r8d
	addl	%esi, %eax
	addl	%r8d, %eax
.Ltmp1047:
	#DEBUG_VALUE: price <- $eax
	.loc	0 410 3                         # liblzma/lzma/lzma_encoder_optimum_normal.c:410:3
	movl	%r11d, %edx
	imulq	$44, %rdx, %r8
	decq	%rdx
	addq	%r14, %r8
	addq	$69372, %r8                     # imm = 0x10EFC
	imulq	$1088, %r12, %r9                # imm = 0x440
	addq	%r14, %r9
	addq	$48708, %r9                     # imm = 0xBE44
	#DEBUG_VALUE: get_pure_rep_price:state <- undef
	#DEBUG_VALUE: get_pure_rep_price:pos_state <- undef
	movabsq	$8589934592, %r11               # imm = 0x200000000
.Ltmp1048:
	.loc	0 0 3 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:3
	jmp	.LBB0_347
.Ltmp1049:
	.p2align	4, 0x90
.LBB0_346:                              # %if.end226.2.i
                                        #   in Loop: Header=BB0_347 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:match_price <- $ecx
	#DEBUG_VALUE: helper1:rep_match_price <- $esi
	#DEBUG_VALUE: helper1:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 2
	#DEBUG_VALUE: rep_len <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $rdx
	#DEBUG_VALUE: price <- $eax
	#DEBUG_VALUE: rep_len <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rdx
	.loc	0 422 3 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:422:3
	movq	%rdx, %rbx
	decq	%rbx
	addq	$-44, %r8
.Ltmp1050:
	.loc	0 422 22 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:422:22
	testl	$-2, %edx
	movq	%rbx, %rdx
.Ltmp1051:
	.loc	0 422 3                         # liblzma/lzma/lzma_encoder_optimum_normal.c:422:3
	je	.LBB0_122
.Ltmp1052:
.LBB0_347:                              # %do.body201.2.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:match_price <- $ecx
	#DEBUG_VALUE: helper1:rep_match_price <- $esi
	#DEBUG_VALUE: helper1:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 2
	#DEBUG_VALUE: price <- $eax
	#DEBUG_VALUE: rep_len <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $rdx
	.loc	0 0 3                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:3
	movl	4(%r9,%rdx,4), %ebx
	.loc	0 412 6 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:412:6
	addl	%eax, %ebx
.Ltmp1053:
	#DEBUG_VALUE: cur_and_len_price <- undef
	.loc	0 416 26                        # liblzma/lzma/lzma_encoder_optimum_normal.c:416:26
	cmpl	-8(%r8), %ebx
.Ltmp1054:
	#DEBUG_VALUE: get_len_price:pos_state <- undef
	.loc	0 416 8 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:416:8
	jae	.LBB0_346
.Ltmp1055:
# %bb.348:                              # %if.then210.2.i
                                        #   in Loop: Header=BB0_347 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:match_price <- $ecx
	#DEBUG_VALUE: helper1:rep_match_price <- $esi
	#DEBUG_VALUE: helper1:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 2
	#DEBUG_VALUE: rep_len <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $rdx
	#DEBUG_VALUE: price <- $eax
	.loc	0 417 32 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:417:32
	movl	%ebx, -8(%r8)
	.loc	0 418 35                        # liblzma/lzma/lzma_encoder_optimum_normal.c:418:35
	movq	%r11, -4(%r8)
	.loc	0 420 44                        # liblzma/lzma/lzma_encoder_optimum_normal.c:420:44
	movb	$0, -20(%r8)
	jmp	.LBB0_346
.Ltmp1056:
.LBB0_349:                              # %get_pure_rep_price.exit.3.i
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:match_price <- $ecx
	#DEBUG_VALUE: helper1:rep_match_price <- $esi
	#DEBUG_VALUE: helper1:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 3
	#DEBUG_VALUE: rep_len <- $r10d
	#DEBUG_VALUE: get_pure_rep_price:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: get_pure_rep_price:rep_index <- 3
	#DEBUG_VALUE: get_pure_rep_price:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: rc_bit_1_price:prob <- undef
	#DEBUG_VALUE: rc_bit_1_price:prob <- undef
	#DEBUG_VALUE: rc_bit_price:prob <- undef
	#DEBUG_VALUE: rc_bit_price:bit <- [DW_OP_constu 2, DW_OP_minus, DW_OP_stack_value] 3
	#DEBUG_VALUE: get_pure_rep_price:price <- undef
	.loc	0 0 0 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:0
	movzwl	27980(%r14,%r13,2), %eax
	shrl	$4, %eax
.Ltmp1057:
	.loc	8 47 4 is_stmt 1                # liblzma/rangecoder/price.h:47:4
	xorq	$127, %rax
	movq	lzma_rc_prices@GOTPCREL(%rip), %r9
	.loc	8 46 9                          # liblzma/rangecoder/price.h:46:9
	movzbl	(%r9,%rax), %eax
.Ltmp1058:
	.loc	0 0 0 is_stmt 0                 # liblzma/lzma/lzma_encoder_optimum_normal.c:0:0
	movzwl	27956(%r14,%r13,2), %edx
	shrl	$4, %edx
.Ltmp1059:
	.loc	8 47 4 is_stmt 1                # liblzma/rangecoder/price.h:47:4
	xorq	$127, %rdx
	.loc	8 46 9                          # liblzma/rangecoder/price.h:46:9
	movzbl	(%r9,%rdx), %edx
.Ltmp1060:
	.loc	0 94 26                         # liblzma/lzma/lzma_encoder_optimum_normal.c:94:26
	movzwl	28004(%r14,%r13,2), %r8d
.Ltmp1061:
	.loc	8 32 33                         # liblzma/rangecoder/price.h:32:33
	shrl	$4, %r8d
	xorq	$127, %r8
	.loc	8 31 9                          # liblzma/rangecoder/price.h:31:9
	movzbl	(%r9,%r8), %r8d
	addl	%edx, %r8d
	addl	%eax, %esi
.Ltmp1062:
	.loc	8 0 9 is_stmt 0                 # liblzma/rangecoder/price.h:0:9
	addl	%r8d, %esi
.Ltmp1063:
	#DEBUG_VALUE: price <- $esi
	.loc	0 410 3 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:410:3
	movl	%r10d, %eax
	imulq	$44, %rax, %rdx
	decq	%rax
	addq	%r14, %rdx
	addq	$69372, %rdx                    # imm = 0x10EFC
	imulq	$1088, %r12, %r8                # imm = 0x440
	addq	%r14, %r8
	addq	$48708, %r8                     # imm = 0xBE44
	#DEBUG_VALUE: get_pure_rep_price:state <- undef
	#DEBUG_VALUE: get_pure_rep_price:pos_state <- undef
	movabsq	$12884901888, %r9               # imm = 0x300000000
	jmp	.LBB0_351
.Ltmp1064:
	.p2align	4, 0x90
.LBB0_350:                              # %if.end226.3.i
                                        #   in Loop: Header=BB0_351 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:match_price <- $ecx
	#DEBUG_VALUE: helper1:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 3
	#DEBUG_VALUE: rep_len <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $rax
	#DEBUG_VALUE: price <- $esi
	#DEBUG_VALUE: rep_len <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	.loc	0 422 3                         # liblzma/lzma/lzma_encoder_optimum_normal.c:422:3
	movq	%rax, %r10
	decq	%r10
	addq	$-44, %rdx
.Ltmp1065:
	.loc	0 422 22 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:422:22
	testl	$-2, %eax
	movq	%r10, %rax
.Ltmp1066:
	.loc	0 422 3                         # liblzma/lzma/lzma_encoder_optimum_normal.c:422:3
	je	.LBB0_123
.Ltmp1067:
.LBB0_351:                              # %do.body201.3.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:match_price <- $ecx
	#DEBUG_VALUE: helper1:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 3
	#DEBUG_VALUE: price <- $esi
	#DEBUG_VALUE: rep_len <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $rax
	.loc	0 0 3                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:3
	movl	4(%r8,%rax,4), %r10d
	.loc	0 412 6 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:412:6
	addl	%esi, %r10d
.Ltmp1068:
	#DEBUG_VALUE: cur_and_len_price <- undef
	.loc	0 416 26                        # liblzma/lzma/lzma_encoder_optimum_normal.c:416:26
	cmpl	-8(%rdx), %r10d
.Ltmp1069:
	#DEBUG_VALUE: get_len_price:pos_state <- undef
	.loc	0 416 8 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:416:8
	jae	.LBB0_350
.Ltmp1070:
# %bb.352:                              # %if.then210.3.i
                                        #   in Loop: Header=BB0_351 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:reps <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:rep_lens <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:mf <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:position <- [DW_OP_plus_uconst 304, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:len_main <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: helper1:match_price <- $ecx
	#DEBUG_VALUE: helper1:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 3
	#DEBUG_VALUE: rep_len <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $rax
	#DEBUG_VALUE: price <- $esi
	.loc	0 417 32 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:417:32
	movl	%r10d, -8(%rdx)
	.loc	0 418 35                        # liblzma/lzma/lzma_encoder_optimum_normal.c:418:35
	movq	%r9, -4(%rdx)
	.loc	0 420 44                        # liblzma/lzma/lzma_encoder_optimum_normal.c:420:44
	movb	$0, -20(%rdx)
	jmp	.LBB0_350
.Ltmp1071:
.LBB0_353:
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- $r13
                                        # kill: def $r13d killed $r13d killed $r13 def $r13
.LBB0_354:                              # %for.end
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:cur <- $r13
	#DEBUG_VALUE: backward:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: backward:len_res <- undef
	#DEBUG_VALUE: backward:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: backward:cur <- $r13d
	#DEBUG_VALUE: backward:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	.loc	0 236 24                        # liblzma/lzma/lzma_encoder_optimum_normal.c:236:24
	movl	%r13d, 69340(%r14)
	.loc	0 238 21                        # liblzma/lzma/lzma_encoder_optimum_normal.c:238:21
	movl	%r13d, %eax
	imulq	$44, %rax, %rax
	.loc	0 238 38 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:238:38
	movl	20(%rbp,%rax), %esi
.Ltmp1072:
	#DEBUG_VALUE: backward:pos_mem <- $esi
	.loc	0 239 39 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:239:39
	movl	24(%rbp,%rax), %ecx
.Ltmp1073:
	#DEBUG_VALUE: backward:back_mem <- $ecx
	.loc	0 0 39 is_stmt 0                # liblzma/lzma/lzma_encoder_optimum_normal.c:0:39
	movq	200(%rsp), %rax                 # 8-byte Reload
	jmp	.LBB0_357
.Ltmp1074:
	.p2align	4, 0x90
.LBB0_355:                              # %do.body.if.end40_crit_edge.i
                                        #   in Loop: Header=BB0_357 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: backward:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: backward:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: backward:cur <- $edx
	#DEBUG_VALUE: backward:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: backward:pos_mem <- $r13d
	#DEBUG_VALUE: backward:back_mem <- $ecx
	.loc	0 260 35 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:260:35
	movl	20(%rdi), %esi
	.loc	0 259 36                        # liblzma/lzma/lzma_encoder_optimum_normal.c:259:36
	movl	24(%rdi), %r8d
.Ltmp1075:
.LBB0_356:                              # %if.end40.i
                                        #   in Loop: Header=BB0_357 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: backward:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: backward:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: backward:cur <- $edx
	#DEBUG_VALUE: backward:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: backward:pos_mem <- $r13d
	#DEBUG_VALUE: backward:back_mem <- $ecx
	#DEBUG_VALUE: pos_prev <- $r13d
	#DEBUG_VALUE: back_cur <- $ecx
	#DEBUG_VALUE: backward:back_mem <- $r8d
	#DEBUG_VALUE: backward:pos_mem <- $esi
	.loc	0 262 35                        # liblzma/lzma/lzma_encoder_optimum_normal.c:262:35
	movl	%ecx, 24(%rdi)
	.loc	0 263 34                        # liblzma/lzma/lzma_encoder_optimum_normal.c:263:34
	movl	%edx, 20(%rdi)
.Ltmp1076:
	#DEBUG_VALUE: backward:cur <- $r13d
	.loc	0 0 34 is_stmt 0                # liblzma/lzma/lzma_encoder_optimum_normal.c:0:34
	movl	%r8d, %ecx
.Ltmp1077:
	.loc	0 266 15 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:266:15
	testl	%r13d, %r13d
.Ltmp1078:
	.loc	0 266 2 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:266:2
	je	.LBB0_360
.Ltmp1079:
.LBB0_357:                              # %do.body.i316
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: backward:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: backward:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: backward:cur <- $r13d
	#DEBUG_VALUE: backward:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: backward:pos_mem <- $esi
	#DEBUG_VALUE: backward:back_mem <- $ecx
	.loc	0 0 2                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:2
	movl	%r13d, %edx
	movl	%esi, %r13d
.Ltmp1080:
	#DEBUG_VALUE: backward:pos_mem <- $r13d
	#DEBUG_VALUE: backward:cur <- $edx
	#DEBUG_VALUE: backward:cur <- $edx
	#DEBUG_VALUE: backward:pos_mem <- $r13d
	#DEBUG_VALUE: backward:back_mem <- $ecx
	.loc	0 242 7 is_stmt 1               # liblzma/lzma/lzma_encoder_optimum_normal.c:242:7
	movl	%edx, %esi
	imulq	$44, %rsi, %r9
	movl	%r13d, %esi
	imulq	$44, %rsi, %rdi
	addq	%rbp, %rdi
.Ltmp1081:
	.loc	0 242 7 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:242:7
	cmpb	$0, 4(%rbp,%r9)
	je	.LBB0_355
.Ltmp1082:
# %bb.358:                              # %if.then.i322
                                        #   in Loop: Header=BB0_357 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: backward:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: backward:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: backward:cur <- $edx
	#DEBUG_VALUE: backward:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: backward:pos_mem <- $r13d
	#DEBUG_VALUE: backward:back_mem <- $ecx
	.loc	0 0 0                           # liblzma/lzma/lzma_encoder_optimum_normal.c:0:0
	addq	%rbp, %r9
.Ltmp1083:
	#DEBUG_VALUE: make_literal:optimal <- $rdi
	.loc	0 215 29 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:215:29
	movb	$0, 4(%rdi)
.Ltmp1084:
	.loc	0 244 44                        # liblzma/lzma/lzma_encoder_optimum_normal.c:244:44
	leal	-1(%r13), %esi
	movl	$-1, %r8d
	.loc	0 246 8                         # liblzma/lzma/lzma_encoder_optimum_normal.c:246:8
	cmpb	$1, 5(%r9)
	jne	.LBB0_356
.Ltmp1085:
# %bb.359:                              # %if.then18.i
                                        #   in Loop: Header=BB0_357 Depth=1
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: backward:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: backward:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: backward:cur <- $edx
	#DEBUG_VALUE: backward:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: backward:pos_mem <- $r13d
	#DEBUG_VALUE: backward:back_mem <- $ecx
	.loc	0 247 5                         # liblzma/lzma/lzma_encoder_optimum_normal.c:247:5
	movl	%esi, %r10d
	imulq	$44, %r10, %r10
	.loc	0 248 7                         # liblzma/lzma/lzma_encoder_optimum_normal.c:248:7
	movb	$0, 4(%rbp,%r10)
	.loc	0 250 26                        # liblzma/lzma/lzma_encoder_optimum_normal.c:250:26
	movq	8(%r9), %r9
	.loc	0 250 7 is_stmt 0               # liblzma/lzma/lzma_encoder_optimum_normal.c:250:7
	movq	%r9, 20(%rbp,%r10)
	jmp	.LBB0_356
.Ltmp1086:
.LBB0_360:                              # %backward.exit
	#DEBUG_VALUE: lzma_lzma_optimum_normal:pcoder <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:mf <- [DW_OP_plus_uconst 248] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:back_res <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_res <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: lzma_lzma_optimum_normal:position <- [DW_OP_plus_uconst 304] [$rsp+0]
	#DEBUG_VALUE: lzma_lzma_optimum_normal:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: lzma_lzma_optimum_normal:len_end <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: backward:pcoder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: backward:back_res <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: backward:cur <- $r13d
	#DEBUG_VALUE: backward:coder <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: backward:pos_mem <- $esi
	#DEBUG_VALUE: backward:back_mem <- $r8d
	.loc	0 268 45 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:268:45
	movl	69368(%r14), %ecx
	.loc	0 268 28 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:268:28
	movl	%ecx, 69344(%r14)
	movq	216(%rsp), %rdx                 # 8-byte Reload
	.loc	0 269 11 is_stmt 1              # liblzma/lzma/lzma_encoder_optimum_normal.c:269:11
	movl	%ecx, (%rdx)
	.loc	0 270 29                        # liblzma/lzma/lzma_encoder_optimum_normal.c:270:29
	movl	69372(%r14), %ecx
	.loc	0 270 12 is_stmt 0              # liblzma/lzma/lzma_encoder_optimum_normal.c:270:12
	movl	%ecx, (%rax)
	jmp	.LBB0_4
.Ltmp1087:
.Lfunc_end0:
	.size	lzma_lzma_optimum_normal, .Lfunc_end0-lzma_lzma_optimum_normal
	.cfi_endproc
	.file	11 "liblzma/common" "common.h" md5 0xb445e74fc76042ed64f7e1908fcc1934
	.file	12 "liblzma/lzma" "lzma_encoder_private.h" md5 0x0c1b7b41ddfbed104b8c32f19cfcc2b2
                                        # -- End function
	.section	.debug_loclists,"",@progbits
	.long	.Ldebug_list_header_end0-.Ldebug_list_header_start0 # Length
.Ldebug_list_header_start0:
	.short	5                               # Version
	.byte	8                               # Address size
	.byte	0                               # Segment selector size
	.long	180                             # Offset entry count
.Lloclists_table_base0:
	.long	.Ldebug_loc0-.Lloclists_table_base0
	.long	.Ldebug_loc1-.Lloclists_table_base0
	.long	.Ldebug_loc2-.Lloclists_table_base0
	.long	.Ldebug_loc3-.Lloclists_table_base0
	.long	.Ldebug_loc4-.Lloclists_table_base0
	.long	.Ldebug_loc5-.Lloclists_table_base0
	.long	.Ldebug_loc6-.Lloclists_table_base0
	.long	.Ldebug_loc7-.Lloclists_table_base0
	.long	.Ldebug_loc8-.Lloclists_table_base0
	.long	.Ldebug_loc9-.Lloclists_table_base0
	.long	.Ldebug_loc10-.Lloclists_table_base0
	.long	.Ldebug_loc11-.Lloclists_table_base0
	.long	.Ldebug_loc12-.Lloclists_table_base0
	.long	.Ldebug_loc13-.Lloclists_table_base0
	.long	.Ldebug_loc14-.Lloclists_table_base0
	.long	.Ldebug_loc15-.Lloclists_table_base0
	.long	.Ldebug_loc16-.Lloclists_table_base0
	.long	.Ldebug_loc17-.Lloclists_table_base0
	.long	.Ldebug_loc18-.Lloclists_table_base0
	.long	.Ldebug_loc19-.Lloclists_table_base0
	.long	.Ldebug_loc20-.Lloclists_table_base0
	.long	.Ldebug_loc21-.Lloclists_table_base0
	.long	.Ldebug_loc22-.Lloclists_table_base0
	.long	.Ldebug_loc23-.Lloclists_table_base0
	.long	.Ldebug_loc24-.Lloclists_table_base0
	.long	.Ldebug_loc25-.Lloclists_table_base0
	.long	.Ldebug_loc26-.Lloclists_table_base0
	.long	.Ldebug_loc27-.Lloclists_table_base0
	.long	.Ldebug_loc28-.Lloclists_table_base0
	.long	.Ldebug_loc29-.Lloclists_table_base0
	.long	.Ldebug_loc30-.Lloclists_table_base0
	.long	.Ldebug_loc31-.Lloclists_table_base0
	.long	.Ldebug_loc32-.Lloclists_table_base0
	.long	.Ldebug_loc33-.Lloclists_table_base0
	.long	.Ldebug_loc34-.Lloclists_table_base0
	.long	.Ldebug_loc35-.Lloclists_table_base0
	.long	.Ldebug_loc36-.Lloclists_table_base0
	.long	.Ldebug_loc37-.Lloclists_table_base0
	.long	.Ldebug_loc38-.Lloclists_table_base0
	.long	.Ldebug_loc39-.Lloclists_table_base0
	.long	.Ldebug_loc40-.Lloclists_table_base0
	.long	.Ldebug_loc41-.Lloclists_table_base0
	.long	.Ldebug_loc42-.Lloclists_table_base0
	.long	.Ldebug_loc43-.Lloclists_table_base0
	.long	.Ldebug_loc44-.Lloclists_table_base0
	.long	.Ldebug_loc45-.Lloclists_table_base0
	.long	.Ldebug_loc46-.Lloclists_table_base0
	.long	.Ldebug_loc47-.Lloclists_table_base0
	.long	.Ldebug_loc48-.Lloclists_table_base0
	.long	.Ldebug_loc49-.Lloclists_table_base0
	.long	.Ldebug_loc50-.Lloclists_table_base0
	.long	.Ldebug_loc51-.Lloclists_table_base0
	.long	.Ldebug_loc52-.Lloclists_table_base0
	.long	.Ldebug_loc53-.Lloclists_table_base0
	.long	.Ldebug_loc54-.Lloclists_table_base0
	.long	.Ldebug_loc55-.Lloclists_table_base0
	.long	.Ldebug_loc56-.Lloclists_table_base0
	.long	.Ldebug_loc57-.Lloclists_table_base0
	.long	.Ldebug_loc58-.Lloclists_table_base0
	.long	.Ldebug_loc59-.Lloclists_table_base0
	.long	.Ldebug_loc60-.Lloclists_table_base0
	.long	.Ldebug_loc61-.Lloclists_table_base0
	.long	.Ldebug_loc62-.Lloclists_table_base0
	.long	.Ldebug_loc63-.Lloclists_table_base0
	.long	.Ldebug_loc64-.Lloclists_table_base0
	.long	.Ldebug_loc65-.Lloclists_table_base0
	.long	.Ldebug_loc66-.Lloclists_table_base0
	.long	.Ldebug_loc67-.Lloclists_table_base0
	.long	.Ldebug_loc68-.Lloclists_table_base0
	.long	.Ldebug_loc69-.Lloclists_table_base0
	.long	.Ldebug_loc70-.Lloclists_table_base0
	.long	.Ldebug_loc71-.Lloclists_table_base0
	.long	.Ldebug_loc72-.Lloclists_table_base0
	.long	.Ldebug_loc73-.Lloclists_table_base0
	.long	.Ldebug_loc74-.Lloclists_table_base0
	.long	.Ldebug_loc75-.Lloclists_table_base0
	.long	.Ldebug_loc76-.Lloclists_table_base0
	.long	.Ldebug_loc77-.Lloclists_table_base0
	.long	.Ldebug_loc78-.Lloclists_table_base0
	.long	.Ldebug_loc79-.Lloclists_table_base0
	.long	.Ldebug_loc80-.Lloclists_table_base0
	.long	.Ldebug_loc81-.Lloclists_table_base0
	.long	.Ldebug_loc82-.Lloclists_table_base0
	.long	.Ldebug_loc83-.Lloclists_table_base0
	.long	.Ldebug_loc84-.Lloclists_table_base0
	.long	.Ldebug_loc85-.Lloclists_table_base0
	.long	.Ldebug_loc86-.Lloclists_table_base0
	.long	.Ldebug_loc87-.Lloclists_table_base0
	.long	.Ldebug_loc88-.Lloclists_table_base0
	.long	.Ldebug_loc89-.Lloclists_table_base0
	.long	.Ldebug_loc90-.Lloclists_table_base0
	.long	.Ldebug_loc91-.Lloclists_table_base0
	.long	.Ldebug_loc92-.Lloclists_table_base0
	.long	.Ldebug_loc93-.Lloclists_table_base0
	.long	.Ldebug_loc94-.Lloclists_table_base0
	.long	.Ldebug_loc95-.Lloclists_table_base0
	.long	.Ldebug_loc96-.Lloclists_table_base0
	.long	.Ldebug_loc97-.Lloclists_table_base0
	.long	.Ldebug_loc98-.Lloclists_table_base0
	.long	.Ldebug_loc99-.Lloclists_table_base0
	.long	.Ldebug_loc100-.Lloclists_table_base0
	.long	.Ldebug_loc101-.Lloclists_table_base0
	.long	.Ldebug_loc102-.Lloclists_table_base0
	.long	.Ldebug_loc103-.Lloclists_table_base0
	.long	.Ldebug_loc104-.Lloclists_table_base0
	.long	.Ldebug_loc105-.Lloclists_table_base0
	.long	.Ldebug_loc106-.Lloclists_table_base0
	.long	.Ldebug_loc107-.Lloclists_table_base0
	.long	.Ldebug_loc108-.Lloclists_table_base0
	.long	.Ldebug_loc109-.Lloclists_table_base0
	.long	.Ldebug_loc110-.Lloclists_table_base0
	.long	.Ldebug_loc111-.Lloclists_table_base0
	.long	.Ldebug_loc112-.Lloclists_table_base0
	.long	.Ldebug_loc113-.Lloclists_table_base0
	.long	.Ldebug_loc114-.Lloclists_table_base0
	.long	.Ldebug_loc115-.Lloclists_table_base0
	.long	.Ldebug_loc116-.Lloclists_table_base0
	.long	.Ldebug_loc117-.Lloclists_table_base0
	.long	.Ldebug_loc118-.Lloclists_table_base0
	.long	.Ldebug_loc119-.Lloclists_table_base0
	.long	.Ldebug_loc120-.Lloclists_table_base0
	.long	.Ldebug_loc121-.Lloclists_table_base0
	.long	.Ldebug_loc122-.Lloclists_table_base0
	.long	.Ldebug_loc123-.Lloclists_table_base0
	.long	.Ldebug_loc124-.Lloclists_table_base0
	.long	.Ldebug_loc125-.Lloclists_table_base0
	.long	.Ldebug_loc126-.Lloclists_table_base0
	.long	.Ldebug_loc127-.Lloclists_table_base0
	.long	.Ldebug_loc128-.Lloclists_table_base0
	.long	.Ldebug_loc129-.Lloclists_table_base0
	.long	.Ldebug_loc130-.Lloclists_table_base0
	.long	.Ldebug_loc131-.Lloclists_table_base0
	.long	.Ldebug_loc132-.Lloclists_table_base0
	.long	.Ldebug_loc133-.Lloclists_table_base0
	.long	.Ldebug_loc134-.Lloclists_table_base0
	.long	.Ldebug_loc135-.Lloclists_table_base0
	.long	.Ldebug_loc136-.Lloclists_table_base0
	.long	.Ldebug_loc137-.Lloclists_table_base0
	.long	.Ldebug_loc138-.Lloclists_table_base0
	.long	.Ldebug_loc139-.Lloclists_table_base0
	.long	.Ldebug_loc140-.Lloclists_table_base0
	.long	.Ldebug_loc141-.Lloclists_table_base0
	.long	.Ldebug_loc142-.Lloclists_table_base0
	.long	.Ldebug_loc143-.Lloclists_table_base0
	.long	.Ldebug_loc144-.Lloclists_table_base0
	.long	.Ldebug_loc145-.Lloclists_table_base0
	.long	.Ldebug_loc146-.Lloclists_table_base0
	.long	.Ldebug_loc147-.Lloclists_table_base0
	.long	.Ldebug_loc148-.Lloclists_table_base0
	.long	.Ldebug_loc149-.Lloclists_table_base0
	.long	.Ldebug_loc150-.Lloclists_table_base0
	.long	.Ldebug_loc151-.Lloclists_table_base0
	.long	.Ldebug_loc152-.Lloclists_table_base0
	.long	.Ldebug_loc153-.Lloclists_table_base0
	.long	.Ldebug_loc154-.Lloclists_table_base0
	.long	.Ldebug_loc155-.Lloclists_table_base0
	.long	.Ldebug_loc156-.Lloclists_table_base0
	.long	.Ldebug_loc157-.Lloclists_table_base0
	.long	.Ldebug_loc158-.Lloclists_table_base0
	.long	.Ldebug_loc159-.Lloclists_table_base0
	.long	.Ldebug_loc160-.Lloclists_table_base0
	.long	.Ldebug_loc161-.Lloclists_table_base0
	.long	.Ldebug_loc162-.Lloclists_table_base0
	.long	.Ldebug_loc163-.Lloclists_table_base0
	.long	.Ldebug_loc164-.Lloclists_table_base0
	.long	.Ldebug_loc165-.Lloclists_table_base0
	.long	.Ldebug_loc166-.Lloclists_table_base0
	.long	.Ldebug_loc167-.Lloclists_table_base0
	.long	.Ldebug_loc168-.Lloclists_table_base0
	.long	.Ldebug_loc169-.Lloclists_table_base0
	.long	.Ldebug_loc170-.Lloclists_table_base0
	.long	.Ldebug_loc171-.Lloclists_table_base0
	.long	.Ldebug_loc172-.Lloclists_table_base0
	.long	.Ldebug_loc173-.Lloclists_table_base0
	.long	.Ldebug_loc174-.Lloclists_table_base0
	.long	.Ldebug_loc175-.Lloclists_table_base0
	.long	.Ldebug_loc176-.Lloclists_table_base0
	.long	.Ldebug_loc177-.Lloclists_table_base0
	.long	.Ldebug_loc178-.Lloclists_table_base0
	.long	.Ldebug_loc179-.Lloclists_table_base0
.Ldebug_loc0:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin0-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp3-.Lfunc_begin0           #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3-.Lfunc_begin0           #   starting offset
	.uleb128 .Ltmp4-.Lfunc_begin0           #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4-.Lfunc_begin0           #   starting offset
	.uleb128 .Ltmp12-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp12-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp15-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp15-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp16-.Lfunc_begin0          #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp16-.Lfunc_begin0          #   starting offset
	.uleb128 .Lfunc_end0-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc1:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin0-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp6-.Lfunc_begin0           #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp6-.Lfunc_begin0           #   starting offset
	.uleb128 .Ltmp12-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 248
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp12-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp14-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp14-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp16-.Lfunc_begin0          #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp16-.Lfunc_begin0          #   starting offset
	.uleb128 .Lfunc_end0-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 248
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc2:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin0-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp3-.Lfunc_begin0           #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3-.Lfunc_begin0           #   starting offset
	.uleb128 .Ltmp5-.Lfunc_begin0           #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp5-.Lfunc_begin0           #   starting offset
	.uleb128 .Ltmp12-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 200
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp12-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp15-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp15-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp16-.Lfunc_begin0          #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp16-.Lfunc_begin0          #   starting offset
	.uleb128 .Lfunc_end0-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 200
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc3:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin0-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp9-.Lfunc_begin0           #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp9-.Lfunc_begin0           #   starting offset
	.uleb128 .Ltmp12-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp12-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp13-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp13-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp15-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp15-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp16-.Lfunc_begin0          #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp16-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp22-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp22-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp39-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp39-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp125-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp125-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp167-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp167-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp168-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp168-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp200-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp200-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end0-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc4:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin0-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp0-.Lfunc_begin0           #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp0-.Lfunc_begin0           #   starting offset
	.uleb128 .Lfunc_end0-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	176                             # 304
	.byte	2                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc5:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1-.Lfunc_begin0           #   starting offset
	.uleb128 .Ltmp15-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp16-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp453-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp513-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp521-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp523-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp524-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp524-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp525-.Lfunc_begin0         #   ending offset
	.byte	14                              # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	35                              # DW_OP_plus_uconst
	.byte	8                               # 8
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp525-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp537-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp977-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp981-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1015-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1071-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc6:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1-.Lfunc_begin0           #   starting offset
	.uleb128 .Ltmp4-.Lfunc_begin0           #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4-.Lfunc_begin0           #   starting offset
	.uleb128 .Ltmp12-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp12-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp15-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp16-.Lfunc_begin0          #   starting offset
	.uleb128 .Lfunc_end0-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc7:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp7-.Lfunc_begin0           #   starting offset
	.uleb128 .Ltmp12-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp195-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp446-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1015-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1071-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc8:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp7-.Lfunc_begin0           #   starting offset
	.uleb128 .Ltmp12-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp195-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp446-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1015-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1071-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc9:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp7-.Lfunc_begin0           #   starting offset
	.uleb128 .Ltmp12-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 248
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp195-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp446-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 248
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1015-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1071-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 248
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc10:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp7-.Lfunc_begin0           #   starting offset
	.uleb128 .Ltmp12-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 200
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp195-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp446-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 200
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1015-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1071-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 200
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc11:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp7-.Lfunc_begin0           #   starting offset
	.uleb128 .Ltmp9-.Lfunc_begin0           #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp9-.Lfunc_begin0           #   starting offset
	.uleb128 .Ltmp12-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp195-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp200-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc12:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp7-.Lfunc_begin0           #   starting offset
	.uleb128 .Ltmp12-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	176                             # 304
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp195-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp446-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	176                             # 304
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1015-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1071-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	176                             # 304
	.byte	2                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc13:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp7-.Lfunc_begin0           #   starting offset
	.uleb128 .Ltmp12-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp195-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp446-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1015-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1071-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc14:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp8-.Lfunc_begin0           #   starting offset
	.uleb128 .Ltmp12-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp197-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp295-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp297-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp312-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp314-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp315-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc15:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp10-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp11-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp11-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp12-.Lfunc_begin0          #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	12                              # 12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp199-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp446-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	12                              # 12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1015-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1071-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	12                              # 12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc16:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp18-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp46-.Lfunc_begin0          #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp46-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp72-.Lfunc_begin0          #   ending offset
	.byte	2                               # Loc expr size
	.byte	49                              # DW_OP_lit1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp72-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp99-.Lfunc_begin0          #   ending offset
	.byte	2                               # Loc expr size
	.byte	50                              # DW_OP_lit2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp99-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp126-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	51                              # DW_OP_lit3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp126-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp127-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	52                              # DW_OP_lit4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc17:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp18-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp46-.Lfunc_begin0          #   ending offset
	.byte	9                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	35                              # DW_OP_plus_uconst
	.byte	144                             # 66192
	.byte	133                             # 
	.byte	4                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp46-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp72-.Lfunc_begin0          #   ending offset
	.byte	9                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	35                              # DW_OP_plus_uconst
	.byte	144                             # 66448
	.byte	135                             # 
	.byte	4                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp72-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp99-.Lfunc_begin0          #   ending offset
	.byte	9                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	35                              # DW_OP_plus_uconst
	.byte	144                             # 66704
	.byte	137                             # 
	.byte	4                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp99-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp127-.Lfunc_begin0         #   ending offset
	.byte	9                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	35                              # DW_OP_plus_uconst
	.byte	144                             # 66960
	.byte	139                             # 
	.byte	4                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc18:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp18-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp23-.Lfunc_begin0          #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp23-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp37-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp46-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp49-.Lfunc_begin0          #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp49-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp63-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp72-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp75-.Lfunc_begin0          #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp75-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp89-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp99-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp102-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp102-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp116-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc19:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp23-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp34-.Lfunc_begin0          #   ending offset
	.byte	9                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	35                              # DW_OP_plus_uconst
	.byte	252                             # 28412
	.byte	221                             # 
	.byte	1                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp49-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp60-.Lfunc_begin0          #   ending offset
	.byte	9                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	35                              # DW_OP_plus_uconst
	.byte	252                             # 28540
	.byte	222                             # 
	.byte	1                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp75-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp86-.Lfunc_begin0          #   ending offset
	.byte	9                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	35                              # DW_OP_plus_uconst
	.byte	252                             # 28668
	.byte	223                             # 
	.byte	1                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp102-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp113-.Lfunc_begin0         #   ending offset
	.byte	9                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	35                              # DW_OP_plus_uconst
	.byte	252                             # 28796
	.byte	224                             # 
	.byte	1                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc20:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp23-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp34-.Lfunc_begin0          #   ending offset
	.byte	2                               # Loc expr size
	.byte	54                              # DW_OP_lit6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp49-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp60-.Lfunc_begin0          #   ending offset
	.byte	2                               # Loc expr size
	.byte	54                              # DW_OP_lit6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp75-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp86-.Lfunc_begin0          #   ending offset
	.byte	2                               # Loc expr size
	.byte	54                              # DW_OP_lit6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp102-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp113-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	54                              # DW_OP_lit6
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc21:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp23-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp24-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp24-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp28-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp28-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp34-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp49-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp50-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp50-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp54-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp54-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp60-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp75-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp76-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp76-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp80-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp80-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp86-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp102-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp103-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp103-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp107-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp107-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp113-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc22:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp23-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp26-.Lfunc_begin0          #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp26-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp34-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp49-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp52-.Lfunc_begin0          #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp52-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp60-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp75-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp78-.Lfunc_begin0          #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp78-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp86-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp102-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp105-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp105-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp113-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc23:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp37-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp40-.Lfunc_begin0          #   ending offset
	.byte	2                               # Loc expr size
	.byte	62                              # DW_OP_lit14
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp40-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp42-.Lfunc_begin0          #   ending offset
	.byte	5                               # Loc expr size
	.byte	113                             # DW_OP_breg1
	.byte	220                             # -16548
	.byte	254                             # 
	.byte	126                             # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp42-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp43-.Lfunc_begin0          #   ending offset
	.byte	5                               # Loc expr size
	.byte	113                             # DW_OP_breg1
	.byte	221                             # -16547
	.byte	254                             # 
	.byte	126                             # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp63-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp66-.Lfunc_begin0          #   ending offset
	.byte	2                               # Loc expr size
	.byte	62                              # DW_OP_lit14
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp66-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp68-.Lfunc_begin0          #   ending offset
	.byte	5                               # Loc expr size
	.byte	113                             # DW_OP_breg1
	.byte	156                             # -16612
	.byte	254                             # 
	.byte	126                             # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp68-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp69-.Lfunc_begin0          #   ending offset
	.byte	5                               # Loc expr size
	.byte	113                             # DW_OP_breg1
	.byte	157                             # -16611
	.byte	254                             # 
	.byte	126                             # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp89-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp92-.Lfunc_begin0          #   ending offset
	.byte	2                               # Loc expr size
	.byte	62                              # DW_OP_lit14
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp92-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp94-.Lfunc_begin0          #   ending offset
	.byte	5                               # Loc expr size
	.byte	114                             # DW_OP_breg2
	.byte	220                             # -16676
	.byte	253                             # 
	.byte	126                             # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp94-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp95-.Lfunc_begin0          #   ending offset
	.byte	5                               # Loc expr size
	.byte	114                             # DW_OP_breg2
	.byte	221                             # -16675
	.byte	253                             # 
	.byte	126                             # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp117-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp119-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	62                              # DW_OP_lit14
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp119-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp121-.Lfunc_begin0         #   ending offset
	.byte	5                               # Loc expr size
	.byte	114                             # DW_OP_breg2
	.byte	156                             # -16740
	.byte	253                             # 
	.byte	126                             # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp121-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp122-.Lfunc_begin0         #   ending offset
	.byte	5                               # Loc expr size
	.byte	114                             # DW_OP_breg2
	.byte	157                             # -16739
	.byte	253                             # 
	.byte	126                             # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc24:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp40-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp43-.Lfunc_begin0          #   ending offset
	.byte	10                              # Loc expr size
	.byte	113                             # DW_OP_breg1
	.byte	0                               # 0
	.byte	49                              # DW_OP_lit1
	.byte	37                              # DW_OP_shr
	.byte	35                              # DW_OP_plus_uconst
	.byte	251                             # 268435451
	.byte	255                             # 
	.byte	255                             # 
	.byte	127                             # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp66-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp69-.Lfunc_begin0          #   ending offset
	.byte	10                              # Loc expr size
	.byte	113                             # DW_OP_breg1
	.byte	0                               # 0
	.byte	49                              # DW_OP_lit1
	.byte	37                              # DW_OP_shr
	.byte	35                              # DW_OP_plus_uconst
	.byte	251                             # 268435451
	.byte	255                             # 
	.byte	255                             # 
	.byte	127                             # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp92-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp95-.Lfunc_begin0          #   ending offset
	.byte	10                              # Loc expr size
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	49                              # DW_OP_lit1
	.byte	37                              # DW_OP_shr
	.byte	35                              # DW_OP_plus_uconst
	.byte	251                             # 268435451
	.byte	255                             # 
	.byte	255                             # 
	.byte	127                             # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp119-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp122-.Lfunc_begin0         #   ending offset
	.byte	10                              # Loc expr size
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	49                              # DW_OP_lit1
	.byte	37                              # DW_OP_shr
	.byte	35                              # DW_OP_plus_uconst
	.byte	251                             # 268435451
	.byte	255                             # 
	.byte	255                             # 
	.byte	127                             # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc25:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp45-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp46-.Lfunc_begin0          #   ending offset
	.byte	2                               # Loc expr size
	.byte	51                              # DW_OP_lit3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp46-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp48-.Lfunc_begin0          #   ending offset
	.byte	2                               # Loc expr size
	.byte	52                              # DW_OP_lit4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp71-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp72-.Lfunc_begin0          #   ending offset
	.byte	2                               # Loc expr size
	.byte	51                              # DW_OP_lit3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp72-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp74-.Lfunc_begin0          #   ending offset
	.byte	2                               # Loc expr size
	.byte	52                              # DW_OP_lit4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp98-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp99-.Lfunc_begin0          #   ending offset
	.byte	2                               # Loc expr size
	.byte	51                              # DW_OP_lit3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp99-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp101-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	52                              # DW_OP_lit4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp124-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp126-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	51                              # DW_OP_lit3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp126-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp127-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	52                              # DW_OP_lit4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc26:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp127-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp135-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp136-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp166-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc27:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp127-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp129-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp129-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp130-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	49                              # DW_OP_lit1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp130-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp131-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	50                              # DW_OP_lit2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp131-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp132-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	51                              # DW_OP_lit3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp132-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp135-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	52                              # DW_OP_lit4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc28:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp137-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp162-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc29:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp138-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp142-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc30:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp139-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp144-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp147-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp151-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp154-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp160-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc31:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp139-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp143-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc32:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp139-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp143-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp143-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp144-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp150-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp151-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp157-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp158-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp159-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp166-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc33:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp139-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp143-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	49                              # DW_OP_lit1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp143-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp145-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp145-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp152-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp152-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp158-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp159-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp165-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc34:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp144-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp146-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp151-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp153-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc35:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp170-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp171-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp171-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp194-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc36:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp171-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp194-.Lfunc_begin0         #   ending offset
	.byte	9                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	35                              # DW_OP_plus_uconst
	.byte	224                             # 29152
	.byte	227                             # 
	.byte	1                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc37:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp171-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp173-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	52                              # DW_OP_lit4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp173-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp176-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	51                              # DW_OP_lit3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp176-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp184-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	50                              # DW_OP_lit2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp184-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp191-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	49                              # DW_OP_lit1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp191-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp194-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc38:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp171-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp173-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	49                              # DW_OP_lit1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp176-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp184-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp184-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp189-.Lfunc_begin0         #   ending offset
	.byte	36                              # Loc expr size
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	49                              # DW_OP_lit1
	.byte	36                              # DW_OP_shl
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	168                             # DW_OP_convert
	.asciz	"\253\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\257\200\200"                  # 
	.byte	51                              # DW_OP_lit3
	.byte	37                              # DW_OP_shr
	.byte	49                              # DW_OP_lit1
	.byte	26                              # DW_OP_and
	.byte	33                              # DW_OP_or
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc39:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp171-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp173-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp178-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp182-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp182-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp183-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp187-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp191-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp191-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp194-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc40:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp171-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp172-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp173-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp174-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp183-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp184-.Lfunc_begin0         #   ending offset
	.byte	15                              # Loc expr size
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	168                             # DW_OP_convert
	.asciz	"\253\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\257\200\200"                  # 
	.byte	51                              # DW_OP_lit3
	.byte	37                              # DW_OP_shr
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp184-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp192-.Lfunc_begin0         #   ending offset
	.byte	17                              # Loc expr size
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	168                             # DW_OP_convert
	.asciz	"\253\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\257\200\200"                  # 
	.byte	51                              # DW_OP_lit3
	.byte	37                              # DW_OP_shr
	.byte	49                              # DW_OP_lit1
	.byte	37                              # DW_OP_shr
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc41:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp172-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp174-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp174-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp179-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp183-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp184-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp184-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp192-.Lfunc_begin0         #   ending offset
	.byte	17                              # Loc expr size
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	168                             # DW_OP_convert
	.asciz	"\253\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\257\200\200"                  # 
	.byte	51                              # DW_OP_lit3
	.byte	37                              # DW_OP_shr
	.byte	49                              # DW_OP_lit1
	.byte	26                              # DW_OP_and
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc42:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp175-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp179-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp188-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp192-.Lfunc_begin0         #   ending offset
	.byte	17                              # Loc expr size
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	168                             # DW_OP_convert
	.asciz	"\253\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\257\200\200"                  # 
	.byte	51                              # DW_OP_lit3
	.byte	37                              # DW_OP_shr
	.byte	49                              # DW_OP_lit1
	.byte	26                              # DW_OP_and
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc43:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp203-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp206-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp206-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp208-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc44:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp207-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp208-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	32                              # DW_OP_not
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp447-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp459-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	0                               # 0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp459-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp460-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp460-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp626-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	0                               # 0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp627-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp635-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	0                               # 0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp821-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp836-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	0                               # 0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp977-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp984-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	0                               # 0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp984-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp985-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1071-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end0-.Lfunc_begin0      #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	0                               # 0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc45:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp212-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp273-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc46:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp212-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp245-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp246-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp247-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp247-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp321-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc47:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp212-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp228-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp228-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp247-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	49                              # DW_OP_lit1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp247-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp268-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	50                              # DW_OP_lit2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp268-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp288-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	51                              # DW_OP_lit3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp288-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp290-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	52                              # DW_OP_lit4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp297-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp298-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	51                              # DW_OP_lit3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp298-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp300-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	52                              # DW_OP_lit4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc48:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp214-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp215-.Lfunc_begin0         #   ending offset
	.byte	6                               # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	122                             # DW_OP_breg10
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp229-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp231-.Lfunc_begin0         #   ending offset
	.byte	6                               # Loc expr size
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	122                             # DW_OP_breg10
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp248-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp250-.Lfunc_begin0         #   ending offset
	.byte	6                               # Loc expr size
	.byte	123                             # DW_OP_breg11
	.byte	0                               # 0
	.byte	122                             # DW_OP_breg10
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp269-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp271-.Lfunc_begin0         #   ending offset
	.byte	6                               # Loc expr size
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	122                             # DW_OP_breg10
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc49:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp222-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp227-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp235-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp238-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	50                              # DW_OP_lit2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp238-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp243-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp254-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp257-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	50                              # DW_OP_lit2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp257-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp262-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp276-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp279-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	50                              # DW_OP_lit2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp279-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp284-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc50:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp293-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp296-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp296-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp297-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc51:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp310-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp313-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp313-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp314-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc52:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp318-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp333-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp333-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp341-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp341-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp343-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp343-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp344-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp344-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp353-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc53:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp321-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp323-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc54:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp324-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp333-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp333-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp344-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp344-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp353-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc55:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp328-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp353-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc56:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp329-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp333-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp333-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp344-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp344-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp353-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc57:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp335-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp337-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc58:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp336-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp338-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc59:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp336-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp343-.Lfunc_begin0         #   ending offset
	.byte	14                              # Loc expr size
	.byte	127                             # DW_OP_breg15
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	55                              # DW_OP_lit7
	.byte	37                              # DW_OP_shr
	.byte	49                              # DW_OP_lit1
	.byte	26                              # DW_OP_and
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc60:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp345-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp347-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp347-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp353-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc61:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp345-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp353-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc62:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp357-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp378-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp380-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp415-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1015-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1071-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc63:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp361-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp378-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp380-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp404-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1015-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1062-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc64:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp369-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp373-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc65:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp374-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp378-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp380-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp386-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp386-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp446-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	0                               # 0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1015-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1071-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	0                               # 0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc66:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp381-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp382-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp382-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp383-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	49                              # DW_OP_lit1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp383-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp384-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	50                              # DW_OP_lit2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp384-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp385-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	51                              # DW_OP_lit3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp385-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp387-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	52                              # DW_OP_lit4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc67:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp394-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp396-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp408-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp415-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp418-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp437-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp437-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp444-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc68:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp396-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp398-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp398-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp400-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	49                              # DW_OP_lit1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp400-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp402-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	50                              # DW_OP_lit2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp402-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp404-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	51                              # DW_OP_lit3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp405-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp410-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	52                              # DW_OP_lit4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1015-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1028-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1028-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1041-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	49                              # DW_OP_lit1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1041-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1056-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	50                              # DW_OP_lit2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1056-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1071-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	51                              # DW_OP_lit3
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc69:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp396-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp398-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp398-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp400-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp400-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp402-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp402-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp404-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1015-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1021-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1021-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1023-.Lfunc_begin0        #   ending offset
	.byte	13                              # Loc expr size
	.byte	113                             # DW_OP_breg1
	.byte	0                               # 0
	.byte	168                             # DW_OP_convert
	.asciz	"\253\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\257\200\200"                  # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1024-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1028-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	113                             # DW_OP_breg1
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1028-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1033-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1034-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1036-.Lfunc_begin0        #   ending offset
	.byte	13                              # Loc expr size
	.byte	113                             # DW_OP_breg1
	.byte	0                               # 0
	.byte	168                             # DW_OP_convert
	.asciz	"\253\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\257\200\200"                  # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1037-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1041-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	113                             # DW_OP_breg1
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1041-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1048-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1049-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1051-.Lfunc_begin0        #   ending offset
	.byte	13                              # Loc expr size
	.byte	113                             # DW_OP_breg1
	.byte	0                               # 0
	.byte	168                             # DW_OP_convert
	.asciz	"\253\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\257\200\200"                  # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1052-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1056-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	113                             # DW_OP_breg1
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1056-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1064-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1064-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1066-.Lfunc_begin0        #   ending offset
	.byte	13                              # Loc expr size
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	168                             # DW_OP_convert
	.asciz	"\253\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\257\200\200"                  # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1067-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1071-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	112                             # DW_OP_breg0
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc70:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp411-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp412-.Lfunc_begin0         #   ending offset
	.byte	10                              # Loc expr size
	.byte	122                             # DW_OP_breg10
	.byte	1                               # 1
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp417-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp424-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp424-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp445-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc71:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp420-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp439-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc72:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp420-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp437-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc73:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp420-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp439-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc74:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp421-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp422-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp422-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp425-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp425-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp426-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp427-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp432-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc75:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp426-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp427-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc76:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp436-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp441-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc77:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp451-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp453-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	49                              # DW_OP_lit1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp453-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp454-.Lfunc_begin0         #   ending offset
	.byte	5                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	148                             # DW_OP_deref_size
	.byte	8                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp454-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp459-.Lfunc_begin0         #   ending offset
	.byte	6                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	232                             # 360
	.byte	2                               # 
	.byte	148                             # DW_OP_deref_size
	.byte	8                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp460-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp474-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp474-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp1015-.Lfunc_begin0        #   ending offset
	.byte	5                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	148                             # DW_OP_deref_size
	.byte	8                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1071-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1074-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc78:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp469-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp536-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	192                             # 192
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp537-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp1014-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	192                             # 192
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc79:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp468-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp536-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp537-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp1014-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc80:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp468-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp536-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp537-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp1014-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc81:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp468-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp536-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	0                               # 0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp537-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp626-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	0                               # 0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp627-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp635-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	0                               # 0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp637-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp641-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	0                               # 0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp642-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp660-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp660-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp662-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp662-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp665-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp668-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp669-.Lfunc_begin0         #   ending offset
	.byte	12                              # Loc expr size
	.byte	122                             # DW_OP_breg10
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	127                             # -1
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	121                             # DW_OP_breg9
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp759-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp761-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	0                               # 0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp761-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp762-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp762-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp763-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp763-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp766-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	0                               # 0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp766-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp767-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp773-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp774-.Lfunc_begin0         #   ending offset
	.byte	12                              # Loc expr size
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	127                             # -1
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp800-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp811-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp811-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp812-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	0                               # 0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp812-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp818-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp818-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp819-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp819-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp820-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp820-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp836-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	0                               # 0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp836-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp838-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp840-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp841-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp848-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp849-.Lfunc_begin0         #   ending offset
	.byte	12                              # Loc expr size
	.byte	121                             # DW_OP_breg9
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	127                             # -1
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp863-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp867-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	0                               # 0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp869-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp948-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	0                               # 0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp949-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp951-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	0                               # 0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp951-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp952-.Lfunc_begin0         #   ending offset
	.byte	12                              # Loc expr size
	.byte	118                             # DW_OP_breg6
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	127                             # -1
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp975-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp984-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	0                               # 0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp984-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp985-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp990-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp991-.Lfunc_begin0         #   ending offset
	.byte	12                              # Loc expr size
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	127                             # -1
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	118                             # DW_OP_breg6
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc82:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp538-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp548-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp563-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp977-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 368
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp981-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp1014-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 368
	.byte	2                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc83:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp468-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp474-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp474-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp536-.Lfunc_begin0         #   ending offset
	.byte	5                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	148                             # DW_OP_deref_size
	.byte	8                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp537-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp1014-.Lfunc_begin0        #   ending offset
	.byte	5                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	148                             # DW_OP_deref_size
	.byte	8                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc84:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp468-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp536-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp537-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp1014-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc85:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp470-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp471-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp471-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp536-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	156                             # 156
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp537-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp804-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	156                             # 156
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp804-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp807-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp807-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp1014-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	156                             # 156
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc86:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp470-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp536-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	232                             # 232
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp537-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp808-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	232                             # 232
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp808-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp815-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp821-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp836-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	232                             # 232
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp977-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp1014-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	232                             # 232
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc87:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp479-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp480-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp480-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp483-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp484-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp489-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp492-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp493-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp494-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp502-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp502-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp503-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp503-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp504-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp504-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp505-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp505-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp506-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp506-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp507-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp507-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp509-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp509-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp512-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp512-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp521-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	12                              # 12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp521-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp527-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp527-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp536-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	12                              # 12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp538-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp563-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp563-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp863-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp977-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp981-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	12                              # 12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp981-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp1014-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc88:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp559-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp625-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp627-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp628-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc89:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp545-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp554-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp554-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp639-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	168                             # 168
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp639-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp640-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp821-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp836-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	168                             # 168
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp981-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp1014-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	168                             # 168
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc90:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp586-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp626-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp627-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp635-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp821-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp836-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp981-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp1007-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc91:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp596-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp598-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp598-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp860-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	12                              # 12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp981-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp1014-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	12                              # 12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc92:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp599-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp600-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp600-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp863-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	152                             # 152
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp981-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp1014-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	152                             # 152
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc93:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp636-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp641-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp641-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp821-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp836-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp977-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc94:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp472-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp475-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp475-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp483-.Lfunc_begin0         #   ending offset
	.byte	12                              # Loc expr size
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	49                              # DW_OP_lit1
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp483-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp486-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp490-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp491-.Lfunc_begin0         #   ending offset
	.byte	12                              # Loc expr size
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	49                              # DW_OP_lit1
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp491-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp496-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp496-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp499-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp499-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp503-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp505-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp507-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp507-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp508-.Lfunc_begin0         #   ending offset
	.byte	12                              # Loc expr size
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	49                              # DW_OP_lit1
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc95:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp497-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp503-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp505-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp520-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp521-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp522-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp527-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp531-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp977-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp978-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc96:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp513-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp517-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	49                              # DW_OP_lit1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp517-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp519-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp533-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp536-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc97:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp523-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp524-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	49                              # DW_OP_lit1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp524-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp525-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	50                              # DW_OP_lit2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp525-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp526-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	51                              # DW_OP_lit3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp526-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp527-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	52                              # DW_OP_lit4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc98:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp539-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp540-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	51                              # DW_OP_lit3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp540-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp563-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	52                              # DW_OP_lit4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc99:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp541-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp596-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc100:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp546-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp585-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc101:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp546-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp547-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp547-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp585-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 368
	.byte	2                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc102:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp563-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp564-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp564-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp575-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc103:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp546-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp585-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc104:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp559-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp564-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp564-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp572-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp572-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp575-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp575-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp585-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc105:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp550-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp551-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc106:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp557-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp585-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc107:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp557-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp564-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp564-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp575-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp575-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp585-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc108:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp566-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp568-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc109:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp567-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp569-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc110:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp567-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp574-.Lfunc_begin0         #   ending offset
	.byte	14                              # Loc expr size
	.byte	113                             # DW_OP_breg1
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	55                              # DW_OP_lit7
	.byte	37                              # DW_OP_shr
	.byte	49                              # DW_OP_lit1
	.byte	26                              # DW_OP_and
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc111:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp577-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp579-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp579-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp585-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc112:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp577-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp585-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc113:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp586-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp592-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp592-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp594-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	49                              # DW_OP_lit1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp615-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp616-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	49                              # DW_OP_lit1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc114:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp611-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp616-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc115:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp623-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp624-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp624-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp863-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	148                             # 148
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp981-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp1014-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	148                             # 148
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc116:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp629-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp634-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc117:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp629-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp631-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	49                              # DW_OP_lit1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp631-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp634-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp822-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp835-.Lfunc_begin0         #   ending offset
	.byte	12                              # Loc expr size
	.byte	122                             # DW_OP_breg10
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	49                              # DW_OP_lit1
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp983-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp995-.Lfunc_begin0         #   ending offset
	.byte	12                              # Loc expr size
	.byte	122                             # DW_OP_breg10
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	49                              # DW_OP_lit1
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp996-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp997-.Lfunc_begin0         #   ending offset
	.byte	12                              # Loc expr size
	.byte	122                             # DW_OP_breg10
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	49                              # DW_OP_lit1
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc118:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp637-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp641-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	50                              # DW_OP_lit2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp641-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp642-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp642-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp658-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp658-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp710-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp710-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp711-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp711-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp800-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp800-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp821-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp836-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp839-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp839-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp845-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp845-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp847-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp848-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp851-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp851-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp862-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp862-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp863-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc119:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp637-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp641-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp641-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp798-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # DW_OP_reg11
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc120:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp697-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp736-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc121:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp649-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp652-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	50                              # DW_OP_lit2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp652-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp657-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp699-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp707-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp707-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp738-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp738-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp741-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc122:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp675-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp738-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp738-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp741-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc123:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp698-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp798-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc124:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp710-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp716-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp716-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp718-.Lfunc_begin0         #   ending offset
	.byte	21                              # Loc expr size
	.byte	121                             # DW_OP_breg9
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	34                              # DW_OP_plus
	.byte	168                             # DW_OP_convert
	.asciz	"\253\200\200"                  # 
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp718-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp719-.Lfunc_begin0         #   ending offset
	.byte	24                              # Loc expr size
	.byte	121                             # DW_OP_breg9
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	34                              # DW_OP_plus
	.byte	168                             # DW_OP_convert
	.asciz	"\253\200\200"                  # 
	.byte	34                              # DW_OP_plus
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp722-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp723-.Lfunc_begin0         #   ending offset
	.byte	21                              # Loc expr size
	.byte	121                             # DW_OP_breg9
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	34                              # DW_OP_plus
	.byte	168                             # DW_OP_convert
	.asciz	"\253\200\200"                  # 
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp725-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp783-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc125:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp712-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp721-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp721-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp722-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp722-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp730-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp734-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp741-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	144                             # 400
	.byte	3                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc126:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp675-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp696-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp707-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp714-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc127:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp675-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp696-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp707-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp714-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # DW_OP_reg11
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc128:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp675-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp696-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp707-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp714-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc129:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp675-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp696-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp707-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp714-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc130:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp680-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp685-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp685-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp689-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp689-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp690-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp692-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp696-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc131:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp752-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp798-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	53                              # DW_OP_lit5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc132:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp729-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp732-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp753-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp797-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc133:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp738-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp740-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp741-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp749-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp749-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp752-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc134:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp735-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp737-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc135:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp739-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp752-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc136:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp739-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp741-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp741-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp752-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc137:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp743-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp745-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc138:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp744-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp746-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc139:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp744-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp751-.Lfunc_begin0         #   ending offset
	.byte	14                              # Loc expr size
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	55                              # DW_OP_lit7
	.byte	37                              # DW_OP_shr
	.byte	49                              # DW_OP_lit1
	.byte	26                              # DW_OP_and
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc140:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp759-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp761-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp761-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp763-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	0                               # 0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp763-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp764-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp764-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp766-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp766-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp782-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	0                               # 0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp782-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp792-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc141:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp782-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp783-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc142:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp782-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp783-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc143:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp786-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp788-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc144:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp791-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp796-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc145:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp825-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp826-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp826-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp835-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp981-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp1014-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc146:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp827-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp835-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp981-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp1014-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc147:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp833-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp834-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp834-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp835-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp981-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp1014-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc148:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp856-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp857-.Lfunc_begin0         #   ending offset
	.byte	10                              # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	1                               # 1
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp863-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp867-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp869-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp976-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc149:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp863-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp867-.Lfunc_begin0         #   ending offset
	.byte	20                              # Loc expr size
	.byte	121                             # DW_OP_breg9
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	125                             # DW_OP_breg13
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp869-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp893-.Lfunc_begin0         #   ending offset
	.byte	20                              # Loc expr size
	.byte	121                             # DW_OP_breg9
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	125                             # DW_OP_breg13
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp894-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp961-.Lfunc_begin0         #   ending offset
	.byte	20                              # Loc expr size
	.byte	121                             # DW_OP_breg9
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	125                             # DW_OP_breg13
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc150:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp863-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp867-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp886-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp968-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp970-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp977-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc151:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp863-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp864-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp896-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp916-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc152:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp871-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp877-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp877-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp881-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc153:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp875-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp876-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc154:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp901-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp905-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc155:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp897-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp900-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp901-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp906-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc156:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp932-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp974-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	52                              # DW_OP_lit4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc157:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp910-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp911-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp911-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp933-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp933-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp941-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp941-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp943-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp943-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp944-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp944-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp959-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp959-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp962-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp962-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp974-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc158:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp918-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp920-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp921-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp929-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp929-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp931-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp931-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp932-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc159:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp916-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp932-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc160:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp914-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp917-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc161:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp919-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp932-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc162:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp919-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp921-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp921-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp932-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc163:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp923-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp926-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc164:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp924-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp925-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc165:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp924-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp931-.Lfunc_begin0         #   ending offset
	.byte	14                              # Loc expr size
	.byte	126                             # DW_OP_breg14
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	55                              # DW_OP_lit7
	.byte	37                              # DW_OP_shr
	.byte	49                              # DW_OP_lit1
	.byte	26                              # DW_OP_and
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc166:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp939-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp940-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp940-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp958-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp958-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp959-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	0                               # 0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp959-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp974-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc167:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp964-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp967-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc168:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1004-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1006-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc169:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1009-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1013-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc170:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1016-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1021-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1028-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1034-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1041-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1049-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1056-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1064-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc171:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1016-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1021-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1028-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1034-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	49                              # DW_OP_lit1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1041-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1049-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	50                              # DW_OP_lit2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1056-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1064-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	51                              # DW_OP_lit3
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc172:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1016-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1021-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1028-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1034-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1041-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1049-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1056-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1064-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc173:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1020-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1028-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1032-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1041-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1047-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1056-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1063-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1071-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc174:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1041-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1049-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	50                              # DW_OP_lit2
	.byte	50                              # DW_OP_lit2
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1056-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1064-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	51                              # DW_OP_lit3
	.byte	50                              # DW_OP_lit2
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc175:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1071-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1074-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1074-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1076-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1076-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1080-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1080-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1086-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1086-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end0-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc176:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1072-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1074-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1074-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1075-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1075-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1080-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1080-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1086-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1086-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end0-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc177:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1073-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1075-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1075-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1079-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1079-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1086-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1086-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end0-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc178:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1075-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1079-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc179:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1075-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1077-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_list_header_end0:
	.section	.debug_abbrev,"",@progbits
	.byte	1                               # Abbreviation Code
	.byte	17                              # DW_TAG_compile_unit
	.byte	1                               # DW_CHILDREN_yes
	.byte	37                              # DW_AT_producer
	.byte	37                              # DW_FORM_strx1
	.byte	19                              # DW_AT_language
	.byte	5                               # DW_FORM_data2
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	114                             # DW_AT_str_offsets_base
	.byte	23                              # DW_FORM_sec_offset
	.byte	16                              # DW_AT_stmt_list
	.byte	23                              # DW_FORM_sec_offset
	.byte	27                              # DW_AT_comp_dir
	.byte	37                              # DW_FORM_strx1
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	115                             # DW_AT_addr_base
	.byte	23                              # DW_FORM_sec_offset
	.byte	116                             # DW_AT_rnglists_base
	.byte	23                              # DW_FORM_sec_offset
	.ascii	"\214\001"                      # DW_AT_loclists_base
	.byte	23                              # DW_FORM_sec_offset
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	2                               # Abbreviation Code
	.byte	36                              # DW_TAG_base_type
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	62                              # DW_AT_encoding
	.byte	11                              # DW_FORM_data1
	.byte	11                              # DW_AT_byte_size
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	3                               # Abbreviation Code
	.byte	4                               # DW_TAG_enumeration_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	11                              # DW_AT_byte_size
	.byte	11                              # DW_FORM_data1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	4                               # Abbreviation Code
	.byte	40                              # DW_TAG_enumerator
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	28                              # DW_AT_const_value
	.byte	15                              # DW_FORM_udata
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	5                               # Abbreviation Code
	.byte	19                              # DW_TAG_structure_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	11                              # DW_AT_byte_size
	.byte	5                               # DW_FORM_data2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	6                               # Abbreviation Code
	.byte	13                              # DW_TAG_member
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	56                              # DW_AT_data_member_location
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	7                               # Abbreviation Code
	.byte	13                              # DW_TAG_member
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	56                              # DW_AT_data_member_location
	.byte	5                               # DW_FORM_data2
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	8                               # Abbreviation Code
	.byte	22                              # DW_TAG_typedef
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	9                               # Abbreviation Code
	.byte	1                               # DW_TAG_array_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	10                              # Abbreviation Code
	.byte	33                              # DW_TAG_subrange_type
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	55                              # DW_AT_count
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	11                              # Abbreviation Code
	.byte	36                              # DW_TAG_base_type
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	11                              # DW_AT_byte_size
	.byte	11                              # DW_FORM_data1
	.byte	62                              # DW_AT_encoding
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	12                              # Abbreviation Code
	.byte	15                              # DW_TAG_pointer_type
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	13                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	32                              # DW_AT_inline
	.byte	33                              # DW_FORM_implicit_const
	.byte	1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	14                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	15                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	16                              # Abbreviation Code
	.byte	11                              # DW_TAG_lexical_block
	.byte	1                               # DW_CHILDREN_yes
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	17                              # Abbreviation Code
	.byte	22                              # DW_TAG_typedef
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	18                              # Abbreviation Code
	.byte	55                              # DW_TAG_restrict_type
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	19                              # Abbreviation Code
	.byte	19                              # DW_TAG_structure_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	11                              # DW_AT_byte_size
	.byte	11                              # DW_FORM_data1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	20                              # Abbreviation Code
	.byte	21                              # DW_TAG_subroutine_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	21                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	22                              # Abbreviation Code
	.byte	19                              # DW_TAG_structure_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	11                              # DW_AT_byte_size
	.byte	11                              # DW_FORM_data1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	23                              # Abbreviation Code
	.byte	21                              # DW_TAG_subroutine_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	24                              # Abbreviation Code
	.byte	22                              # DW_TAG_typedef
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	25                              # Abbreviation Code
	.byte	19                              # DW_TAG_structure_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	11                              # DW_AT_byte_size
	.byte	6                               # DW_FORM_data4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	26                              # Abbreviation Code
	.byte	13                              # DW_TAG_member
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	56                              # DW_AT_data_member_location
	.byte	6                               # DW_FORM_data4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	27                              # Abbreviation Code
	.byte	33                              # DW_TAG_subrange_type
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	55                              # DW_AT_count
	.byte	5                               # DW_FORM_data2
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	28                              # Abbreviation Code
	.byte	38                              # DW_TAG_const_type
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	29                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	32                              # DW_AT_inline
	.byte	33                              # DW_FORM_implicit_const
	.byte	1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	30                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	31                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	32                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	32                              # DW_AT_inline
	.byte	33                              # DW_FORM_implicit_const
	.byte	1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	33                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	32                              # DW_AT_inline
	.byte	33                              # DW_FORM_implicit_const
	.byte	1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	34                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	64                              # DW_AT_frame_base
	.byte	24                              # DW_FORM_exprloc
	.byte	122                             # DW_AT_call_all_calls
	.byte	25                              # DW_FORM_flag_present
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	63                              # DW_AT_external
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	35                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	34                              # DW_FORM_loclistx
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	36                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	34                              # DW_FORM_loclistx
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	37                              # Abbreviation Code
	.byte	29                              # DW_TAG_inlined_subroutine
	.byte	1                               # DW_CHILDREN_yes
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	88                              # DW_AT_call_file
	.byte	11                              # DW_FORM_data1
	.byte	89                              # DW_AT_call_line
	.byte	5                               # DW_FORM_data2
	.byte	87                              # DW_AT_call_column
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	38                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	24                              # DW_FORM_exprloc
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	39                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	24                              # DW_FORM_exprloc
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	40                              # Abbreviation Code
	.byte	11                              # DW_TAG_lexical_block
	.byte	1                               # DW_CHILDREN_yes
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	41                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	34                              # DW_FORM_loclistx
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	42                              # Abbreviation Code
	.byte	11                              # DW_TAG_lexical_block
	.byte	1                               # DW_CHILDREN_yes
	.byte	85                              # DW_AT_ranges
	.byte	35                              # DW_FORM_rnglistx
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	43                              # Abbreviation Code
	.byte	29                              # DW_TAG_inlined_subroutine
	.byte	1                               # DW_CHILDREN_yes
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	85                              # DW_AT_ranges
	.byte	35                              # DW_FORM_rnglistx
	.byte	88                              # DW_AT_call_file
	.byte	11                              # DW_FORM_data1
	.byte	89                              # DW_AT_call_line
	.byte	11                              # DW_FORM_data1
	.byte	87                              # DW_AT_call_column
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	44                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	34                              # DW_FORM_loclistx
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	45                              # Abbreviation Code
	.byte	29                              # DW_TAG_inlined_subroutine
	.byte	0                               # DW_CHILDREN_no
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	85                              # DW_AT_ranges
	.byte	35                              # DW_FORM_rnglistx
	.byte	88                              # DW_AT_call_file
	.byte	11                              # DW_FORM_data1
	.byte	89                              # DW_AT_call_line
	.byte	11                              # DW_FORM_data1
	.byte	87                              # DW_AT_call_column
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	46                              # Abbreviation Code
	.byte	29                              # DW_TAG_inlined_subroutine
	.byte	1                               # DW_CHILDREN_yes
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	88                              # DW_AT_call_file
	.byte	11                              # DW_FORM_data1
	.byte	89                              # DW_AT_call_line
	.byte	11                              # DW_FORM_data1
	.byte	87                              # DW_AT_call_column
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	47                              # Abbreviation Code
	.byte	29                              # DW_TAG_inlined_subroutine
	.byte	1                               # DW_CHILDREN_yes
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	85                              # DW_AT_ranges
	.byte	35                              # DW_FORM_rnglistx
	.byte	88                              # DW_AT_call_file
	.byte	11                              # DW_FORM_data1
	.byte	89                              # DW_AT_call_line
	.byte	5                               # DW_FORM_data2
	.byte	87                              # DW_AT_call_column
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	48                              # Abbreviation Code
	.byte	29                              # DW_TAG_inlined_subroutine
	.byte	0                               # DW_CHILDREN_no
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	88                              # DW_AT_call_file
	.byte	11                              # DW_FORM_data1
	.byte	89                              # DW_AT_call_line
	.byte	5                               # DW_FORM_data2
	.byte	87                              # DW_AT_call_column
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	49                              # Abbreviation Code
	.byte	29                              # DW_TAG_inlined_subroutine
	.byte	0                               # DW_CHILDREN_no
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	85                              # DW_AT_ranges
	.byte	35                              # DW_FORM_rnglistx
	.byte	88                              # DW_AT_call_file
	.byte	11                              # DW_FORM_data1
	.byte	89                              # DW_AT_call_line
	.byte	5                               # DW_FORM_data2
	.byte	87                              # DW_AT_call_column
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	50                              # Abbreviation Code
	.byte	29                              # DW_TAG_inlined_subroutine
	.byte	0                               # DW_CHILDREN_no
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	88                              # DW_AT_call_file
	.byte	11                              # DW_FORM_data1
	.byte	89                              # DW_AT_call_line
	.byte	11                              # DW_FORM_data1
	.byte	87                              # DW_AT_call_column
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	51                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	28                              # DW_AT_const_value
	.byte	15                              # DW_FORM_udata
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	52                              # Abbreviation Code
	.byte	72                              # DW_TAG_call_site
	.byte	0                               # DW_CHILDREN_no
	.byte	127                             # DW_AT_call_origin
	.byte	19                              # DW_FORM_ref4
	.byte	125                             # DW_AT_call_return_pc
	.byte	27                              # DW_FORM_addrx
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	53                              # Abbreviation Code
	.byte	72                              # DW_TAG_call_site
	.byte	0                               # DW_CHILDREN_no
	.ascii	"\203\001"                      # DW_AT_call_target
	.byte	24                              # DW_FORM_exprloc
	.byte	125                             # DW_AT_call_return_pc
	.byte	27                              # DW_FORM_addrx
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	54                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	60                              # DW_AT_declaration
	.byte	25                              # DW_FORM_flag_present
	.byte	63                              # DW_AT_external
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	0                               # EOM(3)
	.section	.debug_info,"",@progbits
.Lcu_begin0:
	.long	.Ldebug_info_end0-.Ldebug_info_start0 # Length of Unit
.Ldebug_info_start0:
	.short	5                               # DWARF version number
	.byte	1                               # DWARF Unit Type
	.byte	8                               # Address Size (in bytes)
	.long	.debug_abbrev                   # Offset Into Abbrev. Section
	.byte	1                               # Abbrev [1] 0xc:0x1a9c DW_TAG_compile_unit
	.byte	0                               # DW_AT_producer
	.short	12                              # DW_AT_language
	.byte	1                               # DW_AT_name
	.long	.Lstr_offsets_base0             # DW_AT_str_offsets_base
	.long	.Lline_table_start0             # DW_AT_stmt_list
	.byte	2                               # DW_AT_comp_dir
	.byte	0                               # DW_AT_low_pc
	.long	.Lfunc_end0-.Lfunc_begin0       # DW_AT_high_pc
	.long	.Laddr_table_base0              # DW_AT_addr_base
	.long	.Lrnglists_table_base0          # DW_AT_rnglists_base
	.long	.Lloclists_table_base0          # DW_AT_loclists_base
	.byte	2                               # Abbrev [2] 0x2b:0x4 DW_TAG_base_type
	.byte	217                             # DW_AT_name
	.byte	7                               # DW_AT_encoding
	.byte	8                               # DW_AT_byte_size
	.byte	2                               # Abbrev [2] 0x2f:0x4 DW_TAG_base_type
	.byte	216                             # DW_AT_name
	.byte	7                               # DW_AT_encoding
	.byte	4                               # DW_AT_byte_size
	.byte	3                               # Abbrev [3] 0x33:0x15 DW_TAG_enumeration_type
	.long	72                              # DW_AT_type
	.byte	4                               # DW_AT_byte_size
	.byte	1                               # DW_AT_decl_file
	.byte	250                             # DW_AT_decl_line
	.byte	4                               # Abbrev [4] 0x3b:0x3 DW_TAG_enumerator
	.byte	4                               # DW_AT_name
	.byte	0                               # DW_AT_const_value
	.byte	4                               # Abbrev [4] 0x3e:0x3 DW_TAG_enumerator
	.byte	5                               # DW_AT_name
	.byte	1                               # DW_AT_const_value
	.byte	4                               # Abbrev [4] 0x41:0x3 DW_TAG_enumerator
	.byte	6                               # DW_AT_name
	.byte	2                               # DW_AT_const_value
	.byte	4                               # Abbrev [4] 0x44:0x3 DW_TAG_enumerator
	.byte	7                               # DW_AT_name
	.byte	3                               # DW_AT_const_value
	.byte	0                               # End Of Children Mark
	.byte	2                               # Abbrev [2] 0x48:0x4 DW_TAG_base_type
	.byte	3                               # DW_AT_name
	.byte	7                               # DW_AT_encoding
	.byte	4                               # DW_AT_byte_size
	.byte	5                               # Abbrev [5] 0x4c:0x67 DW_TAG_structure_type
	.short	736                             # DW_AT_byte_size
	.byte	4                               # DW_AT_decl_file
	.byte	27                              # DW_AT_decl_line
	.byte	6                               # Abbrev [6] 0x51:0x9 DW_TAG_member
	.byte	8                               # DW_AT_name
	.long	179                             # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	28                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	6                               # Abbrev [6] 0x5a:0x9 DW_TAG_member
	.byte	12                              # DW_AT_name
	.long	179                             # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	29                              # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	6                               # Abbrev [6] 0x63:0x9 DW_TAG_member
	.byte	13                              # DW_AT_name
	.long	199                             # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	30                              # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	6                               # Abbrev [6] 0x6c:0x9 DW_TAG_member
	.byte	16                              # DW_AT_name
	.long	215                             # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	31                              # DW_AT_decl_line
	.byte	20                              # DW_AT_data_member_location
	.byte	6                               # Abbrev [6] 0x75:0x9 DW_TAG_member
	.byte	20                              # DW_AT_name
	.long	235                             # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	34                              # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	6                               # Abbrev [6] 0x7e:0x9 DW_TAG_member
	.byte	22                              # DW_AT_name
	.long	235                             # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	37                              # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	6                               # Abbrev [6] 0x87:0x9 DW_TAG_member
	.byte	23                              # DW_AT_name
	.long	243                             # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	46                              # DW_AT_decl_line
	.byte	40                              # DW_AT_data_member_location
	.byte	3                               # Abbrev [3] 0x90:0x18 DW_TAG_enumeration_type
	.long	72                              # DW_AT_type
	.byte	4                               # DW_AT_byte_size
	.byte	4                               # DW_AT_decl_file
	.byte	40                              # DW_AT_decl_line
	.byte	4                               # Abbrev [4] 0x98:0x3 DW_TAG_enumerator
	.byte	24                              # DW_AT_name
	.byte	0                               # DW_AT_const_value
	.byte	4                               # Abbrev [4] 0x9b:0x3 DW_TAG_enumerator
	.byte	25                              # DW_AT_name
	.byte	1                               # DW_AT_const_value
	.byte	4                               # Abbrev [4] 0x9e:0x3 DW_TAG_enumerator
	.byte	26                              # DW_AT_name
	.byte	2                               # DW_AT_const_value
	.byte	4                               # Abbrev [4] 0xa1:0x3 DW_TAG_enumerator
	.byte	27                              # DW_AT_name
	.byte	3                               # DW_AT_const_value
	.byte	4                               # Abbrev [4] 0xa4:0x3 DW_TAG_enumerator
	.byte	28                              # DW_AT_name
	.byte	4                               # DW_AT_const_value
	.byte	0                               # End Of Children Mark
	.byte	7                               # Abbrev [7] 0xa8:0xa DW_TAG_member
	.byte	30                              # DW_AT_name
	.long	259                             # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	49                              # DW_AT_decl_line
	.short	272                             # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	8                               # Abbrev [8] 0xb3:0x8 DW_TAG_typedef
	.long	187                             # DW_AT_type
	.byte	11                              # DW_AT_name
	.byte	3                               # DW_AT_decl_file
	.byte	27                              # DW_AT_decl_line
	.byte	8                               # Abbrev [8] 0xbb:0x8 DW_TAG_typedef
	.long	195                             # DW_AT_type
	.byte	10                              # DW_AT_name
	.byte	2                               # DW_AT_decl_file
	.byte	45                              # DW_AT_decl_line
	.byte	2                               # Abbrev [2] 0xc3:0x4 DW_TAG_base_type
	.byte	9                               # DW_AT_name
	.byte	7                               # DW_AT_encoding
	.byte	8                               # DW_AT_byte_size
	.byte	8                               # Abbrev [8] 0xc7:0x8 DW_TAG_typedef
	.long	207                             # DW_AT_type
	.byte	15                              # DW_AT_name
	.byte	3                               # DW_AT_decl_file
	.byte	26                              # DW_AT_decl_line
	.byte	8                               # Abbrev [8] 0xcf:0x8 DW_TAG_typedef
	.long	72                              # DW_AT_type
	.byte	14                              # DW_AT_name
	.byte	2                               # DW_AT_decl_file
	.byte	42                              # DW_AT_decl_line
	.byte	8                               # Abbrev [8] 0xd7:0x8 DW_TAG_typedef
	.long	223                             # DW_AT_type
	.byte	19                              # DW_AT_name
	.byte	3                               # DW_AT_decl_file
	.byte	24                              # DW_AT_decl_line
	.byte	8                               # Abbrev [8] 0xdf:0x8 DW_TAG_typedef
	.long	231                             # DW_AT_type
	.byte	18                              # DW_AT_name
	.byte	2                               # DW_AT_decl_file
	.byte	38                              # DW_AT_decl_line
	.byte	2                               # Abbrev [2] 0xe7:0x4 DW_TAG_base_type
	.byte	17                              # DW_AT_name
	.byte	8                               # DW_AT_encoding
	.byte	1                               # DW_AT_byte_size
	.byte	8                               # Abbrev [8] 0xeb:0x8 DW_TAG_typedef
	.long	195                             # DW_AT_type
	.byte	21                              # DW_AT_name
	.byte	5                               # DW_AT_decl_file
	.byte	18                              # DW_AT_decl_line
	.byte	9                               # Abbrev [9] 0xf3:0xc DW_TAG_array_type
	.long	144                             # DW_AT_type
	.byte	10                              # Abbrev [10] 0xf8:0x6 DW_TAG_subrange_type
	.long	255                             # DW_AT_type
	.byte	58                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	11                              # Abbrev [11] 0xff:0x4 DW_TAG_base_type
	.byte	29                              # DW_AT_name
	.byte	8                               # DW_AT_byte_size
	.byte	7                               # DW_AT_encoding
	.byte	9                               # Abbrev [9] 0x103:0xc DW_TAG_array_type
	.long	271                             # DW_AT_type
	.byte	10                              # Abbrev [10] 0x108:0x6 DW_TAG_subrange_type
	.long	255                             # DW_AT_type
	.byte	58                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	12                              # Abbrev [12] 0x10f:0x5 DW_TAG_pointer_type
	.long	276                             # DW_AT_type
	.byte	8                               # Abbrev [8] 0x114:0x8 DW_TAG_typedef
	.long	284                             # DW_AT_type
	.byte	34                              # DW_AT_name
	.byte	6                               # DW_AT_decl_file
	.byte	71                              # DW_AT_decl_line
	.byte	8                               # Abbrev [8] 0x11c:0x8 DW_TAG_typedef
	.long	292                             # DW_AT_type
	.byte	33                              # DW_AT_name
	.byte	3                               # DW_AT_decl_file
	.byte	25                              # DW_AT_decl_line
	.byte	8                               # Abbrev [8] 0x124:0x8 DW_TAG_typedef
	.long	300                             # DW_AT_type
	.byte	32                              # DW_AT_name
	.byte	2                               # DW_AT_decl_file
	.byte	40                              # DW_AT_decl_line
	.byte	2                               # Abbrev [2] 0x12c:0x4 DW_TAG_base_type
	.byte	31                              # DW_AT_name
	.byte	7                               # DW_AT_encoding
	.byte	2                               # DW_AT_byte_size
	.byte	3                               # Abbrev [3] 0x130:0x2d DW_TAG_enumeration_type
	.long	72                              # DW_AT_type
	.byte	4                               # DW_AT_byte_size
	.byte	7                               # DW_AT_decl_file
	.byte	56                              # DW_AT_decl_line
	.byte	4                               # Abbrev [4] 0x138:0x3 DW_TAG_enumerator
	.byte	35                              # DW_AT_name
	.byte	0                               # DW_AT_const_value
	.byte	4                               # Abbrev [4] 0x13b:0x3 DW_TAG_enumerator
	.byte	36                              # DW_AT_name
	.byte	1                               # DW_AT_const_value
	.byte	4                               # Abbrev [4] 0x13e:0x3 DW_TAG_enumerator
	.byte	37                              # DW_AT_name
	.byte	2                               # DW_AT_const_value
	.byte	4                               # Abbrev [4] 0x141:0x3 DW_TAG_enumerator
	.byte	38                              # DW_AT_name
	.byte	3                               # DW_AT_const_value
	.byte	4                               # Abbrev [4] 0x144:0x3 DW_TAG_enumerator
	.byte	39                              # DW_AT_name
	.byte	4                               # DW_AT_const_value
	.byte	4                               # Abbrev [4] 0x147:0x3 DW_TAG_enumerator
	.byte	40                              # DW_AT_name
	.byte	5                               # DW_AT_const_value
	.byte	4                               # Abbrev [4] 0x14a:0x3 DW_TAG_enumerator
	.byte	41                              # DW_AT_name
	.byte	6                               # DW_AT_const_value
	.byte	4                               # Abbrev [4] 0x14d:0x3 DW_TAG_enumerator
	.byte	42                              # DW_AT_name
	.byte	7                               # DW_AT_const_value
	.byte	4                               # Abbrev [4] 0x150:0x3 DW_TAG_enumerator
	.byte	43                              # DW_AT_name
	.byte	8                               # DW_AT_const_value
	.byte	4                               # Abbrev [4] 0x153:0x3 DW_TAG_enumerator
	.byte	44                              # DW_AT_name
	.byte	9                               # DW_AT_const_value
	.byte	4                               # Abbrev [4] 0x156:0x3 DW_TAG_enumerator
	.byte	45                              # DW_AT_name
	.byte	10                              # DW_AT_const_value
	.byte	4                               # Abbrev [4] 0x159:0x3 DW_TAG_enumerator
	.byte	46                              # DW_AT_name
	.byte	11                              # DW_AT_const_value
	.byte	0                               # End Of Children Mark
	.byte	13                              # Abbrev [13] 0x15d:0x145 DW_TAG_subprogram
	.byte	47                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	281                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	199                             # DW_AT_type
                                        # DW_AT_inline
	.byte	14                              # Abbrev [14] 0x166:0x9 DW_TAG_formal_parameter
	.byte	48                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	281                             # DW_AT_decl_line
	.long	674                             # DW_AT_type
	.byte	14                              # Abbrev [14] 0x16f:0x9 DW_TAG_formal_parameter
	.byte	50                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	281                             # DW_AT_decl_line
	.long	683                             # DW_AT_type
	.byte	14                              # Abbrev [14] 0x178:0x9 DW_TAG_formal_parameter
	.byte	80                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	282                             # DW_AT_decl_line
	.long	1007                            # DW_AT_type
	.byte	14                              # Abbrev [14] 0x181:0x9 DW_TAG_formal_parameter
	.byte	81                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	282                             # DW_AT_decl_line
	.long	1007                            # DW_AT_type
	.byte	14                              # Abbrev [14] 0x18a:0x9 DW_TAG_formal_parameter
	.byte	82                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	283                             # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	15                              # Abbrev [15] 0x193:0x9 DW_TAG_variable
	.byte	83                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	289                             # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	15                              # Abbrev [15] 0x19c:0x9 DW_TAG_variable
	.byte	84                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	308                             # DW_AT_decl_line
	.long	1012                            # DW_AT_type
	.byte	15                              # Abbrev [15] 0x1a5:0x9 DW_TAG_variable
	.byte	85                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	285                             # DW_AT_decl_line
	.long	1024                            # DW_AT_type
	.byte	15                              # Abbrev [15] 0x1ae:0x9 DW_TAG_variable
	.byte	72                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	286                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	15                              # Abbrev [15] 0x1b7:0x9 DW_TAG_variable
	.byte	139                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	288                             # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	15                              # Abbrev [15] 0x1c0:0x9 DW_TAG_variable
	.byte	140                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	299                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	15                              # Abbrev [15] 0x1c9:0x9 DW_TAG_variable
	.byte	141                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	306                             # DW_AT_decl_line
	.long	1815                            # DW_AT_type
	.byte	15                              # Abbrev [15] 0x1d2:0x9 DW_TAG_variable
	.byte	142                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	309                             # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	15                              # Abbrev [15] 0x1db:0x9 DW_TAG_variable
	.byte	143                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	367                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	15                              # Abbrev [15] 0x1e4:0x9 DW_TAG_variable
	.byte	144                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	369                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	15                              # Abbrev [15] 0x1ed:0x9 DW_TAG_variable
	.byte	145                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	383                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	15                              # Abbrev [15] 0x1f6:0x9 DW_TAG_variable
	.byte	62                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	396                             # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	15                              # Abbrev [15] 0x1ff:0x9 DW_TAG_variable
	.byte	146                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	345                             # DW_AT_decl_line
	.long	1825                            # DW_AT_type
	.byte	15                              # Abbrev [15] 0x208:0x9 DW_TAG_variable
	.byte	147                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	346                             # DW_AT_decl_line
	.long	1825                            # DW_AT_type
	.byte	15                              # Abbrev [15] 0x211:0x9 DW_TAG_variable
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	357                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	15                              # Abbrev [15] 0x21a:0x9 DW_TAG_variable
	.byte	149                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	426                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	16                              # Abbrev [16] 0x223:0x1f DW_TAG_lexical_block
	.byte	15                              # Abbrev [15] 0x224:0x9 DW_TAG_variable
	.byte	150                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	311                             # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	16                              # Abbrev [16] 0x22d:0x14 DW_TAG_lexical_block
	.byte	15                              # Abbrev [15] 0x22e:0x9 DW_TAG_variable
	.byte	151                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	312                             # DW_AT_decl_line
	.long	1815                            # DW_AT_type
	.byte	15                              # Abbrev [15] 0x237:0x9 DW_TAG_variable
	.byte	152                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	319                             # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	16                              # Abbrev [16] 0x242:0xb DW_TAG_lexical_block
	.byte	15                              # Abbrev [15] 0x243:0x9 DW_TAG_variable
	.byte	153                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	373                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	16                              # Abbrev [16] 0x24d:0xb DW_TAG_lexical_block
	.byte	15                              # Abbrev [15] 0x24e:0x9 DW_TAG_variable
	.byte	150                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	393                             # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	16                              # Abbrev [16] 0x258:0x2a DW_TAG_lexical_block
	.byte	15                              # Abbrev [15] 0x259:0x9 DW_TAG_variable
	.byte	150                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	402                             # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	16                              # Abbrev [16] 0x262:0x1f DW_TAG_lexical_block
	.byte	15                              # Abbrev [15] 0x263:0x9 DW_TAG_variable
	.byte	154                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	403                             # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	15                              # Abbrev [15] 0x26c:0x9 DW_TAG_variable
	.byte	133                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	407                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	16                              # Abbrev [16] 0x275:0xb DW_TAG_lexical_block
	.byte	15                              # Abbrev [15] 0x276:0x9 DW_TAG_variable
	.byte	155                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	411                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	16                              # Abbrev [16] 0x282:0x1f DW_TAG_lexical_block
	.byte	15                              # Abbrev [15] 0x283:0x9 DW_TAG_variable
	.byte	150                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	431                             # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	16                              # Abbrev [16] 0x28c:0x14 DW_TAG_lexical_block
	.byte	15                              # Abbrev [15] 0x28d:0x9 DW_TAG_variable
	.byte	155                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	437                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	15                              # Abbrev [15] 0x296:0x9 DW_TAG_variable
	.byte	63                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	436                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	12                              # Abbrev [12] 0x2a2:0x5 DW_TAG_pointer_type
	.long	679                             # DW_AT_type
	.byte	17                              # Abbrev [17] 0x2a7:0x4 DW_TAG_typedef
	.byte	49                              # DW_AT_name
	.byte	11                              # DW_AT_decl_file
	.byte	78                              # DW_AT_decl_line
	.byte	18                              # Abbrev [18] 0x2ab:0x5 DW_TAG_restrict_type
	.long	688                             # DW_AT_type
	.byte	12                              # Abbrev [12] 0x2b0:0x5 DW_TAG_pointer_type
	.long	693                             # DW_AT_type
	.byte	8                               # Abbrev [8] 0x2b5:0x8 DW_TAG_typedef
	.long	701                             # DW_AT_type
	.byte	79                              # DW_AT_name
	.byte	10                              # DW_AT_decl_file
	.byte	28                              # DW_AT_decl_line
	.byte	19                              # Abbrev [19] 0x2bd:0xd5 DW_TAG_structure_type
	.byte	78                              # DW_AT_name
	.byte	120                             # DW_AT_byte_size
	.byte	10                              # DW_AT_decl_file
	.byte	29                              # DW_AT_decl_line
	.byte	6                               # Abbrev [6] 0x2c2:0x9 DW_TAG_member
	.byte	51                              # DW_AT_name
	.long	914                             # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	35                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	6                               # Abbrev [6] 0x2cb:0x9 DW_TAG_member
	.byte	52                              # DW_AT_name
	.long	199                             # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	39                              # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	6                               # Abbrev [6] 0x2d4:0x9 DW_TAG_member
	.byte	53                              # DW_AT_name
	.long	199                             # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	45                              # DW_AT_decl_line
	.byte	12                              # DW_AT_data_member_location
	.byte	6                               # Abbrev [6] 0x2dd:0x9 DW_TAG_member
	.byte	54                              # DW_AT_name
	.long	199                             # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	51                              # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	6                               # Abbrev [6] 0x2e6:0x9 DW_TAG_member
	.byte	55                              # DW_AT_name
	.long	199                             # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	58                              # DW_AT_decl_line
	.byte	20                              # DW_AT_data_member_location
	.byte	6                               # Abbrev [6] 0x2ef:0x9 DW_TAG_member
	.byte	56                              # DW_AT_name
	.long	199                             # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	63                              # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	6                               # Abbrev [6] 0x2f8:0x9 DW_TAG_member
	.byte	57                              # DW_AT_name
	.long	199                             # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	67                              # DW_AT_decl_line
	.byte	28                              # DW_AT_data_member_location
	.byte	6                               # Abbrev [6] 0x301:0x9 DW_TAG_member
	.byte	58                              # DW_AT_name
	.long	199                             # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	75                              # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	6                               # Abbrev [6] 0x30a:0x9 DW_TAG_member
	.byte	59                              # DW_AT_name
	.long	199                             # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	80                              # DW_AT_decl_line
	.byte	36                              # DW_AT_data_member_location
	.byte	6                               # Abbrev [6] 0x313:0x9 DW_TAG_member
	.byte	60                              # DW_AT_name
	.long	199                             # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	84                              # DW_AT_decl_line
	.byte	40                              # DW_AT_data_member_location
	.byte	6                               # Abbrev [6] 0x31c:0x9 DW_TAG_member
	.byte	61                              # DW_AT_name
	.long	919                             # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	92                              # DW_AT_decl_line
	.byte	48                              # DW_AT_data_member_location
	.byte	6                               # Abbrev [6] 0x325:0x9 DW_TAG_member
	.byte	65                              # DW_AT_name
	.long	976                             # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	97                              # DW_AT_decl_line
	.byte	56                              # DW_AT_data_member_location
	.byte	6                               # Abbrev [6] 0x32e:0x9 DW_TAG_member
	.byte	66                              # DW_AT_name
	.long	993                             # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	99                              # DW_AT_decl_line
	.byte	64                              # DW_AT_data_member_location
	.byte	6                               # Abbrev [6] 0x337:0x9 DW_TAG_member
	.byte	67                              # DW_AT_name
	.long	993                             # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	100                             # DW_AT_decl_line
	.byte	72                              # DW_AT_data_member_location
	.byte	6                               # Abbrev [6] 0x340:0x9 DW_TAG_member
	.byte	68                              # DW_AT_name
	.long	199                             # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	101                             # DW_AT_decl_line
	.byte	80                              # DW_AT_data_member_location
	.byte	6                               # Abbrev [6] 0x349:0x9 DW_TAG_member
	.byte	69                              # DW_AT_name
	.long	199                             # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	102                             # DW_AT_decl_line
	.byte	84                              # DW_AT_data_member_location
	.byte	6                               # Abbrev [6] 0x352:0x9 DW_TAG_member
	.byte	70                              # DW_AT_name
	.long	199                             # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	103                             # DW_AT_decl_line
	.byte	88                              # DW_AT_data_member_location
	.byte	6                               # Abbrev [6] 0x35b:0x9 DW_TAG_member
	.byte	71                              # DW_AT_name
	.long	199                             # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	106                             # DW_AT_decl_line
	.byte	92                              # DW_AT_data_member_location
	.byte	6                               # Abbrev [6] 0x364:0x9 DW_TAG_member
	.byte	72                              # DW_AT_name
	.long	199                             # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	109                             # DW_AT_decl_line
	.byte	96                              # DW_AT_data_member_location
	.byte	6                               # Abbrev [6] 0x36d:0x9 DW_TAG_member
	.byte	73                              # DW_AT_name
	.long	199                             # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	114                             # DW_AT_decl_line
	.byte	100                             # DW_AT_data_member_location
	.byte	6                               # Abbrev [6] 0x376:0x9 DW_TAG_member
	.byte	74                              # DW_AT_name
	.long	998                             # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	119                             # DW_AT_decl_line
	.byte	104                             # DW_AT_data_member_location
	.byte	6                               # Abbrev [6] 0x37f:0x9 DW_TAG_member
	.byte	76                              # DW_AT_name
	.long	199                             # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	122                             # DW_AT_decl_line
	.byte	108                             # DW_AT_data_member_location
	.byte	6                               # Abbrev [6] 0x388:0x9 DW_TAG_member
	.byte	77                              # DW_AT_name
	.long	199                             # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	125                             # DW_AT_decl_line
	.byte	112                             # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	12                              # Abbrev [12] 0x392:0x5 DW_TAG_pointer_type
	.long	215                             # DW_AT_type
	.byte	12                              # Abbrev [12] 0x397:0x5 DW_TAG_pointer_type
	.long	924                             # DW_AT_type
	.byte	20                              # Abbrev [20] 0x39c:0x10 DW_TAG_subroutine_type
	.long	199                             # DW_AT_type
                                        # DW_AT_prototyped
	.byte	21                              # Abbrev [21] 0x3a1:0x5 DW_TAG_formal_parameter
	.long	688                             # DW_AT_type
	.byte	21                              # Abbrev [21] 0x3a6:0x5 DW_TAG_formal_parameter
	.long	940                             # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	12                              # Abbrev [12] 0x3ac:0x5 DW_TAG_pointer_type
	.long	945                             # DW_AT_type
	.byte	8                               # Abbrev [8] 0x3b1:0x8 DW_TAG_typedef
	.long	953                             # DW_AT_type
	.byte	64                              # DW_AT_name
	.byte	10                              # DW_AT_decl_file
	.byte	25                              # DW_AT_decl_line
	.byte	22                              # Abbrev [22] 0x3b9:0x17 DW_TAG_structure_type
	.byte	8                               # DW_AT_byte_size
	.byte	10                              # DW_AT_decl_file
	.byte	22                              # DW_AT_decl_line
	.byte	6                               # Abbrev [6] 0x3bd:0x9 DW_TAG_member
	.byte	62                              # DW_AT_name
	.long	199                             # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	23                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	6                               # Abbrev [6] 0x3c6:0x9 DW_TAG_member
	.byte	63                              # DW_AT_name
	.long	199                             # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	24                              # DW_AT_decl_line
	.byte	4                               # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	12                              # Abbrev [12] 0x3d0:0x5 DW_TAG_pointer_type
	.long	981                             # DW_AT_type
	.byte	23                              # Abbrev [23] 0x3d5:0xc DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	21                              # Abbrev [21] 0x3d6:0x5 DW_TAG_formal_parameter
	.long	688                             # DW_AT_type
	.byte	21                              # Abbrev [21] 0x3db:0x5 DW_TAG_formal_parameter
	.long	199                             # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	12                              # Abbrev [12] 0x3e1:0x5 DW_TAG_pointer_type
	.long	199                             # DW_AT_type
	.byte	24                              # Abbrev [24] 0x3e6:0x9 DW_TAG_typedef
	.long	51                              # DW_AT_type
	.byte	75                              # DW_AT_name
	.byte	1                               # DW_AT_decl_file
	.short	322                             # DW_AT_decl_line
	.byte	18                              # Abbrev [18] 0x3ef:0x5 DW_TAG_restrict_type
	.long	993                             # DW_AT_type
	.byte	9                               # Abbrev [9] 0x3f4:0xc DW_TAG_array_type
	.long	199                             # DW_AT_type
	.byte	10                              # Abbrev [10] 0x3f9:0x6 DW_TAG_subrange_type
	.long	255                             # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	18                              # Abbrev [18] 0x400:0x5 DW_TAG_restrict_type
	.long	1029                            # DW_AT_type
	.byte	12                              # Abbrev [12] 0x405:0x5 DW_TAG_pointer_type
	.long	1034                            # DW_AT_type
	.byte	25                              # Abbrev [25] 0x40a:0x164 DW_TAG_structure_type
	.byte	138                             # DW_AT_name
	.long	249576                          # DW_AT_byte_size
	.byte	12                              # DW_AT_decl_file
	.byte	72                              # DW_AT_decl_line
	.byte	6                               # Abbrev [6] 0x412:0x9 DW_TAG_member
	.byte	86                              # DW_AT_name
	.long	1390                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	74                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	7                               # Abbrev [7] 0x41b:0xa DW_TAG_member
	.byte	88                              # DW_AT_name
	.long	1398                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	77                              # DW_AT_decl_line
	.short	736                             # DW_AT_data_member_location
	.byte	7                               # Abbrev [7] 0x425:0xa DW_TAG_member
	.byte	90                              # DW_AT_name
	.long	1012                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	80                              # DW_AT_decl_line
	.short	740                             # DW_AT_data_member_location
	.byte	7                               # Abbrev [7] 0x42f:0xa DW_TAG_member
	.byte	91                              # DW_AT_name
	.long	1406                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	83                              # DW_AT_decl_line
	.short	756                             # DW_AT_data_member_location
	.byte	7                               # Abbrev [7] 0x439:0xa DW_TAG_member
	.byte	83                              # DW_AT_name
	.long	199                             # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	86                              # DW_AT_decl_line
	.short	2948                            # DW_AT_data_member_location
	.byte	7                               # Abbrev [7] 0x443:0xa DW_TAG_member
	.byte	92                              # DW_AT_name
	.long	199                             # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	90                              # DW_AT_decl_line
	.short	2952                            # DW_AT_data_member_location
	.byte	7                               # Abbrev [7] 0x44d:0xa DW_TAG_member
	.byte	93                              # DW_AT_name
	.long	1419                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	93                              # DW_AT_decl_line
	.short	2956                            # DW_AT_data_member_location
	.byte	7                               # Abbrev [7] 0x457:0xa DW_TAG_member
	.byte	95                              # DW_AT_name
	.long	1419                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	97                              # DW_AT_decl_line
	.short	2957                            # DW_AT_data_member_location
	.byte	7                               # Abbrev [7] 0x461:0xa DW_TAG_member
	.byte	96                              # DW_AT_name
	.long	1419                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	101                             # DW_AT_decl_line
	.short	2958                            # DW_AT_data_member_location
	.byte	7                               # Abbrev [7] 0x46b:0xa DW_TAG_member
	.byte	97                              # DW_AT_name
	.long	199                             # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	103                             # DW_AT_decl_line
	.short	2960                            # DW_AT_data_member_location
	.byte	7                               # Abbrev [7] 0x475:0xa DW_TAG_member
	.byte	98                              # DW_AT_name
	.long	199                             # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	104                             # DW_AT_decl_line
	.short	2964                            # DW_AT_data_member_location
	.byte	7                               # Abbrev [7] 0x47f:0xa DW_TAG_member
	.byte	99                              # DW_AT_name
	.long	199                             # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	105                             # DW_AT_decl_line
	.short	2968                            # DW_AT_data_member_location
	.byte	7                               # Abbrev [7] 0x489:0xa DW_TAG_member
	.byte	100                             # DW_AT_name
	.long	1423                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	108                             # DW_AT_decl_line
	.short	2972                            # DW_AT_data_member_location
	.byte	7                               # Abbrev [7] 0x493:0xa DW_TAG_member
	.byte	101                             # DW_AT_name
	.long	1442                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	109                             # DW_AT_decl_line
	.short	27548                           # DW_AT_data_member_location
	.byte	7                               # Abbrev [7] 0x49d:0xa DW_TAG_member
	.byte	102                             # DW_AT_name
	.long	1460                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	110                             # DW_AT_decl_line
	.short	27932                           # DW_AT_data_member_location
	.byte	7                               # Abbrev [7] 0x4a7:0xa DW_TAG_member
	.byte	103                             # DW_AT_name
	.long	1460                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	111                             # DW_AT_decl_line
	.short	27956                           # DW_AT_data_member_location
	.byte	7                               # Abbrev [7] 0x4b1:0xa DW_TAG_member
	.byte	104                             # DW_AT_name
	.long	1460                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	112                             # DW_AT_decl_line
	.short	27980                           # DW_AT_data_member_location
	.byte	7                               # Abbrev [7] 0x4bb:0xa DW_TAG_member
	.byte	105                             # DW_AT_name
	.long	1460                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	113                             # DW_AT_decl_line
	.short	28004                           # DW_AT_data_member_location
	.byte	7                               # Abbrev [7] 0x4c5:0xa DW_TAG_member
	.byte	106                             # DW_AT_name
	.long	1442                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	114                             # DW_AT_decl_line
	.short	28028                           # DW_AT_data_member_location
	.byte	7                               # Abbrev [7] 0x4cf:0xa DW_TAG_member
	.byte	107                             # DW_AT_name
	.long	1472                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	115                             # DW_AT_decl_line
	.short	28412                           # DW_AT_data_member_location
	.byte	7                               # Abbrev [7] 0x4d9:0xa DW_TAG_member
	.byte	108                             # DW_AT_name
	.long	1490                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	116                             # DW_AT_decl_line
	.short	28924                           # DW_AT_data_member_location
	.byte	7                               # Abbrev [7] 0x4e3:0xa DW_TAG_member
	.byte	109                             # DW_AT_name
	.long	1502                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	117                             # DW_AT_decl_line
	.short	29152                           # DW_AT_data_member_location
	.byte	7                               # Abbrev [7] 0x4ed:0xa DW_TAG_member
	.byte	110                             # DW_AT_name
	.long	1514                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	121                             # DW_AT_decl_line
	.short	29184                           # DW_AT_data_member_location
	.byte	7                               # Abbrev [7] 0x4f7:0xa DW_TAG_member
	.byte	119                             # DW_AT_name
	.long	1514                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	122                             # DW_AT_decl_line
	.short	47688                           # DW_AT_data_member_location
	.byte	26                              # Abbrev [26] 0x501:0xc DW_TAG_member
	.byte	120                             # DW_AT_name
	.long	1667                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	125                             # DW_AT_decl_line
	.long	66192                           # DW_AT_data_member_location
	.byte	26                              # Abbrev [26] 0x50d:0xc DW_TAG_member
	.byte	121                             # DW_AT_name
	.long	1685                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	126                             # DW_AT_decl_line
	.long	67216                           # DW_AT_data_member_location
	.byte	26                              # Abbrev [26] 0x519:0xc DW_TAG_member
	.byte	122                             # DW_AT_name
	.long	199                             # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	127                             # DW_AT_decl_line
	.long	69264                           # DW_AT_data_member_location
	.byte	26                              # Abbrev [26] 0x525:0xc DW_TAG_member
	.byte	123                             # DW_AT_name
	.long	199                             # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	128                             # DW_AT_decl_line
	.long	69268                           # DW_AT_data_member_location
	.byte	26                              # Abbrev [26] 0x531:0xc DW_TAG_member
	.byte	124                             # DW_AT_name
	.long	1655                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	130                             # DW_AT_decl_line
	.long	69272                           # DW_AT_data_member_location
	.byte	26                              # Abbrev [26] 0x53d:0xc DW_TAG_member
	.byte	125                             # DW_AT_name
	.long	199                             # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	131                             # DW_AT_decl_line
	.long	69336                           # DW_AT_data_member_location
	.byte	26                              # Abbrev [26] 0x549:0xc DW_TAG_member
	.byte	126                             # DW_AT_name
	.long	199                             # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	134                             # DW_AT_decl_line
	.long	69340                           # DW_AT_data_member_location
	.byte	26                              # Abbrev [26] 0x555:0xc DW_TAG_member
	.byte	127                             # DW_AT_name
	.long	199                             # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	135                             # DW_AT_decl_line
	.long	69344                           # DW_AT_data_member_location
	.byte	26                              # Abbrev [26] 0x561:0xc DW_TAG_member
	.byte	128                             # DW_AT_name
	.long	1703                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	136                             # DW_AT_decl_line
	.long	69348                           # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	8                               # Abbrev [8] 0x56e:0x8 DW_TAG_typedef
	.long	76                              # DW_AT_type
	.byte	87                              # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.byte	51                              # DW_AT_decl_line
	.byte	8                               # Abbrev [8] 0x576:0x8 DW_TAG_typedef
	.long	304                             # DW_AT_type
	.byte	89                              # DW_AT_name
	.byte	7                               # DW_AT_decl_file
	.byte	69                              # DW_AT_decl_line
	.byte	9                               # Abbrev [9] 0x57e:0xd DW_TAG_array_type
	.long	945                             # DW_AT_type
	.byte	27                              # Abbrev [27] 0x583:0x7 DW_TAG_subrange_type
	.long	255                             # DW_AT_type
	.short	274                             # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	2                               # Abbrev [2] 0x58b:0x4 DW_TAG_base_type
	.byte	94                              # DW_AT_name
	.byte	2                               # DW_AT_encoding
	.byte	1                               # DW_AT_byte_size
	.byte	9                               # Abbrev [9] 0x58f:0x13 DW_TAG_array_type
	.long	276                             # DW_AT_type
	.byte	10                              # Abbrev [10] 0x594:0x6 DW_TAG_subrange_type
	.long	255                             # DW_AT_type
	.byte	16                              # DW_AT_count
	.byte	27                              # Abbrev [27] 0x59a:0x7 DW_TAG_subrange_type
	.long	255                             # DW_AT_type
	.short	768                             # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	9                               # Abbrev [9] 0x5a2:0x12 DW_TAG_array_type
	.long	276                             # DW_AT_type
	.byte	10                              # Abbrev [10] 0x5a7:0x6 DW_TAG_subrange_type
	.long	255                             # DW_AT_type
	.byte	12                              # DW_AT_count
	.byte	10                              # Abbrev [10] 0x5ad:0x6 DW_TAG_subrange_type
	.long	255                             # DW_AT_type
	.byte	16                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	9                               # Abbrev [9] 0x5b4:0xc DW_TAG_array_type
	.long	276                             # DW_AT_type
	.byte	10                              # Abbrev [10] 0x5b9:0x6 DW_TAG_subrange_type
	.long	255                             # DW_AT_type
	.byte	12                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	9                               # Abbrev [9] 0x5c0:0x12 DW_TAG_array_type
	.long	276                             # DW_AT_type
	.byte	10                              # Abbrev [10] 0x5c5:0x6 DW_TAG_subrange_type
	.long	255                             # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	10                              # Abbrev [10] 0x5cb:0x6 DW_TAG_subrange_type
	.long	255                             # DW_AT_type
	.byte	64                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	9                               # Abbrev [9] 0x5d2:0xc DW_TAG_array_type
	.long	276                             # DW_AT_type
	.byte	10                              # Abbrev [10] 0x5d7:0x6 DW_TAG_subrange_type
	.long	255                             # DW_AT_type
	.byte	114                             # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	9                               # Abbrev [9] 0x5de:0xc DW_TAG_array_type
	.long	276                             # DW_AT_type
	.byte	10                              # Abbrev [10] 0x5e3:0x6 DW_TAG_subrange_type
	.long	255                             # DW_AT_type
	.byte	16                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	8                               # Abbrev [8] 0x5ea:0x8 DW_TAG_typedef
	.long	1522                            # DW_AT_type
	.byte	118                             # DW_AT_name
	.byte	12                              # DW_AT_decl_file
	.byte	51                              # DW_AT_decl_line
	.byte	5                               # Abbrev [5] 0x5f2:0x53 DW_TAG_structure_type
	.short	18504                           # DW_AT_byte_size
	.byte	12                              # DW_AT_decl_file
	.byte	40                              # DW_AT_decl_line
	.byte	6                               # Abbrev [6] 0x5f7:0x9 DW_TAG_member
	.byte	111                             # DW_AT_name
	.long	276                             # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	41                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	6                               # Abbrev [6] 0x600:0x9 DW_TAG_member
	.byte	112                             # DW_AT_name
	.long	276                             # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	42                              # DW_AT_decl_line
	.byte	2                               # DW_AT_data_member_location
	.byte	6                               # Abbrev [6] 0x609:0x9 DW_TAG_member
	.byte	8                               # DW_AT_name
	.long	1605                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	43                              # DW_AT_decl_line
	.byte	4                               # DW_AT_data_member_location
	.byte	7                               # Abbrev [7] 0x612:0xa DW_TAG_member
	.byte	113                             # DW_AT_name
	.long	1605                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	44                              # DW_AT_decl_line
	.short	260                             # DW_AT_data_member_location
	.byte	7                               # Abbrev [7] 0x61c:0xa DW_TAG_member
	.byte	114                             # DW_AT_name
	.long	1623                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	45                              # DW_AT_decl_line
	.short	516                             # DW_AT_data_member_location
	.byte	7                               # Abbrev [7] 0x626:0xa DW_TAG_member
	.byte	115                             # DW_AT_name
	.long	1636                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	47                              # DW_AT_decl_line
	.short	1028                            # DW_AT_data_member_location
	.byte	7                               # Abbrev [7] 0x630:0xa DW_TAG_member
	.byte	116                             # DW_AT_name
	.long	199                             # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	48                              # DW_AT_decl_line
	.short	18436                           # DW_AT_data_member_location
	.byte	7                               # Abbrev [7] 0x63a:0xa DW_TAG_member
	.byte	117                             # DW_AT_name
	.long	1655                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	49                              # DW_AT_decl_line
	.short	18440                           # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	9                               # Abbrev [9] 0x645:0x12 DW_TAG_array_type
	.long	276                             # DW_AT_type
	.byte	10                              # Abbrev [10] 0x64a:0x6 DW_TAG_subrange_type
	.long	255                             # DW_AT_type
	.byte	16                              # DW_AT_count
	.byte	10                              # Abbrev [10] 0x650:0x6 DW_TAG_subrange_type
	.long	255                             # DW_AT_type
	.byte	8                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	9                               # Abbrev [9] 0x657:0xd DW_TAG_array_type
	.long	276                             # DW_AT_type
	.byte	27                              # Abbrev [27] 0x65c:0x7 DW_TAG_subrange_type
	.long	255                             # DW_AT_type
	.short	256                             # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	9                               # Abbrev [9] 0x664:0x13 DW_TAG_array_type
	.long	199                             # DW_AT_type
	.byte	10                              # Abbrev [10] 0x669:0x6 DW_TAG_subrange_type
	.long	255                             # DW_AT_type
	.byte	16                              # DW_AT_count
	.byte	27                              # Abbrev [27] 0x66f:0x7 DW_TAG_subrange_type
	.long	255                             # DW_AT_type
	.short	272                             # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	9                               # Abbrev [9] 0x677:0xc DW_TAG_array_type
	.long	199                             # DW_AT_type
	.byte	10                              # Abbrev [10] 0x67c:0x6 DW_TAG_subrange_type
	.long	255                             # DW_AT_type
	.byte	16                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	9                               # Abbrev [9] 0x683:0x12 DW_TAG_array_type
	.long	199                             # DW_AT_type
	.byte	10                              # Abbrev [10] 0x688:0x6 DW_TAG_subrange_type
	.long	255                             # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	10                              # Abbrev [10] 0x68e:0x6 DW_TAG_subrange_type
	.long	255                             # DW_AT_type
	.byte	64                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	9                               # Abbrev [9] 0x695:0x12 DW_TAG_array_type
	.long	199                             # DW_AT_type
	.byte	10                              # Abbrev [10] 0x69a:0x6 DW_TAG_subrange_type
	.long	255                             # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	10                              # Abbrev [10] 0x6a0:0x6 DW_TAG_subrange_type
	.long	255                             # DW_AT_type
	.byte	128                             # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	9                               # Abbrev [9] 0x6a7:0xd DW_TAG_array_type
	.long	1716                            # DW_AT_type
	.byte	27                              # Abbrev [27] 0x6ac:0x7 DW_TAG_subrange_type
	.long	255                             # DW_AT_type
	.short	4096                            # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	8                               # Abbrev [8] 0x6b4:0x8 DW_TAG_typedef
	.long	1724                            # DW_AT_type
	.byte	137                             # DW_AT_name
	.byte	12                              # DW_AT_decl_file
	.byte	69                              # DW_AT_decl_line
	.byte	22                              # Abbrev [22] 0x6bc:0x56 DW_TAG_structure_type
	.byte	44                              # DW_AT_byte_size
	.byte	12                              # DW_AT_decl_file
	.byte	54                              # DW_AT_decl_line
	.byte	6                               # Abbrev [6] 0x6c0:0x9 DW_TAG_member
	.byte	88                              # DW_AT_name
	.long	1398                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	55                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	6                               # Abbrev [6] 0x6c9:0x9 DW_TAG_member
	.byte	129                             # DW_AT_name
	.long	1419                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	57                              # DW_AT_decl_line
	.byte	4                               # DW_AT_data_member_location
	.byte	6                               # Abbrev [6] 0x6d2:0x9 DW_TAG_member
	.byte	130                             # DW_AT_name
	.long	1419                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	58                              # DW_AT_decl_line
	.byte	5                               # DW_AT_data_member_location
	.byte	6                               # Abbrev [6] 0x6db:0x9 DW_TAG_member
	.byte	131                             # DW_AT_name
	.long	199                             # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	60                              # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	6                               # Abbrev [6] 0x6e4:0x9 DW_TAG_member
	.byte	132                             # DW_AT_name
	.long	199                             # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	61                              # DW_AT_decl_line
	.byte	12                              # DW_AT_data_member_location
	.byte	6                               # Abbrev [6] 0x6ed:0x9 DW_TAG_member
	.byte	133                             # DW_AT_name
	.long	199                             # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	63                              # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	6                               # Abbrev [6] 0x6f6:0x9 DW_TAG_member
	.byte	134                             # DW_AT_name
	.long	199                             # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	64                              # DW_AT_decl_line
	.byte	20                              # DW_AT_data_member_location
	.byte	6                               # Abbrev [6] 0x6ff:0x9 DW_TAG_member
	.byte	135                             # DW_AT_name
	.long	199                             # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	65                              # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	6                               # Abbrev [6] 0x708:0x9 DW_TAG_member
	.byte	136                             # DW_AT_name
	.long	1012                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	67                              # DW_AT_decl_line
	.byte	28                              # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	28                              # Abbrev [28] 0x712:0x5 DW_TAG_const_type
	.long	199                             # DW_AT_type
	.byte	28                              # Abbrev [28] 0x717:0x5 DW_TAG_const_type
	.long	1820                            # DW_AT_type
	.byte	12                              # Abbrev [12] 0x71c:0x5 DW_TAG_pointer_type
	.long	1825                            # DW_AT_type
	.byte	28                              # Abbrev [28] 0x721:0x5 DW_TAG_const_type
	.long	215                             # DW_AT_type
	.byte	29                              # Abbrev [29] 0x726:0x7d DW_TAG_subprogram
	.byte	156                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	137                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_inline
	.byte	30                              # Abbrev [30] 0x72a:0x8 DW_TAG_formal_parameter
	.byte	48                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	137                             # DW_AT_decl_line
	.long	674                             # DW_AT_type
	.byte	31                              # Abbrev [31] 0x732:0x8 DW_TAG_variable
	.byte	85                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	139                             # DW_AT_decl_line
	.long	1029                            # DW_AT_type
	.byte	16                              # Abbrev [16] 0x73a:0x32 DW_TAG_lexical_block
	.byte	31                              # Abbrev [31] 0x73b:0x8 DW_TAG_variable
	.byte	157                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	140                             # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	16                              # Abbrev [16] 0x743:0x28 DW_TAG_lexical_block
	.byte	31                              # Abbrev [31] 0x744:0x8 DW_TAG_variable
	.byte	120                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	144                             # DW_AT_decl_line
	.long	1955                            # DW_AT_type
	.byte	16                              # Abbrev [16] 0x74c:0xa DW_TAG_lexical_block
	.byte	31                              # Abbrev [31] 0x74d:0x8 DW_TAG_variable
	.byte	107                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	148                             # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	16                              # Abbrev [16] 0x756:0xa DW_TAG_lexical_block
	.byte	31                              # Abbrev [31] 0x757:0x8 DW_TAG_variable
	.byte	107                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	157                             # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	16                              # Abbrev [16] 0x760:0xa DW_TAG_lexical_block
	.byte	31                              # Abbrev [31] 0x761:0x8 DW_TAG_variable
	.byte	150                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	165                             # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	16                              # Abbrev [16] 0x76c:0x36 DW_TAG_lexical_block
	.byte	31                              # Abbrev [31] 0x76d:0x8 DW_TAG_variable
	.byte	150                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	173                             # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	16                              # Abbrev [16] 0x775:0x2c DW_TAG_lexical_block
	.byte	31                              # Abbrev [31] 0x776:0x8 DW_TAG_variable
	.byte	107                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	174                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	31                              # Abbrev [31] 0x77e:0x8 DW_TAG_variable
	.byte	158                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	175                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	31                              # Abbrev [31] 0x786:0x8 DW_TAG_variable
	.byte	159                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	176                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	31                              # Abbrev [31] 0x78e:0x8 DW_TAG_variable
	.byte	133                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	177                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	16                              # Abbrev [16] 0x796:0xa DW_TAG_lexical_block
	.byte	31                              # Abbrev [31] 0x797:0x8 DW_TAG_variable
	.byte	157                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	181                             # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	28                              # Abbrev [28] 0x7a3:0x5 DW_TAG_const_type
	.long	993                             # DW_AT_type
	.byte	32                              # Abbrev [32] 0x7a8:0x33 DW_TAG_subprogram
	.byte	160                             # DW_AT_name
	.byte	8                               # DW_AT_decl_file
	.byte	52                              # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	199                             # DW_AT_type
                                        # DW_AT_inline
	.byte	30                              # Abbrev [30] 0x7b0:0x8 DW_TAG_formal_parameter
	.byte	30                              # DW_AT_name
	.byte	8                               # DW_AT_decl_file
	.byte	52                              # DW_AT_decl_line
	.long	2011                            # DW_AT_type
	.byte	30                              # Abbrev [30] 0x7b8:0x8 DW_TAG_formal_parameter
	.byte	161                             # DW_AT_name
	.byte	8                               # DW_AT_decl_file
	.byte	53                              # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	30                              # Abbrev [30] 0x7c0:0x8 DW_TAG_formal_parameter
	.byte	162                             # DW_AT_name
	.byte	8                               # DW_AT_decl_file
	.byte	53                              # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	31                              # Abbrev [31] 0x7c8:0x8 DW_TAG_variable
	.byte	133                             # DW_AT_name
	.byte	8                               # DW_AT_decl_file
	.byte	55                              # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	16                              # Abbrev [16] 0x7d0:0xa DW_TAG_lexical_block
	.byte	31                              # Abbrev [31] 0x7d1:0x8 DW_TAG_variable
	.byte	163                             # DW_AT_name
	.byte	8                               # DW_AT_decl_file
	.byte	59                              # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	28                              # Abbrev [28] 0x7db:0x5 DW_TAG_const_type
	.long	2016                            # DW_AT_type
	.byte	12                              # Abbrev [12] 0x7e0:0x5 DW_TAG_pointer_type
	.long	2021                            # DW_AT_type
	.byte	28                              # Abbrev [28] 0x7e5:0x5 DW_TAG_const_type
	.long	276                             # DW_AT_type
	.byte	32                              # Abbrev [32] 0x7ea:0x19 DW_TAG_subprogram
	.byte	164                             # DW_AT_name
	.byte	8                               # DW_AT_decl_file
	.byte	29                              # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	199                             # DW_AT_type
                                        # DW_AT_inline
	.byte	30                              # Abbrev [30] 0x7f2:0x8 DW_TAG_formal_parameter
	.byte	165                             # DW_AT_name
	.byte	8                               # DW_AT_decl_file
	.byte	29                              # DW_AT_decl_line
	.long	2021                            # DW_AT_type
	.byte	30                              # Abbrev [30] 0x7fa:0x8 DW_TAG_formal_parameter
	.byte	163                             # DW_AT_name
	.byte	8                               # DW_AT_decl_file
	.byte	29                              # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x803:0x11 DW_TAG_subprogram
	.byte	166                             # DW_AT_name
	.byte	8                               # DW_AT_decl_file
	.byte	87                              # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	199                             # DW_AT_type
                                        # DW_AT_inline
	.byte	30                              # Abbrev [30] 0x80b:0x8 DW_TAG_formal_parameter
	.byte	167                             # DW_AT_name
	.byte	8                               # DW_AT_decl_file
	.byte	87                              # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x814:0x11 DW_TAG_subprogram
	.byte	168                             # DW_AT_name
	.byte	9                               # DW_AT_decl_file
	.byte	108                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	199                             # DW_AT_type
                                        # DW_AT_inline
	.byte	30                              # Abbrev [30] 0x81c:0x8 DW_TAG_formal_parameter
	.byte	22                              # DW_AT_name
	.byte	9                               # DW_AT_decl_file
	.byte	108                             # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x825:0x3b DW_TAG_subprogram
	.byte	169                             # DW_AT_name
	.byte	8                               # DW_AT_decl_file
	.byte	69                              # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	199                             # DW_AT_type
                                        # DW_AT_inline
	.byte	30                              # Abbrev [30] 0x82d:0x8 DW_TAG_formal_parameter
	.byte	30                              # DW_AT_name
	.byte	8                               # DW_AT_decl_file
	.byte	69                              # DW_AT_decl_line
	.long	2011                            # DW_AT_type
	.byte	30                              # Abbrev [30] 0x835:0x8 DW_TAG_formal_parameter
	.byte	161                             # DW_AT_name
	.byte	8                               # DW_AT_decl_file
	.byte	70                              # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	30                              # Abbrev [30] 0x83d:0x8 DW_TAG_formal_parameter
	.byte	162                             # DW_AT_name
	.byte	8                               # DW_AT_decl_file
	.byte	70                              # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	31                              # Abbrev [31] 0x845:0x8 DW_TAG_variable
	.byte	133                             # DW_AT_name
	.byte	8                               # DW_AT_decl_file
	.byte	72                              # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	31                              # Abbrev [31] 0x84d:0x8 DW_TAG_variable
	.byte	170                             # DW_AT_name
	.byte	8                               # DW_AT_decl_file
	.byte	73                              # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	16                              # Abbrev [16] 0x855:0xa DW_TAG_lexical_block
	.byte	31                              # Abbrev [31] 0x856:0x8 DW_TAG_variable
	.byte	163                             # DW_AT_name
	.byte	8                               # DW_AT_decl_file
	.byte	76                              # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	29                              # Abbrev [29] 0x860:0x1f DW_TAG_subprogram
	.byte	171                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	195                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_inline
	.byte	30                              # Abbrev [30] 0x864:0x8 DW_TAG_formal_parameter
	.byte	48                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	195                             # DW_AT_decl_line
	.long	674                             # DW_AT_type
	.byte	31                              # Abbrev [31] 0x86c:0x8 DW_TAG_variable
	.byte	85                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	197                             # DW_AT_decl_line
	.long	1029                            # DW_AT_type
	.byte	16                              # Abbrev [16] 0x874:0xa DW_TAG_lexical_block
	.byte	31                              # Abbrev [31] 0x875:0x8 DW_TAG_variable
	.byte	150                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	198                             # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x87f:0x11 DW_TAG_subprogram
	.byte	172                             # DW_AT_name
	.byte	10                              # DW_AT_decl_file
	.byte	230                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	199                             # DW_AT_type
                                        # DW_AT_inline
	.byte	30                              # Abbrev [30] 0x887:0x8 DW_TAG_formal_parameter
	.byte	50                              # DW_AT_name
	.byte	10                              # DW_AT_decl_file
	.byte	230                             # DW_AT_decl_line
	.long	2192                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	12                              # Abbrev [12] 0x890:0x5 DW_TAG_pointer_type
	.long	2197                            # DW_AT_type
	.byte	28                              # Abbrev [28] 0x895:0x5 DW_TAG_const_type
	.long	693                             # DW_AT_type
	.byte	32                              # Abbrev [32] 0x89a:0x11 DW_TAG_subprogram
	.byte	173                             # DW_AT_name
	.byte	10                              # DW_AT_decl_file
	.byte	222                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	1820                            # DW_AT_type
                                        # DW_AT_inline
	.byte	30                              # Abbrev [30] 0x8a2:0x8 DW_TAG_formal_parameter
	.byte	50                              # DW_AT_name
	.byte	10                              # DW_AT_decl_file
	.byte	222                             # DW_AT_decl_line
	.long	2192                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0x8ab:0x18 DW_TAG_subprogram
	.byte	174                             # DW_AT_name
	.byte	10                              # DW_AT_decl_file
	.short	268                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_inline
	.byte	14                              # Abbrev [14] 0x8b0:0x9 DW_TAG_formal_parameter
	.byte	50                              # DW_AT_name
	.byte	10                              # DW_AT_decl_file
	.short	268                             # DW_AT_decl_line
	.long	688                             # DW_AT_type
	.byte	14                              # Abbrev [14] 0x8b9:0x9 DW_TAG_formal_parameter
	.byte	175                             # DW_AT_name
	.byte	10                              # DW_AT_decl_file
	.short	268                             # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x8c3:0x11 DW_TAG_subprogram
	.byte	176                             # DW_AT_name
	.byte	8                               # DW_AT_decl_file
	.byte	37                              # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	199                             # DW_AT_type
                                        # DW_AT_inline
	.byte	30                              # Abbrev [30] 0x8cb:0x8 DW_TAG_formal_parameter
	.byte	165                             # DW_AT_name
	.byte	8                               # DW_AT_decl_file
	.byte	37                              # DW_AT_decl_line
	.long	2021                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x8d4:0x75 DW_TAG_subprogram
	.byte	177                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	21                              # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	199                             # DW_AT_type
                                        # DW_AT_inline
	.byte	30                              # Abbrev [30] 0x8dc:0x8 DW_TAG_formal_parameter
	.byte	48                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	21                              # DW_AT_decl_line
	.long	2377                            # DW_AT_type
	.byte	30                              # Abbrev [30] 0x8e4:0x8 DW_TAG_formal_parameter
	.byte	22                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	21                              # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	30                              # Abbrev [30] 0x8ec:0x8 DW_TAG_formal_parameter
	.byte	178                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	22                              # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	30                              # Abbrev [30] 0x8f4:0x8 DW_TAG_formal_parameter
	.byte	179                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	22                              # DW_AT_decl_line
	.long	2392                            # DW_AT_type
	.byte	30                              # Abbrev [30] 0x8fc:0x8 DW_TAG_formal_parameter
	.byte	147                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	23                              # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	30                              # Abbrev [30] 0x904:0x8 DW_TAG_formal_parameter
	.byte	162                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	23                              # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	31                              # Abbrev [31] 0x90c:0x8 DW_TAG_variable
	.byte	85                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	25                              # DW_AT_decl_line
	.long	2397                            # DW_AT_type
	.byte	31                              # Abbrev [31] 0x914:0x8 DW_TAG_variable
	.byte	133                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	30                              # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	31                              # Abbrev [31] 0x91c:0x8 DW_TAG_variable
	.byte	180                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	26                              # DW_AT_decl_line
	.long	2011                            # DW_AT_type
	.byte	16                              # Abbrev [16] 0x924:0x24 DW_TAG_lexical_block
	.byte	31                              # Abbrev [31] 0x925:0x8 DW_TAG_variable
	.byte	55                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	35                              # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	16                              # Abbrev [16] 0x92d:0x1a DW_TAG_lexical_block
	.byte	31                              # Abbrev [31] 0x92e:0x8 DW_TAG_variable
	.byte	181                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	41                              # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	31                              # Abbrev [31] 0x936:0x8 DW_TAG_variable
	.byte	182                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	42                              # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	31                              # Abbrev [31] 0x93e:0x8 DW_TAG_variable
	.byte	163                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	44                              # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	28                              # Abbrev [28] 0x949:0x5 DW_TAG_const_type
	.long	2382                            # DW_AT_type
	.byte	12                              # Abbrev [12] 0x94e:0x5 DW_TAG_pointer_type
	.long	2387                            # DW_AT_type
	.byte	28                              # Abbrev [28] 0x953:0x5 DW_TAG_const_type
	.long	679                             # DW_AT_type
	.byte	28                              # Abbrev [28] 0x958:0x5 DW_TAG_const_type
	.long	1419                            # DW_AT_type
	.byte	28                              # Abbrev [28] 0x95d:0x5 DW_TAG_const_type
	.long	2402                            # DW_AT_type
	.byte	12                              # Abbrev [12] 0x962:0x5 DW_TAG_pointer_type
	.long	2407                            # DW_AT_type
	.byte	28                              # Abbrev [28] 0x967:0x5 DW_TAG_const_type
	.long	1034                            # DW_AT_type
	.byte	29                              # Abbrev [29] 0x96c:0xd DW_TAG_subprogram
	.byte	183                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	212                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_inline
	.byte	30                              # Abbrev [30] 0x970:0x8 DW_TAG_formal_parameter
	.byte	184                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	212                             # DW_AT_decl_line
	.long	2425                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	12                              # Abbrev [12] 0x979:0x5 DW_TAG_pointer_type
	.long	1716                            # DW_AT_type
	.byte	32                              # Abbrev [32] 0x97e:0x11 DW_TAG_subprogram
	.byte	185                             # DW_AT_name
	.byte	8                               # DW_AT_decl_file
	.byte	44                              # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	199                             # DW_AT_type
                                        # DW_AT_inline
	.byte	30                              # Abbrev [30] 0x986:0x8 DW_TAG_formal_parameter
	.byte	165                             # DW_AT_name
	.byte	8                               # DW_AT_decl_file
	.byte	44                              # DW_AT_decl_line
	.long	2021                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x98f:0x29 DW_TAG_subprogram
	.byte	186                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	68                              # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	199                             # DW_AT_type
                                        # DW_AT_inline
	.byte	30                              # Abbrev [30] 0x997:0x8 DW_TAG_formal_parameter
	.byte	48                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	68                              # DW_AT_decl_line
	.long	2377                            # DW_AT_type
	.byte	30                              # Abbrev [30] 0x99f:0x8 DW_TAG_formal_parameter
	.byte	88                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	69                              # DW_AT_decl_line
	.long	2488                            # DW_AT_type
	.byte	30                              # Abbrev [30] 0x9a7:0x8 DW_TAG_formal_parameter
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	69                              # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	31                              # Abbrev [31] 0x9af:0x8 DW_TAG_variable
	.byte	85                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	71                              # DW_AT_decl_line
	.long	2397                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	28                              # Abbrev [28] 0x9b8:0x5 DW_TAG_const_type
	.long	1398                            # DW_AT_type
	.byte	29                              # Abbrev [29] 0x9bd:0xd DW_TAG_subprogram
	.byte	187                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	220                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_inline
	.byte	30                              # Abbrev [30] 0x9c1:0x8 DW_TAG_formal_parameter
	.byte	184                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	220                             # DW_AT_decl_line
	.long	2425                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x9ca:0x4b DW_TAG_subprogram
	.byte	188                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	115                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	199                             # DW_AT_type
                                        # DW_AT_inline
	.byte	30                              # Abbrev [30] 0x9d2:0x8 DW_TAG_formal_parameter
	.byte	48                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	115                             # DW_AT_decl_line
	.long	2377                            # DW_AT_type
	.byte	30                              # Abbrev [30] 0x9da:0x8 DW_TAG_formal_parameter
	.byte	22                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	115                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	30                              # Abbrev [30] 0x9e2:0x8 DW_TAG_formal_parameter
	.byte	62                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	116                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	30                              # Abbrev [30] 0x9ea:0x8 DW_TAG_formal_parameter
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	116                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	31                              # Abbrev [31] 0x9f2:0x8 DW_TAG_variable
	.byte	85                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	118                             # DW_AT_decl_line
	.long	2397                            # DW_AT_type
	.byte	31                              # Abbrev [31] 0x9fa:0x8 DW_TAG_variable
	.byte	157                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	119                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	31                              # Abbrev [31] 0xa02:0x8 DW_TAG_variable
	.byte	133                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	120                             # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	16                              # Abbrev [16] 0xa0a:0xa DW_TAG_lexical_block
	.byte	31                              # Abbrev [31] 0xa0b:0x8 DW_TAG_variable
	.byte	107                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	125                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0xa15:0x11 DW_TAG_subprogram
	.byte	189                             # DW_AT_name
	.byte	9                               # DW_AT_decl_file
	.byte	124                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	199                             # DW_AT_type
                                        # DW_AT_inline
	.byte	30                              # Abbrev [30] 0xa1d:0x8 DW_TAG_formal_parameter
	.byte	22                              # DW_AT_name
	.byte	9                               # DW_AT_decl_file
	.byte	124                             # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0xa26:0x21 DW_TAG_subprogram
	.byte	190                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	58                              # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	199                             # DW_AT_type
                                        # DW_AT_inline
	.byte	30                              # Abbrev [30] 0xa2e:0x8 DW_TAG_formal_parameter
	.byte	191                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	58                              # DW_AT_decl_line
	.long	2631                            # DW_AT_type
	.byte	30                              # Abbrev [30] 0xa36:0x8 DW_TAG_formal_parameter
	.byte	62                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	59                              # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	30                              # Abbrev [30] 0xa3e:0x8 DW_TAG_formal_parameter
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	59                              # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	28                              # Abbrev [28] 0xa47:0x5 DW_TAG_const_type
	.long	2636                            # DW_AT_type
	.byte	12                              # Abbrev [12] 0xa4c:0x5 DW_TAG_pointer_type
	.long	2641                            # DW_AT_type
	.byte	28                              # Abbrev [28] 0xa51:0x5 DW_TAG_const_type
	.long	1514                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0xa56:0x261 DW_TAG_subprogram
	.byte	192                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	460                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	199                             # DW_AT_type
                                        # DW_AT_inline
	.byte	14                              # Abbrev [14] 0xa5f:0x9 DW_TAG_formal_parameter
	.byte	48                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	460                             # DW_AT_decl_line
	.long	674                             # DW_AT_type
	.byte	14                              # Abbrev [14] 0xa68:0x9 DW_TAG_formal_parameter
	.byte	90                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	460                             # DW_AT_decl_line
	.long	993                             # DW_AT_type
	.byte	14                              # Abbrev [14] 0xa71:0x9 DW_TAG_formal_parameter
	.byte	141                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	460                             # DW_AT_decl_line
	.long	1820                            # DW_AT_type
	.byte	14                              # Abbrev [14] 0xa7a:0x9 DW_TAG_formal_parameter
	.byte	145                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	461                             # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	14                              # Abbrev [14] 0xa83:0x9 DW_TAG_formal_parameter
	.byte	82                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	461                             # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	14                              # Abbrev [14] 0xa8c:0x9 DW_TAG_formal_parameter
	.byte	193                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	461                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	14                              # Abbrev [14] 0xa95:0x9 DW_TAG_formal_parameter
	.byte	72                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	462                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	14                              # Abbrev [14] 0xa9e:0x9 DW_TAG_formal_parameter
	.byte	194                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	462                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	15                              # Abbrev [15] 0xaa7:0x9 DW_TAG_variable
	.byte	85                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	464                             # DW_AT_decl_line
	.long	1029                            # DW_AT_type
	.byte	15                              # Abbrev [15] 0xab0:0x9 DW_TAG_variable
	.byte	83                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	465                             # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	15                              # Abbrev [15] 0xab9:0x9 DW_TAG_variable
	.byte	195                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	466                             # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	15                              # Abbrev [15] 0xac2:0x9 DW_TAG_variable
	.byte	88                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	468                             # DW_AT_decl_line
	.long	1398                            # DW_AT_type
	.byte	15                              # Abbrev [15] 0xacb:0x9 DW_TAG_variable
	.byte	146                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	536                             # DW_AT_decl_line
	.long	1825                            # DW_AT_type
	.byte	15                              # Abbrev [15] 0xad4:0x9 DW_TAG_variable
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	539                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	15                              # Abbrev [15] 0xadd:0x9 DW_TAG_variable
	.byte	196                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	541                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	15                              # Abbrev [15] 0xae6:0x9 DW_TAG_variable
	.byte	143                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	555                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	15                              # Abbrev [15] 0xaef:0x9 DW_TAG_variable
	.byte	144                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	557                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	15                              # Abbrev [15] 0xaf8:0x9 DW_TAG_variable
	.byte	134                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	467                             # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	15                              # Abbrev [15] 0xb01:0x9 DW_TAG_variable
	.byte	197                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	534                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	15                              # Abbrev [15] 0xb0a:0x9 DW_TAG_variable
	.byte	198                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	546                             # DW_AT_decl_line
	.long	1419                            # DW_AT_type
	.byte	15                              # Abbrev [15] 0xb13:0x9 DW_TAG_variable
	.byte	140                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	578                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	15                              # Abbrev [15] 0xb1c:0x9 DW_TAG_variable
	.byte	199                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	622                             # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	15                              # Abbrev [15] 0xb25:0x9 DW_TAG_variable
	.byte	147                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	537                             # DW_AT_decl_line
	.long	1825                            # DW_AT_type
	.byte	16                              # Abbrev [16] 0xb2e:0x21 DW_TAG_lexical_block
	.byte	15                              # Abbrev [15] 0xb2f:0x9 DW_TAG_variable
	.byte	22                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	497                             # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	16                              # Abbrev [16] 0xb38:0xb DW_TAG_lexical_block
	.byte	15                              # Abbrev [15] 0xb39:0x9 DW_TAG_variable
	.byte	150                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	514                             # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	16                              # Abbrev [16] 0xb43:0xb DW_TAG_lexical_block
	.byte	15                              # Abbrev [15] 0xb44:0x9 DW_TAG_variable
	.byte	150                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	524                             # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	16                              # Abbrev [16] 0xb4f:0xb DW_TAG_lexical_block
	.byte	15                              # Abbrev [15] 0xb50:0x9 DW_TAG_variable
	.byte	150                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	531                             # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	16                              # Abbrev [16] 0xb5a:0xb DW_TAG_lexical_block
	.byte	15                              # Abbrev [15] 0xb5b:0x9 DW_TAG_variable
	.byte	153                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	564                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	16                              # Abbrev [16] 0xb65:0x4c DW_TAG_lexical_block
	.byte	15                              # Abbrev [15] 0xb66:0x9 DW_TAG_variable
	.byte	200                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	583                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	15                              # Abbrev [15] 0xb6f:0x9 DW_TAG_variable
	.byte	152                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	585                             # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	15                              # Abbrev [15] 0xb78:0x9 DW_TAG_variable
	.byte	151                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	582                             # DW_AT_decl_line
	.long	1815                            # DW_AT_type
	.byte	16                              # Abbrev [16] 0xb81:0x2f DW_TAG_lexical_block
	.byte	15                              # Abbrev [15] 0xb82:0x9 DW_TAG_variable
	.byte	201                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	592                             # DW_AT_decl_line
	.long	1398                            # DW_AT_type
	.byte	15                              # Abbrev [15] 0xb8b:0x9 DW_TAG_variable
	.byte	202                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	595                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	15                              # Abbrev [15] 0xb94:0x9 DW_TAG_variable
	.byte	55                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	601                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	15                              # Abbrev [15] 0xb9d:0x9 DW_TAG_variable
	.byte	155                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	606                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	15                              # Abbrev [15] 0xba6:0x9 DW_TAG_variable
	.byte	203                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	596                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	16                              # Abbrev [16] 0xbb1:0x86 DW_TAG_lexical_block
	.byte	15                              # Abbrev [15] 0xbb2:0x9 DW_TAG_variable
	.byte	204                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	624                             # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	16                              # Abbrev [16] 0xbbb:0x7b DW_TAG_lexical_block
	.byte	15                              # Abbrev [15] 0xbbc:0x9 DW_TAG_variable
	.byte	151                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	625                             # DW_AT_decl_line
	.long	1815                            # DW_AT_type
	.byte	15                              # Abbrev [15] 0xbc5:0x9 DW_TAG_variable
	.byte	152                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	629                             # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	15                              # Abbrev [15] 0xbce:0x9 DW_TAG_variable
	.byte	205                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	637                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	15                              # Abbrev [15] 0xbd7:0x9 DW_TAG_variable
	.byte	133                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	638                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	15                              # Abbrev [15] 0xbe0:0x9 DW_TAG_variable
	.byte	206                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	660                             # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	15                              # Abbrev [15] 0xbe9:0x9 DW_TAG_variable
	.byte	200                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	661                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	16                              # Abbrev [16] 0xbf2:0xb DW_TAG_lexical_block
	.byte	15                              # Abbrev [15] 0xbf3:0x9 DW_TAG_variable
	.byte	155                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	642                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	16                              # Abbrev [16] 0xbfd:0x38 DW_TAG_lexical_block
	.byte	15                              # Abbrev [15] 0xbfe:0x9 DW_TAG_variable
	.byte	201                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	670                             # DW_AT_decl_line
	.long	1398                            # DW_AT_type
	.byte	15                              # Abbrev [15] 0xc07:0x9 DW_TAG_variable
	.byte	202                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	673                             # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	15                              # Abbrev [15] 0xc10:0x9 DW_TAG_variable
	.byte	55                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	692                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	15                              # Abbrev [15] 0xc19:0x9 DW_TAG_variable
	.byte	155                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	697                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	15                              # Abbrev [15] 0xc22:0x9 DW_TAG_variable
	.byte	207                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	675                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	15                              # Abbrev [15] 0xc2b:0x9 DW_TAG_variable
	.byte	203                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	687                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	16                              # Abbrev [16] 0xc37:0x7f DW_TAG_lexical_block
	.byte	15                              # Abbrev [15] 0xc38:0x9 DW_TAG_variable
	.byte	150                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	734                             # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	15                              # Abbrev [15] 0xc41:0x9 DW_TAG_variable
	.byte	149                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	728                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	16                              # Abbrev [16] 0xc4a:0x6b DW_TAG_lexical_block
	.byte	15                              # Abbrev [15] 0xc4b:0x9 DW_TAG_variable
	.byte	152                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	738                             # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	16                              # Abbrev [16] 0xc54:0x60 DW_TAG_lexical_block
	.byte	15                              # Abbrev [15] 0xc55:0x9 DW_TAG_variable
	.byte	155                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	740                             # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	15                              # Abbrev [15] 0xc5e:0x9 DW_TAG_variable
	.byte	208                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	739                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	16                              # Abbrev [16] 0xc67:0x4c DW_TAG_lexical_block
	.byte	15                              # Abbrev [15] 0xc68:0x9 DW_TAG_variable
	.byte	151                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	754                             # DW_AT_decl_line
	.long	1815                            # DW_AT_type
	.byte	15                              # Abbrev [15] 0xc71:0x9 DW_TAG_variable
	.byte	206                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	755                             # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	15                              # Abbrev [15] 0xc7a:0x9 DW_TAG_variable
	.byte	200                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	756                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	16                              # Abbrev [16] 0xc83:0x2f DW_TAG_lexical_block
	.byte	15                              # Abbrev [15] 0xc84:0x9 DW_TAG_variable
	.byte	201                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	766                             # DW_AT_decl_line
	.long	1398                            # DW_AT_type
	.byte	15                              # Abbrev [15] 0xc8d:0x9 DW_TAG_variable
	.byte	202                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	768                             # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	15                              # Abbrev [15] 0xc96:0x9 DW_TAG_variable
	.byte	55                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	791                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	15                              # Abbrev [15] 0xc9f:0x9 DW_TAG_variable
	.byte	207                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	771                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	15                              # Abbrev [15] 0xca8:0x9 DW_TAG_variable
	.byte	203                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	784                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0xcb7:0x39 DW_TAG_subprogram
	.byte	209                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	78                              # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	199                             # DW_AT_type
                                        # DW_AT_inline
	.byte	30                              # Abbrev [30] 0xcbf:0x8 DW_TAG_formal_parameter
	.byte	48                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	78                              # DW_AT_decl_line
	.long	2377                            # DW_AT_type
	.byte	30                              # Abbrev [30] 0xcc7:0x8 DW_TAG_formal_parameter
	.byte	204                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	78                              # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	30                              # Abbrev [30] 0xccf:0x8 DW_TAG_formal_parameter
	.byte	88                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	79                              # DW_AT_decl_line
	.long	2488                            # DW_AT_type
	.byte	30                              # Abbrev [30] 0xcd7:0x8 DW_TAG_formal_parameter
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	79                              # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	31                              # Abbrev [31] 0xcdf:0x8 DW_TAG_variable
	.byte	85                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	81                              # DW_AT_decl_line
	.long	2397                            # DW_AT_type
	.byte	31                              # Abbrev [31] 0xce7:0x8 DW_TAG_variable
	.byte	133                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	82                              # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0xcf0:0x39 DW_TAG_subprogram
	.byte	210                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	104                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	199                             # DW_AT_type
                                        # DW_AT_inline
	.byte	30                              # Abbrev [30] 0xcf8:0x8 DW_TAG_formal_parameter
	.byte	48                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	104                             # DW_AT_decl_line
	.long	2377                            # DW_AT_type
	.byte	30                              # Abbrev [30] 0xd00:0x8 DW_TAG_formal_parameter
	.byte	204                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	104                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	30                              # Abbrev [30] 0xd08:0x8 DW_TAG_formal_parameter
	.byte	62                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	105                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	30                              # Abbrev [30] 0xd10:0x8 DW_TAG_formal_parameter
	.byte	88                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	105                             # DW_AT_decl_line
	.long	2488                            # DW_AT_type
	.byte	30                              # Abbrev [30] 0xd18:0x8 DW_TAG_formal_parameter
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	106                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	31                              # Abbrev [31] 0xd20:0x8 DW_TAG_variable
	.byte	85                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	108                             # DW_AT_decl_line
	.long	2397                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	29                              # Abbrev [29] 0xd29:0x51 DW_TAG_subprogram
	.byte	211                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	232                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_inline
	.byte	30                              # Abbrev [30] 0xd2d:0x8 DW_TAG_formal_parameter
	.byte	48                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	232                             # DW_AT_decl_line
	.long	674                             # DW_AT_type
	.byte	30                              # Abbrev [30] 0xd35:0x8 DW_TAG_formal_parameter
	.byte	81                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	232                             # DW_AT_decl_line
	.long	1007                            # DW_AT_type
	.byte	30                              # Abbrev [30] 0xd3d:0x8 DW_TAG_formal_parameter
	.byte	80                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	233                             # DW_AT_decl_line
	.long	1007                            # DW_AT_type
	.byte	30                              # Abbrev [30] 0xd45:0x8 DW_TAG_formal_parameter
	.byte	193                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	233                             # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	31                              # Abbrev [31] 0xd4d:0x8 DW_TAG_variable
	.byte	85                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	235                             # DW_AT_decl_line
	.long	1024                            # DW_AT_type
	.byte	31                              # Abbrev [31] 0xd55:0x8 DW_TAG_variable
	.byte	212                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	238                             # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	31                              # Abbrev [31] 0xd5d:0x8 DW_TAG_variable
	.byte	213                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	239                             # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	16                              # Abbrev [16] 0xd65:0x14 DW_TAG_lexical_block
	.byte	15                              # Abbrev [15] 0xd66:0x9 DW_TAG_variable
	.byte	134                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	256                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	15                              # Abbrev [15] 0xd6f:0x9 DW_TAG_variable
	.byte	214                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	257                             # DW_AT_decl_line
	.long	1810                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	34                              # Abbrev [34] 0xd7a:0xd14 DW_TAG_subprogram
	.byte	0                               # DW_AT_low_pc
	.long	.Lfunc_end0-.Lfunc_begin0       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	218                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	824                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	35                              # Abbrev [35] 0xd86:0xa DW_TAG_formal_parameter
	.byte	0                               # DW_AT_location
	.byte	48                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	824                             # DW_AT_decl_line
	.long	674                             # DW_AT_type
	.byte	35                              # Abbrev [35] 0xd90:0xa DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	50                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	824                             # DW_AT_decl_line
	.long	683                             # DW_AT_type
	.byte	35                              # Abbrev [35] 0xd9a:0xa DW_TAG_formal_parameter
	.byte	2                               # DW_AT_location
	.byte	80                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	825                             # DW_AT_decl_line
	.long	1007                            # DW_AT_type
	.byte	35                              # Abbrev [35] 0xda4:0xa DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	81                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	825                             # DW_AT_decl_line
	.long	1007                            # DW_AT_type
	.byte	35                              # Abbrev [35] 0xdae:0xa DW_TAG_formal_parameter
	.byte	4                               # DW_AT_location
	.byte	82                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	826                             # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	36                              # Abbrev [36] 0xdb8:0xa DW_TAG_variable
	.byte	5                               # DW_AT_location
	.byte	90                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	859                             # DW_AT_decl_line
	.long	1012                            # DW_AT_type
	.byte	36                              # Abbrev [36] 0xdc2:0xa DW_TAG_variable
	.byte	6                               # DW_AT_location
	.byte	85                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	828                             # DW_AT_decl_line
	.long	1024                            # DW_AT_type
	.byte	36                              # Abbrev [36] 0xdcc:0xa DW_TAG_variable
	.byte	44                              # DW_AT_location
	.byte	145                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	855                             # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	36                              # Abbrev [36] 0xdd6:0xa DW_TAG_variable
	.byte	77                              # DW_AT_location
	.byte	193                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	862                             # DW_AT_decl_line
	.long	199                             # DW_AT_type
	.byte	37                              # Abbrev [37] 0xde0:0x119 DW_TAG_inlined_subroutine
	.long	1830                            # DW_AT_abstract_origin
	.byte	1                               # DW_AT_low_pc
	.long	.Ltmp167-.Ltmp19                # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	845                             # DW_AT_call_line
	.byte	4                               # DW_AT_call_column
	.byte	38                              # Abbrev [38] 0xdee:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\210\001"
	.long	1834                            # DW_AT_abstract_origin
	.byte	39                              # Abbrev [39] 0xdf7:0x9 DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\210\001"
	.long	1842                            # DW_AT_abstract_origin
	.byte	40                              # Abbrev [40] 0xe00:0x70 DW_TAG_lexical_block
	.byte	1                               # DW_AT_low_pc
	.long	.Ltmp127-.Ltmp19                # DW_AT_high_pc
	.byte	41                              # Abbrev [41] 0xe06:0x6 DW_TAG_variable
	.byte	16                              # DW_AT_location
	.long	1851                            # DW_AT_abstract_origin
	.byte	40                              # Abbrev [40] 0xe0c:0x63 DW_TAG_lexical_block
	.byte	1                               # DW_AT_low_pc
	.long	.Ltmp127-.Ltmp19                # DW_AT_high_pc
	.byte	41                              # Abbrev [41] 0xe12:0x6 DW_TAG_variable
	.byte	17                              # DW_AT_location
	.long	1860                            # DW_AT_abstract_origin
	.byte	42                              # Abbrev [42] 0xe18:0x34 DW_TAG_lexical_block
	.byte	0                               # DW_AT_ranges
	.byte	41                              # Abbrev [41] 0xe1a:0x6 DW_TAG_variable
	.byte	18                              # DW_AT_location
	.long	1869                            # DW_AT_abstract_origin
	.byte	43                              # Abbrev [43] 0xe20:0x2b DW_TAG_inlined_subroutine
	.long	1960                            # DW_AT_abstract_origin
	.byte	1                               # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.byte	150                             # DW_AT_call_line
	.byte	32                              # DW_AT_call_column
	.byte	44                              # Abbrev [44] 0xe29:0x6 DW_TAG_formal_parameter
	.byte	19                              # DW_AT_location
	.long	1968                            # DW_AT_abstract_origin
	.byte	44                              # Abbrev [44] 0xe2f:0x6 DW_TAG_formal_parameter
	.byte	20                              # DW_AT_location
	.long	1976                            # DW_AT_abstract_origin
	.byte	44                              # Abbrev [44] 0xe35:0x6 DW_TAG_formal_parameter
	.byte	21                              # DW_AT_location
	.long	1984                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0xe3b:0x6 DW_TAG_variable
	.byte	22                              # DW_AT_location
	.long	1992                            # DW_AT_abstract_origin
	.byte	45                              # Abbrev [45] 0xe41:0x9 DW_TAG_inlined_subroutine
	.long	2026                            # DW_AT_abstract_origin
	.byte	2                               # DW_AT_ranges
	.byte	8                               # DW_AT_call_file
	.byte	61                              # DW_AT_call_line
	.byte	12                              # DW_AT_call_column
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	42                              # Abbrev [42] 0xe4c:0x19 DW_TAG_lexical_block
	.byte	3                               # DW_AT_ranges
	.byte	41                              # Abbrev [41] 0xe4e:0x6 DW_TAG_variable
	.byte	23                              # DW_AT_location
	.long	1879                            # DW_AT_abstract_origin
	.byte	43                              # Abbrev [43] 0xe54:0x10 DW_TAG_inlined_subroutine
	.long	2051                            # DW_AT_abstract_origin
	.byte	4                               # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.byte	159                             # DW_AT_call_line
	.byte	33                              # DW_AT_call_column
	.byte	44                              # Abbrev [44] 0xe5d:0x6 DW_TAG_formal_parameter
	.byte	24                              # DW_AT_location
	.long	2059                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	42                              # Abbrev [42] 0xe65:0x9 DW_TAG_lexical_block
	.byte	5                               # DW_AT_ranges
	.byte	41                              # Abbrev [41] 0xe67:0x6 DW_TAG_variable
	.byte	25                              # DW_AT_location
	.long	1889                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	40                              # Abbrev [40] 0xe70:0x88 DW_TAG_lexical_block
	.byte	2                               # DW_AT_low_pc
	.long	.Ltmp166-.Ltmp128               # DW_AT_high_pc
	.byte	39                              # Abbrev [39] 0xe76:0x7 DW_TAG_variable
	.byte	1                               # DW_AT_location
	.byte	84
	.long	1901                            # DW_AT_abstract_origin
	.byte	42                              # Abbrev [42] 0xe7d:0x7a DW_TAG_lexical_block
	.byte	6                               # DW_AT_ranges
	.byte	41                              # Abbrev [41] 0xe7f:0x6 DW_TAG_variable
	.byte	26                              # DW_AT_location
	.long	1910                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0xe85:0x6 DW_TAG_variable
	.byte	28                              # DW_AT_location
	.long	1918                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0xe8b:0x6 DW_TAG_variable
	.byte	29                              # DW_AT_location
	.long	1926                            # DW_AT_abstract_origin
	.byte	40                              # Abbrev [40] 0xe91:0xd DW_TAG_lexical_block
	.byte	2                               # DW_AT_low_pc
	.long	.Ltmp132-.Ltmp128               # DW_AT_high_pc
	.byte	41                              # Abbrev [41] 0xe97:0x6 DW_TAG_variable
	.byte	27                              # DW_AT_location
	.long	1943                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	46                              # Abbrev [46] 0xe9e:0x15 DW_TAG_inlined_subroutine
	.long	2068                            # DW_AT_abstract_origin
	.byte	3                               # DW_AT_low_pc
	.long	.Ltmp136-.Ltmp135               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	174                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	38                              # Abbrev [38] 0xeab:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	84
	.long	2076                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	46                              # Abbrev [46] 0xeb3:0x43 DW_TAG_inlined_subroutine
	.long	2085                            # DW_AT_abstract_origin
	.byte	4                               # DW_AT_low_pc
	.long	.Ltmp166-.Ltmp139               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	177                             # DW_AT_call_line
	.byte	26                              # DW_AT_call_column
	.byte	38                              # Abbrev [38] 0xec0:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	89
	.long	2093                            # DW_AT_abstract_origin
	.byte	44                              # Abbrev [44] 0xec7:0x6 DW_TAG_formal_parameter
	.byte	31                              # DW_AT_location
	.long	2101                            # DW_AT_abstract_origin
	.byte	44                              # Abbrev [44] 0xecd:0x6 DW_TAG_formal_parameter
	.byte	30                              # DW_AT_location
	.long	2109                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0xed3:0x6 DW_TAG_variable
	.byte	32                              # DW_AT_location
	.long	2117                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0xed9:0x6 DW_TAG_variable
	.byte	33                              # DW_AT_location
	.long	2125                            # DW_AT_abstract_origin
	.byte	40                              # Abbrev [40] 0xedf:0x16 DW_TAG_lexical_block
	.byte	5                               # DW_AT_low_pc
	.long	.Ltmp166-.Ltmp143               # DW_AT_high_pc
	.byte	41                              # Abbrev [41] 0xee5:0x6 DW_TAG_variable
	.byte	34                              # DW_AT_location
	.long	2134                            # DW_AT_abstract_origin
	.byte	45                              # Abbrev [45] 0xeeb:0x9 DW_TAG_inlined_subroutine
	.long	2026                            # DW_AT_abstract_origin
	.byte	7                               # DW_AT_ranges
	.byte	8                               # DW_AT_call_file
	.byte	78                              # DW_AT_call_line
	.byte	12                              # DW_AT_call_column
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	37                              # Abbrev [37] 0xef9:0x77 DW_TAG_inlined_subroutine
	.long	2144                            # DW_AT_abstract_origin
	.byte	6                               # DW_AT_low_pc
	.long	.Ltmp195-.Ltmp170               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	848                             # DW_AT_call_line
	.byte	4                               # DW_AT_call_column
	.byte	38                              # Abbrev [38] 0xf07:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\210\001"
	.long	2148                            # DW_AT_abstract_origin
	.byte	39                              # Abbrev [39] 0xf10:0x9 DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\210\001"
	.long	2156                            # DW_AT_abstract_origin
	.byte	40                              # Abbrev [40] 0xf19:0x56 DW_TAG_lexical_block
	.byte	6                               # DW_AT_low_pc
	.long	.Ltmp194-.Ltmp170               # DW_AT_high_pc
	.byte	41                              # Abbrev [41] 0xf1f:0x6 DW_TAG_variable
	.byte	35                              # DW_AT_location
	.long	2165                            # DW_AT_abstract_origin
	.byte	46                              # Abbrev [46] 0xf25:0x49 DW_TAG_inlined_subroutine
	.long	2085                            # DW_AT_abstract_origin
	.byte	6                               # DW_AT_low_pc
	.long	.Ltmp191-.Ltmp170               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	199                             # DW_AT_call_line
	.byte	28                              # DW_AT_call_column
	.byte	44                              # Abbrev [44] 0xf32:0x6 DW_TAG_formal_parameter
	.byte	36                              # DW_AT_location
	.long	2093                            # DW_AT_abstract_origin
	.byte	44                              # Abbrev [44] 0xf38:0x6 DW_TAG_formal_parameter
	.byte	37                              # DW_AT_location
	.long	2101                            # DW_AT_abstract_origin
	.byte	44                              # Abbrev [44] 0xf3e:0x6 DW_TAG_formal_parameter
	.byte	40                              # DW_AT_location
	.long	2109                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0xf44:0x6 DW_TAG_variable
	.byte	38                              # DW_AT_location
	.long	2125                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0xf4a:0x6 DW_TAG_variable
	.byte	39                              # DW_AT_location
	.long	2117                            # DW_AT_abstract_origin
	.byte	40                              # Abbrev [40] 0xf50:0x1d DW_TAG_lexical_block
	.byte	6                               # DW_AT_low_pc
	.long	.Ltmp191-.Ltmp170               # DW_AT_high_pc
	.byte	41                              # Abbrev [41] 0xf56:0x6 DW_TAG_variable
	.byte	41                              # DW_AT_location
	.long	2134                            # DW_AT_abstract_origin
	.byte	43                              # Abbrev [43] 0xf5c:0x10 DW_TAG_inlined_subroutine
	.long	2026                            # DW_AT_abstract_origin
	.byte	8                               # DW_AT_ranges
	.byte	8                               # DW_AT_call_file
	.byte	78                              # DW_AT_call_line
	.byte	12                              # DW_AT_call_column
	.byte	44                              # Abbrev [44] 0xf65:0x6 DW_TAG_formal_parameter
	.byte	42                              # DW_AT_location
	.long	2042                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	47                              # Abbrev [47] 0xf70:0x33a DW_TAG_inlined_subroutine
	.long	349                             # DW_AT_abstract_origin
	.byte	9                               # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	855                             # DW_AT_call_line
	.byte	21                              # DW_AT_call_column
	.byte	44                              # Abbrev [44] 0xf7a:0x6 DW_TAG_formal_parameter
	.byte	8                               # DW_AT_location
	.long	358                             # DW_AT_abstract_origin
	.byte	44                              # Abbrev [44] 0xf80:0x6 DW_TAG_formal_parameter
	.byte	9                               # DW_AT_location
	.long	367                             # DW_AT_abstract_origin
	.byte	44                              # Abbrev [44] 0xf86:0x6 DW_TAG_formal_parameter
	.byte	10                              # DW_AT_location
	.long	376                             # DW_AT_abstract_origin
	.byte	44                              # Abbrev [44] 0xf8c:0x6 DW_TAG_formal_parameter
	.byte	11                              # DW_AT_location
	.long	385                             # DW_AT_abstract_origin
	.byte	44                              # Abbrev [44] 0xf92:0x6 DW_TAG_formal_parameter
	.byte	12                              # DW_AT_location
	.long	394                             # DW_AT_abstract_origin
	.byte	39                              # Abbrev [39] 0xf98:0x9 DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\304\001"
	.long	403                             # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0xfa1:0x6 DW_TAG_variable
	.byte	7                               # DW_AT_location
	.long	412                             # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0xfa7:0x6 DW_TAG_variable
	.byte	13                              # DW_AT_location
	.long	421                             # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0xfad:0x6 DW_TAG_variable
	.byte	14                              # DW_AT_location
	.long	430                             # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0xfb3:0x6 DW_TAG_variable
	.byte	15                              # DW_AT_location
	.long	439                             # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0xfb9:0x6 DW_TAG_variable
	.byte	43                              # DW_AT_location
	.long	448                             # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0xfbf:0x6 DW_TAG_variable
	.byte	45                              # DW_AT_location
	.long	457                             # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0xfc5:0x6 DW_TAG_variable
	.byte	46                              # DW_AT_location
	.long	466                             # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0xfcb:0x6 DW_TAG_variable
	.byte	62                              # DW_AT_location
	.long	475                             # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0xfd1:0x6 DW_TAG_variable
	.byte	63                              # DW_AT_location
	.long	484                             # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0xfd7:0x6 DW_TAG_variable
	.byte	65                              # DW_AT_location
	.long	493                             # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0xfdd:0x6 DW_TAG_variable
	.byte	67                              # DW_AT_location
	.long	502                             # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0xfe3:0xe DW_TAG_inlined_subroutine
	.long	2175                            # DW_AT_abstract_origin
	.byte	7                               # DW_AT_low_pc
	.long	.Ltmp202-.Ltmp201               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	299                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	48                              # Abbrev [48] 0xff1:0xe DW_TAG_inlined_subroutine
	.long	2202                            # DW_AT_abstract_origin
	.byte	8                               # DW_AT_low_pc
	.long	.Ltmp211-.Ltmp210               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	306                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	42                              # Abbrev [42] 0xfff:0x18 DW_TAG_lexical_block
	.byte	10                              # DW_AT_ranges
	.byte	41                              # Abbrev [41] 0x1001:0x6 DW_TAG_variable
	.byte	47                              # DW_AT_location
	.long	548                             # DW_AT_abstract_origin
	.byte	42                              # Abbrev [42] 0x1007:0xf DW_TAG_lexical_block
	.byte	11                              # DW_AT_ranges
	.byte	41                              # Abbrev [41] 0x1009:0x6 DW_TAG_variable
	.byte	48                              # DW_AT_location
	.long	558                             # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x100f:0x6 DW_TAG_variable
	.byte	49                              # DW_AT_location
	.long	567                             # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	37                              # Abbrev [37] 0x1017:0x1e DW_TAG_inlined_subroutine
	.long	2219                            # DW_AT_abstract_origin
	.byte	9                               # DW_AT_low_pc
	.long	.Ltmp297-.Ltmp292               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	332                             # DW_AT_call_line
	.byte	3                               # DW_AT_call_column
	.byte	38                              # Abbrev [38] 0x1025:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\370\001"
	.long	2224                            # DW_AT_abstract_origin
	.byte	44                              # Abbrev [44] 0x102e:0x6 DW_TAG_formal_parameter
	.byte	50                              # DW_AT_location
	.long	2233                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	37                              # Abbrev [37] 0x1035:0x1e DW_TAG_inlined_subroutine
	.long	2219                            # DW_AT_abstract_origin
	.byte	10                              # DW_AT_low_pc
	.long	.Ltmp314-.Ltmp309               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	341                             # DW_AT_call_line
	.byte	3                               # DW_AT_call_column
	.byte	38                              # Abbrev [38] 0x1043:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\370\001"
	.long	2224                            # DW_AT_abstract_origin
	.byte	44                              # Abbrev [44] 0x104c:0x6 DW_TAG_formal_parameter
	.byte	51                              # DW_AT_location
	.long	2233                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	49                              # Abbrev [49] 0x1053:0xa DW_TAG_inlined_subroutine
	.long	2243                            # DW_AT_abstract_origin
	.byte	12                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	359                             # DW_AT_call_line
	.byte	25                              # DW_AT_call_column
	.byte	47                              # Abbrev [47] 0x105d:0xb0 DW_TAG_inlined_subroutine
	.long	2260                            # DW_AT_abstract_origin
	.byte	13                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	361                             # DW_AT_call_line
	.byte	6                               # DW_AT_call_column
	.byte	38                              # Abbrev [38] 0x1067:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\210\001"
	.long	2268                            # DW_AT_abstract_origin
	.byte	38                              # Abbrev [38] 0x1070:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\260\002"
	.long	2276                            # DW_AT_abstract_origin
	.byte	44                              # Abbrev [44] 0x1079:0x6 DW_TAG_formal_parameter
	.byte	53                              # DW_AT_location
	.long	2284                            # DW_AT_abstract_origin
	.byte	44                              # Abbrev [44] 0x107f:0x6 DW_TAG_formal_parameter
	.byte	56                              # DW_AT_location
	.long	2300                            # DW_AT_abstract_origin
	.byte	44                              # Abbrev [44] 0x1085:0x6 DW_TAG_formal_parameter
	.byte	52                              # DW_AT_location
	.long	2308                            # DW_AT_abstract_origin
	.byte	39                              # Abbrev [39] 0x108b:0x9 DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\210\001"
	.long	2316                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x1094:0x6 DW_TAG_variable
	.byte	54                              # DW_AT_location
	.long	2324                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x109a:0x6 DW_TAG_variable
	.byte	55                              # DW_AT_location
	.long	2332                            # DW_AT_abstract_origin
	.byte	40                              # Abbrev [40] 0x10a0:0x45 DW_TAG_lexical_block
	.byte	11                              # DW_AT_low_pc
	.long	.Ltmp344-.Ltmp333               # DW_AT_high_pc
	.byte	39                              # Abbrev [39] 0x10a6:0x7 DW_TAG_variable
	.byte	1                               # DW_AT_location
	.byte	82
	.long	2341                            # DW_AT_abstract_origin
	.byte	42                              # Abbrev [42] 0x10ad:0x37 DW_TAG_lexical_block
	.byte	14                              # DW_AT_ranges
	.byte	41                              # Abbrev [41] 0x10af:0x6 DW_TAG_variable
	.byte	57                              # DW_AT_location
	.long	2350                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x10b5:0x6 DW_TAG_variable
	.byte	58                              # DW_AT_location
	.long	2358                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x10bb:0x6 DW_TAG_variable
	.byte	59                              # DW_AT_location
	.long	2366                            # DW_AT_abstract_origin
	.byte	46                              # Abbrev [46] 0x10c1:0x22 DW_TAG_inlined_subroutine
	.long	2026                            # DW_AT_abstract_origin
	.byte	12                              # DW_AT_low_pc
	.long	.Ltmp339-.Ltmp337               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	45                              # DW_AT_call_line
	.byte	13                              # DW_AT_call_column
	.byte	38                              # Abbrev [38] 0x10ce:0x14 DW_TAG_formal_parameter
	.byte	14                              # DW_AT_location
	.byte	127
	.byte	0
	.byte	16
	.ascii	"\377\377\377\377\017"
	.byte	26
	.byte	55
	.byte	37
	.byte	49
	.byte	26
	.byte	159
	.long	2042                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	46                              # Abbrev [46] 0x10e5:0x27 DW_TAG_inlined_subroutine
	.long	1960                            # DW_AT_abstract_origin
	.byte	13                              # DW_AT_low_pc
	.long	.Ltmp353-.Ltmp344               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	33                              # DW_AT_call_line
	.byte	11                              # DW_AT_call_column
	.byte	44                              # Abbrev [44] 0x10f2:0x6 DW_TAG_formal_parameter
	.byte	60                              # DW_AT_location
	.long	1984                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x10f8:0x6 DW_TAG_variable
	.byte	61                              # DW_AT_location
	.long	1992                            # DW_AT_abstract_origin
	.byte	50                              # Abbrev [50] 0x10fe:0xd DW_TAG_inlined_subroutine
	.long	2026                            # DW_AT_abstract_origin
	.byte	14                              # DW_AT_low_pc
	.long	.Ltmp349-.Ltmp348               # DW_AT_high_pc
	.byte	8                               # DW_AT_call_file
	.byte	61                              # DW_AT_call_line
	.byte	12                              # DW_AT_call_column
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	37                              # Abbrev [37] 0x110d:0x1e DW_TAG_inlined_subroutine
	.long	2412                            # DW_AT_abstract_origin
	.byte	15                              # DW_AT_low_pc
	.long	.Ltmp355-.Ltmp354               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	365                             # DW_AT_call_line
	.byte	2                               # DW_AT_call_column
	.byte	38                              # Abbrev [38] 0x111b:0xf DW_TAG_formal_parameter
	.byte	9                               # DW_AT_location
	.byte	145
	.ascii	"\210\001"
	.byte	6
	.byte	35
	.ascii	"\220\236\004"
	.byte	159
	.long	2416                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	48                              # Abbrev [48] 0x112b:0xe DW_TAG_inlined_subroutine
	.long	2430                            # DW_AT_abstract_origin
	.byte	16                              # DW_AT_low_pc
	.long	.Ltmp358-.Ltmp356               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	367                             # DW_AT_call_line
	.byte	31                              # DW_AT_call_column
	.byte	48                              # Abbrev [48] 0x1139:0xe DW_TAG_inlined_subroutine
	.long	2430                            # DW_AT_abstract_origin
	.byte	17                              # DW_AT_low_pc
	.long	.Ltmp360-.Ltmp359               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	370                             # DW_AT_call_line
	.byte	6                               # DW_AT_call_column
	.byte	40                              # Abbrev [40] 0x1147:0x66 DW_TAG_lexical_block
	.byte	18                              # DW_AT_low_pc
	.long	.Ltmp373-.Ltmp363               # DW_AT_high_pc
	.byte	41                              # Abbrev [41] 0x114d:0x6 DW_TAG_variable
	.byte	64                              # DW_AT_location
	.long	579                             # DW_AT_abstract_origin
	.byte	37                              # Abbrev [37] 0x1153:0x3b DW_TAG_inlined_subroutine
	.long	2447                            # DW_AT_abstract_origin
	.byte	18                              # DW_AT_low_pc
	.long	.Ltmp368-.Ltmp363               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	374                             # DW_AT_call_line
	.byte	7                               # DW_AT_call_column
	.byte	38                              # Abbrev [38] 0x1161:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\210\001"
	.long	2455                            # DW_AT_abstract_origin
	.byte	39                              # Abbrev [39] 0x116a:0x9 DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\210\001"
	.long	2479                            # DW_AT_abstract_origin
	.byte	50                              # Abbrev [50] 0x1173:0xd DW_TAG_inlined_subroutine
	.long	2243                            # DW_AT_abstract_origin
	.byte	19                              # DW_AT_low_pc
	.long	.Ltmp365-.Ltmp364               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	72                              # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	50                              # Abbrev [50] 0x1180:0xd DW_TAG_inlined_subroutine
	.long	2243                            # DW_AT_abstract_origin
	.byte	20                              # DW_AT_low_pc
	.long	.Ltmp367-.Ltmp366               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	73                              # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	0                               # End Of Children Mark
	.byte	37                              # Abbrev [37] 0x118e:0x1e DW_TAG_inlined_subroutine
	.long	2493                            # DW_AT_abstract_origin
	.byte	21                              # DW_AT_low_pc
	.long	.Ltmp373-.Ltmp372               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	379                             # DW_AT_call_line
	.byte	4                               # DW_AT_call_column
	.byte	38                              # Abbrev [38] 0x119c:0xf DW_TAG_formal_parameter
	.byte	9                               # DW_AT_location
	.byte	145
	.ascii	"\210\001"
	.byte	6
	.byte	35
	.ascii	"\220\236\004"
	.byte	159
	.long	2497                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	40                              # Abbrev [40] 0x11ad:0xd DW_TAG_lexical_block
	.byte	22                              # DW_AT_low_pc
	.long	.Ltmp385-.Ltmp381               # DW_AT_high_pc
	.byte	41                              # Abbrev [41] 0x11b3:0x6 DW_TAG_variable
	.byte	66                              # DW_AT_location
	.long	590                             # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	42                              # Abbrev [42] 0x11ba:0x83 DW_TAG_lexical_block
	.byte	15                              # DW_AT_ranges
	.byte	41                              # Abbrev [41] 0x11bc:0x6 DW_TAG_variable
	.byte	68                              # DW_AT_location
	.long	601                             # DW_AT_abstract_origin
	.byte	42                              # Abbrev [42] 0x11c2:0x7a DW_TAG_lexical_block
	.byte	16                              # DW_AT_ranges
	.byte	41                              # Abbrev [41] 0x11c4:0x6 DW_TAG_variable
	.byte	69                              # DW_AT_location
	.long	611                             # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x11ca:0x7 DW_TAG_variable
	.ascii	"\255\001"                      # DW_AT_location
	.long	620                             # DW_AT_abstract_origin
	.byte	47                              # Abbrev [47] 0x11d1:0x6a DW_TAG_inlined_subroutine
	.long	3255                            # DW_AT_abstract_origin
	.byte	17                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	407                             # DW_AT_call_line
	.byte	44                              # DW_AT_call_column
	.byte	44                              # Abbrev [44] 0x11db:0x7 DW_TAG_formal_parameter
	.ascii	"\252\001"                      # DW_AT_location
	.long	3263                            # DW_AT_abstract_origin
	.byte	44                              # Abbrev [44] 0x11e2:0x7 DW_TAG_formal_parameter
	.ascii	"\253\001"                      # DW_AT_location
	.long	3271                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x11e9:0x7 DW_TAG_variable
	.ascii	"\254\001"                      # DW_AT_location
	.long	3295                            # DW_AT_abstract_origin
	.byte	50                              # Abbrev [50] 0x11f0:0xd DW_TAG_inlined_subroutine
	.long	2430                            # DW_AT_abstract_origin
	.byte	23                              # DW_AT_low_pc
	.long	.Ltmp1018-.Ltmp1017             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	86                              # DW_AT_call_line
	.byte	12                              # DW_AT_call_column
	.byte	50                              # Abbrev [50] 0x11fd:0xd DW_TAG_inlined_subroutine
	.long	2243                            # DW_AT_abstract_origin
	.byte	24                              # DW_AT_low_pc
	.long	.Ltmp1020-.Ltmp1019             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	85                              # DW_AT_call_line
	.byte	11                              # DW_AT_call_column
	.byte	50                              # Abbrev [50] 0x120a:0xd DW_TAG_inlined_subroutine
	.long	2243                            # DW_AT_abstract_origin
	.byte	25                              # DW_AT_low_pc
	.long	.Ltmp1030-.Ltmp1029             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	91                              # DW_AT_call_line
	.byte	13                              # DW_AT_call_column
	.byte	45                              # Abbrev [45] 0x1217:0x9 DW_TAG_inlined_subroutine
	.long	2430                            # DW_AT_abstract_origin
	.byte	18                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.byte	93                              # DW_AT_call_line
	.byte	13                              # DW_AT_call_column
	.byte	43                              # Abbrev [43] 0x1220:0x11 DW_TAG_inlined_subroutine
	.long	2026                            # DW_AT_abstract_origin
	.byte	19                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.byte	94                              # DW_AT_call_line
	.byte	13                              # DW_AT_call_column
	.byte	44                              # Abbrev [44] 0x1229:0x7 DW_TAG_formal_parameter
	.ascii	"\256\001"                      # DW_AT_location
	.long	2042                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	45                              # Abbrev [45] 0x1231:0x9 DW_TAG_inlined_subroutine
	.long	2430                            # DW_AT_abstract_origin
	.byte	20                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.byte	88                              # DW_AT_call_line
	.byte	11                              # DW_AT_call_column
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	42                              # Abbrev [42] 0x123d:0x6c DW_TAG_lexical_block
	.byte	21                              # DW_AT_ranges
	.byte	41                              # Abbrev [41] 0x123f:0x6 DW_TAG_variable
	.byte	70                              # DW_AT_location
	.long	643                             # DW_AT_abstract_origin
	.byte	42                              # Abbrev [42] 0x1245:0x63 DW_TAG_lexical_block
	.byte	22                              # DW_AT_ranges
	.byte	41                              # Abbrev [41] 0x1247:0x6 DW_TAG_variable
	.byte	76                              # DW_AT_location
	.long	653                             # DW_AT_abstract_origin
	.byte	47                              # Abbrev [47] 0x124d:0x5a DW_TAG_inlined_subroutine
	.long	2506                            # DW_AT_abstract_origin
	.byte	23                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	438                             # DW_AT_call_line
	.byte	8                               # DW_AT_call_column
	.byte	44                              # Abbrev [44] 0x1257:0x6 DW_TAG_formal_parameter
	.byte	71                              # DW_AT_location
	.long	2514                            # DW_AT_abstract_origin
	.byte	44                              # Abbrev [44] 0x125d:0x6 DW_TAG_formal_parameter
	.byte	72                              # DW_AT_location
	.long	2530                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x1263:0x6 DW_TAG_variable
	.byte	73                              # DW_AT_location
	.long	2546                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x1269:0x6 DW_TAG_variable
	.byte	74                              # DW_AT_location
	.long	2554                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x126f:0x6 DW_TAG_variable
	.byte	75                              # DW_AT_location
	.long	2562                            # DW_AT_abstract_origin
	.byte	50                              # Abbrev [50] 0x1275:0xd DW_TAG_inlined_subroutine
	.long	2581                            # DW_AT_abstract_origin
	.byte	26                              # DW_AT_low_pc
	.long	.Ltmp431-.Ltmp427               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	125                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	46                              # Abbrev [46] 0x1282:0x24 DW_TAG_inlined_subroutine
	.long	2598                            # DW_AT_abstract_origin
	.byte	27                              # DW_AT_low_pc
	.long	.Ltmp435-.Ltmp434               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	130                             # DW_AT_call_line
	.byte	11                              # DW_AT_call_column
	.byte	38                              # Abbrev [38] 0x128f:0xf DW_TAG_formal_parameter
	.byte	9                               # DW_AT_location
	.byte	145
	.ascii	"\210\001"
	.byte	6
	.byte	35
	.ascii	"\200\344\001"
	.byte	159
	.long	2606                            # DW_AT_abstract_origin
	.byte	38                              # Abbrev [38] 0x129e:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	91
	.long	2614                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	47                              # Abbrev [47] 0x12aa:0x76a DW_TAG_inlined_subroutine
	.long	2646                            # DW_AT_abstract_origin
	.byte	24                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	872                             # DW_AT_call_line
	.byte	13                              # DW_AT_call_column
	.byte	44                              # Abbrev [44] 0x12b4:0x6 DW_TAG_formal_parameter
	.byte	79                              # DW_AT_location
	.long	2655                            # DW_AT_abstract_origin
	.byte	44                              # Abbrev [44] 0x12ba:0x6 DW_TAG_formal_parameter
	.byte	80                              # DW_AT_location
	.long	2664                            # DW_AT_abstract_origin
	.byte	44                              # Abbrev [44] 0x12c0:0x6 DW_TAG_formal_parameter
	.byte	93                              # DW_AT_location
	.long	2673                            # DW_AT_abstract_origin
	.byte	44                              # Abbrev [44] 0x12c6:0x6 DW_TAG_formal_parameter
	.byte	81                              # DW_AT_location
	.long	2682                            # DW_AT_abstract_origin
	.byte	44                              # Abbrev [44] 0x12cc:0x6 DW_TAG_formal_parameter
	.byte	82                              # DW_AT_location
	.long	2691                            # DW_AT_abstract_origin
	.byte	44                              # Abbrev [44] 0x12d2:0x6 DW_TAG_formal_parameter
	.byte	83                              # DW_AT_location
	.long	2700                            # DW_AT_abstract_origin
	.byte	44                              # Abbrev [44] 0x12d8:0x6 DW_TAG_formal_parameter
	.byte	78                              # DW_AT_location
	.long	2718                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x12de:0x6 DW_TAG_variable
	.byte	84                              # DW_AT_location
	.long	2727                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x12e4:0x6 DW_TAG_variable
	.byte	85                              # DW_AT_location
	.long	2736                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x12ea:0x6 DW_TAG_variable
	.byte	86                              # DW_AT_location
	.long	2745                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x12f0:0x6 DW_TAG_variable
	.byte	87                              # DW_AT_location
	.long	2754                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x12f6:0x6 DW_TAG_variable
	.byte	88                              # DW_AT_location
	.long	2763                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x12fc:0x6 DW_TAG_variable
	.byte	89                              # DW_AT_location
	.long	2772                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x1302:0x6 DW_TAG_variable
	.byte	90                              # DW_AT_location
	.long	2781                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x1308:0x6 DW_TAG_variable
	.byte	91                              # DW_AT_location
	.long	2790                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x130e:0x6 DW_TAG_variable
	.byte	92                              # DW_AT_location
	.long	2799                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x1314:0x6 DW_TAG_variable
	.byte	94                              # DW_AT_location
	.long	2808                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x131a:0x6 DW_TAG_variable
	.byte	99                              # DW_AT_location
	.long	2817                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x1320:0x6 DW_TAG_variable
	.byte	113                             # DW_AT_location
	.long	2826                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x1326:0x6 DW_TAG_variable
	.byte	115                             # DW_AT_location
	.long	2835                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x132c:0x6 DW_TAG_variable
	.byte	118                             # DW_AT_location
	.long	2844                            # DW_AT_abstract_origin
	.byte	42                              # Abbrev [42] 0x1332:0x1f DW_TAG_lexical_block
	.byte	25                              # DW_AT_ranges
	.byte	41                              # Abbrev [41] 0x1334:0x6 DW_TAG_variable
	.byte	95                              # DW_AT_location
	.long	2863                            # DW_AT_abstract_origin
	.byte	42                              # Abbrev [42] 0x133a:0x9 DW_TAG_lexical_block
	.byte	26                              # DW_AT_ranges
	.byte	41                              # Abbrev [41] 0x133c:0x6 DW_TAG_variable
	.byte	96                              # DW_AT_location
	.long	2873                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	40                              # Abbrev [40] 0x1343:0xd DW_TAG_lexical_block
	.byte	28                              # DW_AT_low_pc
	.long	.Ltmp527-.Ltmp523               # DW_AT_high_pc
	.byte	41                              # Abbrev [41] 0x1349:0x6 DW_TAG_variable
	.byte	97                              # DW_AT_location
	.long	2884                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	40                              # Abbrev [40] 0x1351:0xd DW_TAG_lexical_block
	.byte	29                              # DW_AT_low_pc
	.long	.Ltmp540-.Ltmp539               # DW_AT_high_pc
	.byte	41                              # Abbrev [41] 0x1357:0x6 DW_TAG_variable
	.byte	98                              # DW_AT_location
	.long	2896                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	47                              # Abbrev [47] 0x135e:0xa7 DW_TAG_inlined_subroutine
	.long	2260                            # DW_AT_abstract_origin
	.byte	27                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	543                             # DW_AT_call_line
	.byte	6                               # DW_AT_call_column
	.byte	44                              # Abbrev [44] 0x1368:0x6 DW_TAG_formal_parameter
	.byte	100                             # DW_AT_location
	.long	2268                            # DW_AT_abstract_origin
	.byte	44                              # Abbrev [44] 0x136e:0x6 DW_TAG_formal_parameter
	.byte	101                             # DW_AT_location
	.long	2276                            # DW_AT_abstract_origin
	.byte	44                              # Abbrev [44] 0x1374:0x6 DW_TAG_formal_parameter
	.byte	105                             # DW_AT_location
	.long	2284                            # DW_AT_abstract_origin
	.byte	44                              # Abbrev [44] 0x137a:0x6 DW_TAG_formal_parameter
	.byte	102                             # DW_AT_location
	.long	2300                            # DW_AT_abstract_origin
	.byte	44                              # Abbrev [44] 0x1380:0x6 DW_TAG_formal_parameter
	.byte	104                             # DW_AT_location
	.long	2308                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x1386:0x6 DW_TAG_variable
	.byte	103                             # DW_AT_location
	.long	2316                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x138c:0x6 DW_TAG_variable
	.byte	106                             # DW_AT_location
	.long	2332                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x1392:0x6 DW_TAG_variable
	.byte	107                             # DW_AT_location
	.long	2324                            # DW_AT_abstract_origin
	.byte	40                              # Abbrev [40] 0x1398:0x45 DW_TAG_lexical_block
	.byte	30                              # DW_AT_low_pc
	.long	.Ltmp575-.Ltmp564               # DW_AT_high_pc
	.byte	39                              # Abbrev [39] 0x139e:0x7 DW_TAG_variable
	.byte	1                               # DW_AT_location
	.byte	80
	.long	2341                            # DW_AT_abstract_origin
	.byte	42                              # Abbrev [42] 0x13a5:0x37 DW_TAG_lexical_block
	.byte	28                              # DW_AT_ranges
	.byte	41                              # Abbrev [41] 0x13a7:0x6 DW_TAG_variable
	.byte	108                             # DW_AT_location
	.long	2350                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x13ad:0x6 DW_TAG_variable
	.byte	109                             # DW_AT_location
	.long	2358                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x13b3:0x6 DW_TAG_variable
	.byte	110                             # DW_AT_location
	.long	2366                            # DW_AT_abstract_origin
	.byte	46                              # Abbrev [46] 0x13b9:0x22 DW_TAG_inlined_subroutine
	.long	2026                            # DW_AT_abstract_origin
	.byte	31                              # DW_AT_low_pc
	.long	.Ltmp570-.Ltmp568               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	45                              # DW_AT_call_line
	.byte	13                              # DW_AT_call_column
	.byte	38                              # Abbrev [38] 0x13c6:0x14 DW_TAG_formal_parameter
	.byte	14                              # DW_AT_location
	.byte	113
	.byte	0
	.byte	16
	.ascii	"\377\377\377\377\017"
	.byte	26
	.byte	55
	.byte	37
	.byte	49
	.byte	26
	.byte	159
	.long	2042                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	46                              # Abbrev [46] 0x13dd:0x27 DW_TAG_inlined_subroutine
	.long	1960                            # DW_AT_abstract_origin
	.byte	32                              # DW_AT_low_pc
	.long	.Ltmp585-.Ltmp576               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	33                              # DW_AT_call_line
	.byte	11                              # DW_AT_call_column
	.byte	44                              # Abbrev [44] 0x13ea:0x6 DW_TAG_formal_parameter
	.byte	111                             # DW_AT_location
	.long	1984                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x13f0:0x6 DW_TAG_variable
	.byte	112                             # DW_AT_location
	.long	1992                            # DW_AT_abstract_origin
	.byte	50                              # Abbrev [50] 0x13f6:0xd DW_TAG_inlined_subroutine
	.long	2026                            # DW_AT_abstract_origin
	.byte	33                              # DW_AT_low_pc
	.long	.Ltmp581-.Ltmp580               # DW_AT_high_pc
	.byte	8                               # DW_AT_call_file
	.byte	61                              # DW_AT_call_line
	.byte	12                              # DW_AT_call_column
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	49                              # Abbrev [49] 0x1405:0xa DW_TAG_inlined_subroutine
	.long	2243                            # DW_AT_abstract_origin
	.byte	29                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	542                             # DW_AT_call_line
	.byte	6                               # DW_AT_call_column
	.byte	37                              # Abbrev [37] 0x140f:0x16 DW_TAG_inlined_subroutine
	.long	2412                            # DW_AT_abstract_origin
	.byte	34                              # DW_AT_low_pc
	.long	.Ltmp592-.Ltmp591               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	551                             # DW_AT_call_line
	.byte	3                               # DW_AT_call_column
	.byte	38                              # Abbrev [38] 0x141d:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	95
	.long	2416                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	48                              # Abbrev [48] 0x1425:0xe DW_TAG_inlined_subroutine
	.long	2430                            # DW_AT_abstract_origin
	.byte	35                              # DW_AT_low_pc
	.long	.Ltmp595-.Ltmp593               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	556                             # DW_AT_call_line
	.byte	6                               # DW_AT_call_column
	.byte	48                              # Abbrev [48] 0x1433:0xe DW_TAG_inlined_subroutine
	.long	2430                            # DW_AT_abstract_origin
	.byte	36                              # DW_AT_low_pc
	.long	.Ltmp598-.Ltmp597               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	558                             # DW_AT_call_line
	.byte	6                               # DW_AT_call_column
	.byte	40                              # Abbrev [40] 0x1441:0x66 DW_TAG_lexical_block
	.byte	37                              # DW_AT_low_pc
	.long	.Ltmp616-.Ltmp605               # DW_AT_high_pc
	.byte	41                              # Abbrev [41] 0x1447:0x6 DW_TAG_variable
	.byte	114                             # DW_AT_location
	.long	2907                            # DW_AT_abstract_origin
	.byte	37                              # Abbrev [37] 0x144d:0x43 DW_TAG_inlined_subroutine
	.long	2447                            # DW_AT_abstract_origin
	.byte	37                              # DW_AT_low_pc
	.long	.Ltmp610-.Ltmp605               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	565                             # DW_AT_call_line
	.byte	7                               # DW_AT_call_column
	.byte	38                              # Abbrev [38] 0x145b:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\210\001"
	.long	2455                            # DW_AT_abstract_origin
	.byte	38                              # Abbrev [38] 0x1464:0x8 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_location
	.byte	145
	.byte	24
	.long	2463                            # DW_AT_abstract_origin
	.byte	39                              # Abbrev [39] 0x146c:0x9 DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\210\001"
	.long	2479                            # DW_AT_abstract_origin
	.byte	50                              # Abbrev [50] 0x1475:0xd DW_TAG_inlined_subroutine
	.long	2243                            # DW_AT_abstract_origin
	.byte	38                              # DW_AT_low_pc
	.long	.Ltmp607-.Ltmp606               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	72                              # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	50                              # Abbrev [50] 0x1482:0xd DW_TAG_inlined_subroutine
	.long	2243                            # DW_AT_abstract_origin
	.byte	39                              # DW_AT_low_pc
	.long	.Ltmp609-.Ltmp608               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	73                              # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	0                               # End Of Children Mark
	.byte	37                              # Abbrev [37] 0x1490:0x16 DW_TAG_inlined_subroutine
	.long	2493                            # DW_AT_abstract_origin
	.byte	40                              # DW_AT_low_pc
	.long	.Ltmp616-.Ltmp614               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	570                             # DW_AT_call_line
	.byte	4                               # DW_AT_call_column
	.byte	38                              # Abbrev [38] 0x149e:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	95
	.long	2497                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	42                              # Abbrev [42] 0x14a7:0xd5 DW_TAG_lexical_block
	.byte	30                              # DW_AT_ranges
	.byte	41                              # Abbrev [41] 0x14a9:0x6 DW_TAG_variable
	.byte	116                             # DW_AT_location
	.long	2918                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x14af:0x6 DW_TAG_variable
	.byte	117                             # DW_AT_location
	.long	2927                            # DW_AT_abstract_origin
	.byte	42                              # Abbrev [42] 0x14b5:0xc6 DW_TAG_lexical_block
	.byte	31                              # DW_AT_ranges
	.byte	41                              # Abbrev [41] 0x14b7:0x7 DW_TAG_variable
	.ascii	"\221\001"                      # DW_AT_location
	.long	2946                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x14be:0x7 DW_TAG_variable
	.ascii	"\222\001"                      # DW_AT_location
	.long	2955                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x14c5:0x7 DW_TAG_variable
	.ascii	"\223\001"                      # DW_AT_location
	.long	2964                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x14cc:0x7 DW_TAG_variable
	.ascii	"\251\001"                      # DW_AT_location
	.long	2973                            # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x14d3:0xe DW_TAG_inlined_subroutine
	.long	2430                            # DW_AT_abstract_origin
	.byte	41                              # DW_AT_low_pc
	.long	.Ltmp829-.Ltmp828               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	597                             # DW_AT_call_line
	.byte	8                               # DW_AT_call_column
	.byte	48                              # Abbrev [48] 0x14e1:0xe DW_TAG_inlined_subroutine
	.long	2430                            # DW_AT_abstract_origin
	.byte	42                              # DW_AT_low_pc
	.long	.Ltmp832-.Ltmp830               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	598                             # DW_AT_call_line
	.byte	8                               # DW_AT_call_column
	.byte	37                              # Abbrev [37] 0x14ef:0x8b DW_TAG_inlined_subroutine
	.long	3312                            # DW_AT_abstract_origin
	.byte	43                              # DW_AT_low_pc
	.long	.Ltmp1008-.Ltmp1000             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	607                             # DW_AT_call_line
	.byte	8                               # DW_AT_call_column
	.byte	38                              # Abbrev [38] 0x14fd:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\210\001"
	.long	3320                            # DW_AT_abstract_origin
	.byte	51                              # Abbrev [51] 0x1506:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	3328                            # DW_AT_abstract_origin
	.byte	39                              # Abbrev [39] 0x150c:0x9 DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\210\001"
	.long	3360                            # DW_AT_abstract_origin
	.byte	46                              # Abbrev [46] 0x1515:0x1d DW_TAG_inlined_subroutine
	.long	2598                            # DW_AT_abstract_origin
	.byte	43                              # DW_AT_low_pc
	.long	.Ltmp1001-.Ltmp1000             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	109                             # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	38                              # Abbrev [38] 0x1522:0xf DW_TAG_formal_parameter
	.byte	9                               # DW_AT_location
	.byte	145
	.ascii	"\210\001"
	.byte	6
	.byte	35
	.ascii	"\310\364\002"
	.byte	159
	.long	2606                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	46                              # Abbrev [46] 0x1532:0x47 DW_TAG_inlined_subroutine
	.long	3255                            # DW_AT_abstract_origin
	.byte	44                              # DW_AT_low_pc
	.long	.Ltmp1007-.Ltmp1001             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	110                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	38                              # Abbrev [38] 0x153f:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\210\001"
	.long	3263                            # DW_AT_abstract_origin
	.byte	51                              # Abbrev [51] 0x1548:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	3271                            # DW_AT_abstract_origin
	.byte	39                              # Abbrev [39] 0x154e:0x9 DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\210\001"
	.long	3295                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x1557:0x7 DW_TAG_variable
	.ascii	"\250\001"                      # DW_AT_location
	.long	3303                            # DW_AT_abstract_origin
	.byte	50                              # Abbrev [50] 0x155e:0xd DW_TAG_inlined_subroutine
	.long	2243                            # DW_AT_abstract_origin
	.byte	45                              # DW_AT_low_pc
	.long	.Ltmp1004-.Ltmp1003             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	85                              # DW_AT_call_line
	.byte	11                              # DW_AT_call_column
	.byte	50                              # Abbrev [50] 0x156b:0xd DW_TAG_inlined_subroutine
	.long	2430                            # DW_AT_abstract_origin
	.byte	46                              # DW_AT_low_pc
	.long	.Ltmp1006-.Ltmp1005             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	86                              # DW_AT_call_line
	.byte	12                              # DW_AT_call_column
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	40                              # Abbrev [40] 0x157c:0x25d DW_TAG_lexical_block
	.byte	47                              # DW_AT_low_pc
	.long	.Ltmp798-.Ltmp638               # DW_AT_high_pc
	.byte	41                              # Abbrev [41] 0x1582:0x6 DW_TAG_variable
	.byte	119                             # DW_AT_location
	.long	2994                            # DW_AT_abstract_origin
	.byte	40                              # Abbrev [40] 0x1588:0x250 DW_TAG_lexical_block
	.byte	48                              # DW_AT_low_pc
	.long	.Ltmp798-.Ltmp645               # DW_AT_high_pc
	.byte	41                              # Abbrev [41] 0x158e:0x6 DW_TAG_variable
	.byte	120                             # DW_AT_location
	.long	3004                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x1594:0x6 DW_TAG_variable
	.byte	121                             # DW_AT_location
	.long	3013                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x159a:0x6 DW_TAG_variable
	.byte	122                             # DW_AT_location
	.long	3022                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x15a0:0x6 DW_TAG_variable
	.byte	123                             # DW_AT_location
	.long	3031                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x15a6:0x6 DW_TAG_variable
	.byte	124                             # DW_AT_location
	.long	3040                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x15ac:0x6 DW_TAG_variable
	.byte	125                             # DW_AT_location
	.long	3049                            # DW_AT_abstract_origin
	.byte	47                              # Abbrev [47] 0x15b2:0x77 DW_TAG_inlined_subroutine
	.long	3255                            # DW_AT_abstract_origin
	.byte	32                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	638                             # DW_AT_call_line
	.byte	44                              # DW_AT_call_column
	.byte	44                              # Abbrev [44] 0x15bc:0x6 DW_TAG_formal_parameter
	.byte	126                             # DW_AT_location
	.long	3263                            # DW_AT_abstract_origin
	.byte	44                              # Abbrev [44] 0x15c2:0x6 DW_TAG_formal_parameter
	.byte	127                             # DW_AT_location
	.long	3271                            # DW_AT_abstract_origin
	.byte	44                              # Abbrev [44] 0x15c8:0x7 DW_TAG_formal_parameter
	.ascii	"\200\001"                      # DW_AT_location
	.long	3279                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x15cf:0x7 DW_TAG_variable
	.ascii	"\201\001"                      # DW_AT_location
	.long	3295                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x15d6:0x7 DW_TAG_variable
	.ascii	"\202\001"                      # DW_AT_location
	.long	3303                            # DW_AT_abstract_origin
	.byte	50                              # Abbrev [50] 0x15dd:0xd DW_TAG_inlined_subroutine
	.long	2430                            # DW_AT_abstract_origin
	.byte	49                              # DW_AT_low_pc
	.long	.Ltmp679-.Ltmp678               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	88                              # DW_AT_call_line
	.byte	11                              # DW_AT_call_column
	.byte	50                              # Abbrev [50] 0x15ea:0xd DW_TAG_inlined_subroutine
	.long	2430                            # DW_AT_abstract_origin
	.byte	50                              # DW_AT_low_pc
	.long	.Ltmp684-.Ltmp683               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	93                              # DW_AT_call_line
	.byte	13                              # DW_AT_call_column
	.byte	46                              # Abbrev [46] 0x15f7:0x17 DW_TAG_inlined_subroutine
	.long	2026                            # DW_AT_abstract_origin
	.byte	51                              # DW_AT_low_pc
	.long	.Ltmp688-.Ltmp687               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	94                              # DW_AT_call_line
	.byte	13                              # DW_AT_call_column
	.byte	38                              # Abbrev [38] 0x1604:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	123
	.byte	126
	.byte	159
	.long	2042                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x160e:0xd DW_TAG_inlined_subroutine
	.long	2243                            # DW_AT_abstract_origin
	.byte	52                              # DW_AT_low_pc
	.long	.Ltmp693-.Ltmp691               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	85                              # DW_AT_call_line
	.byte	11                              # DW_AT_call_column
	.byte	50                              # Abbrev [50] 0x161b:0xd DW_TAG_inlined_subroutine
	.long	2430                            # DW_AT_abstract_origin
	.byte	53                              # DW_AT_low_pc
	.long	.Ltmp695-.Ltmp694               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	86                              # DW_AT_call_line
	.byte	12                              # DW_AT_call_column
	.byte	0                               # End Of Children Mark
	.byte	40                              # Abbrev [40] 0x1629:0x1ae DW_TAG_lexical_block
	.byte	54                              # DW_AT_low_pc
	.long	.Ltmp798-.Ltmp728               # DW_AT_high_pc
	.byte	41                              # Abbrev [41] 0x162f:0x7 DW_TAG_variable
	.ascii	"\203\001"                      # DW_AT_location
	.long	3070                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x1636:0x7 DW_TAG_variable
	.ascii	"\204\001"                      # DW_AT_location
	.long	3079                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x163d:0x7 DW_TAG_variable
	.ascii	"\214\001"                      # DW_AT_location
	.long	3088                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x1644:0x7 DW_TAG_variable
	.ascii	"\220\001"                      # DW_AT_location
	.long	3097                            # DW_AT_abstract_origin
	.byte	37                              # Abbrev [37] 0x164b:0x25 DW_TAG_inlined_subroutine
	.long	2598                            # DW_AT_abstract_origin
	.byte	55                              # DW_AT_low_pc
	.long	.Ltmp731-.Ltmp730               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	676                             # DW_AT_call_line
	.byte	8                               # DW_AT_call_column
	.byte	38                              # Abbrev [38] 0x1659:0xf DW_TAG_formal_parameter
	.byte	9                               # DW_AT_location
	.byte	145
	.ascii	"\210\001"
	.byte	6
	.byte	35
	.ascii	"\310\364\002"
	.byte	159
	.long	2606                            # DW_AT_abstract_origin
	.byte	38                              # Abbrev [38] 0x1668:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	88
	.long	2614                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	48                              # Abbrev [48] 0x1670:0xe DW_TAG_inlined_subroutine
	.long	2243                            # DW_AT_abstract_origin
	.byte	56                              # DW_AT_low_pc
	.long	.Ltmp733-.Ltmp732               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	678                             # DW_AT_call_line
	.byte	8                               # DW_AT_call_column
	.byte	47                              # Abbrev [47] 0x167e:0x97 DW_TAG_inlined_subroutine
	.long	2260                            # DW_AT_abstract_origin
	.byte	33                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	679                             # DW_AT_call_line
	.byte	8                               # DW_AT_call_column
	.byte	38                              # Abbrev [38] 0x1688:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\210\001"
	.long	2268                            # DW_AT_abstract_origin
	.byte	38                              # Abbrev [38] 0x1691:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	95
	.long	2276                            # DW_AT_abstract_origin
	.byte	44                              # Abbrev [44] 0x1698:0x7 DW_TAG_formal_parameter
	.ascii	"\206\001"                      # DW_AT_location
	.long	2284                            # DW_AT_abstract_origin
	.byte	38                              # Abbrev [38] 0x169f:0x8 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_location
	.byte	49
	.byte	159
	.long	2292                            # DW_AT_abstract_origin
	.byte	38                              # Abbrev [38] 0x16a7:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	84
	.long	2300                            # DW_AT_abstract_origin
	.byte	44                              # Abbrev [44] 0x16ae:0x7 DW_TAG_formal_parameter
	.ascii	"\205\001"                      # DW_AT_location
	.long	2308                            # DW_AT_abstract_origin
	.byte	39                              # Abbrev [39] 0x16b5:0x9 DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\210\001"
	.long	2316                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x16be:0x7 DW_TAG_variable
	.ascii	"\207\001"                      # DW_AT_location
	.long	2332                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x16c5:0x7 DW_TAG_variable
	.ascii	"\210\001"                      # DW_AT_location
	.long	2324                            # DW_AT_abstract_origin
	.byte	40                              # Abbrev [40] 0x16cc:0x48 DW_TAG_lexical_block
	.byte	57                              # DW_AT_low_pc
	.long	.Ltmp752-.Ltmp741               # DW_AT_high_pc
	.byte	39                              # Abbrev [39] 0x16d2:0x7 DW_TAG_variable
	.byte	1                               # DW_AT_location
	.byte	81
	.long	2341                            # DW_AT_abstract_origin
	.byte	42                              # Abbrev [42] 0x16d9:0x3a DW_TAG_lexical_block
	.byte	34                              # DW_AT_ranges
	.byte	41                              # Abbrev [41] 0x16db:0x7 DW_TAG_variable
	.ascii	"\211\001"                      # DW_AT_location
	.long	2350                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x16e2:0x7 DW_TAG_variable
	.ascii	"\212\001"                      # DW_AT_location
	.long	2358                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x16e9:0x7 DW_TAG_variable
	.ascii	"\213\001"                      # DW_AT_location
	.long	2366                            # DW_AT_abstract_origin
	.byte	46                              # Abbrev [46] 0x16f0:0x22 DW_TAG_inlined_subroutine
	.long	2026                            # DW_AT_abstract_origin
	.byte	58                              # DW_AT_low_pc
	.long	.Ltmp747-.Ltmp745               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	45                              # DW_AT_call_line
	.byte	13                              # DW_AT_call_column
	.byte	38                              # Abbrev [38] 0x16fd:0x14 DW_TAG_formal_parameter
	.byte	14                              # DW_AT_location
	.byte	120
	.byte	0
	.byte	16
	.ascii	"\377\377\377\377\017"
	.byte	26
	.byte	55
	.byte	37
	.byte	49
	.byte	26
	.byte	159
	.long	2042                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	48                              # Abbrev [48] 0x1715:0xe DW_TAG_inlined_subroutine
	.long	2430                            # DW_AT_abstract_origin
	.byte	59                              # DW_AT_low_pc
	.long	.Ltmp755-.Ltmp754               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	688                             # DW_AT_call_line
	.byte	8                               # DW_AT_call_column
	.byte	48                              # Abbrev [48] 0x1723:0xe DW_TAG_inlined_subroutine
	.long	2430                            # DW_AT_abstract_origin
	.byte	60                              # DW_AT_low_pc
	.long	.Ltmp758-.Ltmp756               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	689                             # DW_AT_call_line
	.byte	8                               # DW_AT_call_column
	.byte	37                              # Abbrev [37] 0x1731:0xa5 DW_TAG_inlined_subroutine
	.long	3312                            # DW_AT_abstract_origin
	.byte	61                              # DW_AT_low_pc
	.long	.Ltmp790-.Ltmp782               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	698                             # DW_AT_call_line
	.byte	8                               # DW_AT_call_column
	.byte	38                              # Abbrev [38] 0x173f:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\210\001"
	.long	3320                            # DW_AT_abstract_origin
	.byte	51                              # Abbrev [51] 0x1748:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	3328                            # DW_AT_abstract_origin
	.byte	44                              # Abbrev [44] 0x174e:0x7 DW_TAG_formal_parameter
	.ascii	"\215\001"                      # DW_AT_location
	.long	3336                            # DW_AT_abstract_origin
	.byte	51                              # Abbrev [51] 0x1755:0x6 DW_TAG_formal_parameter
	.byte	5                               # DW_AT_const_value
	.long	3344                            # DW_AT_abstract_origin
	.byte	39                              # Abbrev [39] 0x175b:0x9 DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\210\001"
	.long	3360                            # DW_AT_abstract_origin
	.byte	46                              # Abbrev [46] 0x1764:0x24 DW_TAG_inlined_subroutine
	.long	2598                            # DW_AT_abstract_origin
	.byte	61                              # DW_AT_low_pc
	.long	.Ltmp784-.Ltmp782               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	109                             # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	38                              # Abbrev [38] 0x1771:0xf DW_TAG_formal_parameter
	.byte	9                               # DW_AT_location
	.byte	145
	.ascii	"\210\001"
	.byte	6
	.byte	35
	.ascii	"\310\364\002"
	.byte	159
	.long	2606                            # DW_AT_abstract_origin
	.byte	44                              # Abbrev [44] 0x1780:0x7 DW_TAG_formal_parameter
	.ascii	"\216\001"                      # DW_AT_location
	.long	2614                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	46                              # Abbrev [46] 0x1788:0x4d DW_TAG_inlined_subroutine
	.long	3255                            # DW_AT_abstract_origin
	.byte	62                              # DW_AT_low_pc
	.long	.Ltmp789-.Ltmp784               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	110                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	38                              # Abbrev [38] 0x1795:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\210\001"
	.long	3263                            # DW_AT_abstract_origin
	.byte	51                              # Abbrev [51] 0x179e:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	3271                            # DW_AT_abstract_origin
	.byte	51                              # Abbrev [51] 0x17a4:0x6 DW_TAG_formal_parameter
	.byte	5                               # DW_AT_const_value
	.long	3279                            # DW_AT_abstract_origin
	.byte	39                              # Abbrev [39] 0x17aa:0x9 DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\210\001"
	.long	3295                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x17b3:0x7 DW_TAG_variable
	.ascii	"\217\001"                      # DW_AT_location
	.long	3303                            # DW_AT_abstract_origin
	.byte	50                              # Abbrev [50] 0x17ba:0xd DW_TAG_inlined_subroutine
	.long	2243                            # DW_AT_abstract_origin
	.byte	63                              # DW_AT_low_pc
	.long	.Ltmp786-.Ltmp785               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	85                              # DW_AT_call_line
	.byte	11                              # DW_AT_call_column
	.byte	50                              # Abbrev [50] 0x17c7:0xd DW_TAG_inlined_subroutine
	.long	2430                            # DW_AT_abstract_origin
	.byte	64                              # DW_AT_low_pc
	.long	.Ltmp788-.Ltmp787               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	86                              # DW_AT_call_line
	.byte	12                              # DW_AT_call_column
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	42                              # Abbrev [42] 0x17d9:0x23a DW_TAG_lexical_block
	.byte	35                              # DW_AT_ranges
	.byte	41                              # Abbrev [41] 0x17db:0x7 DW_TAG_variable
	.ascii	"\224\001"                      # DW_AT_location
	.long	3128                            # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x17e2:0xe DW_TAG_inlined_subroutine
	.long	2243                            # DW_AT_abstract_origin
	.byte	65                              # DW_AT_low_pc
	.long	.Ltmp815-.Ltmp813               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	729                             # DW_AT_call_line
	.byte	7                               # DW_AT_call_column
	.byte	42                              # Abbrev [42] 0x17f0:0x222 DW_TAG_lexical_block
	.byte	36                              # DW_AT_ranges
	.byte	41                              # Abbrev [41] 0x17f2:0x7 DW_TAG_variable
	.ascii	"\225\001"                      # DW_AT_location
	.long	3147                            # DW_AT_abstract_origin
	.byte	42                              # Abbrev [42] 0x17f9:0x218 DW_TAG_lexical_block
	.byte	37                              # DW_AT_ranges
	.byte	41                              # Abbrev [41] 0x17fb:0x7 DW_TAG_variable
	.ascii	"\226\001"                      # DW_AT_location
	.long	3157                            # DW_AT_abstract_origin
	.byte	42                              # Abbrev [42] 0x1802:0x185 DW_TAG_lexical_block
	.byte	38                              # DW_AT_ranges
	.byte	41                              # Abbrev [41] 0x1804:0x7 DW_TAG_variable
	.ascii	"\227\001"                      # DW_AT_location
	.long	3176                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x180b:0x7 DW_TAG_variable
	.ascii	"\232\001"                      # DW_AT_location
	.long	3185                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x1812:0x7 DW_TAG_variable
	.ascii	"\233\001"                      # DW_AT_location
	.long	3194                            # DW_AT_abstract_origin
	.byte	40                              # Abbrev [40] 0x1819:0x16d DW_TAG_lexical_block
	.byte	66                              # DW_AT_low_pc
	.long	.Ltmp974-.Ltmp909               # DW_AT_high_pc
	.byte	41                              # Abbrev [41] 0x181f:0x7 DW_TAG_variable
	.ascii	"\234\001"                      # DW_AT_location
	.long	3204                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x1826:0x7 DW_TAG_variable
	.ascii	"\235\001"                      # DW_AT_location
	.long	3213                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x182d:0x7 DW_TAG_variable
	.ascii	"\246\001"                      # DW_AT_location
	.long	3222                            # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x1834:0xe DW_TAG_inlined_subroutine
	.long	2243                            # DW_AT_abstract_origin
	.byte	67                              # DW_AT_low_pc
	.long	.Ltmp913-.Ltmp912               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	772                             # DW_AT_call_line
	.byte	10                              # DW_AT_call_column
	.byte	47                              # Abbrev [47] 0x1842:0x90 DW_TAG_inlined_subroutine
	.long	2260                            # DW_AT_abstract_origin
	.byte	39                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	774                             # DW_AT_call_line
	.byte	10                              # DW_AT_call_column
	.byte	38                              # Abbrev [38] 0x184c:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\210\001"
	.long	2268                            # DW_AT_abstract_origin
	.byte	44                              # Abbrev [44] 0x1855:0x7 DW_TAG_formal_parameter
	.ascii	"\240\001"                      # DW_AT_location
	.long	2284                            # DW_AT_abstract_origin
	.byte	38                              # Abbrev [38] 0x185c:0x8 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_location
	.byte	49
	.byte	159
	.long	2292                            # DW_AT_abstract_origin
	.byte	44                              # Abbrev [44] 0x1864:0x7 DW_TAG_formal_parameter
	.ascii	"\237\001"                      # DW_AT_location
	.long	2300                            # DW_AT_abstract_origin
	.byte	44                              # Abbrev [44] 0x186b:0x7 DW_TAG_formal_parameter
	.ascii	"\236\001"                      # DW_AT_location
	.long	2308                            # DW_AT_abstract_origin
	.byte	39                              # Abbrev [39] 0x1872:0x9 DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\210\001"
	.long	2316                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x187b:0x7 DW_TAG_variable
	.ascii	"\241\001"                      # DW_AT_location
	.long	2332                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x1882:0x7 DW_TAG_variable
	.ascii	"\242\001"                      # DW_AT_location
	.long	2324                            # DW_AT_abstract_origin
	.byte	40                              # Abbrev [40] 0x1889:0x48 DW_TAG_lexical_block
	.byte	68                              # DW_AT_low_pc
	.long	.Ltmp932-.Ltmp921               # DW_AT_high_pc
	.byte	39                              # Abbrev [39] 0x188f:0x7 DW_TAG_variable
	.byte	1                               # DW_AT_location
	.byte	86
	.long	2341                            # DW_AT_abstract_origin
	.byte	42                              # Abbrev [42] 0x1896:0x3a DW_TAG_lexical_block
	.byte	40                              # DW_AT_ranges
	.byte	41                              # Abbrev [41] 0x1898:0x7 DW_TAG_variable
	.ascii	"\243\001"                      # DW_AT_location
	.long	2350                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x189f:0x7 DW_TAG_variable
	.ascii	"\244\001"                      # DW_AT_location
	.long	2358                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x18a6:0x7 DW_TAG_variable
	.ascii	"\245\001"                      # DW_AT_location
	.long	2366                            # DW_AT_abstract_origin
	.byte	46                              # Abbrev [46] 0x18ad:0x22 DW_TAG_inlined_subroutine
	.long	2026                            # DW_AT_abstract_origin
	.byte	69                              # DW_AT_low_pc
	.long	.Ltmp927-.Ltmp925               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	45                              # DW_AT_call_line
	.byte	13                              # DW_AT_call_column
	.byte	38                              # Abbrev [38] 0x18ba:0x14 DW_TAG_formal_parameter
	.byte	14                              # DW_AT_location
	.byte	126
	.byte	0
	.byte	16
	.ascii	"\377\377\377\377\017"
	.byte	26
	.byte	55
	.byte	37
	.byte	49
	.byte	26
	.byte	159
	.long	2042                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	48                              # Abbrev [48] 0x18d2:0xe DW_TAG_inlined_subroutine
	.long	2430                            # DW_AT_abstract_origin
	.byte	70                              # DW_AT_low_pc
	.long	.Ltmp935-.Ltmp934               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	786                             # DW_AT_call_line
	.byte	10                              # DW_AT_call_column
	.byte	48                              # Abbrev [48] 0x18e0:0xe DW_TAG_inlined_subroutine
	.long	2430                            # DW_AT_abstract_origin
	.byte	71                              # DW_AT_low_pc
	.long	.Ltmp938-.Ltmp936               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	788                             # DW_AT_call_line
	.byte	10                              # DW_AT_call_column
	.byte	37                              # Abbrev [37] 0x18ee:0x97 DW_TAG_inlined_subroutine
	.long	3312                            # DW_AT_abstract_origin
	.byte	72                              # DW_AT_low_pc
	.long	.Ltmp969-.Ltmp959               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	797                             # DW_AT_call_line
	.byte	10                              # DW_AT_call_column
	.byte	38                              # Abbrev [38] 0x18fc:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\210\001"
	.long	3320                            # DW_AT_abstract_origin
	.byte	51                              # Abbrev [51] 0x1905:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	3328                            # DW_AT_abstract_origin
	.byte	51                              # Abbrev [51] 0x190b:0x6 DW_TAG_formal_parameter
	.byte	4                               # DW_AT_const_value
	.long	3344                            # DW_AT_abstract_origin
	.byte	39                              # Abbrev [39] 0x1911:0x9 DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\210\001"
	.long	3360                            # DW_AT_abstract_origin
	.byte	46                              # Abbrev [46] 0x191a:0x1d DW_TAG_inlined_subroutine
	.long	2598                            # DW_AT_abstract_origin
	.byte	72                              # DW_AT_low_pc
	.long	.Ltmp961-.Ltmp959               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	109                             # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	38                              # Abbrev [38] 0x1927:0xf DW_TAG_formal_parameter
	.byte	9                               # DW_AT_location
	.byte	145
	.ascii	"\210\001"
	.byte	6
	.byte	35
	.ascii	"\310\364\002"
	.byte	159
	.long	2606                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	46                              # Abbrev [46] 0x1937:0x4d DW_TAG_inlined_subroutine
	.long	3255                            # DW_AT_abstract_origin
	.byte	73                              # DW_AT_low_pc
	.long	.Ltmp968-.Ltmp961               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	110                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	38                              # Abbrev [38] 0x1944:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\210\001"
	.long	3263                            # DW_AT_abstract_origin
	.byte	51                              # Abbrev [51] 0x194d:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	3271                            # DW_AT_abstract_origin
	.byte	51                              # Abbrev [51] 0x1953:0x6 DW_TAG_formal_parameter
	.byte	4                               # DW_AT_const_value
	.long	3279                            # DW_AT_abstract_origin
	.byte	39                              # Abbrev [39] 0x1959:0x9 DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\210\001"
	.long	3295                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x1962:0x7 DW_TAG_variable
	.ascii	"\247\001"                      # DW_AT_location
	.long	3303                            # DW_AT_abstract_origin
	.byte	50                              # Abbrev [50] 0x1969:0xd DW_TAG_inlined_subroutine
	.long	2243                            # DW_AT_abstract_origin
	.byte	74                              # DW_AT_low_pc
	.long	.Ltmp965-.Ltmp963               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	85                              # DW_AT_call_line
	.byte	11                              # DW_AT_call_column
	.byte	50                              # Abbrev [50] 0x1976:0xd DW_TAG_inlined_subroutine
	.long	2430                            # DW_AT_abstract_origin
	.byte	75                              # DW_AT_low_pc
	.long	.Ltmp967-.Ltmp966               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	86                              # DW_AT_call_line
	.byte	12                              # DW_AT_call_column
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	47                              # Abbrev [47] 0x1987:0x89 DW_TAG_inlined_subroutine
	.long	2506                            # DW_AT_abstract_origin
	.byte	41                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	741                             # DW_AT_call_line
	.byte	8                               # DW_AT_call_column
	.byte	38                              # Abbrev [38] 0x1991:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\210\001"
	.long	2514                            # DW_AT_abstract_origin
	.byte	38                              # Abbrev [38] 0x199a:0x1a DW_TAG_formal_parameter
	.byte	20                              # DW_AT_location
	.byte	121
	.byte	0
	.byte	16
	.ascii	"\377\377\377\377\017"
	.byte	26
	.byte	125
	.byte	0
	.byte	16
	.ascii	"\377\377\377\377\017"
	.byte	26
	.byte	34
	.byte	159
	.long	2530                            # DW_AT_abstract_origin
	.byte	39                              # Abbrev [39] 0x19b4:0x9 DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\210\001"
	.long	2546                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x19bd:0x7 DW_TAG_variable
	.ascii	"\230\001"                      # DW_AT_location
	.long	2554                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x19c4:0x7 DW_TAG_variable
	.ascii	"\231\001"                      # DW_AT_location
	.long	2562                            # DW_AT_abstract_origin
	.byte	50                              # Abbrev [50] 0x19cb:0xd DW_TAG_inlined_subroutine
	.long	2581                            # DW_AT_abstract_origin
	.byte	76                              # DW_AT_low_pc
	.long	.Ltmp880-.Ltmp876               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	125                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	46                              # Abbrev [46] 0x19d8:0x37 DW_TAG_inlined_subroutine
	.long	2598                            # DW_AT_abstract_origin
	.byte	77                              # DW_AT_low_pc
	.long	.Ltmp885-.Ltmp884               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	130                             # DW_AT_call_line
	.byte	11                              # DW_AT_call_column
	.byte	38                              # Abbrev [38] 0x19e5:0xf DW_TAG_formal_parameter
	.byte	9                               # DW_AT_location
	.byte	145
	.ascii	"\210\001"
	.byte	6
	.byte	35
	.ascii	"\200\344\001"
	.byte	159
	.long	2606                            # DW_AT_abstract_origin
	.byte	38                              # Abbrev [38] 0x19f4:0x1a DW_TAG_formal_parameter
	.byte	20                              # DW_AT_location
	.byte	121
	.byte	0
	.byte	16
	.ascii	"\377\377\377\377\017"
	.byte	26
	.byte	125
	.byte	0
	.byte	16
	.ascii	"\377\377\377\377\017"
	.byte	26
	.byte	34
	.byte	159
	.long	2614                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	37                              # Abbrev [37] 0x1a14:0x65 DW_TAG_inlined_subroutine
	.long	3369                            # DW_AT_abstract_origin
	.byte	78                              # DW_AT_low_pc
	.long	.Ltmp1087-.Ltmp1071             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	877                             # DW_AT_call_line
	.byte	2                               # DW_AT_call_column
	.byte	38                              # Abbrev [38] 0x1a22:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\210\001"
	.long	3373                            # DW_AT_abstract_origin
	.byte	38                              # Abbrev [38] 0x1a2b:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\310\001"
	.long	3389                            # DW_AT_abstract_origin
	.byte	44                              # Abbrev [44] 0x1a34:0x7 DW_TAG_formal_parameter
	.ascii	"\257\001"                      # DW_AT_location
	.long	3397                            # DW_AT_abstract_origin
	.byte	39                              # Abbrev [39] 0x1a3b:0x9 DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\210\001"
	.long	3405                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x1a44:0x7 DW_TAG_variable
	.ascii	"\260\001"                      # DW_AT_location
	.long	3413                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x1a4b:0x7 DW_TAG_variable
	.ascii	"\261\001"                      # DW_AT_location
	.long	3421                            # DW_AT_abstract_origin
	.byte	42                              # Abbrev [42] 0x1a52:0x26 DW_TAG_lexical_block
	.byte	42                              # DW_AT_ranges
	.byte	41                              # Abbrev [41] 0x1a54:0x7 DW_TAG_variable
	.ascii	"\262\001"                      # DW_AT_location
	.long	3430                            # DW_AT_abstract_origin
	.byte	41                              # Abbrev [41] 0x1a5b:0x7 DW_TAG_variable
	.ascii	"\263\001"                      # DW_AT_location
	.long	3439                            # DW_AT_abstract_origin
	.byte	46                              # Abbrev [46] 0x1a62:0x15 DW_TAG_inlined_subroutine
	.long	2412                            # DW_AT_abstract_origin
	.byte	79                              # DW_AT_low_pc
	.long	.Ltmp1084-.Ltmp1083             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	243                             # DW_AT_call_line
	.byte	4                               # DW_AT_call_column
	.byte	38                              # Abbrev [38] 0x1a6f:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.long	2416                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	52                              # Abbrev [52] 0x1a79:0x6 DW_TAG_call_site
	.long	6798                            # DW_AT_call_origin
	.byte	80                              # DW_AT_call_return_pc
	.byte	53                              # Abbrev [53] 0x1a7f:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	83
	.byte	81                              # DW_AT_call_return_pc
	.byte	53                              # Abbrev [53] 0x1a83:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	94
	.byte	82                              # DW_AT_call_return_pc
	.byte	52                              # Abbrev [52] 0x1a87:0x6 DW_TAG_call_site
	.long	6798                            # DW_AT_call_origin
	.byte	83                              # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	54                              # Abbrev [54] 0x1a8e:0x19 DW_TAG_subprogram
	.byte	215                             # DW_AT_name
	.byte	10                              # DW_AT_decl_file
	.short	310                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	199                             # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	21                              # Abbrev [21] 0x1a97:0x5 DW_TAG_formal_parameter
	.long	688                             # DW_AT_type
	.byte	21                              # Abbrev [21] 0x1a9c:0x5 DW_TAG_formal_parameter
	.long	993                             # DW_AT_type
	.byte	21                              # Abbrev [21] 0x1aa1:0x5 DW_TAG_formal_parameter
	.long	940                             # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
.Ldebug_info_end0:
	.section	.debug_rnglists,"",@progbits
	.long	.Ldebug_list_header_end1-.Ldebug_list_header_start1 # Length
.Ldebug_list_header_start1:
	.short	5                               # Version
	.byte	8                               # Address size
	.byte	0                               # Segment selector size
	.long	43                              # Offset entry count
.Lrnglists_table_base0:
	.long	.Ldebug_ranges0-.Lrnglists_table_base0
	.long	.Ldebug_ranges1-.Lrnglists_table_base0
	.long	.Ldebug_ranges2-.Lrnglists_table_base0
	.long	.Ldebug_ranges3-.Lrnglists_table_base0
	.long	.Ldebug_ranges4-.Lrnglists_table_base0
	.long	.Ldebug_ranges5-.Lrnglists_table_base0
	.long	.Ldebug_ranges6-.Lrnglists_table_base0
	.long	.Ldebug_ranges7-.Lrnglists_table_base0
	.long	.Ldebug_ranges8-.Lrnglists_table_base0
	.long	.Ldebug_ranges9-.Lrnglists_table_base0
	.long	.Ldebug_ranges10-.Lrnglists_table_base0
	.long	.Ldebug_ranges11-.Lrnglists_table_base0
	.long	.Ldebug_ranges12-.Lrnglists_table_base0
	.long	.Ldebug_ranges13-.Lrnglists_table_base0
	.long	.Ldebug_ranges14-.Lrnglists_table_base0
	.long	.Ldebug_ranges15-.Lrnglists_table_base0
	.long	.Ldebug_ranges16-.Lrnglists_table_base0
	.long	.Ldebug_ranges17-.Lrnglists_table_base0
	.long	.Ldebug_ranges18-.Lrnglists_table_base0
	.long	.Ldebug_ranges19-.Lrnglists_table_base0
	.long	.Ldebug_ranges20-.Lrnglists_table_base0
	.long	.Ldebug_ranges21-.Lrnglists_table_base0
	.long	.Ldebug_ranges22-.Lrnglists_table_base0
	.long	.Ldebug_ranges23-.Lrnglists_table_base0
	.long	.Ldebug_ranges24-.Lrnglists_table_base0
	.long	.Ldebug_ranges25-.Lrnglists_table_base0
	.long	.Ldebug_ranges26-.Lrnglists_table_base0
	.long	.Ldebug_ranges27-.Lrnglists_table_base0
	.long	.Ldebug_ranges28-.Lrnglists_table_base0
	.long	.Ldebug_ranges29-.Lrnglists_table_base0
	.long	.Ldebug_ranges30-.Lrnglists_table_base0
	.long	.Ldebug_ranges31-.Lrnglists_table_base0
	.long	.Ldebug_ranges32-.Lrnglists_table_base0
	.long	.Ldebug_ranges33-.Lrnglists_table_base0
	.long	.Ldebug_ranges34-.Lrnglists_table_base0
	.long	.Ldebug_ranges35-.Lrnglists_table_base0
	.long	.Ldebug_ranges36-.Lrnglists_table_base0
	.long	.Ldebug_ranges37-.Lrnglists_table_base0
	.long	.Ldebug_ranges38-.Lrnglists_table_base0
	.long	.Ldebug_ranges39-.Lrnglists_table_base0
	.long	.Ldebug_ranges40-.Lrnglists_table_base0
	.long	.Ldebug_ranges41-.Lrnglists_table_base0
	.long	.Ldebug_ranges42-.Lrnglists_table_base0
.Ldebug_ranges0:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp19-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp37-.Lfunc_begin0          #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp46-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp63-.Lfunc_begin0          #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp72-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp89-.Lfunc_begin0          #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp99-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp116-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges1:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp23-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp34-.Lfunc_begin0          #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp49-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp60-.Lfunc_begin0          #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp75-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp86-.Lfunc_begin0          #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp102-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp113-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges2:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp29-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp30-.Lfunc_begin0          #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp55-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp56-.Lfunc_begin0          #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp81-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp82-.Lfunc_begin0          #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp108-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp109-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges3:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp37-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp45-.Lfunc_begin0          #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp63-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp71-.Lfunc_begin0          #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp89-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp97-.Lfunc_begin0          #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp116-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp124-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges4:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp40-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp41-.Lfunc_begin0          #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp66-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp67-.Lfunc_begin0          #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp92-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp93-.Lfunc_begin0          #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp119-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp120-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges5:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp45-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp46-.Lfunc_begin0          #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp71-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp72-.Lfunc_begin0          #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp98-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp99-.Lfunc_begin0          #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp125-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp127-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges6:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp128-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp132-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp135-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp166-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges7:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp148-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp149-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp155-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp156-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp163-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp164-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges8:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp177-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp178-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp180-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp181-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp185-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp186-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp188-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp190-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges9:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp7-.Lfunc_begin0           #   starting offset
	.uleb128 .Ltmp12-.Lfunc_begin0          #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp196-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp207-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp209-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp446-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1016-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1071-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges10:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp213-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp288-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp297-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp298-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges11:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp213-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp288-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp297-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp298-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges12:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp317-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp319-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp326-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp327-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges13:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp319-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp320-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp322-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp325-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp327-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp330-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp331-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp353-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges14:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp333-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp342-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp343-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp344-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges15:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp396-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp404-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp406-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp407-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1016-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1071-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges16:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp396-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp404-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp406-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp407-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1016-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1071-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges17:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1016-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1020-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1028-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1032-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1041-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1047-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1056-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1063-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges18:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1042-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1043-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1057-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1058-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges19:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1046-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1047-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1061-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1063-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges20:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1031-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1032-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1044-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1045-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1059-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1060-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges21:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp411-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp433-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp434-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp446-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges22:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp415-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp417-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp418-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp433-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp434-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp446-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges23:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp419-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp422-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp423-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp433-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp434-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp435-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges24:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp469-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp536-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp538-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp1014-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges25:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp496-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp503-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp505-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp509-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp510-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp536-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp977-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp981-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges26:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp512-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp519-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp528-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp536-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp977-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp981-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges27:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp543-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp544-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp546-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp549-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp550-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp551-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp552-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp553-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp556-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp558-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp560-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp561-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp562-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp585-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges28:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp564-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp573-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp574-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp575-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges29:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp555-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp556-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp559-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp560-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges30:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp627-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp634-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp822-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp835-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp982-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp1014-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges31:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp824-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp835-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp982-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp1014-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges32:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp675-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp696-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp708-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp709-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges33:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp735-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp737-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp738-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp752-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges34:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp741-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp750-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp751-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp752-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges35:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp812-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp821-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp837-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp859-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp861-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp977-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges36:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp861-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp868-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp869-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp882-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp883-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp977-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges37:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp861-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp867-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp869-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp882-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp883-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp977-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges38:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp861-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp867-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp895-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp977-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges39:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp914-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp915-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp916-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp917-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp918-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp932-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges40:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp921-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp930-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp931-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp932-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges41:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp870-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp872-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp873-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp882-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp883-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp885-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges42:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1074-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1077-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1078-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1079-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1080-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1086-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_list_header_end1:
	.section	.debug_str_offsets,"",@progbits
	.long	880                             # Length of String Offsets Set
	.short	5
	.short	0
.Lstr_offsets_base0:
	.section	.debug_str,"MS",@progbits,1
.Linfo_string0:
	.asciz	"clang version 19.0.0git (git@github.com:QuqqU/GPUISel-llvm.git ed922481952e7fbe7b5da8613bc5ccf78f796536)" # string offset=0
.Linfo_string1:
	.asciz	"liblzma/lzma/lzma_encoder_optimum_normal.c" # string offset=105
.Linfo_string2:
	.asciz	"/home/yjs/workspace/xz-test/src" # string offset=148
.Linfo_string3:
	.asciz	"unsigned int"                  # string offset=180
.Linfo_string4:
	.asciz	"LZMA_RUN"                      # string offset=193
.Linfo_string5:
	.asciz	"LZMA_SYNC_FLUSH"               # string offset=202
.Linfo_string6:
	.asciz	"LZMA_FULL_FLUSH"               # string offset=218
.Linfo_string7:
	.asciz	"LZMA_FINISH"                   # string offset=234
.Linfo_string8:
	.asciz	"low"                           # string offset=246
.Linfo_string9:
	.asciz	"unsigned long"                 # string offset=250
.Linfo_string10:
	.asciz	"__uint64_t"                    # string offset=264
.Linfo_string11:
	.asciz	"uint64_t"                      # string offset=275
.Linfo_string12:
	.asciz	"cache_size"                    # string offset=284
.Linfo_string13:
	.asciz	"range"                         # string offset=295
.Linfo_string14:
	.asciz	"__uint32_t"                    # string offset=301
.Linfo_string15:
	.asciz	"uint32_t"                      # string offset=312
.Linfo_string16:
	.asciz	"cache"                         # string offset=321
.Linfo_string17:
	.asciz	"unsigned char"                 # string offset=327
.Linfo_string18:
	.asciz	"__uint8_t"                     # string offset=341
.Linfo_string19:
	.asciz	"uint8_t"                       # string offset=351
.Linfo_string20:
	.asciz	"count"                         # string offset=359
.Linfo_string21:
	.asciz	"size_t"                        # string offset=365
.Linfo_string22:
	.asciz	"pos"                           # string offset=372
.Linfo_string23:
	.asciz	"symbols"                       # string offset=376
.Linfo_string24:
	.asciz	"RC_BIT_0"                      # string offset=384
.Linfo_string25:
	.asciz	"RC_BIT_1"                      # string offset=393
.Linfo_string26:
	.asciz	"RC_DIRECT_0"                   # string offset=402
.Linfo_string27:
	.asciz	"RC_DIRECT_1"                   # string offset=414
.Linfo_string28:
	.asciz	"RC_FLUSH"                      # string offset=426
.Linfo_string29:
	.asciz	"__ARRAY_SIZE_TYPE__"           # string offset=435
.Linfo_string30:
	.asciz	"probs"                         # string offset=455
.Linfo_string31:
	.asciz	"unsigned short"                # string offset=461
.Linfo_string32:
	.asciz	"__uint16_t"                    # string offset=476
.Linfo_string33:
	.asciz	"uint16_t"                      # string offset=487
.Linfo_string34:
	.asciz	"probability"                   # string offset=496
.Linfo_string35:
	.asciz	"STATE_LIT_LIT"                 # string offset=508
.Linfo_string36:
	.asciz	"STATE_MATCH_LIT_LIT"           # string offset=522
.Linfo_string37:
	.asciz	"STATE_REP_LIT_LIT"             # string offset=542
.Linfo_string38:
	.asciz	"STATE_SHORTREP_LIT_LIT"        # string offset=560
.Linfo_string39:
	.asciz	"STATE_MATCH_LIT"               # string offset=583
.Linfo_string40:
	.asciz	"STATE_REP_LIT"                 # string offset=599
.Linfo_string41:
	.asciz	"STATE_SHORTREP_LIT"            # string offset=613
.Linfo_string42:
	.asciz	"STATE_LIT_MATCH"               # string offset=632
.Linfo_string43:
	.asciz	"STATE_LIT_LONGREP"             # string offset=648
.Linfo_string44:
	.asciz	"STATE_LIT_SHORTREP"            # string offset=666
.Linfo_string45:
	.asciz	"STATE_NONLIT_MATCH"            # string offset=685
.Linfo_string46:
	.asciz	"STATE_NONLIT_REP"              # string offset=704
.Linfo_string47:
	.asciz	"helper1"                       # string offset=721
.Linfo_string48:
	.asciz	"pcoder"                        # string offset=729
.Linfo_string49:
	.asciz	"lzma_coder"                    # string offset=736
.Linfo_string50:
	.asciz	"mf"                            # string offset=747
.Linfo_string51:
	.asciz	"buffer"                        # string offset=750
.Linfo_string52:
	.asciz	"size"                          # string offset=757
.Linfo_string53:
	.asciz	"keep_size_before"              # string offset=762
.Linfo_string54:
	.asciz	"keep_size_after"               # string offset=779
.Linfo_string55:
	.asciz	"offset"                        # string offset=795
.Linfo_string56:
	.asciz	"read_pos"                      # string offset=802
.Linfo_string57:
	.asciz	"read_ahead"                    # string offset=811
.Linfo_string58:
	.asciz	"read_limit"                    # string offset=822
.Linfo_string59:
	.asciz	"write_pos"                     # string offset=833
.Linfo_string60:
	.asciz	"pending"                       # string offset=843
.Linfo_string61:
	.asciz	"find"                          # string offset=851
.Linfo_string62:
	.asciz	"len"                           # string offset=856
.Linfo_string63:
	.asciz	"dist"                          # string offset=860
.Linfo_string64:
	.asciz	"lzma_match"                    # string offset=865
.Linfo_string65:
	.asciz	"skip"                          # string offset=876
.Linfo_string66:
	.asciz	"hash"                          # string offset=881
.Linfo_string67:
	.asciz	"son"                           # string offset=886
.Linfo_string68:
	.asciz	"cyclic_pos"                    # string offset=890
.Linfo_string69:
	.asciz	"cyclic_size"                   # string offset=901
.Linfo_string70:
	.asciz	"hash_mask"                     # string offset=913
.Linfo_string71:
	.asciz	"depth"                         # string offset=923
.Linfo_string72:
	.asciz	"nice_len"                      # string offset=929
.Linfo_string73:
	.asciz	"match_len_max"                 # string offset=938
.Linfo_string74:
	.asciz	"action"                        # string offset=952
.Linfo_string75:
	.asciz	"lzma_action"                   # string offset=959
.Linfo_string76:
	.asciz	"hash_size_sum"                 # string offset=971
.Linfo_string77:
	.asciz	"sons_count"                    # string offset=985
.Linfo_string78:
	.asciz	"lzma_mf_s"                     # string offset=996
.Linfo_string79:
	.asciz	"lzma_mf"                       # string offset=1006
.Linfo_string80:
	.asciz	"back_res"                      # string offset=1014
.Linfo_string81:
	.asciz	"len_res"                       # string offset=1023
.Linfo_string82:
	.asciz	"position"                      # string offset=1031
.Linfo_string83:
	.asciz	"matches_count"                 # string offset=1040
.Linfo_string84:
	.asciz	"rep_lens"                      # string offset=1054
.Linfo_string85:
	.asciz	"coder"                         # string offset=1063
.Linfo_string86:
	.asciz	"rc"                            # string offset=1069
.Linfo_string87:
	.asciz	"lzma_range_encoder"            # string offset=1072
.Linfo_string88:
	.asciz	"state"                         # string offset=1091
.Linfo_string89:
	.asciz	"lzma_lzma_state"               # string offset=1097
.Linfo_string90:
	.asciz	"reps"                          # string offset=1113
.Linfo_string91:
	.asciz	"matches"                       # string offset=1118
.Linfo_string92:
	.asciz	"longest_match_length"          # string offset=1126
.Linfo_string93:
	.asciz	"fast_mode"                     # string offset=1147
.Linfo_string94:
	.asciz	"_Bool"                         # string offset=1157
.Linfo_string95:
	.asciz	"is_initialized"                # string offset=1163
.Linfo_string96:
	.asciz	"is_flushed"                    # string offset=1178
.Linfo_string97:
	.asciz	"pos_mask"                      # string offset=1189
.Linfo_string98:
	.asciz	"literal_context_bits"          # string offset=1198
.Linfo_string99:
	.asciz	"literal_pos_mask"              # string offset=1219
.Linfo_string100:
	.asciz	"literal"                       # string offset=1236
.Linfo_string101:
	.asciz	"is_match"                      # string offset=1244
.Linfo_string102:
	.asciz	"is_rep"                        # string offset=1253
.Linfo_string103:
	.asciz	"is_rep0"                       # string offset=1260
.Linfo_string104:
	.asciz	"is_rep1"                       # string offset=1268
.Linfo_string105:
	.asciz	"is_rep2"                       # string offset=1276
.Linfo_string106:
	.asciz	"is_rep0_long"                  # string offset=1284
.Linfo_string107:
	.asciz	"pos_slot"                      # string offset=1297
.Linfo_string108:
	.asciz	"pos_special"                   # string offset=1306
.Linfo_string109:
	.asciz	"pos_align"                     # string offset=1318
.Linfo_string110:
	.asciz	"match_len_encoder"             # string offset=1328
.Linfo_string111:
	.asciz	"choice"                        # string offset=1346
.Linfo_string112:
	.asciz	"choice2"                       # string offset=1353
.Linfo_string113:
	.asciz	"mid"                           # string offset=1361
.Linfo_string114:
	.asciz	"high"                          # string offset=1365
.Linfo_string115:
	.asciz	"prices"                        # string offset=1370
.Linfo_string116:
	.asciz	"table_size"                    # string offset=1377
.Linfo_string117:
	.asciz	"counters"                      # string offset=1388
.Linfo_string118:
	.asciz	"lzma_length_encoder"           # string offset=1397
.Linfo_string119:
	.asciz	"rep_len_encoder"               # string offset=1417
.Linfo_string120:
	.asciz	"pos_slot_prices"               # string offset=1433
.Linfo_string121:
	.asciz	"distances_prices"              # string offset=1449
.Linfo_string122:
	.asciz	"dist_table_size"               # string offset=1466
.Linfo_string123:
	.asciz	"match_price_count"             # string offset=1482
.Linfo_string124:
	.asciz	"align_prices"                  # string offset=1500
.Linfo_string125:
	.asciz	"align_price_count"             # string offset=1513
.Linfo_string126:
	.asciz	"opts_end_index"                # string offset=1531
.Linfo_string127:
	.asciz	"opts_current_index"            # string offset=1546
.Linfo_string128:
	.asciz	"opts"                          # string offset=1565
.Linfo_string129:
	.asciz	"prev_1_is_literal"             # string offset=1570
.Linfo_string130:
	.asciz	"prev_2"                        # string offset=1588
.Linfo_string131:
	.asciz	"pos_prev_2"                    # string offset=1595
.Linfo_string132:
	.asciz	"back_prev_2"                   # string offset=1606
.Linfo_string133:
	.asciz	"price"                         # string offset=1618
.Linfo_string134:
	.asciz	"pos_prev"                      # string offset=1624
.Linfo_string135:
	.asciz	"back_prev"                     # string offset=1633
.Linfo_string136:
	.asciz	"backs"                         # string offset=1643
.Linfo_string137:
	.asciz	"lzma_optimal"                  # string offset=1649
.Linfo_string138:
	.asciz	"lzma_coder_s"                  # string offset=1662
.Linfo_string139:
	.asciz	"len_main"                      # string offset=1675
.Linfo_string140:
	.asciz	"buf_avail"                     # string offset=1684
.Linfo_string141:
	.asciz	"buf"                           # string offset=1694
.Linfo_string142:
	.asciz	"rep_max_index"                 # string offset=1698
.Linfo_string143:
	.asciz	"match_price"                   # string offset=1712
.Linfo_string144:
	.asciz	"rep_match_price"               # string offset=1724
.Linfo_string145:
	.asciz	"len_end"                       # string offset=1740
.Linfo_string146:
	.asciz	"current_byte"                  # string offset=1748
.Linfo_string147:
	.asciz	"match_byte"                    # string offset=1761
.Linfo_string148:
	.asciz	"pos_state"                     # string offset=1772
.Linfo_string149:
	.asciz	"normal_match_price"            # string offset=1782
.Linfo_string150:
	.asciz	"i"                             # string offset=1801
.Linfo_string151:
	.asciz	"buf_back"                      # string offset=1803
.Linfo_string152:
	.asciz	"len_test"                      # string offset=1812
.Linfo_string153:
	.asciz	"short_rep_price"               # string offset=1821
.Linfo_string154:
	.asciz	"rep_len"                       # string offset=1837
.Linfo_string155:
	.asciz	"cur_and_len_price"             # string offset=1845
.Linfo_string156:
	.asciz	"fill_distances_prices"         # string offset=1863
.Linfo_string157:
	.asciz	"len_to_pos_state"              # string offset=1885
.Linfo_string158:
	.asciz	"footer_bits"                   # string offset=1902
.Linfo_string159:
	.asciz	"base"                          # string offset=1914
.Linfo_string160:
	.asciz	"rc_bittree_price"              # string offset=1919
.Linfo_string161:
	.asciz	"bit_levels"                    # string offset=1936
.Linfo_string162:
	.asciz	"symbol"                        # string offset=1947
.Linfo_string163:
	.asciz	"bit"                           # string offset=1954
.Linfo_string164:
	.asciz	"rc_bit_price"                  # string offset=1958
.Linfo_string165:
	.asciz	"prob"                          # string offset=1971
.Linfo_string166:
	.asciz	"rc_direct_price"               # string offset=1976
.Linfo_string167:
	.asciz	"bits"                          # string offset=1992
.Linfo_string168:
	.asciz	"get_pos_slot"                  # string offset=1997
.Linfo_string169:
	.asciz	"rc_bittree_reverse_price"      # string offset=2010
.Linfo_string170:
	.asciz	"model_index"                   # string offset=2035
.Linfo_string171:
	.asciz	"fill_align_prices"             # string offset=2047
.Linfo_string172:
	.asciz	"mf_avail"                      # string offset=2065
.Linfo_string173:
	.asciz	"mf_ptr"                        # string offset=2074
.Linfo_string174:
	.asciz	"mf_skip"                       # string offset=2081
.Linfo_string175:
	.asciz	"amount"                        # string offset=2089
.Linfo_string176:
	.asciz	"rc_bit_0_price"                # string offset=2096
.Linfo_string177:
	.asciz	"get_literal_price"             # string offset=2111
.Linfo_string178:
	.asciz	"prev_byte"                     # string offset=2129
.Linfo_string179:
	.asciz	"match_mode"                    # string offset=2139
.Linfo_string180:
	.asciz	"subcoder"                      # string offset=2150
.Linfo_string181:
	.asciz	"match_bit"                     # string offset=2159
.Linfo_string182:
	.asciz	"subcoder_index"                # string offset=2169
.Linfo_string183:
	.asciz	"make_literal"                  # string offset=2184
.Linfo_string184:
	.asciz	"optimal"                       # string offset=2197
.Linfo_string185:
	.asciz	"rc_bit_1_price"                # string offset=2205
.Linfo_string186:
	.asciz	"get_short_rep_price"           # string offset=2220
.Linfo_string187:
	.asciz	"make_short_rep"                # string offset=2240
.Linfo_string188:
	.asciz	"get_pos_len_price"             # string offset=2255
.Linfo_string189:
	.asciz	"get_pos_slot_2"                # string offset=2273
.Linfo_string190:
	.asciz	"get_len_price"                 # string offset=2288
.Linfo_string191:
	.asciz	"lencoder"                      # string offset=2302
.Linfo_string192:
	.asciz	"helper2"                       # string offset=2311
.Linfo_string193:
	.asciz	"cur"                           # string offset=2319
.Linfo_string194:
	.asciz	"buf_avail_full"                # string offset=2323
.Linfo_string195:
	.asciz	"new_len"                       # string offset=2338
.Linfo_string196:
	.asciz	"cur_and_1_price"               # string offset=2346
.Linfo_string197:
	.asciz	"cur_price"                     # string offset=2362
.Linfo_string198:
	.asciz	"next_is_literal"               # string offset=2372
.Linfo_string199:
	.asciz	"start_len"                     # string offset=2388
.Linfo_string200:
	.asciz	"limit"                         # string offset=2398
.Linfo_string201:
	.asciz	"state_2"                       # string offset=2404
.Linfo_string202:
	.asciz	"pos_state_next"                # string offset=2412
.Linfo_string203:
	.asciz	"next_rep_match_price"          # string offset=2427
.Linfo_string204:
	.asciz	"rep_index"                     # string offset=2448
.Linfo_string205:
	.asciz	"len_test_temp"                 # string offset=2458
.Linfo_string206:
	.asciz	"len_test_2"                    # string offset=2472
.Linfo_string207:
	.asciz	"cur_and_len_literal_price"     # string offset=2483
.Linfo_string208:
	.asciz	"cur_back"                      # string offset=2509
.Linfo_string209:
	.asciz	"get_pure_rep_price"            # string offset=2518
.Linfo_string210:
	.asciz	"get_rep_price"                 # string offset=2537
.Linfo_string211:
	.asciz	"backward"                      # string offset=2551
.Linfo_string212:
	.asciz	"pos_mem"                       # string offset=2560
.Linfo_string213:
	.asciz	"back_mem"                      # string offset=2568
.Linfo_string214:
	.asciz	"back_cur"                      # string offset=2577
.Linfo_string215:
	.asciz	"lzma_mf_find"                  # string offset=2586
.Linfo_string216:
	.asciz	"DW_ATE_unsigned_32"            # string offset=2599
.Linfo_string217:
	.asciz	"DW_ATE_unsigned_64"            # string offset=2618
.Linfo_string218:
	.asciz	"lzma_lzma_optimum_normal"      # string offset=2637
	.section	.debug_str_offsets,"",@progbits
	.long	.Linfo_string0
	.long	.Linfo_string1
	.long	.Linfo_string2
	.long	.Linfo_string3
	.long	.Linfo_string4
	.long	.Linfo_string5
	.long	.Linfo_string6
	.long	.Linfo_string7
	.long	.Linfo_string8
	.long	.Linfo_string9
	.long	.Linfo_string10
	.long	.Linfo_string11
	.long	.Linfo_string12
	.long	.Linfo_string13
	.long	.Linfo_string14
	.long	.Linfo_string15
	.long	.Linfo_string16
	.long	.Linfo_string17
	.long	.Linfo_string18
	.long	.Linfo_string19
	.long	.Linfo_string20
	.long	.Linfo_string21
	.long	.Linfo_string22
	.long	.Linfo_string23
	.long	.Linfo_string24
	.long	.Linfo_string25
	.long	.Linfo_string26
	.long	.Linfo_string27
	.long	.Linfo_string28
	.long	.Linfo_string29
	.long	.Linfo_string30
	.long	.Linfo_string31
	.long	.Linfo_string32
	.long	.Linfo_string33
	.long	.Linfo_string34
	.long	.Linfo_string35
	.long	.Linfo_string36
	.long	.Linfo_string37
	.long	.Linfo_string38
	.long	.Linfo_string39
	.long	.Linfo_string40
	.long	.Linfo_string41
	.long	.Linfo_string42
	.long	.Linfo_string43
	.long	.Linfo_string44
	.long	.Linfo_string45
	.long	.Linfo_string46
	.long	.Linfo_string47
	.long	.Linfo_string48
	.long	.Linfo_string49
	.long	.Linfo_string50
	.long	.Linfo_string51
	.long	.Linfo_string52
	.long	.Linfo_string53
	.long	.Linfo_string54
	.long	.Linfo_string55
	.long	.Linfo_string56
	.long	.Linfo_string57
	.long	.Linfo_string58
	.long	.Linfo_string59
	.long	.Linfo_string60
	.long	.Linfo_string61
	.long	.Linfo_string62
	.long	.Linfo_string63
	.long	.Linfo_string64
	.long	.Linfo_string65
	.long	.Linfo_string66
	.long	.Linfo_string67
	.long	.Linfo_string68
	.long	.Linfo_string69
	.long	.Linfo_string70
	.long	.Linfo_string71
	.long	.Linfo_string72
	.long	.Linfo_string73
	.long	.Linfo_string74
	.long	.Linfo_string75
	.long	.Linfo_string76
	.long	.Linfo_string77
	.long	.Linfo_string78
	.long	.Linfo_string79
	.long	.Linfo_string80
	.long	.Linfo_string81
	.long	.Linfo_string82
	.long	.Linfo_string83
	.long	.Linfo_string84
	.long	.Linfo_string85
	.long	.Linfo_string86
	.long	.Linfo_string87
	.long	.Linfo_string88
	.long	.Linfo_string89
	.long	.Linfo_string90
	.long	.Linfo_string91
	.long	.Linfo_string92
	.long	.Linfo_string93
	.long	.Linfo_string94
	.long	.Linfo_string95
	.long	.Linfo_string96
	.long	.Linfo_string97
	.long	.Linfo_string98
	.long	.Linfo_string99
	.long	.Linfo_string100
	.long	.Linfo_string101
	.long	.Linfo_string102
	.long	.Linfo_string103
	.long	.Linfo_string104
	.long	.Linfo_string105
	.long	.Linfo_string106
	.long	.Linfo_string107
	.long	.Linfo_string108
	.long	.Linfo_string109
	.long	.Linfo_string110
	.long	.Linfo_string111
	.long	.Linfo_string112
	.long	.Linfo_string113
	.long	.Linfo_string114
	.long	.Linfo_string115
	.long	.Linfo_string116
	.long	.Linfo_string117
	.long	.Linfo_string118
	.long	.Linfo_string119
	.long	.Linfo_string120
	.long	.Linfo_string121
	.long	.Linfo_string122
	.long	.Linfo_string123
	.long	.Linfo_string124
	.long	.Linfo_string125
	.long	.Linfo_string126
	.long	.Linfo_string127
	.long	.Linfo_string128
	.long	.Linfo_string129
	.long	.Linfo_string130
	.long	.Linfo_string131
	.long	.Linfo_string132
	.long	.Linfo_string133
	.long	.Linfo_string134
	.long	.Linfo_string135
	.long	.Linfo_string136
	.long	.Linfo_string137
	.long	.Linfo_string138
	.long	.Linfo_string139
	.long	.Linfo_string140
	.long	.Linfo_string141
	.long	.Linfo_string142
	.long	.Linfo_string143
	.long	.Linfo_string144
	.long	.Linfo_string145
	.long	.Linfo_string146
	.long	.Linfo_string147
	.long	.Linfo_string148
	.long	.Linfo_string149
	.long	.Linfo_string150
	.long	.Linfo_string151
	.long	.Linfo_string152
	.long	.Linfo_string153
	.long	.Linfo_string154
	.long	.Linfo_string155
	.long	.Linfo_string156
	.long	.Linfo_string157
	.long	.Linfo_string158
	.long	.Linfo_string159
	.long	.Linfo_string160
	.long	.Linfo_string161
	.long	.Linfo_string162
	.long	.Linfo_string163
	.long	.Linfo_string164
	.long	.Linfo_string165
	.long	.Linfo_string166
	.long	.Linfo_string167
	.long	.Linfo_string168
	.long	.Linfo_string169
	.long	.Linfo_string170
	.long	.Linfo_string171
	.long	.Linfo_string172
	.long	.Linfo_string173
	.long	.Linfo_string174
	.long	.Linfo_string175
	.long	.Linfo_string176
	.long	.Linfo_string177
	.long	.Linfo_string178
	.long	.Linfo_string179
	.long	.Linfo_string180
	.long	.Linfo_string181
	.long	.Linfo_string182
	.long	.Linfo_string183
	.long	.Linfo_string184
	.long	.Linfo_string185
	.long	.Linfo_string186
	.long	.Linfo_string187
	.long	.Linfo_string188
	.long	.Linfo_string189
	.long	.Linfo_string190
	.long	.Linfo_string191
	.long	.Linfo_string192
	.long	.Linfo_string193
	.long	.Linfo_string194
	.long	.Linfo_string195
	.long	.Linfo_string196
	.long	.Linfo_string197
	.long	.Linfo_string198
	.long	.Linfo_string199
	.long	.Linfo_string200
	.long	.Linfo_string201
	.long	.Linfo_string202
	.long	.Linfo_string203
	.long	.Linfo_string204
	.long	.Linfo_string205
	.long	.Linfo_string206
	.long	.Linfo_string207
	.long	.Linfo_string208
	.long	.Linfo_string209
	.long	.Linfo_string210
	.long	.Linfo_string211
	.long	.Linfo_string212
	.long	.Linfo_string213
	.long	.Linfo_string214
	.long	.Linfo_string215
	.long	.Linfo_string216
	.long	.Linfo_string217
	.long	.Linfo_string218
	.section	.debug_addr,"",@progbits
	.long	.Ldebug_addr_end0-.Ldebug_addr_start0 # Length of contribution
.Ldebug_addr_start0:
	.short	5                               # DWARF version number
	.byte	8                               # Address size
	.byte	0                               # Segment selector size
.Laddr_table_base0:
	.quad	.Lfunc_begin0
	.quad	.Ltmp19
	.quad	.Ltmp128
	.quad	.Ltmp135
	.quad	.Ltmp139
	.quad	.Ltmp143
	.quad	.Ltmp170
	.quad	.Ltmp201
	.quad	.Ltmp210
	.quad	.Ltmp292
	.quad	.Ltmp309
	.quad	.Ltmp333
	.quad	.Ltmp337
	.quad	.Ltmp344
	.quad	.Ltmp348
	.quad	.Ltmp354
	.quad	.Ltmp356
	.quad	.Ltmp359
	.quad	.Ltmp363
	.quad	.Ltmp364
	.quad	.Ltmp366
	.quad	.Ltmp372
	.quad	.Ltmp381
	.quad	.Ltmp1017
	.quad	.Ltmp1019
	.quad	.Ltmp1029
	.quad	.Ltmp427
	.quad	.Ltmp434
	.quad	.Ltmp523
	.quad	.Ltmp539
	.quad	.Ltmp564
	.quad	.Ltmp568
	.quad	.Ltmp576
	.quad	.Ltmp580
	.quad	.Ltmp591
	.quad	.Ltmp593
	.quad	.Ltmp597
	.quad	.Ltmp605
	.quad	.Ltmp606
	.quad	.Ltmp608
	.quad	.Ltmp614
	.quad	.Ltmp828
	.quad	.Ltmp830
	.quad	.Ltmp1000
	.quad	.Ltmp1001
	.quad	.Ltmp1003
	.quad	.Ltmp1005
	.quad	.Ltmp638
	.quad	.Ltmp645
	.quad	.Ltmp678
	.quad	.Ltmp683
	.quad	.Ltmp687
	.quad	.Ltmp691
	.quad	.Ltmp694
	.quad	.Ltmp728
	.quad	.Ltmp730
	.quad	.Ltmp732
	.quad	.Ltmp741
	.quad	.Ltmp745
	.quad	.Ltmp754
	.quad	.Ltmp756
	.quad	.Ltmp782
	.quad	.Ltmp784
	.quad	.Ltmp785
	.quad	.Ltmp787
	.quad	.Ltmp813
	.quad	.Ltmp909
	.quad	.Ltmp912
	.quad	.Ltmp921
	.quad	.Ltmp925
	.quad	.Ltmp934
	.quad	.Ltmp936
	.quad	.Ltmp959
	.quad	.Ltmp961
	.quad	.Ltmp963
	.quad	.Ltmp966
	.quad	.Ltmp876
	.quad	.Ltmp884
	.quad	.Ltmp1071
	.quad	.Ltmp1083
	.quad	.Ltmp198
	.quad	.Ltmp296
	.quad	.Ltmp313
	.quad	.Ltmp462
.Ldebug_addr_end0:
	.ident	"clang version 19.0.0git (git@github.com:QuqqU/GPUISel-llvm.git ed922481952e7fbe7b5da8613bc5ccf78f796536)"
	.section	".note.GNU-stack","",@progbits
	.section	.debug_line,"",@progbits
.Lline_table_start0:
